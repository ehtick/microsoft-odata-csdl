{
  "basePath": "/apim/adobesign",
  "consumes": [],
  "definitions": {
    "AgreementCreationInfoId": {
      "type": "object",
      "required": [
        "documentCreationInfo"
      ],
      "properties": {
        "documentCreationInfo": {
          "type": "object",
          "required": [
            "name",
            "recipientSetInfos1",
            "fileInfos1",
            "signatureType"
          ],
          "properties": {
            "name": {
              "description": "The name of the agreement",
              "type": "string",
              "title": "Agreement Name",
              "x-ms-visibility": "important"
            },
            "fileInfos1": {
              "type": "object",
              "required": [
                "transientDocumentId"
              ],
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID"
                }
              }
            },
            "signatureType": {
              "description": "The type of signature you would like to request - E-signature or Written",
              "type": "string",
              "enum": [
                "E-Signature",
                "Written Signature"
              ],
              "default": "E-Signature",
              "title": "Signature Type",
              "x-ms-visibility": "important"
            },
            "recipientSetInfos1": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email",
                      "x-ms-visibility": "important"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order",
                  "type": "integer",
                  "x-ms-visibility": "important",
                  "default": 1
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role",
                  "x-ms-visibility": "important",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ],
                  "default": "Signer"
                }
              }
            },
            "message": {
              "description": "An optional message to the recipients requesting their action",
              "type": "string",
              "title": "Message",
              "default": "Please review and complete this document",
              "x-ms-visibility": "advanced"
            },
            "daysUntilSigningDeadline": {
              "description": "The number of days that remain before the document expires",
              "type": "integer",
              "title": "Days to Deadline",
              "x-ms-visibility": "advanced"
            },
            "reminderFrequency": {
              "description": "How often do you want to send reminders?",
              "enum": [
                "DAILY_UNTIL_SIGNED",
                "WEEKLY_UNTIL_SIGNED"
              ],
              "type": "string",
              "title": "Reminder Frequency",
              "x-ms-visibility": "advanced"
            },
            "securityOptions": {
              "type": "object",
              "description": "Sets optional secondary security parameters for your document",
              "required": [
                "protectOpen"
              ],
              "properties": {
                "protectOpen": {
                  "description": "Should the signed agreement PDF be encrypted using a password?",
                  "type": "boolean",
                  "title": "Password Protect Document?",
                  "x-ms-visibility": "internal",
                  "default": false
                },
                "openPassword": {
                  "description": "The password that should be used to encrypt the signed agreement PDF",
                  "type": "string",
                  "title": "Document Password",
                  "x-ms-visibility": "advanced"
                }
              },
              "x-ms-visibility": "advanced"
            },
            "fileInfos2": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (2)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos3": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (3)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos4": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (4)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos5": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (5)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos6": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (6)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos7": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (7)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos8": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (8)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos9": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (9)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos10": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (10)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "recipientSetInfos2": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (2)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (2)",
                  "type": "integer",
                  "x-ms-visibility": "advanced"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (2)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ],
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "recipientSetInfos3": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (3)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (3)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (3)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos4": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (4)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (4)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (4)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos5": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (5)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (5)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (5)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos6": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (6)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (6)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (6)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos7": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (7)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (7)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (7)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos8": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (8)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (8)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (8)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos9": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (9)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (9)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (9)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos10": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (10)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (10)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (10)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos11": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (11)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (11)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (11)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos12": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (12)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (12)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (12)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos13": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (13)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (13)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (13)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos14": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (14)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (14)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (14)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos15": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (15)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (15)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (15)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos16": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (16)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (16)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (16)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos17": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (17)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (17)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (17)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos18": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (18)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (18)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (18)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos19": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (19)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (19)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (19)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos20": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (20)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (20)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (20)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos21": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (21)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (21)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (21)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos22": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (22)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (22)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (22)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos23": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (23)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (23)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (23)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos24": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (24)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (24)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (24)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos25": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (25)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (25)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (25)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "mergeFieldInfo1": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (1)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (1)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo2": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (2)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (2)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo3": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (3)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (3)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo4": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (4)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (4)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo5": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (5)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (5)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo6": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (6)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (6)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo7": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (7)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (7)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo8": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (8)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (8)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo9": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (9)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (9)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo10": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (10)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (10)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo11": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (11)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (11)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo12": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (12)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (12)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo13": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (13)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (13)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo14": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (14)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (14)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo15": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (15)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (15)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo16": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (16)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (16)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo17": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (17)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (17)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo18": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (18)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (18)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo19": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (19)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (19)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo20": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (20)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (20)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo21": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (21)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (21)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo22": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (22)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (22)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo23": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (23)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (23)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo24": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (24)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (24)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo25": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (25)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (25)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo26": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (26)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (26)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo27": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (27)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (27)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo28": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (28)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (28)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo29": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (29)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (29)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo30": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (30)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (30)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo31": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (31)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (31)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo32": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (32)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (32)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo33": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (33)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (33)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo34": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (34)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (34)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo35": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (35)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (35)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo36": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (36)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (36)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo37": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (37)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (37)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo38": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (38)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (38)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo39": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (39)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (39)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo40": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (40)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (40)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo41": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (41)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (41)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo42": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (42)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (42)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo43": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (43)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (43)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo44": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (44)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (44)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo45": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (45)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (45)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo46": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (46)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (46)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo47": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (47)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (47)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo48": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (48)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (48)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo49": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (49)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (49)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo50": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (50)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (50)",
                  "x-ms-visibility": "advanced"
                }
              }
            }
          }
        }
      }
    },
    "AgreementCreationInfoTemplate": {
      "type": "object",
      "required": [
        "documentCreationInfo"
      ],
      "properties": {
        "documentCreationInfo": {
          "type": "object",
          "required": [
            "name",
            "recipientSetInfos1",
            "fileInfos1",
            "signatureType"
          ],
          "properties": {
            "name": {
              "description": "The name of the agreement",
              "type": "string",
              "title": "Agreement Name",
              "x-ms-visibility": "important"
            },
            "fileInfos1": {
              "type": "object",
              "required": [
                "libraryDocumentId"
              ],
              "properties": {
                "libraryDocumentId": {
                  "description": " Choose a document from the templates stored in your library",
                  "type": "string",
                  "title": "Document Library Template",
                  "x-ms-visibility": "important",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryDocuments",
                    "value-path": "libraryDocumentId",
                    "value-title": "name",
                    "value-collection": "libraryDocumentList",
                    "parameters": {
                      "libraryTemplateType": "DOCUMENT"
                    }
                  }
                }
              }
            },
            "signatureType": {
              "description": "The type of signature you would like to request - E-signature or Written",
              "type": "string",
              "enum": [
                "E-Signature",
                "Written Signature"
              ],
              "default": "E-Signature",
              "title": "Signature Type",
              "x-ms-visibility": "important"
            },
            "recipientSetInfos1": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email",
                      "x-ms-visibility": "important"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order",
                  "type": "integer",
                  "x-ms-visibility": "important",
                  "default": 1
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role",
                  "x-ms-visibility": "important",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ],
                  "default": "Signer"
                }
              }
            },
            "message": {
              "description": "An optional message to the recipients requesting their action",
              "type": "string",
              "title": "Message",
              "x-ms-visibility": "advanced",
              "default": "Please review and complete this document"
            },
            "daysUntilSigningDeadline": {
              "description": "The number of days that remain before the document expires",
              "type": "integer",
              "title": "Days to Deadline",
              "x-ms-visibility": "advanced"
            },
            "reminderFrequency": {
              "description": "How often do you want to send reminders?",
              "enum": [
                "DAILY_UNTIL_SIGNED",
                "WEEKLY_UNTIL_SIGNED"
              ],
              "type": "string",
              "title": "Reminder Frequency",
              "x-ms-visibility": "advanced"
            },
            "securityOptions": {
              "type": "object",
              "description": "Sets optional secondary security parameters for your document",
              "required": [
                "protectOpen"
              ],
              "properties": {
                "protectOpen": {
                  "description": "Should the signed agreement PDF be encrypted using a password?",
                  "type": "boolean",
                  "title": "Password Protect Document?",
                  "x-ms-visibility": "internal",
                  "default": false
                },
                "openPassword": {
                  "description": "The password that should be used to encrypt the signed agreement PDF",
                  "type": "string",
                  "title": "Document Password",
                  "x-ms-visibility": "advanced"
                }
              },
              "x-ms-visibility": "advanced"
            },
            "fileInfos2": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "libraryDocumentId": {
                  "description": " Choose a document from the templates stored in your library",
                  "type": "string",
                  "title": "Document Library Template (2)",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryDocuments",
                    "value-path": "libraryDocumentId",
                    "value-title": "name",
                    "value-collection": "libraryDocumentList",
                    "parameters": {
                      "libraryTemplateType": "DOCUMENT"
                    }
                  }
                }
              }
            },
            "fileInfos3": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "libraryDocumentId": {
                  "description": " Choose a document from the templates stored in your library",
                  "type": "string",
                  "title": "Document Library Template (3)",
                  "x-ms-visibility": "advanced",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryDocuments",
                    "value-path": "libraryDocumentId",
                    "value-title": "name",
                    "value-collection": "libraryDocumentList",
                    "parameters": {
                      "libraryTemplateType": "DOCUMENT"
                    }
                  }
                }
              }
            },
            "fileInfos4": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "libraryDocumentId": {
                  "description": " Choose a document from the templates stored in your library",
                  "type": "string",
                  "title": "Document Library Template (4)",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryDocuments",
                    "value-path": "libraryDocumentId",
                    "value-title": "name",
                    "value-collection": "libraryDocumentList",
                    "parameters": {
                      "libraryTemplateType": "DOCUMENT"
                    }
                  }
                }
              }
            },
            "fileInfos5": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "libraryDocumentId": {
                  "description": " Choose a document from the templates stored in your library",
                  "type": "string",
                  "title": "Document Library Template (5)",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryDocuments",
                    "value-path": "libraryDocumentId",
                    "value-title": "name",
                    "value-collection": "libraryDocumentList",
                    "parameters": {
                      "libraryTemplateType": "DOCUMENT"
                    }
                  }
                }
              }
            },
            "fileInfos6": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "libraryDocumentId": {
                  "description": " Choose a document from the templates stored in your library",
                  "type": "string",
                  "title": "Document Library Template (6)",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryDocuments",
                    "value-path": "libraryDocumentId",
                    "value-title": "name",
                    "value-collection": "libraryDocumentList",
                    "parameters": {
                      "libraryTemplateType": "DOCUMENT"
                    }
                  }
                }
              }
            },
            "fileInfos7": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "libraryDocumentId": {
                  "description": " Choose a document from the templates stored in your library",
                  "type": "string",
                  "title": "Document Library Template (7)",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryDocuments",
                    "value-path": "libraryDocumentId",
                    "value-title": "name",
                    "value-collection": "libraryDocumentList",
                    "parameters": {
                      "libraryTemplateType": "DOCUMENT"
                    }
                  }
                }
              }
            },
            "fileInfos8": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "libraryDocumentId": {
                  "description": " Choose a document from the templates stored in your library",
                  "type": "string",
                  "title": "Document Library Template (8)",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryDocuments",
                    "value-path": "libraryDocumentId",
                    "value-title": "name",
                    "value-collection": "libraryDocumentList",
                    "parameters": {
                      "libraryTemplateType": "DOCUMENT"
                    }
                  }
                }
              }
            },
            "fileInfos9": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "libraryDocumentId": {
                  "description": " Choose a document from the templates stored in your library",
                  "type": "string",
                  "title": "Document Library Template (9)",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryDocuments",
                    "value-path": "libraryDocumentId",
                    "value-title": "name",
                    "value-collection": "libraryDocumentList",
                    "parameters": {
                      "libraryTemplateType": "DOCUMENT"
                    }
                  }
                }
              }
            },
            "fileInfos10": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "libraryDocumentId": {
                  "description": " Choose a document from the templates stored in your library",
                  "type": "string",
                  "title": "Document Library Template (10)",
                  "x-ms-dynamic-values": {
                    "operationId": "GetLibraryDocuments",
                    "value-path": "libraryDocumentId",
                    "value-title": "name",
                    "value-collection": "libraryDocumentList",
                    "parameters": {
                      "libraryTemplateType": "DOCUMENT"
                    }
                  }
                }
              }
            },
            "recipientSetInfos2": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (2)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (2)",
                  "type": "integer",
                  "x-ms-visibility": "advanced"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (2)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ],
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "recipientSetInfos3": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (3)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (3)",
                  "type": "integer",
                  "x-ms-visibility": "advanced"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (3)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos4": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (4)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (4)",
                  "type": "integer",
                  "x-ms-visibility": "advanced"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (4)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ],
                  "x-ms-visibility": "advanced"
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos5": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (5)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (5)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (5)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos6": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (6)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (6)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (6)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos7": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (7)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (7)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (7)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos8": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (8)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (8)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (8)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos9": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (9)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (9)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (9)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos10": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (10)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (10)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (10)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos11": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (11)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (11)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (11)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos12": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (12)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (12)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (12)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos13": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (13)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (13)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (13)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos14": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (14)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (14)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (14)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos15": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (15)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (15)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (15)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos16": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (16)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (16)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (16)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos17": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (17)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (17)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (17)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos18": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (18)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (18)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (18)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos19": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (19)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (19)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (19)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos20": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (20)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (20)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (20)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos21": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (21)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (21)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (21)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos22": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (22)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (22)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (22)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos23": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (23)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (23)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (23)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos24": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (24)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (24)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (24)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos25": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (25)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (25)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (25)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "mergeFieldInfo1": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (1)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (1)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo2": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (2)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (2)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo3": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (3)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (3)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo4": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (4)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (4)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo5": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (5)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (5)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo6": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (6)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (6)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo7": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (7)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (7)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo8": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (8)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (8)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo9": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (9)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (9)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo10": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (10)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (10)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo11": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (11)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (11)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo12": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (12)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (12)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo13": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (13)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (13)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo14": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (14)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (14)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo15": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (15)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (15)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo16": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (16)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (16)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo17": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (17)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (17)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo18": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (18)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (18)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo19": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (19)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (19)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo20": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (20)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (20)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo21": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (21)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (21)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo22": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (22)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (22)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo23": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (23)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (23)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo24": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (24)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (24)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo25": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (25)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (25)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo26": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (26)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (26)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo27": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (27)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (27)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo28": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (28)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (28)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo29": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (29)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (29)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo30": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (30)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (30)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo31": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (31)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (31)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo32": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (32)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (32)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo33": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (33)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (33)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo34": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (34)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (34)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo35": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (35)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (35)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo36": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (36)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (36)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo37": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (37)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (37)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo38": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (38)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (38)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo39": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (39)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (39)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo40": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (40)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (40)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo41": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (41)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (41)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo42": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (42)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (42)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo43": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (43)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (43)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo44": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (44)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (44)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo45": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (45)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (45)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo46": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (46)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (46)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo47": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (47)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (47)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo48": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (48)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (48)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo49": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (49)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (49)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo50": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (50)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (50)",
                  "x-ms-visibility": "advanced"
                }
              }
            }
          }
        }
      }
    },
    "AgreementCreationInfoUrl": {
      "type": "object",
      "required": [
        "documentCreationInfo"
      ],
      "properties": {
        "documentCreationInfo": {
          "type": "object",
          "required": [
            "name",
            "recipientSetInfos1",
            "fileInfos1",
            "signatureType"
          ],
          "properties": {
            "name": {
              "description": "The name of the agreement",
              "type": "string",
              "title": "Agreement Name",
              "x-ms-visibility": "important"
            },
            "fileInfos1": {
              "type": "object",
              "x-ms-visibility": "important",
              "required": [
                "documentURL"
              ],
              "properties": {
                "documentURL": {
                  "type": "object",
                  "required": [
                    "url",
                    "name"
                  ],
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL",
                      "x-ms-visibility": "important"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name",
                      "x-ms-visibility": "important"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document",
                  "x-ms-visibility": "important"
                }
              }
            },
            "signatureType": {
              "description": "The type of signature you would like to request - E-signature or Written",
              "type": "string",
              "enum": [
                "E-Signature",
                "Written Signature"
              ],
              "default": "E-Signature",
              "title": "Signature Type",
              "x-ms-visibility": "important"
            },
            "recipientSetInfos1": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email",
                      "x-ms-visibility": "important"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order",
                  "type": "integer",
                  "x-ms-visibility": "important",
                  "default": 1
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role",
                  "x-ms-visibility": "important",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ],
                  "default": "Signer"
                }
              }
            },
            "message": {
              "description": "An optional message to the recipients requesting their action",
              "type": "string",
              "title": "Message",
              "default": "Please review and complete this document",
              "x-ms-visibility": "advanced"
            },
            "daysUntilSigningDeadline": {
              "description": "The number of days that remain before the document expires",
              "type": "integer",
              "title": "Days to Deadline",
              "x-ms-visibility": "advanced"
            },
            "reminderFrequency": {
              "description": "How often do you want to send reminders?",
              "enum": [
                "DAILY_UNTIL_SIGNED",
                "WEEKLY_UNTIL_SIGNED"
              ],
              "type": "string",
              "title": "Reminder Frequency",
              "x-ms-visibility": "advanced"
            },
            "securityOptions": {
              "type": "object",
              "description": "Sets optional secondary security parameters for your document",
              "required": [
                "protectOpen"
              ],
              "properties": {
                "protectOpen": {
                  "description": "Should the signed agreement PDF be encrypted using a password?",
                  "type": "boolean",
                  "title": "Password Protect Document?",
                  "x-ms-visibility": "internal",
                  "default": false
                },
                "openPassword": {
                  "description": "The password that should be used to encrypt the signed agreement PDF",
                  "type": "string",
                  "title": "Document Password",
                  "x-ms-visibility": "advanced"
                }
              },
              "x-ms-visibility": "advanced"
            },
            "fileInfos2": {
              "type": "object",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "x-ms-visibility": "advanced",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (2)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (2)",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos3": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (3)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (3)",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos4": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (4)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (4)",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos5": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (5)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (5)",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos6": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (6)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (6)",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos7": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (7)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (7)",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos8": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (8)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (8)",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos9": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (9)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (9)",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos10": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (10)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (10)",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "recipientSetInfos2": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (2)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (2)",
                  "type": "integer",
                  "x-ms-visibility": "advanced"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (2)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ],
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "recipientSetInfos3": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "x-ms-visibility": "advanced",
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (3)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (3)",
                  "type": "integer",
                  "x-ms-visibility": "advanced"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (3)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ],
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "recipientSetInfos4": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (4)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (4)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (4)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos5": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (5)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (5)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (5)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos6": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (6)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (6)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (6)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos7": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (7)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (7)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (7)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos8": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (8)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (8)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (8)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos9": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (9)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (9)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (9)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos10": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (10)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (10)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (10)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos11": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (11)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (11)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (11)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos12": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (12)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (12)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (12)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos13": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (13)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (13)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (13)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos14": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (14)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (14)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (14)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos15": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (15)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (15)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (15)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos16": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (16)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (16)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (16)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos17": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (17)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (17)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (17)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos18": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (18)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (18)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (18)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos19": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (19)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (19)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (19)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos20": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (20)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (20)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (20)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos21": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (21)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (21)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (21)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos22": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (22)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (22)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (22)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos23": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (23)",
                      "x-ms-visibility": "advanced"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (23)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (23)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos24": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (24)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (24)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (24)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "recipientSetInfos25": {
              "type": "object",
              "required": [
                "recipientSetMemberInfos1",
                "recipientSetRole",
                "signingOrder"
              ],
              "properties": {
                "recipientSetMemberInfos1": {
                  "type": "object",
                  "required": [
                    "email"
                  ],
                  "properties": {
                    "email": {
                      "description": "Email of the recipient",
                      "type": "string",
                      "title": "Recipient Email (25)"
                    }
                  }
                },
                "signingOrder": {
                  "description": "Index starting with 1, that tells the order in which this recipient signs",
                  "title": "Recipient Signing Order (25)",
                  "type": "integer"
                },
                "recipientSetRole": {
                  "description": "Specify the role of recipient",
                  "type": "string",
                  "title": "Recipient Role (25)",
                  "enum": [
                    "Signer",
                    "Approver",
                    "Acceptor",
                    "Form filler",
                    "Certified recipient",
                    "Delegate to approver",
                    "Delegate to signer",
                    "Delegate to form filler",
                    "Delegate to certified recipient",
                    "Delegate to acceptor"
                  ]
                }
              },
              "x-ms-visibility": "advanced"
            },
            "mergeFieldInfo1": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (1)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (1)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo2": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (2)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (2)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo3": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (3)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (3)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo4": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (4)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (4)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo5": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (5)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (5)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo6": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (6)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (6)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo7": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (7)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (7)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo8": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (8)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (8)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo9": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (9)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (9)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo10": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (10)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (10)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo11": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (11)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (11)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo12": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (12)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (12)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo13": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (13)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (13)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo14": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (14)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (14)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo15": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (15)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (15)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo16": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (16)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (16)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo17": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (17)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (17)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo18": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (18)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (18)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo19": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (19)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (19)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo20": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (20)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (20)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo21": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (21)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (21)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo22": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (22)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (22)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo23": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (23)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (23)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo24": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (24)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (24)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo25": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (25)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (25)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo26": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (26)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (26)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo27": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (27)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (27)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo28": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (28)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (28)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo29": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (29)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (29)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo30": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (30)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (30)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo31": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (31)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (31)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo32": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (32)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (32)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo33": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (33)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (33)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo34": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (34)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (34)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo35": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (35)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (35)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo36": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (36)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (36)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo37": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (37)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (37)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo38": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (38)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (38)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo39": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (39)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (39)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo40": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (40)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (40)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo41": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (41)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (41)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo42": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (42)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (42)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo43": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (43)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (43)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo44": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (44)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (44)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo45": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (45)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (45)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo46": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (46)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (46)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo47": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (47)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (47)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo48": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (48)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (48)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo49": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (49)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (49)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "mergeFieldInfo50": {
              "type": "object",
              "properties": {
                "fieldName": {
                  "description": "The name of the field",
                  "type": "string",
                  "title": "Form Field Name (50)",
                  "x-ms-visibility": "advanced"
                },
                "defaultValue": {
                  "description": "The default value of the field",
                  "type": "string",
                  "title": "Form Field Value (50)",
                  "x-ms-visibility": "advanced"
                }
              }
            }
          }
        }
      }
    },
    "AgreementCreationResponse": {
      "type": "object",
      "description": "A JSON that contains the ID of the newly created agreement",
      "properties": {
        "agreementId": {
          "description": "The unique ID of the agreement that can be used to query status and download signed documents",
          "type": "string",
          "title": "Agreement ID"
        }
      },
      "required": [
        "agreementId"
      ]
    },
    "DocumentFileInfoId": {
      "type": "object",
      "required": [
        "transientDocumentId"
      ],
      "properties": {
        "transientDocumentId": {
          "description": "The document id received by uploading a transient document",
          "type": "string",
          "x-ms-summary": "ID"
        }
      }
    },
    "DocumentFileInfoTemplate": {
      "type": "object",
      "required": [
        "libraryDocumentId"
      ],
      "properties": {
        "libraryDocumentId": {
          "description": " Choose a document from the templates stored in your library",
          "type": "string",
          "title": "Template",
          "x-ms-dynamic-values": {
            "operationId": "GetLibraryDocuments_V2",
            "value-path": "id",
            "value-title": "name",
            "value-collection": "libraryDocumentList",
            "parameters": {
              "libraryTemplateType": "DOCUMENT"
            }
          }
        }
      }
    },
    "DocumentFileInfoUrl": {
      "type": "object",
      "required": [
        "urlFileInfo"
      ],
      "properties": {
        "urlFileInfo": {
          "$ref": "#/definitions/URLFileInfo"
        }
      }
    },
    "PostSigningOption": {
      "type": "object",
      "properties": {
        "redirectDelay": {
          "description": "The delay (in seconds) before the user is taken to the success page.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Redirect Delay"
        },
        "redirectUrl": {
          "description": "URL to redirect after completing the signing process, e.g. https://adobe.com",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Redirect URL"
        }
      }
    },
    "EmailOption": {
      "type": "object",
      "properties": {
        "sendOptions": {
          "type": "object",
          "properties": {
            "initEmails": {
              "description": "Control notification mails for Agreement initiation events.",
              "type": "string",
              "x-ms-visibility": "advanced",
              "x-ms-summary": "Initial Emails",
              "enum": [
                "ALL",
                "NONE"
              ],
              "default": "ALL"
            }
          }
        }
      }
    },
    "AgreementCreationInfoIdV6": {
      "type": "object",
      "required": [
        "participantSetsInfo",
        "name",
        "fileInfos",
        "signatureType",
        "state"
      ],
      "properties": {
        "name": {
          "description": "The name of the agreement",
          "type": "string",
          "x-ms-summary": "Agreement Name",
          "x-ms-visibility": "important"
        },
        "fileInfos": {
          "x-ms-summary": "Document",
          "description": "Provide transient document id, library document or a public URL of document",
          "items": {
            "$ref": "#/definitions/DocumentFileInfoId"
          },
          "x-ms-visibility": "important",
          "type": "array"
        },
        "signatureType": {
          "description": "The type of signature you would like to request - e-signature or written",
          "type": "string",
          "enum": [
            "ESIGN",
            "WRITTEN"
          ],
          "default": "ESIGN",
          "x-ms-summary": "Signature Type",
          "x-ms-visibility": "important"
        },
        "participantSetsInfo": {
          "description": "A list of one or more participant who will act upon this agreement",
          "items": {
            "$ref": "#/definitions/ParticipantCreateSetInfoV6"
          },
          "type": "array",
          "x-ms-visibility": "important",
          "x-ms-summary": "-"
        },
        "message": {
          "description": "An optional message to the recipients requesting their action",
          "type": "string",
          "x-ms-summary": "Message",
          "x-ms-visibility": "advanced",
          "default": "Please review and complete this document"
        },
        "ccs": {
          "description": "A list of one or more CCs that will be copied in the agreement transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementCcInfo"
          },
          "x-ms-summary": "CCs",
          "x-ms-visibility": "advanced"
        },
        "daysUntilSigningDeadline": {
          "description": "The number of days that remain before the document expires",
          "type": "integer",
          "x-ms-summary": "Days to Deadline",
          "x-ms-visibility": "internal"
        },
        "expirationTime": {
          "description": "Time after which Agreement expires. Example: 2020-12-31T23:59:00Z",
          "type": "string",
          "x-ms-summary": "Expiration Time",
          "x-ms-visibility": "advanced"
        },
        "reminderFrequency": {
          "description": "How often do you want to send reminders ?",
          "enum": [
            "DAILY_UNTIL_SIGNED",
            "WEEKLY_UNTIL_SIGNED"
          ],
          "type": "string",
          "x-ms-summary": "Reminder Frequency",
          "x-ms-visibility": "advanced"
        },
        "securityOption": {
          "type": "object",
          "description": "Sets optional secondary security parameters for your document",
          "properties": {
            "openPassword": {
              "description": "The password that should be used to encrypt the signed agreement PDF",
              "type": "string",
              "x-ms-summary": "Document Password",
              "x-ms-visibility": "advanced"
            }
          },
          "x-ms-visibility": "advanced"
        },
        "mergeFieldInfo": {
          "description": "Optional default values for form fields to merge into the document",
          "items": {
            "$ref": "#/definitions/MergefieldInfo"
          },
          "type": "array",
          "x-ms-summary": "Form Field",
          "x-ms-visibility": "advanced"
        },
        "postSignOption": {
          "$ref": "#/definitions/PostSigningOption"
        },
        "emailOption": {
          "$ref": "#/definitions/EmailOption"
        },
        "state": {
          "description": "The state in which the agreement should land.",
          "enum": [
            "AUTHORING",
            "DRAFT",
            "IN_PROCESS"
          ],
          "type": "string",
          "title": "State",
          "x-ms-visibility": "internal",
          "default": "IN_PROCESS"
        }
      }
    },
    "AgreementCreationInfoTemplateV6": {
      "type": "object",
      "required": [
        "participantSetsInfo",
        "name",
        "fileInfos",
        "signatureType",
        "state"
      ],
      "properties": {
        "name": {
          "description": "The name of the agreement",
          "type": "string",
          "x-ms-summary": "Agreement Name",
          "x-ms-visibility": "important"
        },
        "fileInfos": {
          "x-ms-summary": "Library",
          "description": "Provide transient document id, library document or a public URL of document",
          "items": {
            "$ref": "#/definitions/DocumentFileInfoTemplate"
          },
          "x-ms-visibility": "important",
          "type": "array"
        },
        "signatureType": {
          "description": "The type of signature you would like to request - e-signature or written",
          "type": "string",
          "enum": [
            "ESIGN",
            "WRITTEN"
          ],
          "default": "ESIGN",
          "x-ms-summary": "Signature Type",
          "x-ms-visibility": "important"
        },
        "participantSetsInfo": {
          "description": "A list of one or more participant who will act upon this agreement",
          "items": {
            "$ref": "#/definitions/ParticipantCreateSetInfoV6"
          },
          "type": "array",
          "x-ms-visibility": "important",
          "x-ms-summary": "-"
        },
        "message": {
          "description": "An optional message to the recipients requesting their action",
          "type": "string",
          "x-ms-summary": "Message",
          "x-ms-visibility": "advanced",
          "default": "Please review and complete this document"
        },
        "ccs": {
          "description": "A list of one or more CCs that will be copied in the agreement transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementCcInfo"
          },
          "x-ms-summary": "CCs",
          "x-ms-visibility": "advanced"
        },
        "daysUntilSigningDeadline": {
          "description": "The number of days that remain before the document expires",
          "type": "integer",
          "x-ms-summary": "Days to Deadline",
          "x-ms-visibility": "internal"
        },
        "expirationTime": {
          "description": "Time after which Agreement expires. Example: 2020-12-31T23:59:00Z",
          "type": "string",
          "x-ms-summary": "Expiration Time",
          "x-ms-visibility": "advanced"
        },
        "reminderFrequency": {
          "description": "How often do you want to send reminders ?",
          "enum": [
            "DAILY_UNTIL_SIGNED",
            "WEEKLY_UNTIL_SIGNED"
          ],
          "type": "string",
          "x-ms-summary": "Reminder Frequency",
          "x-ms-visibility": "advanced"
        },
        "securityOption": {
          "type": "object",
          "description": "Sets optional secondary security parameters for your document",
          "properties": {
            "openPassword": {
              "description": "The password that should be used to encrypt the signed agreement PDF",
              "type": "string",
              "x-ms-summary": "Document Password",
              "x-ms-visibility": "advanced"
            }
          },
          "x-ms-visibility": "advanced"
        },
        "mergeFieldInfo": {
          "description": "Optional default values for form fields to merge into the document",
          "items": {
            "$ref": "#/definitions/MergefieldInfo"
          },
          "type": "array",
          "x-ms-summary": "Form Field",
          "x-ms-visibility": "advanced"
        },
        "postSignOption": {
          "$ref": "#/definitions/PostSigningOption"
        },
        "emailOption": {
          "$ref": "#/definitions/EmailOption"
        },
        "state": {
          "description": "The state in which the agreement should land.",
          "enum": [
            "AUTHORING",
            "DRAFT",
            "IN_PROCESS"
          ],
          "type": "string",
          "title": "State",
          "x-ms-visibility": "internal",
          "default": "IN_PROCESS"
        }
      }
    },
    "AgreementCreationInfoUrlV6": {
      "type": "object",
      "required": [
        "participantSetsInfo",
        "name",
        "fileInfos",
        "signatureType",
        "state"
      ],
      "properties": {
        "name": {
          "description": "The name of the agreement",
          "type": "string",
          "x-ms-summary": "Agreement Name",
          "x-ms-visibility": "important"
        },
        "fileInfos": {
          "x-ms-summary": "Document",
          "description": "Provide transient document id, library document or a public URL of document",
          "items": {
            "$ref": "#/definitions/DocumentFileInfoUrl"
          },
          "x-ms-visibility": "important",
          "type": "array"
        },
        "signatureType": {
          "type": "string",
          "description": "Specifies the Signature type that was requested - E-signature or Written",
          "enum": [
            "ESIGN",
            "WRITTEN"
          ],
          "default": "ESIGN",
          "x-ms-summary": "Signature Type",
          "x-ms-visibility": "important"
        },
        "participantSetsInfo": {
          "description": "A list of one or more participant who will act upon this agreement",
          "items": {
            "$ref": "#/definitions/ParticipantCreateSetInfoV6"
          },
          "type": "array",
          "x-ms-visibility": "important",
          "x-ms-summary": "-"
        },
        "message": {
          "description": "An optional message to the recipients requesting their action",
          "type": "string",
          "x-ms-summary": "Message",
          "x-ms-visibility": "advanced",
          "default": "Please review and complete this document"
        },
        "ccs": {
          "description": "A list of one or more CCs that will be copied in the agreement transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AgreementCcInfo"
          },
          "x-ms-summary": "CCs",
          "x-ms-visibility": "advanced"
        },
        "daysUntilSigningDeadline": {
          "description": "The number of days that remain before the document expires",
          "type": "integer",
          "x-ms-summary": "Days to Deadline",
          "x-ms-visibility": "internal"
        },
        "expirationTime": {
          "description": "Time after which Agreement expires. Example: 2020-12-31T23:59:00Z",
          "type": "string",
          "x-ms-summary": "Expiration Time",
          "x-ms-visibility": "advanced"
        },
        "reminderFrequency": {
          "description": "How often do you want to send reminders ?",
          "enum": [
            "DAILY_UNTIL_SIGNED",
            "WEEKLY_UNTIL_SIGNED"
          ],
          "type": "string",
          "x-ms-summary": "Reminder Frequency",
          "x-ms-visibility": "advanced"
        },
        "securityOption": {
          "type": "object",
          "description": "Sets optional secondary security parameters for your document",
          "properties": {
            "openPassword": {
              "description": "The password that should be used to encrypt the signed agreement PDF",
              "type": "string",
              "x-ms-summary": "Document Password",
              "x-ms-visibility": "advanced"
            }
          },
          "x-ms-visibility": "advanced"
        },
        "mergeFieldInfo": {
          "description": "Optional default values for form fields to merge into the document",
          "items": {
            "$ref": "#/definitions/MergefieldInfo"
          },
          "type": "array",
          "x-ms-summary": "Form Field",
          "x-ms-visibility": "advanced"
        },
        "postSignOption": {
          "$ref": "#/definitions/PostSigningOption"
        },
        "emailOption": {
          "$ref": "#/definitions/EmailOption"
        },
        "state": {
          "description": "The state in which the agreement should land.",
          "enum": [
            "AUTHORING",
            "DRAFT",
            "IN_PROCESS"
          ],
          "type": "string",
          "title": "State",
          "x-ms-visibility": "internal",
          "default": "IN_PROCESS"
        }
      }
    },
    "AgreementCreationResponseV6": {
      "type": "object",
      "description": "A JSON that contains the ID of the newly created agreement",
      "properties": {
        "id": {
          "description": "The unique ID of the agreement that can be used to query status and download signed documents",
          "type": "string",
          "title": "Agreement ID"
        }
      },
      "required": [
        "id"
      ]
    },
    "AgreementDocuments": {
      "type": "object",
      "description": "A JSON that contains both the documents and supporting documents array objects",
      "properties": {
        "documents": {
          "description": "A list of objects representing the documents",
          "items": {
            "$ref": "#/definitions/Document"
          },
          "type": "array",
          "title": "Documents",
          "x-ms-visibility": "important"
        },
        "supportingDocuments": {
          "description": "A list of supporting documents. This is returned only if there are any supporting document in the agreement",
          "items": {
            "$ref": "#/definitions/SupportingDocument"
          },
          "type": "array",
          "title": "Supporting Documents",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "documents"
      ]
    },
    "AgreementDocumentsV6": {
      "type": "object",
      "description": "A JSON that contains both the documents and supporting documents array objects",
      "properties": {
        "documents": {
          "description": "A list of objects representing the documents",
          "items": {
            "$ref": "#/definitions/DocumentV6"
          },
          "type": "array",
          "x-ms-summary": "Documents",
          "x-ms-visibility": "important"
        },
        "supportingDocuments": {
          "description": "A list of supporting documents. This is returned only if there are any supporting document in the agreement",
          "items": {
            "$ref": "#/definitions/SupportingDocumentV6"
          },
          "type": "array",
          "x-ms-summary": "Supporting Documents",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "documents"
      ]
    },
    "AgreementInfo": {
      "type": "object",
      "description": "The complete details about the agreement",
      "properties": {
        "agreementId": {
          "description": "A unique ID that can be used to uniquely identify the agreement",
          "type": "string",
          "title": "Agreement ID",
          "x-ms-visibility": "important"
        },
        "events": {
          "description": "An ordered list of the events in the audit trail of this document",
          "items": {
            "$ref": "#/definitions/DocumentHistoryEvent"
          },
          "type": "array",
          "title": "Events"
        },
        "expiration": {
          "description": "The date after which the agreement can no longer be signed",
          "format": "date",
          "type": "string",
          "title": "Expiration Date",
          "x-ms-visibility": "important"
        },
        "latestVersionId": {
          "description": "A unique ID which uniquely identifies the current version of the agreement",
          "type": "string",
          "title": "Latest Version ID",
          "x-ms-visibility": "important"
        },
        "message": {
          "description": "The message associated with the agreement that the sender has provided",
          "type": "string",
          "title": "Message",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the agreement, specified by the sender",
          "type": "string",
          "title": "Agreement Name",
          "x-ms-visibility": "important"
        },
        "nextParticipantSetInfos": {
          "description": "Information about who needs to act next for this agreement",
          "items": {
            "$ref": "#/definitions/NextParticipantSetInfo"
          },
          "type": "array",
          "title": "Next Participant Sets"
        },
        "participantSetInfos": {
          "description": "Information about all the participant sets of this document",
          "items": {
            "$ref": "#/definitions/ParticipantSetInfo"
          },
          "type": "array",
          "title": "Participant Sets",
          "x-ms-visibility": "important"
        },
        "signatureType": {
          "description": "Specifies the Signature type that was requested - E-signature or Written",
          "enum": [
            "ESIGN",
            "WRITTEN"
          ],
          "type": "string",
          "title": "Signature Type",
          "x-ms-visibility": "important"
        },
        "securityOptions": {
          "type": "string",
          "title": "Document Protection",
          "description": "Security information about the document that specifies whether or not a password is required to view and sign it",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "The current status of the agreement",
          "enum": [
            "OUT_FOR_SIGNATURE",
            "WAITING_FOR_REVIEW",
            "SIGNED",
            "APPROVED",
            "ABORTED",
            "DOCUMENT_LIBRARY",
            "WIDGET",
            "EXPIRED",
            "ARCHIVED",
            "PREFILL",
            "AUTHORING",
            "WAITING_FOR_FAXIN",
            "WAITING_FOR_VERIFICATION",
            "WIDGET_WAITING_FOR_VERIFICATION",
            "WAITING_FOR_PAYMENT",
            "OUT_FOR_APPROVAL",
            "OTHER"
          ],
          "type": "string",
          "title": "Status",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "agreementId",
        "events",
        "name",
        "participantSetInfos",
        "status"
      ]
    },
    "AgreementInfoV6": {
      "type": "object",
      "description": "Complete Agreement Details",
      "properties": {
        "id": {
          "description": "A unique ID that can be used to uniquely identify the agreement",
          "type": "string",
          "x-ms-summary": "Agreement ID",
          "x-ms-visibility": "important"
        },
        "createdDate": {
          "description": "Date when agreement was created",
          "format": "date",
          "type": "string",
          "x-ms-summary": "Created Date",
          "x-ms-visibility": "important"
        },
        "firstReminderDelay": {
          "description": "Integer which specifies the delay in hours before sending the first reminder.",
          "type": "integer",
          "x-ms-summary": "First Reminder Delay",
          "x-ms-visibility": "advanced"
        },
        "reminderFrequency": {
          "description": "How often do you want to send reminders?",
          "enum": [
            "DAILY_UNTIL_SIGNED",
            "WEEKDAILY_UNTIL_SIGNED",
            "EVERY_OTHER_DAY_UNTIL_SIGNED",
            "EVERY_THIRD_DAY_UNTIL_SIGNED",
            "EVERY_FIFTH_DAY_UNTIL_SIGNED",
            "WEEKLY_UNTIL_SIGNED"
          ],
          "type": "string",
          "x-ms-summary": "Reminder Frequency",
          "x-ms-visibility": "advanced"
        },
        "expiration": {
          "description": "The date after which the agreement can no longer be signed",
          "format": "date",
          "type": "string",
          "x-ms-summary": "Expiration Date",
          "x-ms-visibility": "important"
        },
        "locale": {
          "description": "The locale associated with this agreement - for example, en_US or fr_FR",
          "type": "string",
          "x-ms-summary": "Locale",
          "x-ms-visibility": "important"
        },
        "message": {
          "description": "The message associated with the agreement that the sender has provided",
          "type": "string",
          "x-ms-summary": "Message",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the agreement, specified by the sender",
          "type": "string",
          "x-ms-summary": "Agreement Name",
          "x-ms-visibility": "important"
        },
        "documentVisibilityEnabled": {
          "description": "Is document visibility enabled?",
          "type": "boolean",
          "x-ms-summary": "Document Visibility?",
          "x-ms-visibility": "advanced"
        },
        "participantSetsInfo": {
          "description": "Information about all the participant sets of this document",
          "items": {
            "$ref": "#/definitions/ParticipantSetInfoV6"
          },
          "type": "array",
          "x-ms-summary": "Participant Sets",
          "x-ms-visibility": "important"
        },
        "signatureType": {
          "description": "Specifies the Signature type that was requested - E-signature or Written",
          "enum": [
            "ESIGN",
            "WRITTEN"
          ],
          "type": "string",
          "x-ms-summary": "Signature Type",
          "x-ms-visibility": "important"
        },
        "securityOptions": {
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Security Options",
          "description": "Security information about the document that specifies whether or not a password is required to view and sign it"
        },
        "status": {
          "description": "The current status of the agreement",
          "enum": [
            "OUT_FOR_SIGNATURE",
            "OUT_FOR_DELIVERY",
            "OUT_FOR_ACCEPTANCE",
            "OUT_FOR_FORM_FILLING",
            "OUT_FOR_APPROVAL",
            "AUTHORING",
            "CANCELLED",
            "SIGNED",
            "APPROVED",
            "DELIVERED",
            "ACCEPTED",
            "FORM_FILLED",
            "EXPIRED",
            "ARCHIVED",
            "PREFILL",
            "WIDGET_WAITING_FOR_VERIFICATION",
            "DRAFT",
            "DOCUMENTS_NOT_YET_PROCESSED",
            "WAITING_FOR_FAXIN",
            "WAITING_FOR_VERIFICATION"
          ],
          "type": "string",
          "x-ms-summary": "Status",
          "x-ms-visibility": "important"
        },
        "senderEmail": {
          "description": "The email of the sender",
          "type": "string",
          "x-ms-summary": "Sender Email",
          "x-ms-visibility": "advanced"
        },
        "workflowId": {
          "description": "The ID of custom workflow which defines the routing path of an agreement.",
          "type": "string",
          "x-ms-summary": "Workflow ID",
          "x-ms-visibility": "advanced"
        },
        "ccs": {
          "description": "A list of one or more CCs that will be copied in the agreement transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CcInfo"
          },
          "x-ms-summary": "CCs",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "id",
        "status"
      ]
    },
    "CombinedDocumentResponse": {
      "type": "string",
      "format": "binary",
      "title": "File Content",
      "description": "The file stream of the document"
    },
    "DisplayUserInfo": {
      "type": "object",
      "properties": {
        "company": {
          "description": "Displays the name of the company of the user, if available",
          "type": "string",
          "title": "Company",
          "x-ms-visibility": "important"
        },
        "email": {
          "description": "Displays the email of the user",
          "type": "string",
          "title": "Email",
          "x-ms-visibility": "important"
        },
        "fullName": {
          "description": "Displays the full name of the user, if available. ",
          "type": "string",
          "title": "Full Name",
          "x-ms-visibility": "important"
        }
      }
    },
    "DisplayUserSetInfo": {
      "type": "object",
      "properties": {
        "displayUserSetMemberInfos": {
          "description": "Displays the info about user set",
          "items": {
            "$ref": "#/definitions/DisplayUserInfo"
          },
          "type": "array",
          "title": "Display User Set Info",
          "x-ms-visibility": "important"
        },
        "displayUserSetName": {
          "type": "string",
          "title": "Display User Set Name"
        }
      },
      "required": [
        "displayUserSetMemberInfos"
      ]
    },
    "DisplayParticipantInfo": {
      "type": "object",
      "properties": {
        "company": {
          "description": "Displays the name of the company of the participant, if available",
          "type": "string",
          "title": "Company",
          "x-ms-visibility": "important"
        },
        "email": {
          "description": "Displays the email of the participant",
          "type": "string",
          "title": "Email",
          "x-ms-visibility": "important"
        },
        "fullName": {
          "description": "Displays the full name of the participant, if available. ",
          "type": "string",
          "title": "Full Name",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "email"
      ]
    },
    "DisplayParticipantSetInfo": {
      "type": "object",
      "properties": {
        "displayParticipantSetMemberInfos": {
          "description": "Displays the info about participant set",
          "items": {
            "$ref": "#/definitions/DisplayParticipantInfo"
          },
          "type": "array",
          "title": "Display participant Set Info",
          "x-ms-visibility": "important"
        },
        "displayParticipantSetName": {
          "type": "string",
          "title": "Display participant Set Name"
        }
      },
      "required": [
        "displayParticipantSetMemberInfos"
      ]
    },
    "Document": {
      "type": "object",
      "description": "The information about the document",
      "properties": {
        "documentId": {
          "description": "The unique ID of the document",
          "type": "string",
          "title": "Document ID",
          "x-ms-visibility": "important"
        },
        "mimeType": {
          "description": "The Mime type of the document",
          "type": "string",
          "title": "Mime Type",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the document",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "numPages": {
          "description": "Number of pages in the document",
          "type": "integer",
          "title": "Num Pages",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "documentId",
        "mimeType",
        "name",
        "numPages"
      ]
    },
    "DocumentV6": {
      "type": "object",
      "description": "The information about the document",
      "properties": {
        "id": {
          "description": "The unique ID of the document",
          "type": "string",
          "x-ms-summary": "Document ID",
          "x-ms-visibility": "important"
        },
        "mimeType": {
          "description": "The Mime type of the document",
          "type": "string",
          "x-ms-summary": "Mime Type",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the document",
          "type": "string",
          "x-ms-summary": "Name",
          "x-ms-visibility": "important"
        },
        "numPages": {
          "description": "Number of pages in the document",
          "type": "integer",
          "x-ms-summary": "Num Pages",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "id",
        "mimeType",
        "name",
        "numPages"
      ]
    },
    "DocumentHistoryEvent": {
      "type": "object",
      "properties": {
        "actingUserEmail": {
          "description": "Email address of the user that initiated the event",
          "type": "string",
          "title": "Event Initiator",
          "x-ms-visibility": "important"
        },
        "date": {
          "description": "The date of the audit event",
          "format": "date",
          "type": "string",
          "title": "Event Date",
          "x-ms-visibility": "important"
        },
        "description": {
          "description": "A description of the audit event",
          "type": "string",
          "title": "Event Description",
          "x-ms-visibility": "important"
        },
        "participantEmail": {
          "description": "Email address of the user that initiated the event",
          "type": "string",
          "title": "Participant Email",
          "x-ms-visibility": "important"
        },
        "type": {
          "description": "Type of agreement event",
          "enum": [
            "CREATED",
            "UPLOADED_BY_SENDER",
            "FAXED_BY_SENDER",
            "AGREEMENT_MODIFIED",
            "USER_ACK_AGREEMENT_MODIFIED",
            "PRESIGNED",
            "SIGNED",
            "ESIGNED",
            "DIGSIGNED",
            "APPROVED",
            "OFFLINE_SYNC",
            "FAXIN_RECEIVED",
            "SIGNATURE_REQUESTED",
            "APPROVAL_REQUESTED",
            "RECALLED",
            "REJECTED",
            "EXPIRED",
            "EXPIRED_AUTOMATICALLY",
            "SHARED",
            "EMAIL_VIEWED",
            "AUTO_CANCELLED_CONVERSION_PROBLEM",
            "SIGNER_SUGGESTED_CHANGES",
            "SENDER_CREATED_NEW_REVISION",
            "PASSWORD_AUTHENTICATION_FAILED",
            "KBA_AUTHENTICATION_FAILED",
            "KBA_AUTHENTICATED",
            "WEB_IDENTITY_AUTHENTICATED",
            "WEB_IDENTITY_SPECIFIED",
            "EMAIL_BOUNCED",
            "WIDGET_ENABLED",
            "WIDGET_DISABLED",
            "DELEGATED",
            "AUTO_DELEGATED",
            "REPLACED_SIGNER",
            "VAULTED",
            "DOCUMENTS_DELETED",
            "OTHER",
            "FORM_FILLING_REQUESTED"
          ],
          "type": "string",
          "title": "Event Type",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "actingUserEmail",
        "date",
        "description",
        "participantEmail",
        "type"
      ]
    },
    "DocumentLibraryItem": {
      "type": "object",
      "properties": {
        "libraryDocumentId": {
          "description": "The unique ID of the library document used when sending the document to be signed",
          "type": "string",
          "title": "Library Template Id",
          "x-ms-visibility": "important"
        },
        "libraryTemplateTypes": {
          "description": "A list of one or more library template types",
          "items": {
            "enum": [
              "DOCUMENT",
              "FORM_FIELD_LAYER"
            ],
            "type": "string"
          },
          "type": "array",
          "title": "Library Template Types",
          "x-ms-visibility": "important"
        },
        "modifiedDate": {
          "description": "The day on which the library template was last modified",
          "format": "date",
          "type": "string",
          "title": "Modified Date",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the library template",
          "type": "string",
          "title": "Library Template Name",
          "x-ms-visibility": "important"
        },
        "scope": {
          "description": "The scope of visibility of the library template",
          "enum": [
            "PERSONAL",
            "SHARED",
            "GLOBAL"
          ],
          "type": "string",
          "title": "Template Sharing Mode",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "libraryDocumentId",
        "libraryTemplateTypes",
        "modifiedDate",
        "name",
        "scope"
      ]
    },
    "DocumentLibraryItems": {
      "type": "object",
      "description": "A JSON that contains the library template array object",
      "properties": {
        "libraryDocumentList": {
          "description": "A list of library template items",
          "items": {
            "$ref": "#/definitions/DocumentLibraryItem"
          },
          "type": "array",
          "title": "Library Templates List",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "libraryDocumentList"
      ]
    },
    "DocumentResponse": {
      "type": "string",
      "format": "binary",
      "title": "File Content",
      "description": "The file stream of the document"
    },
    "LibraryCreationInfoId": {
      "type": "object",
      "properties": {
        "libraryDocumentCreationInfo": {
          "type": "object",
          "properties": {
            "name": {
              "description": "Agreement Name used to identify the template",
              "type": "string",
              "title": "Template Name",
              "x-ms-visibility": "important"
            },
            "libraryTemplateTypes": {
              "description": "A list of one or more library template types",
              "enum": [
                "Reusable document",
                "Reusable form field layer",
                "Both"
              ],
              "type": "string",
              "default": "Reusable document",
              "title": "Template Type",
              "x-ms-visibility": "important"
            },
            "librarySharingMode": {
              "description": "Specifies who should have access to this library document",
              "enum": [
                "Only me",
                "Any user in my group",
                "Any user in my organization"
              ],
              "type": "string",
              "title": "Share with",
              "x-ms-visibility": "important",
              "default": "Only me"
            },
            "fileInfos1": {
              "type": "object",
              "x-ms-visibility": "important",
              "required": [
                "transientDocumentId"
              ],
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID",
                  "x-ms-visibility": "important"
                }
              }
            },
            "fileInfos2": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (2)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos3": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (3)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos4": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (4)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos5": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (5)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos6": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (6)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos7": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (7)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos8": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (8)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos9": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (9)",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos10": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "transientDocumentId": {
                  "description": "The document ID received by uploading a document",
                  "type": "string",
                  "title": "Document ID (10)",
                  "x-ms-visibility": "advanced"
                }
              }
            }
          },
          "required": [
            "fileInfos1",
            "librarySharingMode",
            "libraryTemplateTypes",
            "name"
          ]
        }
      },
      "required": [
        "libraryDocumentCreationInfo"
      ]
    },
    "LibraryCreationInfoUrl": {
      "type": "object",
      "properties": {
        "libraryDocumentCreationInfo": {
          "type": "object",
          "properties": {
            "name": {
              "description": "Agreement Name used to identify the template",
              "type": "string",
              "title": "Template Name",
              "x-ms-visibility": "important"
            },
            "libraryTemplateTypes": {
              "description": "A list of one or more library template types",
              "enum": [
                "Reusable document",
                "Reusable form field layer",
                "Both"
              ],
              "type": "string",
              "default": "Reusable document",
              "title": "Template Type",
              "x-ms-visibility": "important"
            },
            "librarySharingMode": {
              "description": "Specifies who should have access to this library document",
              "enum": [
                "Only me",
                "Any user in my group",
                "Any user in my organization"
              ],
              "type": "string",
              "title": "Share with",
              "x-ms-visibility": "important",
              "default": "Only me"
            },
            "fileInfos1": {
              "type": "object",
              "x-ms-visibility": "important",
              "required": [
                "documentURL"
              ],
              "properties": {
                "documentURL": {
                  "type": "object",
                  "required": [
                    "url",
                    "name"
                  ],
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL",
                      "x-ms-visibility": "important"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name",
                      "x-ms-visibility": "important"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document",
                  "x-ms-visibility": "important"
                }
              }
            },
            "fileInfos2": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (2)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (2)",
                      "x-ms-visibility": "advanced"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos3": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (3)",
                      "x-ms-visibility": "advanced"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (3)"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document",
                  "x-ms-visibility": "advanced"
                }
              }
            },
            "fileInfos4": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (4)"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (4)"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos5": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (5)"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (5)"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos6": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (6)"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (6)"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos7": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (7)"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (7)"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos8": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (8)"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (8)"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos9": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (9)"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (9)"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            },
            "fileInfos10": {
              "type": "object",
              "x-ms-visibility": "advanced",
              "properties": {
                "documentURL": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "description": "A publicly accessible URL for retrieving the document",
                      "type": "string",
                      "title": "URL (10)"
                    },
                    "name": {
                      "description": "The name of the referenced document, with extension",
                      "type": "string",
                      "title": "Name (10)"
                    }
                  },
                  "description": "File at a public URL location",
                  "title": "Document"
                }
              }
            }
          },
          "required": [
            "fileInfos1",
            "librarySharingMode",
            "libraryTemplateTypes",
            "name"
          ]
        }
      },
      "required": [
        "libraryDocumentCreationInfo"
      ]
    },
    "LibraryDocumentCreationResponse": {
      "type": "object",
      "description": "A JSON object describing the library template",
      "properties": {
        "libraryDocumentId": {
          "description": "The unique ID that can be used to refer to the library template",
          "type": "string",
          "title": "Library Template Id",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "libraryDocumentId"
      ]
    },
    "MergefieldInfo": {
      "type": "object",
      "properties": {
        "fieldName": {
          "description": "The name of the field",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "advanced"
        },
        "defaultValue": {
          "description": "The default value of the field",
          "type": "string",
          "title": "Value",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "NextParticipantInfo": {
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address of the next participant",
          "type": "string",
          "title": "Email",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the next participant, if available",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "waitingSince": {
          "description": "The date since which the document has been waiting for the participant to take action",
          "format": "date",
          "type": "string",
          "title": "Waiting Since",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "email",
        "waitingSince"
      ]
    },
    "NextParticipantSetInfo": {
      "type": "object",
      "properties": {
        "nextParticipantSetMemberInfos": {
          "description": "Information about the members of the next participant set",
          "items": {
            "$ref": "#/definitions/NextParticipantInfo"
          },
          "x-ms-visibility": "important",
          "title": "Next Participant Set Member Infos",
          "type": "array"
        }
      },
      "required": [
        "nextParticipantSetMemberInfos"
      ]
    },
    "ParticipantInfo": {
      "type": "object",
      "properties": {
        "company": {
          "description": "The company of the participant, if available",
          "type": "string",
          "title": "Company",
          "x-ms-visibility": "important"
        },
        "email": {
          "description": "The email address of the participant",
          "type": "string",
          "title": "Email",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the participant, if available",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "participantId": {
          "description": "The unique ID of the participant",
          "type": "string",
          "title": "Participant ID",
          "x-ms-visibility": "important"
        },
        "securityOptions": {
          "description": "Security options that apply to the participant",
          "items": {
            "enum": [
              "PASSWORD",
              "WEB_IDENTITY",
              "KBA",
              "PHONE",
              "OTHER"
            ],
            "type": "string"
          },
          "type": "array",
          "title": "Security Options",
          "x-ms-visibility": "important"
        },
        "title": {
          "description": "The title of the participant, if available",
          "type": "string",
          "title": "Title",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "email",
        "participantId"
      ]
    },
    "ParticipantSetInfo": {
      "type": "object",
      "x-ms-visibility": "important",
      "properties": {
        "participantSetId": {
          "description": "The unique ID of the participant set",
          "type": "string",
          "title": "Participant Set ID",
          "x-ms-visibility": "important"
        },
        "participantSetMemberInfos": {
          "description": "Information about the members of the recipient set",
          "items": {
            "$ref": "#/definitions/ParticipantInfo"
          },
          "type": "array",
          "title": "Participant Set Member Infos",
          "x-ms-visibility": "important"
        },
        "privateMessage": {
          "description": "Private message for the participants in the set",
          "type": "string",
          "title": "Private Message",
          "x-ms-visibility": "important"
        },
        "roles": {
          "description": "The current roles of the participant set. A participant set can have one or more roles",
          "items": {
            "enum": [
              "SENDER",
              "SIGNER",
              "APPROVER",
              "DELEGATE_TO_SIGNER",
              "DELEGATE_TO_APPROVER",
              "CC",
              "DELEGATE",
              "SHARE",
              "OTHER"
            ],
            "type": "string",
            "x-ms-visibility": "important"
          },
          "type": "array",
          "title": "Role"
        },
        "securityOptions": {
          "description": "Security options that apply to the participant",
          "items": {
            "enum": [
              "PASSWORD",
              "WEB_IDENTITY",
              "KBA",
              "PHONE",
              "OTHER"
            ],
            "type": "string",
            "title": "Security Options",
            "x-ms-visibility": "important"
          },
          "type": "array"
        },
        "signingOrder": {
          "description": "Index starting with 1, that tells the order in which this recipient signs",
          "type": "integer",
          "title": "Signing Order",
          "x-ms-visibility": "important"
        },
        "status": {
          "description": "The participant set status with respect to the document",
          "enum": [
            "WAITING_FOR_MY_SIGNATURE",
            "WAITING_FOR_MY_APPROVAL",
            "WAITING_FOR_MY_DELEGATION",
            "OUT_FOR_SIGNATURE",
            "SIGNED",
            "APPROVED",
            "RECALLED",
            "HIDDEN",
            "NOT_YET_VISIBLE",
            "WAITING_FOR_FAXIN",
            "ARCHIVED",
            "UNKNOWN",
            "PARTIAL",
            "FORM",
            "WAITING_FOR_AUTHORING",
            "OUT_FOR_APPROVAL",
            "WIDGET",
            "EXPIRED",
            "WAITING_FOR_MY_REVIEW",
            "IN_REVIEW",
            "OTHER"
          ],
          "type": "string",
          "title": "Participant Set Status",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "participantSetId",
        "participantSetMemberInfos",
        "roles",
        "status"
      ]
    },
    "ParticipantSetInfoV6": {
      "type": "object",
      "x-ms-visibility": "important",
      "properties": {
        "memberInfos": {
          "description": "Information about the members of the recipient set",
          "items": {
            "$ref": "#/definitions/MemberInfosV6"
          },
          "type": "array",
          "x-ms-summary": "Participant Set Member Infos",
          "x-ms-visibility": "important"
        },
        "order": {
          "description": "Index indicating position at which signing group needs to sign.",
          "type": "integer",
          "x-ms-summary": "Order",
          "format": "int32",
          "x-ms-visibility": "important"
        },
        "role": {
          "description": "The current roles of the participant set (signer, approver etc).",
          "type": "string",
          "enum": [
            "SIGNER",
            "APPROVER",
            "ACCEPTOR",
            "CERTIFIED_RECIPIENT",
            "FORM_FILLER",
            "DELEGATE_TO_SIGNER",
            "DELEGATE_TO_APPROVER",
            "DELEGATE_TO_ACCEPTOR",
            "DELEGATE_TO_CERTIFIED_RECIPIENT",
            "DELEGATE_TO_FORM_FILLER",
            "SHARE"
          ],
          "x-ms-summary": "Role",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the participant set",
          "type": "string",
          "x-ms-summary": "Participant Set Name",
          "x-ms-visibility": "important"
        },
        "privateMessage": {
          "description": "Private message for the participants in the set",
          "type": "string",
          "x-ms-summary": "Participant Set Private Messsage",
          "x-ms-visibility": "important"
        },
        "visiblePages": {
          "description": "The pages that are visible to the participant set",
          "x-ms-summary": "Participant Set Visible Pages",
          "x-ms-visibility": "advanced",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        }
      }
    },
    "ParticipantCreateSetInfoV6": {
      "type": "object",
      "x-ms-visibility": "important",
      "properties": {
        "memberInfos": {
          "description": "Information about the members of the recipient set",
          "items": {
            "$ref": "#/definitions/MemberInfosV6"
          },
          "type": "array",
          "x-ms-summary": "-",
          "x-ms-visibility": "important"
        },
        "order": {
          "default": 1,
          "description": "Index starting with 1, indicating position at which signing group needs to sign.",
          "type": "integer",
          "x-ms-summary": "Order",
          "format": "int32",
          "x-ms-visibility": "important"
        },
        "role": {
          "default": "SIGNER",
          "description": "The current roles of the participant set (signer, approver etc).",
          "type": "string",
          "enum": [
            "SIGNER",
            "APPROVER",
            "ACCEPTOR",
            "CERTIFIED_RECIPIENT",
            "FORM_FILLER",
            "DELEGATE_TO_SIGNER",
            "DELEGATE_TO_APPROVER",
            "DELEGATE_TO_ACCEPTOR",
            "DELEGATE_TO_CERTIFIED_RECIPIENT",
            "DELEGATE_TO_FORM_FILLER"
          ],
          "x-ms-summary": "Role",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "memberInfos",
        "order",
        "role"
      ]
    },
    "MemberInfosV6": {
      "type": "object",
      "properties": {
        "email": {
          "description": "The email of the participant",
          "type": "string",
          "x-ms-summary": "Participant Email",
          "x-ms-visibility": "important"
        },
        "securityOption": {
          "description": "The Security info required for the recipient to view & sign the document",
          "type": "object",
          "x-ms-summary": "-",
          "properties": {
            "authenticationMethod": {
              "description": "Default authentication: email (None)",
              "type": "string",
              "enum": [
                "NONE",
                "PASSWORD",
                "PHONE",
                "KBA",
                "ADOBE_SIGN"
              ],
              "x-ms-summary": "Authentication"
            },
            "password": {
              "description": "The password required for the participant",
              "type": "string",
              "x-ms-visibility": "advanced",
              "x-ms-summary": "Password"
            },
            "phoneInfo": {
              "description": "The phoneInfo required for the recipient to view & sign the document",
              "type": "object",
              "x-ms-visibility": "advanced",
              "x-ms-summary": "-",
              "properties": {
                "countryCode": {
                  "description": "Recipient's phone country code required  to view & sign the document",
                  "type": "string",
                  "x-ms-summary": "Country Code"
                },
                "phone": {
                  "description": "Recipient's phone number required  to view & sign the agreement",
                  "type": "string",
                  "x-ms-summary": "Phone No."
                }
              }
            }
          }
        }
      },
      "required": [
        "email"
      ]
    },
    "RecipientInfo": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "description": "Email of the recipient",
          "type": "string",
          "title": "- Email"
        },
        "securityOptions": {
          "description": "Security options that apply to the recipient",
          "type": "object",
          "properties": {
            "authenticationMethod": {
              "description": "The authentication method to view & sign the document",
              "enum": [
                "Email",
                "Password",
                "Social",
                "KBA",
                "Phone Authentication"
              ],
              "type": "string",
              "title": "- Security Method"
            },
            "password": {
              "description": "The password required for the recipient to view & sign the document",
              "type": "string",
              "title": "- Security Password"
            },
            "phoneInfos": {
              "description": "The phoneInfo required for the recipient to view & sign the document",
              "type": "object",
              "properties": {
                "countryCode": {
                  "description": "Recipient's phone country code to view & sign the document",
                  "type": "string",
                  "title": "- Country Code"
                },
                "phone": {
                  "description": "Recipient's phone number to view & sign the agreement",
                  "type": "string",
                  "title": "- Phone No"
                }
              },
              "required": [
                "phone"
              ]
            }
          }
        }
      }
    },
    "RecipientSetInfo": {
      "type": "object",
      "required": [
        "recipientSetMemberInfos",
        "recipientSetRole",
        "signingOrder"
      ],
      "properties": {
        "recipientSetMemberInfos": {
          "description": "Information about the members of the recipient set",
          "items": {
            "$ref": "#/definitions/RecipientInfo"
          },
          "type": "array"
        },
        "signingOrder": {
          "description": "Index starting with 1, that tells the order in which this recipient signs",
          "title": "- Signing Order",
          "type": "integer",
          "x-ms-visibility": "important"
        },
        "recipientSetRole": {
          "description": "Specify the role of recipient",
          "type": "string",
          "title": "- Role",
          "x-ms-visibility": "important",
          "enum": [
            "SIGNER",
            "APPROVER",
            "ACCEPTOR",
            "FORM_FILLER",
            "CERTIFIED_RECIPIENT",
            "DELEGATE_TO_SIGNER",
            "DELEGATE_TO_APPROVER",
            "DELEGATE_TO_ACCEPTOR",
            "DELEGATE_TO_FORM_FILLER",
            "DELEGATE_TO_CERTIFIED_RECIPIENT"
          ],
          "default": "SIGNER"
        },
        "privateMessage": {
          "description": "Private message for the recipient",
          "type": "string",
          "title": "- Private Message"
        }
      }
    },
    "SigningUrl": {
      "type": "object",
      "required": [
        "email",
        "esignUrl"
      ],
      "properties": {
        "email": {
          "description": "The email address of the signer associated with this signing url",
          "type": "string",
          "title": "Email for Sign URL",
          "x-ms-visibility": "important"
        },
        "esignUrl": {
          "description": "The URL address of the signer associated with this signing url",
          "type": "string",
          "title": "Sign URL",
          "x-ms-visibility": "important"
        }
      }
    },
    "SigningUrlResponse": {
      "type": "object",
      "required": [
        "signingUrlSetInfos"
      ],
      "properties": {
        "signingUrlSetInfos": {
          "title": "Array of URLs for signer sets",
          "description": "An array of urls for signer sets involved in this agreement",
          "items": {
            "$ref": "#/definitions/SigningUrlSetInfo"
          },
          "type": "array"
        }
      }
    },
    "SigningUrlSetInfo": {
      "type": "object",
      "required": [
        "signingUrls"
      ],
      "properties": {
        "signingUrls": {
          "title": "- Signing URL Array",
          "description": "An array of urls for current signer set",
          "items": {
            "$ref": "#/definitions/SigningUrl"
          },
          "x-ms-visibility": "important",
          "type": "array"
        },
        "signingUrlSetName": {
          "description": "The name of the current signer set",
          "type": "string",
          "title": "- Sign URL set name",
          "x-ms-visibility": "important"
        }
      }
    },
    "SupportingDocument": {
      "type": "object",
      "description": "The information about the supporting document",
      "properties": {
        "displayLabel": {
          "description": "Display name of the supporting document",
          "type": "string",
          "title": "Supporting Document Name",
          "x-ms-visibility": "advanced"
        },
        "fieldName": {
          "description": "The name of the supporting document field",
          "type": "string",
          "title": "Supporting Document Field Name",
          "x-ms-visibility": "advanced"
        },
        "mimeType": {
          "description": "The Mime type of the supporting document",
          "type": "string",
          "title": "Supporting Document Mime Type",
          "x-ms-visibility": "advanced"
        },
        "numPages": {
          "description": "Number of pages in the supporting document",
          "format": "int32",
          "type": "integer",
          "title": "Supporting Document Pages",
          "x-ms-visibility": "advanced"
        },
        "supportingDocumentId": {
          "description": "Unique ID representing the supporting document",
          "type": "string",
          "title": "Supporting Document ID",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "displayLabel",
        "fieldName",
        "mimeType",
        "numPages",
        "supportingDocumentId"
      ]
    },
    "SupportingDocumentV6": {
      "type": "object",
      "description": "The information about the supporting document",
      "properties": {
        "displayLabel": {
          "description": "Display name of the supporting document",
          "type": "string",
          "x-ms-summary": "Supporting Document Name",
          "x-ms-visibility": "advanced"
        },
        "fieldName": {
          "description": "The name of the supporting document field",
          "type": "string",
          "x-ms-summary": "Supporting Document Field Name",
          "x-ms-visibility": "advanced"
        },
        "mimeType": {
          "description": "The Mime type of the supporting document",
          "type": "string",
          "x-ms-summary": "Supporting Document Mime Type",
          "x-ms-visibility": "advanced"
        },
        "numPages": {
          "description": "Number of pages in the supporting document",
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Supporting Document Pages",
          "x-ms-visibility": "advanced"
        },
        "id": {
          "description": "Unique ID representing the supporting document",
          "type": "string",
          "x-ms-summary": "Supporting Document ID",
          "x-ms-visibility": "advanced"
        }
      },
      "required": [
        "displayLabel",
        "fieldName",
        "mimeType",
        "numPages",
        "id"
      ]
    },
    "TransientDocumentResponse": {
      "type": "object",
      "description": "A JSON that contains the ID of the uploaded document",
      "required": [
        "transientDocumentId"
      ],
      "properties": {
        "transientDocumentId": {
          "description": "The document ID of the uploaded document",
          "type": "string",
          "title": "Document ID"
        }
      }
    },
    "UserAgreement": {
      "type": "object",
      "properties": {
        "agreementId": {
          "description": "A unique ID that can be used to uniquely identify the agreement",
          "type": "string",
          "title": "Agreement ID",
          "x-ms-visibility": "important"
        },
        "displayUserSetInfos": {
          "description": "The most relevant current user set for the agreement. It is typically the next signer if the agreement is from the current user, or the sender if received from another user",
          "items": {
            "$ref": "#/definitions/DisplayUserSetInfo"
          },
          "type": "array",
          "title": "Display User Set Infos",
          "x-ms-visibility": "important"
        },
        "displayDate": {
          "description": "The display date for the agreement",
          "format": "date",
          "type": "string",
          "title": "Display Date",
          "x-ms-visibility": "important"
        },
        "esign": {
          "description": "True if this is an e-sign document",
          "type": "boolean",
          "title": "Esign",
          "x-ms-visibility": "important"
        },
        "latestVersionId": {
          "description": "A version ID which uniquely identifies the current version of the agreement",
          "type": "string",
          "title": "Latest Version ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "Name of the Agreement",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "status": {
          "description": "The current status of the agreement",
          "enum": [
            "WAITING_FOR_MY_SIGNATURE",
            "WAITING_FOR_MY_APPROVAL",
            "WAITING_FOR_MY_DELEGATION",
            "OUT_FOR_SIGNATURE",
            "OUT_FOR_APPROVAL",
            "SIGNED",
            "APPROVED",
            "RECALLED",
            "WAITING_FOR_FAXIN",
            "ARCHIVED",
            "FORM",
            "EXPIRED",
            "WIDGET",
            "WAITING_FOR_AUTHORING"
          ],
          "type": "string",
          "title": "Status",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "agreementId",
        "displayDate",
        "displayUserSetInfos",
        "esign",
        "name",
        "status"
      ]
    },
    "UserAgreements": {
      "type": "object",
      "description": "A JSON that contains the user agreement array object",
      "properties": {
        "userAgreementList": {
          "description": "An array of agreement items",
          "items": {
            "$ref": "#/definitions/UserAgreement"
          },
          "type": "array",
          "title": "Agreement List",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "userAgreementList"
      ]
    },
    "UserAgreementV6": {
      "type": "object",
      "properties": {
        "displayParticipantSetInfos": {
          "description": "The most relevant current user set for the agreement. It is typically the next signer if the agreement is from the current user, or the sender if received from another user",
          "items": {
            "$ref": "#/definitions/DisplayUserSetInfo"
          },
          "type": "array",
          "title": "Display User Set Infos",
          "x-ms-visibility": "important"
        },
        "displayDate": {
          "description": "The display date for the agreement",
          "type": "string",
          "title": "Display Date",
          "x-ms-visibility": "important"
        },
        "esign": {
          "description": "True if this is an e-sign document",
          "type": "boolean",
          "title": "Esign",
          "x-ms-visibility": "important"
        },
        "hidden": {
          "description": "True if agreement is hidden for the user",
          "type": "boolean",
          "title": "Hidden",
          "x-ms-visibility": "important"
        },
        "groupId": {
          "description": "Unique identifier of the group",
          "type": "string",
          "title": "Group ID",
          "x-ms-visibility": "important"
        },
        "latestVersionId": {
          "description": "A version ID which uniquely identifies the current version of the agreement",
          "type": "string",
          "title": "Latest Version ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "Name of the Agreement",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "parentId": {
          "description": "The parent id of a megaSign child *OR* the originating id of a web form agreement instance",
          "type": "string",
          "title": "Parent ID",
          "x-ms-visibility": "important"
        },
        "id": {
          "description": "The unique identifier of the agreement",
          "type": "string",
          "title": "Agreement ID",
          "x-ms-visibility": "important"
        },
        "status": {
          "description": "The current status of the agreement",
          "enum": [
            "WAITING_FOR_MY_SIGNATURE",
            "WAITING_FOR_MY_APPROVAL",
            "WAITING_FOR_MY_DELEGATION",
            "WAITING_FOR_MY_ACKNOWLEDGEMENT",
            "WAITING_FOR_MY_ACCEPTANCE",
            "WAITING_FOR_MY_FORM_FILLING",
            "OUT_FOR_SIGNATURE",
            "OUT_FOR_APPROVAL",
            "OUT_FOR_DELIVERY",
            "OUT_FOR_ACCEPTANCE",
            "OUT_FOR_FORM_FILLING",
            "FORM_FILLED",
            "DELIVERED",
            "CANCELLED",
            "SIGNED",
            "APPROVED",
            "RECALLED",
            "WAITING_FOR_FAXIN",
            "ARCHIVED",
            "FORM",
            "EXPIRED",
            "WIDGET",
            "WAITING_FOR_PREFILL",
            "DOCUMENTS_NOT_YET_PROCESSED",
            "WAITING_FOR_MY_VERIFICATION",
            "WAITING_FOR_VERIFICATION",
            "WAITING_FOR_AUTHORING"
          ],
          "type": "string",
          "title": "Status",
          "x-ms-visibility": "important"
        },
        "type": {
          "description": "The kind of agreement",
          "enum": [
            "AGREEMENT",
            "MEGASIGN_CHILD",
            "WIDGET_INSTANCE"
          ],
          "type": "string",
          "title": "Type",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "id",
        "displayDate",
        "status"
      ]
    },
    "userAgreementListV6": {
      "type": "object",
      "description": "A JSON that contains the user agreement array object",
      "properties": {
        "page": {
          "$ref": "#/definitions/page"
        },
        "userAgreementList": {
          "description": "An array of agreement items",
          "items": {
            "$ref": "#/definitions/UserAgreementV6"
          },
          "type": "array",
          "title": "Agreement List",
          "x-ms-visibility": "important"
        }
      }
    },
    "page": {
      "type": "object",
      "description": "Pagination information for navigating through the response",
      "properties": {
        "nextCursor": {
          "description": "Used to navigate to the next page. If not returned, there are no further pages.",
          "type": "string",
          "title": "nextCursor",
          "x-ms-visibility": "important"
        }
      }
    },
    "URLFileInfo": {
      "type": "object",
      "required": [
        "url",
        "name",
        "mimeType"
      ],
      "properties": {
        "url": {
          "description": "A publicly accessible URL for retrieving the raw file content",
          "type": "string",
          "title": "URL"
        },
        "name": {
          "description": "The original system file name of the document being sent",
          "type": "string",
          "title": "Name"
        },
        "mimeType": {
          "description": "The mime type of the referenced file, e.g. application/pdf",
          "type": "string",
          "title": "Type",
          "enum": [
            "application/pdf",
            "application/msword",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
            "application/vnd.ms-excel",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "application/vnd.ms-powerpoint",
            "application/vnd.openxmlformats-officedocument.presentationml.presentation",
            "text/plain",
            "text/rtf",
            "text/csv",
            "text/html",
            "image/tiff",
            "image/bmp",
            "image/gif",
            "image/jpeg",
            "image/png"
          ]
        }
      },
      "description": "File at a public URL location"
    },
    "WebhookCreationInfoForAgreementCreatedEvent": {
      "type": "object",
      "required": [
        "state",
        "scope",
        "name",
        "webhookUrlInfo",
        "webhookSubscriptionEvents"
      ],
      "properties": {
        "webhookUrlInfo": {
          "$ref": "#/definitions/WebhookUrlInfo"
        },
        "state": {
          "description": "The default state of webhook",
          "type": "string",
          "title": "State",
          "default": "ACTIVE",
          "x-ms-visibility": "internal"
        },
        "name": {
          "description": "The name of the trigger",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "scope": {
          "description": "The scope of the trigger",
          "type": "string",
          "title": "Scope",
          "x-ms-visibility": "important",
          "enum": [
            "Any agreement in my account",
            "Any agreement in my group",
            "Any of my agreements"
          ]
        },
        "webhookSubscriptionEvents": {
          "description": "The events for which the flow should be triggered",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AGREEMENT_CREATED"
            ],
            "title": "Events",
            "x-ms-visibility": "internal",
            "default": "AGREEMENT_CREATED"
          },
          "title": "Subscription",
          "x-ms-visibility": "internal",
          "default": [
            "AGREEMENT_CREATED"
          ]
        },
        "webhookConditionalParams": {
          "$ref": "#/definitions/WebhookConditionalParamsForAgreementCreatedEvent"
        }
      }
    },
    "WebhookCreationInfoForAgreementSignatureRequestedEvent": {
      "type": "object",
      "required": [
        "state",
        "scope",
        "name",
        "webhookUrlInfo",
        "webhookSubscriptionEvents",
        "resourceType"
      ],
      "properties": {
        "state": {
          "description": "The default state of webhook",
          "type": "string",
          "title": "State",
          "default": "ACTIVE",
          "x-ms-visibility": "internal"
        },
        "webhookUrlInfo": {
          "$ref": "#/definitions/WebhookUrlInfo"
        },
        "name": {
          "description": "The name of the trigger",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "scope": {
          "description": "The scope of the trigger",
          "type": "string",
          "title": "Scope",
          "x-ms-visibility": "important",
          "enum": [
            "Any agreement in my account",
            "Any agreement in my group",
            "Any of my agreements",
            "A specific agreement"
          ]
        },
        "resourceType": {
          "description": "Specify only when \"Scope\" is \"A specific agreement\".",
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "AGREEMENT",
          "title": "Resource Type",
          "enum": [
            "AGREEMENT"
          ]
        },
        "resourceId": {
          "type": "string",
          "description": "Specify only when \"Scope\" is \"A specific agreement\". Select an agreement from the list or enter the agreement ID.",
          "title": "Agreement Name/ID",
          "x-ms-visibility": "important",
          "x-ms-dynamic-values": {
            "operationId": "GetAllAgreements",
            "value-path": "agreementId",
            "value-title": "name",
            "value-collection": "userAgreementList"
          }
        },
        "webhookSubscriptionEvents": {
          "description": "The events for which the flow should be triggered",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AGREEMENT_ACTION_REQUESTED"
            ],
            "title": "Events",
            "x-ms-visibility": "internal",
            "default": "AGREEMENT_ACTION_REQUESTED"
          },
          "title": "Subscription",
          "x-ms-visibility": "internal",
          "default": [
            "AGREEMENT_ACTION_REQUESTED"
          ]
        },
        "webhookConditionalParams": {
          "$ref": "#/definitions/WebhookConditionalParams"
        }
      }
    },
    "WebhookCreationInfoForAgreementWorkflowCompletedEvent": {
      "type": "object",
      "required": [
        "state",
        "scope",
        "name",
        "webhookUrlInfo",
        "webhookSubscriptionEvents",
        "resourceType"
      ],
      "properties": {
        "state": {
          "description": "The default state of webhook",
          "type": "string",
          "title": "State",
          "default": "ACTIVE",
          "x-ms-visibility": "internal"
        },
        "webhookUrlInfo": {
          "$ref": "#/definitions/WebhookUrlInfo"
        },
        "name": {
          "description": "The name of the trigger",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "scope": {
          "description": "The scope of the trigger",
          "type": "string",
          "title": "Scope",
          "x-ms-visibility": "important",
          "enum": [
            "Any agreement in my account",
            "Any agreement in my group",
            "Any of my agreements",
            "A specific agreement"
          ]
        },
        "resourceType": {
          "description": "Specify only when \"Scope\" is \"A specific agreement\".",
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "AGREEMENT",
          "title": "Resource Type",
          "enum": [
            "AGREEMENT"
          ]
        },
        "resourceId": {
          "type": "string",
          "description": "Specify only when \"Scope\" is \"A specific agreement\". Select an agreement from the list or enter the agreement ID.",
          "title": "Agreement Name/ID",
          "x-ms-visibility": "important",
          "x-ms-dynamic-values": {
            "operationId": "GetAllAgreements",
            "value-path": "agreementId",
            "value-title": "name",
            "value-collection": "userAgreementList"
          }
        },
        "webhookSubscriptionEvents": {
          "description": "The events for which the flow should be triggered",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AGREEMENT_WORKFLOW_COMPLETED"
            ],
            "title": "Events",
            "x-ms-visibility": "internal",
            "default": "AGREEMENT_WORKFLOW_COMPLETED"
          },
          "title": "Subscription",
          "x-ms-visibility": "internal",
          "default": [
            "AGREEMENT_WORKFLOW_COMPLETED"
          ]
        },
        "webhookConditionalParams": {
          "$ref": "#/definitions/WebhookConditionalParamsForAgreementSignedEvent"
        }
      }
    },
    "WebhookCreationInfoStatusChange": {
      "type": "object",
      "required": [
        "state",
        "scope",
        "name",
        "webhookUrlInfo",
        "webhookSubscriptionEvents",
        "resourceType"
      ],
      "properties": {
        "state": {
          "description": "The default state of webhook",
          "type": "string",
          "title": "State",
          "default": "ACTIVE",
          "x-ms-visibility": "internal"
        },
        "webhookUrlInfo": {
          "$ref": "#/definitions/WebhookUrlInfo"
        },
        "name": {
          "description": "The name of the trigger",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "scope": {
          "description": "The scope of the trigger",
          "type": "string",
          "title": "Scope",
          "x-ms-visibility": "important",
          "enum": [
            "Any agreement in my account",
            "Any agreement in my group",
            "Any of my agreements",
            "A specific agreement"
          ]
        },
        "resourceType": {
          "description": "Specify only when \"Scope\" is \"A specific agreement\".",
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "AGREEMENT",
          "title": "Resource Type",
          "enum": [
            "AGREEMENT"
          ]
        },
        "resourceId": {
          "type": "string",
          "description": "Specify only when \"Scope\" is \"A specific agreement\". Select an agreement from the list or enter the agreement ID.",
          "title": "Agreement Name/ID",
          "x-ms-visibility": "important",
          "x-ms-dynamic-values": {
            "operationId": "GetAllAgreements",
            "value-path": "agreementId",
            "value-title": "name",
            "value-collection": "userAgreementList"
          }
        },
        "webhookSubscriptionEvents": {
          "description": "The events for which the flow should be triggered",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "When an agreement is created",
              "When a participant completes their action",
              "When an agreement workflow is completed successfully",
              "When an agreement is cancelled",
              "When an agreement is rejected by a participant",
              "When an agreement expires"
            ],
            "title": "Events",
            "x-ms-visibility": "important"
          },
          "x-ms-visibility": "important"
        },
        "webhookConditionalParams": {
          "$ref": "#/definitions/WebhookConditionalParamsForAgreementStatusChange"
        }
      }
    },
    "WebhookConditionalParamsForAgreementSignedEvent": {
      "type": "object",
      "description": "Conditional parameter for data in payload",
      "properties": {
        "webhookAgreementEvents": {
          "$ref": "#/definitions/WebhookAgreementEventsForSignedEvent"
        }
      },
      "required": [
        "webhookAgreementEvents"
      ]
    },
    "WebhookCreationInfoGeneric": {
      "type": "object",
      "required": [
        "state",
        "scope",
        "name",
        "webhookUrlInfo",
        "webhookSubscriptionEvents"
      ],
      "properties": {
        "state": {
          "description": "The default state of webhook",
          "type": "string",
          "title": "State",
          "default": "ACTIVE",
          "x-ms-visibility": "internal"
        },
        "webhookUrlInfo": {
          "$ref": "#/definitions/WebhookUrlInfo"
        },
        "name": {
          "description": "The name of the trigger",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "scope": {
          "description": "The scope of the trigger",
          "type": "string",
          "title": "Scope",
          "x-ms-visibility": "important",
          "enum": [
            "Any resource in my account",
            "Any resource in my group",
            "Any of my resource",
            "A specific resource"
          ]
        },
        "resourceType": {
          "description": "Specify only when \"Scope\" is \"A specific resource\". Select the resource type for which the flow should be triggered.",
          "type": "string",
          "title": "Resource Type",
          "x-ms-visibility": "important",
          "enum": [
            "Agreement",
            "Mega Sign",
            "Web Form"
          ]
        },
        "resourceId": {
          "type": "string",
          "description": "Specify only when \"Scope\" is \"A specific resource\". Enter the agreement or mega sign or web form ID for which the flow should be triggered.",
          "x-ms-visibility": "important",
          "title": "Resource ID"
        },
        "webhookSubscriptionEvents": {
          "description": "The events for which the flow should be triggered",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "When any agreement event occurs",
              "When an agreement is created",
              "When an agreement is sent",
              "When a participant completes their action",
              "When an agreement workflow is completed successfully",
              "When an agreement expires",
              "When an agreement is deleted",
              "When an agreement is cancelled",
              "When an agreement is rejected by a participant",
              "When an agreement is shared",
              "When an agreement is delegated",
              "When an agreement participant is replaced",
              "When an agreement is modified",
              "When an agreement modification is acknowledged",
              "When an agreement email is viewed by a participant",
              "When an agreement email gets bounced",
              "When an agreement creation fails",
              "When an offline agreement is synced",
              "When an agreement is uploaded by sender",
              "When an agreement is vaulted",
              "When an agreement participant is authenticated through social identity",
              "When an agreement participant is authenticated through KBA",
              "When any mega sign event occurs",
              "When a mega sign is created",
              "When a mega sign is shared",
              "When a mega sign is recalled",
              "When any web form event occurs",
              "When a web form is created",
              "When a web form is enabled",
              "When a web form is disabled",
              "When a web form is modified",
              "When a web form is shared",
              "When a web form creation fails"
            ],
            "title": "Events",
            "x-ms-visibility": "important"
          },
          "x-ms-visibility": "important"
        },
        "webhookConditionalParams": {
          "$ref": "#/definitions/WebhookConditionalParamsGeneric"
        }
      }
    },
    "WebhookConditionalParamsForAgreementStatusChange": {
      "type": "object",
      "description": "Conditional parameter for data in payload",
      "properties": {
        "webhookAgreementEvents": {
          "$ref": "#/definitions/WebhookAgreementEventsForStatusChange"
        }
      },
      "required": [
        "webhookAgreementEvents"
      ]
    },
    "WebhookConditionalParams": {
      "type": "object",
      "description": "Conditional parameter for optional data in payload",
      "properties": {
        "webhookAgreementEvents": {
          "$ref": "#/definitions/WebhookAgreementEvents"
        }
      }
    },
    "WebhookConditionalParamsForAgreementCreatedEvent": {
      "type": "object",
      "description": "Conditional parameter for optional data in payload",
      "properties": {
        "webhookAgreementEvents": {
          "$ref": "#/definitions/WebhookAgreementEventsForAgreementCreatedEvent"
        }
      }
    },
    "WebhookConditionalParamsGeneric": {
      "type": "object",
      "description": "Conditional parameter for optional data in payload",
      "properties": {
        "webhookAgreementEvents": {
          "$ref": "#/definitions/WebhookAgreementEventsGeneric"
        },
        "webhookMegaSignEvents": {
          "$ref": "#/definitions/WebhookMegaSignEventsGeneric"
        },
        "webhookWidgetEvents": {
          "$ref": "#/definitions/WebhookWidgetEventsGeneric"
        }
      }
    },
    "WebhookAgreementEventsForStatusChange": {
      "type": "object",
      "description": "Conditional parameters for agreement related events",
      "properties": {
        "includeDetailedInfo": {
          "description": "Should detailed agreement info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Info?",
          "x-ms-visibility": "advanced",
          "default": false
        },
        "includeParticipantsInfo": {
          "description": "Should agreement participant info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Participant Info?",
          "x-ms-visibility": "advanced",
          "default": false
        },
        "includeDocumentsInfo": {
          "description": "Should agreement document info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Document Info?",
          "x-ms-visibility": "advanced",
          "default": false
        },
        "includeSignedDocuments": {
          "description": "Should a final copy of signed document be sent in notification of agreement completion?",
          "type": "boolean",
          "title": "Include Agreement Signed Document Info?",
          "x-ms-visibility": "advanced",
          "default": false
        }
      }
    },
    "WebhookAgreementEventsForSignedEvent": {
      "type": "object",
      "description": "Conditional parameters for agreement related events",
      "properties": {
        "includeDetailedInfo": {
          "description": "Should detailed agreement info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Info?",
          "x-ms-visibility": "advanced",
          "default": false
        },
        "includeParticipantsInfo": {
          "description": "Should agreement participant info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Participant Info?",
          "x-ms-visibility": "advanced",
          "default": false
        },
        "includeDocumentsInfo": {
          "description": "Should agreement document info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Document Info?",
          "x-ms-visibility": "advanced",
          "default": false
        },
        "includeSignedDocuments": {
          "description": "Should a final copy of signed document on agreement completion be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Signed Document Info?",
          "x-ms-visibility": "advanced",
          "default": false
        }
      }
    },
    "WebhookUrlInfo": {
      "type": "object",
      "required": [
        "url"
      ],
      "description": "Webhook URL",
      "properties": {
        "url": {
          "description": "The url on which you want to create the webhook",
          "type": "string",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      }
    },
    "WebhookAgreementEvents": {
      "type": "object",
      "description": "Conditional parameters for agreement related events",
      "properties": {
        "includeDetailedInfo": {
          "description": "Should detailed agreement info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Info?",
          "x-ms-visibility": "advanced",
          "default": false
        },
        "includeParticipantsInfo": {
          "description": "Should agreement participant info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Participant Info?",
          "x-ms-visibility": "advanced",
          "default": false
        },
        "includeDocumentsInfo": {
          "description": "Should agreement document info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Document Info?",
          "x-ms-visibility": "advanced",
          "default": false
        }
      }
    },
    "WebhookAgreementEventsForAgreementCreatedEvent": {
      "type": "object",
      "description": "Conditional parameters for agreement related events",
      "properties": {
        "includeDetailedInfo": {
          "description": "Should detailed agreement info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Info?",
          "x-ms-visibility": "advanced",
          "default": false
        },
        "includeParticipantsInfo": {
          "description": "Should agreement participant info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Participant Info?",
          "x-ms-visibility": "advanced",
          "default": false
        }
      }
    },
    "WebhookAgreementEventsGeneric": {
      "type": "object",
      "description": "Conditional parameters for agreement related events",
      "properties": {
        "includeDetailedInfo": {
          "description": "Should detailed agreement info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Info?",
          "x-ms-visibility": "advanced"
        },
        "includeParticipantsInfo": {
          "description": "Should agreement participant info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Participant Info?",
          "x-ms-visibility": "advanced"
        },
        "includeDocumentsInfo": {
          "description": "Should agreement document info be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Document Info?",
          "x-ms-visibility": "advanced"
        },
        "includeSignedDocuments": {
          "description": "Should a final copy of signed document on agreement completion be sent in notification?",
          "type": "boolean",
          "title": "Include Agreement Signed Document Info?",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "WebhookWidgetEventsGeneric": {
      "type": "object",
      "description": "Conditional parameters for web form related events",
      "properties": {
        "includeDetailedInfo": {
          "description": "Should detailed web form info be sent in notification?",
          "type": "boolean",
          "title": "Include Web Form Info?",
          "x-ms-visibility": "advanced"
        },
        "includeParticipantsInfo": {
          "description": "Should web form participant info be sent in notification?",
          "type": "boolean",
          "title": "Include Web Form Participant Info?",
          "x-ms-visibility": "advanced"
        },
        "includeDocumentsInfo": {
          "description": "Should web form document info be sent in notification?",
          "type": "boolean",
          "title": "Include Web Form Documents Info?",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "WebhookMegaSignEventsGeneric": {
      "type": "object",
      "description": "Conditional parameters for mega sign related events",
      "properties": {
        "includeDetailedInfo": {
          "description": "Should detailed mega sign info be sent in notification?",
          "type": "boolean",
          "title": "Include MegaSign Info?",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "WebhookCreationResponse": {
      "type": "object",
      "description": "A JSON that contains the ID of the newly created webhook",
      "properties": {
        "webhookId": {
          "description": "The unique ID of the webhook",
          "type": "string",
          "title": "Webhook ID"
        }
      },
      "required": [
        "webhookId"
      ]
    },
    "WebhookPayload": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "description": "The event that has occured on the resource.",
          "title": "Event",
          "x-ms-visibility": "important"
        },
        "eventDate": {
          "title": "Event Date",
          "x-ms-visibility": "advanced",
          "description": "The date of the event. Format would be yyyy-MM-dd'T'HH:mm:ssZ. For example, e.g 2016-02-25T18:46:19Z represents UTC time",
          "type": "string",
          "format": "date"
        },
        "eventResourceType": {
          "type": "string",
          "description": "The resource on which the event has occured.",
          "title": "Event Resource Type",
          "x-ms-visibility": "advanced"
        },
        "eventResourceParentType": {
          "title": "Agreement Parent Type",
          "x-ms-visibility": "advanced",
          "description": "Information about the resource from which agreement is created. Possible values: Web Form or Mega Sign",
          "type": "string"
        },
        "eventResourceParentId": {
          "title": "Agreement Parent ID",
          "x-ms-visibility": "advanced",
          "description": "A Unique ID of the resource from which this agreement is created",
          "type": "string"
        },
        "participantRole": {
          "type": "string",
          "description": "The Role of the participant for the event.",
          "title": "Event Participant Role",
          "x-ms-visibility": "important"
        },
        "participantUserId": {
          "type": "string",
          "description": "The ID of the participant for the event.",
          "title": "Event Participant Id",
          "x-ms-visibility": "important"
        },
        "participantUserEmail": {
          "type": "string",
          "description": "The email of the participant for the event.",
          "title": "Event Participant Email",
          "x-ms-visibility": "important"
        },
        "actingUserId": {
          "type": "string",
          "description": "The ID of the user that created the event.",
          "title": "Event Acting User ID",
          "x-ms-visibility": "important"
        },
        "actingUserEmail": {
          "type": "string",
          "description": "The email of the user that created the event.",
          "title": "Event Acting User Email",
          "x-ms-visibility": "important"
        },
        "actingUserIpAddress": {
          "title": "Event Acting User IP Address",
          "x-ms-visibility": "advanced",
          "description": "The IP address of the user who created the event",
          "type": "string"
        },
        "initiatingUserId": {
          "type": "string",
          "description": "The ID of the user that initiated the event on behalf of acting user.",
          "title": "Event Initiating User ID",
          "x-ms-visibility": "advanced"
        },
        "initiatingUserEmail": {
          "type": "string",
          "description": "The email of the user that initiated the event on behalf of acting user.",
          "title": "Event Initiating User Email",
          "x-ms-visibility": "advanced"
        },
        "webhookNotificationApplicableUsers": {
          "description": "A list of users for whom this notification is applicable",
          "items": {
            "$ref": "#/definitions/ApplicableUsers"
          },
          "type": "array",
          "title": "Notification Applicable Users",
          "x-ms-visibility": "important"
        },
        "agreement": {
          "$ref": "#/definitions/WebhookAgreementInfo"
        }
      }
    },
    "ApplicableUsers": {
      "type": "object",
      "description": "The information about the users for whom this notification is applicable",
      "properties": {
        "id": {
          "description": "The unique ID of the user for whom this notification is applicable",
          "type": "string",
          "title": "Notification Applicable User ID",
          "x-ms-visibility": "important"
        },
        "email": {
          "description": "The email of the user for whom this notification is applicable",
          "type": "string",
          "x-ms-summary": "Notification Applicable User Email",
          "x-ms-visibility": "important"
        },
        "role": {
          "description": "The role of the user in the workflow for whom this notification is generated",
          "type": "string",
          "x-ms-summary": "Notification Applicable User Role",
          "x-ms-visibility": "important",
          "enum": [
            "SENDER",
            "SIGNER",
            "APPROVER",
            "FORM_FILLER",
            "ACCEPTOR",
            "CERTIFIED_RECIPIENT",
            "DELEGATE_TO_SIGNER",
            "DELEGATE_TO_APPROVER",
            "DELEGATE_TO_FORM_FILLER",
            "DELEGATE_TO_ACCEPTOR",
            "DELEGATE_TO_CERTIFIED_RECIPIENT",
            "RESOURCE_SHARE"
          ]
        },
        "payloadApplicable": {
          "description": "Whether the data provided in this notification is applicable for this user or not",
          "type": "boolean",
          "x-ms-summary": "Is Payload Applicable User",
          "x-ms-visibility": "important"
        }
      }
    },
    "WebhookPayloadWithoutNextParticipantSet": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "description": "The event that has occured on the resource.",
          "title": "Event",
          "x-ms-visibility": "important"
        },
        "eventDate": {
          "title": "Event Date",
          "x-ms-visibility": "advanced",
          "description": "The date of the event. Format would be yyyy-MM-dd'T'HH:mm:ssZ. For example, e.g 2016-02-25T18:46:19Z represents UTC time",
          "type": "string",
          "format": "date"
        },
        "eventResourceType": {
          "type": "string",
          "description": "The resource on which the event has occured.",
          "title": "Event Resource Type",
          "x-ms-visibility": "advanced"
        },
        "eventResourceParentType": {
          "title": "Agreement Parent Type",
          "x-ms-visibility": "advanced",
          "description": "Information about the resource from which agreement is created. Possible values: Web Form or Mega Sign",
          "type": "string"
        },
        "eventResourceParentId": {
          "title": "Agreement Parent ID",
          "x-ms-visibility": "advanced",
          "description": "A Unique ID of the resource from which this agreement is created",
          "type": "string"
        },
        "participantUserId": {
          "type": "string",
          "description": "The ID of the participant for the event.",
          "title": "Event Participant Id",
          "x-ms-visibility": "important"
        },
        "participantUserEmail": {
          "type": "string",
          "description": "The email of the participant for the event.",
          "title": "Event Participant Email",
          "x-ms-visibility": "important"
        },
        "actingUserId": {
          "type": "string",
          "description": "The ID of the user that created the event.",
          "title": "Event Acting User ID",
          "x-ms-visibility": "important"
        },
        "actingUserEmail": {
          "type": "string",
          "description": "The email of the user that created the event.",
          "title": "Event Acting User Email",
          "x-ms-visibility": "important"
        },
        "actingUserIpAddress": {
          "title": "Event Acting User IP Address",
          "x-ms-visibility": "advanced",
          "description": "The IP address of the user who created the event",
          "type": "string"
        },
        "initiatingUserId": {
          "type": "string",
          "description": "The ID of the user that initiated the event on behalf of acting user",
          "title": "Event Initiating User ID",
          "x-ms-visibility": "advanced"
        },
        "initiatingUserEmail": {
          "type": "string",
          "description": "The email of the user that initiated the event on behalf of acting user.",
          "title": "Event Initiating User Email",
          "x-ms-visibility": "advanced"
        },
        "webhookNotificationApplicableUsers": {
          "description": "A list of users for whom this notification is applicable",
          "items": {
            "$ref": "#/definitions/ApplicableUsers"
          },
          "type": "array",
          "title": "Notification Applicable Users",
          "x-ms-visibility": "important"
        },
        "agreement": {
          "$ref": "#/definitions/WebhookAgreementInfoWithoutNextParticipantSet"
        }
      }
    },
    "WebhookPayloadWithSignedDocumentForStatusChange": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "description": "The event that has occured on the resource.",
          "title": "Event",
          "x-ms-visibility": "important"
        },
        "eventDate": {
          "title": "Event Date",
          "x-ms-visibility": "advanced",
          "description": "The date of the event. Format would be yyyy-MM-dd'T'HH:mm:ssZ. For example, e.g 2016-02-25T18:46:19Z represents UTC time",
          "type": "string",
          "format": "date"
        },
        "subEvent": {
          "type": "string",
          "description": "The sub event that has occured on a resource.",
          "title": "Sub Event",
          "x-ms-visibility": "advanced"
        },
        "eventResourceParentType": {
          "title": "Agreement Parent Type",
          "x-ms-visibility": "advanced",
          "description": "Information about the resource from which agreement is created. Possible values: Web Form or Mega Sign",
          "type": "string"
        },
        "eventResourceParentId": {
          "title": "Agreement Parent ID",
          "x-ms-visibility": "advanced",
          "description": "A Unique ID of the resource from which this agreement is created",
          "type": "string"
        },
        "participantUserId": {
          "type": "string",
          "description": "The ID of the participant for the event.",
          "title": "Event Participant Id",
          "x-ms-visibility": "important"
        },
        "participantUserEmail": {
          "type": "string",
          "description": "The email of the participant for the event.",
          "title": "Event Participant Email",
          "x-ms-visibility": "important"
        },
        "actingUserId": {
          "type": "string",
          "description": "The ID of the user that created the event.",
          "title": "Event Acting User ID",
          "x-ms-visibility": "important"
        },
        "actingUserEmail": {
          "type": "string",
          "description": "The email of the user that created the event.",
          "title": "Event Acting User Email",
          "x-ms-visibility": "important"
        },
        "actingUserIpAddress": {
          "title": "Event Acting User IP Address",
          "x-ms-visibility": "advanced",
          "description": "The IP address of the user who created the event",
          "type": "string"
        },
        "actionType": {
          "type": "string",
          "description": "The action for which the event has occurred.",
          "title": "Action Type",
          "x-ms-visibility": "advanced"
        },
        "initiatingUserId": {
          "type": "string",
          "description": "The ID of the user that initiated the event on behalf of acting user",
          "title": "Event Initiating User ID",
          "x-ms-visibility": "advanced"
        },
        "initiatingUserEmail": {
          "type": "string",
          "description": "The email of the user that initiated the event on behalf of acting user.",
          "title": "Event Initiating User Email",
          "x-ms-visibility": "advanced"
        },
        "eventResourceType": {
          "type": "string",
          "description": "The resource on which the event has occured.",
          "title": "Event Resource Type",
          "x-ms-visibility": "advanced"
        },
        "participantRole": {
          "type": "string",
          "description": "The Role of the participant for the event.",
          "title": "Event Participant Role",
          "x-ms-visibility": "important"
        },
        "webhookNotificationApplicableUsers": {
          "description": "A list of users for whom this notification is applicable",
          "items": {
            "$ref": "#/definitions/ApplicableUsers"
          },
          "type": "array",
          "title": "Notification Applicable Users",
          "x-ms-visibility": "important"
        },
        "agreement": {
          "$ref": "#/definitions/WebhookAgreementInfoWithSignedDocument"
        }
      }
    },
    "WebhookPayloadWithSignedDocument": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "description": "The event that has occured on the resource.",
          "title": "Event",
          "x-ms-visibility": "important"
        },
        "eventDate": {
          "title": "Event Date",
          "x-ms-visibility": "advanced",
          "description": "The date of the event. Format would be yyyy-MM-dd'T'HH:mm:ssZ. For example, e.g 2016-02-25T18:46:19Z represents UTC time",
          "type": "string",
          "format": "date"
        },
        "eventResourceParentType": {
          "title": "Agreement Parent Type",
          "x-ms-visibility": "advanced",
          "description": "Information about the resource from which agreement is created. Possible values: Web Form or Mega Sign",
          "type": "string"
        },
        "eventResourceParentId": {
          "title": "Agreement Parent ID",
          "x-ms-visibility": "advanced",
          "description": "A Unique ID of the resource from which this agreement is created",
          "type": "string"
        },
        "eventResourceType": {
          "type": "string",
          "description": "The resource on which the event has occured.",
          "title": "Event Resource Type",
          "x-ms-visibility": "advanced"
        },
        "participantRole": {
          "type": "string",
          "description": "The Role of the participant for the event.",
          "title": "Event Participant Role",
          "x-ms-visibility": "important"
        },
        "participantUserId": {
          "type": "string",
          "description": "The ID of the participant for the event.",
          "title": "Event Participant Id",
          "x-ms-visibility": "important"
        },
        "participantUserEmail": {
          "type": "string",
          "description": "The email of the participant for the event.",
          "title": "Event Participant Email",
          "x-ms-visibility": "important"
        },
        "actingUserId": {
          "type": "string",
          "description": "The ID of the user that created the event.",
          "title": "Event Acting User ID",
          "x-ms-visibility": "important"
        },
        "actingUserEmail": {
          "type": "string",
          "description": "The email of the user that created the event.",
          "title": "Event Acting User Email",
          "x-ms-visibility": "important"
        },
        "actingUserIpAddress": {
          "title": "Event Acting User IP Address",
          "x-ms-visibility": "advanced",
          "description": "The IP address of the user who created the event",
          "type": "string"
        },
        "initiatingUserId": {
          "type": "string",
          "description": "The ID of the user that initiated the event on behalf of acting user",
          "title": "Event Initiating User ID",
          "x-ms-visibility": "advanced"
        },
        "initiatingUserEmail": {
          "type": "string",
          "description": "The email of the user that initiated the event on behalf of acting user.",
          "title": "Event Initiating User Email",
          "x-ms-visibility": "advanced"
        },
        "webhookNotificationApplicableUsers": {
          "description": "A list of users for whom this notification is applicable",
          "items": {
            "$ref": "#/definitions/ApplicableUsers"
          },
          "type": "array",
          "title": "Notification Applicable Users",
          "x-ms-visibility": "important"
        },
        "agreement": {
          "$ref": "#/definitions/WebhookAgreementInfoWithSignedDocument"
        }
      }
    },
    "WebhookPayloadGeneric": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "description": "The event that has occured on the resource.",
          "title": "Event",
          "x-ms-visibility": "important"
        },
        "eventDate": {
          "title": "Event Date",
          "x-ms-visibility": "advanced",
          "description": "The date of the event. Format would be yyyy-MM-dd'T'HH:mm:ssZ. For example, e.g 2016-02-25T18:46:19Z represents UTC time",
          "type": "string",
          "format": "date"
        },
        "subEvent": {
          "type": "string",
          "description": "The sub event that has occured on a resource.",
          "title": "Sub Event",
          "x-ms-visibility": "advanced"
        },
        "eventResourceParentType": {
          "title": "Agreement Parent Type",
          "x-ms-visibility": "advanced",
          "description": "Information about the resource from which agreement is created. Possible values: Web Form or Mega Sign",
          "type": "string"
        },
        "eventResourceParentId": {
          "title": "Agreement Parent ID",
          "x-ms-visibility": "advanced",
          "description": "A Unique ID of the resource from which this agreement is created",
          "type": "string"
        },
        "eventResourceType": {
          "type": "string",
          "description": "The resource on which the event has occured.",
          "title": "Event Resource Type",
          "x-ms-visibility": "advanced"
        },
        "participantRole": {
          "type": "string",
          "description": "The Role of the participant for the event.",
          "title": "Event Participant Role",
          "x-ms-visibility": "important"
        },
        "participantUserId": {
          "type": "string",
          "description": "The ID of the participant for the event.",
          "title": "Event Participant Id",
          "x-ms-visibility": "important"
        },
        "participantUserEmail": {
          "type": "string",
          "description": "The email of the participant for the event.",
          "title": "Event Participant Email",
          "x-ms-visibility": "important"
        },
        "actingUserId": {
          "type": "string",
          "description": "The ID of the user that created the event.",
          "title": "Event Acting User ID",
          "x-ms-visibility": "important"
        },
        "actingUserEmail": {
          "type": "string",
          "description": "The email of the user that created the event.",
          "title": "Event Acting User Email",
          "x-ms-visibility": "important"
        },
        "initiatingUserId": {
          "type": "string",
          "description": "The ID of the user that initiated the event on behalf of acting user",
          "title": "Event Initiating User ID",
          "x-ms-visibility": "advanced"
        },
        "initiatingUserEmail": {
          "type": "string",
          "description": "The email of the user that initiated the event on behalf of acting user.",
          "title": "Event Initiating User Email",
          "x-ms-visibility": "advanced"
        },
        "actionType": {
          "type": "string",
          "description": "The action for which the event has occurred.",
          "title": "Action Type",
          "x-ms-visibility": "advanced"
        },
        "actingUserIpAddress": {
          "title": "Event Acting User IP Address",
          "x-ms-visibility": "advanced",
          "description": "The IP address of the user who created the event",
          "type": "string"
        },
        "webhookNotificationApplicableUsers": {
          "description": "A list of users for whom this notification is applicable",
          "items": {
            "$ref": "#/definitions/ApplicableUsers"
          },
          "type": "array",
          "title": "Notification Applicable Users",
          "x-ms-visibility": "important"
        },
        "agreement": {
          "$ref": "#/definitions/WebhookAgreementInfoWithSignedDocumentAndNextParticipantInfo"
        },
        "megaSign": {
          "$ref": "#/definitions/WebhookMegaSignInfo"
        },
        "widget": {
          "$ref": "#/definitions/WebhookWidgetInfo"
        }
      }
    },
    "WebFormWebhookAgreementEventPayload": {
      "type": "object",
      "properties": {
        "event": {
          "type": "string",
          "description": "The agreement event that has occured on the web form.",
          "title": "Event",
          "x-ms-visibility": "important"
        },
        "eventDate": {
          "title": "Event Date",
          "x-ms-visibility": "advanced",
          "description": "The date of the event. Format would be yyyy-MM-dd'T'HH:mm:ssZ. For example, e.g 2016-02-25T18:46:19Z represents UTC time",
          "type": "string",
          "format": "date"
        },
        "subEvent": {
          "type": "string",
          "description": "The sub event that has occured on a web form.",
          "title": "Sub Event",
          "x-ms-visibility": "advanced"
        },
        "eventResourceParentType": {
          "title": "Agreement Parent Type - Web Form",
          "x-ms-visibility": "advanced",
          "description": "Value that indicates an agreement is created from web form.",
          "type": "string"
        },
        "eventResourceParentId": {
          "title": "Web Form ID",
          "x-ms-visibility": "advanced",
          "description": "A unique ID of the web form from which this agreement is created",
          "type": "string"
        },
        "eventResourceType": {
          "type": "string",
          "description": "The resource on which the event has occured.",
          "title": "Event Resource Type - Agreement",
          "x-ms-visibility": "advanced"
        },
        "participantRole": {
          "type": "string",
          "description": "The Role of the participant for the event.",
          "title": "Event Participant Role",
          "x-ms-visibility": "important"
        },
        "participantUserId": {
          "type": "string",
          "description": "The ID of the participant for the event.",
          "title": "Event Participant Id",
          "x-ms-visibility": "important"
        },
        "participantUserEmail": {
          "type": "string",
          "description": "The email of the participant for the event.",
          "title": "Event Participant Email",
          "x-ms-visibility": "important"
        },
        "actingUserId": {
          "type": "string",
          "description": "The ID of the user that created the event.",
          "title": "Event Acting User ID",
          "x-ms-visibility": "important"
        },
        "actingUserEmail": {
          "type": "string",
          "description": "The email of the user that created the event.",
          "title": "Event Acting User Email",
          "x-ms-visibility": "important"
        },
        "initiatingUserId": {
          "type": "string",
          "description": "The ID of the user that initiated the event on behalf of acting user",
          "title": "Event Initiating User ID",
          "x-ms-visibility": "advanced"
        },
        "initiatingUserEmail": {
          "type": "string",
          "description": "The email of the user that initiated the event on behalf of acting user.",
          "title": "Event Initiating User Email",
          "x-ms-visibility": "advanced"
        },
        "actionType": {
          "type": "string",
          "description": "The action for which the event has occurred.",
          "title": "Action Type",
          "x-ms-visibility": "advanced"
        },
        "actingUserIpAddress": {
          "title": "Event Acting User IP Address",
          "x-ms-visibility": "advanced",
          "description": "The IP address of the user who created the event",
          "type": "string"
        },
        "webhookNotificationApplicableUsers": {
          "description": "A list of users for whom this notification is applicable",
          "items": {
            "$ref": "#/definitions/ApplicableUsers"
          },
          "type": "array",
          "title": "Notification Applicable Users",
          "x-ms-visibility": "important"
        },
        "agreement": {
          "$ref": "#/definitions/WebhookAgreementInfoWithSignedDocumentAndNextParticipantInfo"
        }
      }
    },
    "WebhookAgreementInfo": {
      "type": "object",
      "title": "Agreement",
      "description": "The complete information of the agreement",
      "properties": {
        "id": {
          "description": "The unique ID of the agreement",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the agreement",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "signatureType": {
          "description": "Specifies the Signature type that was requested - E-signature or Written",
          "type": "string",
          "enum": [
            "ESIGN",
            "WRITTEN"
          ],
          "title": "Signature Type",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "The current status of the agreement",
          "type": "string",
          "enum": [
            "OUT_FOR_SIGNATURE",
            "OUT_FOR_DELIVERY",
            "OUT_FOR_ACCEPTANCE",
            "OUT_FOR_FORM_FILLING",
            "OUT_FOR_APPROVAL",
            "AUTHORING",
            "CANCELLED",
            "SIGNED",
            "APPROVED",
            "DELIVERED",
            "ACCEPTED",
            "FORM_FILLED",
            "EXPIRED",
            "ARCHIVED",
            "PREFILL",
            "WIDGET_WAITING_FOR_VERIFICATION",
            "DRAFT",
            "DOCUMENTS_NOT_YET_PROCESSED",
            "WAITING_FOR_FAXIN",
            "WAITING_FOR_VERIFICATION"
          ],
          "title": "Status",
          "x-ms-visibility": "important"
        },
        "ccs": {
          "description": "A list of one or more CCs that will be copied in the agreement transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CcInfo"
          },
          "title": "CCs",
          "x-ms-visibility": "advanced"
        },
        "createdDate": {
          "description": "Date when agreement was created",
          "format": "date",
          "type": "string",
          "title": "Creation Date",
          "x-ms-visibility": "important"
        },
        "expirationTime": {
          "description": "Time after which Agreement expires and needs to be signed before it",
          "type": "string",
          "title": "Expiration Time",
          "x-ms-visibility": "important"
        },
        "externalId": {
          "type": "object",
          "title": "External Info",
          "description": "The external information associated with the agreement.",
          "properties": {
            "id": {
              "description": "An arbitrary value from your system, which can be specified at sending time and then later returned or queried",
              "type": "string",
              "title": "External ID",
              "x-ms-visibility": "advanced"
            },
            "group": {
              "description": "An arbitrary value from your system, which can be specified at sending time and then later returned or queried",
              "type": "string",
              "title": "External Group",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "firstReminderDelay": {
          "description": "Integer which specifies the delay in hours before sending the first reminder.",
          "type": "integer",
          "title": "First Reminder Delay",
          "x-ms-visibility": "advanced"
        },
        "locale": {
          "description": "The locale associated with this agreement",
          "type": "string",
          "title": "Locale",
          "x-ms-visibility": "advanced"
        },
        "message": {
          "description": "An optional message to the participants, describing what is being sent or why their signature is required",
          "type": "string",
          "title": "Message",
          "x-ms-visibility": "advanced"
        },
        "reminderFrequency": {
          "description": "Optional parameter that sets how often you want to send reminders to the participants. If it is not specified, the default frequency set for the account will be used",
          "type": "string",
          "enum": [
            "DAILY_UNTIL_SIGNED",
            "WEEKLY_UNTIL_SIGNED"
          ],
          "title": "Reminder Frequency",
          "x-ms-visibility": "advanced"
        },
        "senderEmail": {
          "description": "Email of agreement sender",
          "type": "string",
          "title": "Sender Email",
          "x-ms-visibility": "important"
        },
        "vaultingInfo": {
          "type": "object",
          "description": "The vaulting information of the agreement",
          "title": "Vaulted",
          "properties": {
            "enabled": {
              "description": "For accounts set up for document vaulting and the option to enable per agreement, this determines whether the document is to be vaulted",
              "type": "boolean",
              "title": "Vaulting Enabled?",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "documentVisibilityEnabled": {
          "description": "Is document visibility enabled",
          "type": "boolean",
          "title": "Document Visibility?",
          "x-ms-visibility": "advanced"
        },
        "workflowId": {
          "description": "The ID of custom workflow which defines the routing path of an agreement.",
          "type": "string",
          "title": "Workflow ID",
          "x-ms-visibility": "advanced"
        },
        "postSignOption": {
          "type": "object",
          "description": "URL and associated properties for the success page the user will be taken to after completing the signing process.",
          "x-ms-summary": "Post Sign Option",
          "properties": {
            "redirectUrl": {
              "description": "A publicly accessible url to which the user will be sent after successfully completing the signing process",
              "type": "string",
              "title": "Post Sign Redirect Url",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "participantSetsInfo": {
          "type": "object",
          "title": "Participant Sets Info",
          "description": "Information about all the participant sets of the agreement",
          "properties": {
            "participantSets": {
              "description": "The participant sets info",
              "items": {
                "$ref": "#/definitions/WebhookParticipantSets"
              },
              "type": "array",
              "title": "Participant Sets",
              "x-ms-visibility": "important"
            },
            "nextParticipantSets": {
              "description": "The next participant sets info",
              "items": {
                "$ref": "#/definitions/WebhookParticipantSets"
              },
              "type": "array",
              "title": "Next Participant Sets",
              "x-ms-visibility": "important"
            }
          }
        },
        "documentsInfo": {
          "type": "object",
          "title": "Documents Info",
          "description": "The complete info of the document",
          "properties": {
            "documents": {
              "description": "A list of objects representing the documents",
              "items": {
                "$ref": "#/definitions/WebhookDocument"
              },
              "type": "array",
              "title": "Documents",
              "x-ms-visibility": "important"
            },
            "supportingDocuments": {
              "description": "A list of supporting documents",
              "items": {
                "$ref": "#/definitions/WebhookSupportingDocument"
              },
              "type": "array",
              "title": "Supporting Documents",
              "x-ms-visibility": "advanced"
            }
          },
          "required": [
            "documents"
          ]
        }
      }
    },
    "WebhookAgreementInfoWithoutNextParticipantSet": {
      "type": "object",
      "title": "Agreement",
      "description": "The complete information of the agreement",
      "properties": {
        "id": {
          "description": "The unique ID of the agreement",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the agreement",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "signatureType": {
          "description": "Specifies the Signature type that was requested - E-signature or Written",
          "type": "string",
          "enum": [
            "ESIGN",
            "WRITTEN"
          ],
          "title": "Signature Type",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "The current status of the agreement",
          "type": "string",
          "enum": [
            "OUT_FOR_SIGNATURE",
            "OUT_FOR_DELIVERY",
            "OUT_FOR_ACCEPTANCE",
            "OUT_FOR_FORM_FILLING",
            "OUT_FOR_APPROVAL",
            "AUTHORING",
            "CANCELLED",
            "SIGNED",
            "APPROVED",
            "DELIVERED",
            "ACCEPTED",
            "FORM_FILLED",
            "EXPIRED",
            "ARCHIVED",
            "PREFILL",
            "WIDGET_WAITING_FOR_VERIFICATION",
            "DRAFT",
            "DOCUMENTS_NOT_YET_PROCESSED",
            "WAITING_FOR_FAXIN",
            "WAITING_FOR_VERIFICATION"
          ],
          "title": "Status",
          "x-ms-visibility": "important"
        },
        "ccs": {
          "description": "A list of one or more CCs that will be copied in the agreement transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CcInfo"
          },
          "title": "CCs",
          "x-ms-visibility": "advanced"
        },
        "createdDate": {
          "description": "Date when agreement was created",
          "format": "date",
          "type": "string",
          "title": "Creation Date",
          "x-ms-visibility": "important"
        },
        "documentVisibilityEnabled": {
          "description": "Is document visibility enabled",
          "type": "boolean",
          "title": "Document Visibility?",
          "x-ms-visibility": "advanced"
        },
        "expirationTime": {
          "description": "Time after which Agreement expires and needs to be signed before it",
          "type": "string",
          "title": "Expiration Time",
          "x-ms-visibility": "important"
        },
        "externalId": {
          "type": "object",
          "title": "External Info",
          "description": "The external information associated with the agreement.",
          "properties": {
            "id": {
              "description": "An arbitrary value from your system, which can be specified at sending time and then later returned or queried",
              "type": "string",
              "title": "External ID",
              "x-ms-visibility": "advanced"
            },
            "group": {
              "description": "An arbitrary value from your system, which can be specified at sending time and then later returned or queried",
              "type": "string",
              "title": "External Group",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "firstReminderDelay": {
          "description": "Integer which specifies the delay in hours before sending the first reminder.",
          "type": "integer",
          "title": "First Reminder Delay",
          "x-ms-visibility": "advanced"
        },
        "locale": {
          "description": "The locale associated with this agreement",
          "type": "string",
          "title": "Locale",
          "x-ms-visibility": "advanced"
        },
        "message": {
          "description": "An optional message to the participants, describing what is being sent or why their signature is required",
          "type": "string",
          "title": "Message",
          "x-ms-visibility": "advanced"
        },
        "reminderFrequency": {
          "description": "Optional parameter that sets how often you want to send reminders to the participants. If it is not specified, the default frequency set for the account will be used",
          "type": "string",
          "enum": [
            "DAILY_UNTIL_SIGNED",
            "WEEKLY_UNTIL_SIGNED"
          ],
          "title": "Reminder Frequency",
          "x-ms-visibility": "advanced"
        },
        "senderEmail": {
          "description": "Email of agreement sender",
          "type": "string",
          "title": "Sender Email",
          "x-ms-visibility": "important"
        },
        "vaultingInfo": {
          "type": "object",
          "description": "The vaulting information of the agreement",
          "title": "Vaulted",
          "properties": {
            "enabled": {
              "description": "For accounts set up for document vaulting and the option to enable per agreement, this determines whether the document is to be vaulted",
              "type": "boolean",
              "title": "Vaulting Enabled?",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "postSignOption": {
          "type": "object",
          "description": "URL and associated properties for the success page the user will be taken to after completing the signing process.",
          "x-ms-summary": "Post Sign Option",
          "properties": {
            "redirectUrl": {
              "description": "A publicly accessible url to which the user will be sent after successfully completing the signing process",
              "type": "string",
              "title": "Post Sign Redirect Url",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "workflowId": {
          "description": "The ID of custom workflow which defines the routing path of an agreement.",
          "type": "string",
          "title": "Workflow ID",
          "x-ms-visibility": "advanced"
        },
        "participantSetsInfo": {
          "type": "object",
          "title": "Participant Sets Info",
          "description": "Information about all the participant sets of this document",
          "properties": {
            "participantSets": {
              "description": "The participant sets info",
              "items": {
                "$ref": "#/definitions/WebhookParticipantSets"
              },
              "type": "array",
              "title": "Participant Sets",
              "x-ms-visibility": "important"
            }
          }
        }
      }
    },
    "WebhookAgreementInfoWithSignedDocumentAndNextParticipantInfo": {
      "type": "object",
      "title": "Agreement",
      "description": "The complete information of the agreement",
      "properties": {
        "id": {
          "description": "The unique ID of the agreement",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the agreement",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "signatureType": {
          "description": "Specifies the Signature type that was requested - E-signature or Written",
          "type": "string",
          "enum": [
            "ESIGN",
            "WRITTEN"
          ],
          "title": "Signature Type",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "The current status of the agreement",
          "type": "string",
          "enum": [
            "OUT_FOR_SIGNATURE",
            "OUT_FOR_DELIVERY",
            "OUT_FOR_ACCEPTANCE",
            "OUT_FOR_FORM_FILLING",
            "OUT_FOR_APPROVAL",
            "AUTHORING",
            "CANCELLED",
            "SIGNED",
            "APPROVED",
            "DELIVERED",
            "ACCEPTED",
            "FORM_FILLED",
            "EXPIRED",
            "ARCHIVED",
            "PREFILL",
            "WIDGET_WAITING_FOR_VERIFICATION",
            "DRAFT",
            "DOCUMENTS_NOT_YET_PROCESSED",
            "WAITING_FOR_FAXIN",
            "WAITING_FOR_VERIFICATION"
          ],
          "title": "Status",
          "x-ms-visibility": "important"
        },
        "ccs": {
          "description": "A list of one or more CCs that will be copied in the agreement transaction.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CcInfo"
          },
          "title": "CCs",
          "x-ms-visibility": "advanced"
        },
        "createdDate": {
          "description": "Date when agreement was created",
          "format": "date",
          "type": "string",
          "title": "Creation Date",
          "x-ms-visibility": "important"
        },
        "expirationTime": {
          "description": "Time after which Agreement expires and needs to be signed before it",
          "type": "string",
          "title": "Expiration Time",
          "x-ms-visibility": "important"
        },
        "externalId": {
          "type": "object",
          "title": "External Info",
          "description": "The external information associated with the agreement.",
          "properties": {
            "id": {
              "description": "An arbitrary value from your system, which can be specified at sending time and then later returned or queried",
              "type": "string",
              "title": "External ID",
              "x-ms-visibility": "advanced"
            },
            "group": {
              "description": "An arbitrary value from your system, which can be specified at sending time and then later returned or queried",
              "type": "string",
              "title": "External Group",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "firstReminderDelay": {
          "description": "Integer which specifies the delay in hours before sending the first reminder.",
          "type": "integer",
          "title": "First Reminder Delay",
          "x-ms-visibility": "advanced"
        },
        "locale": {
          "description": "The locale associated with this agreement",
          "type": "string",
          "title": "Locale",
          "x-ms-visibility": "advanced"
        },
        "message": {
          "description": "An optional message to the participants, describing what is being sent or why their signature is required",
          "type": "string",
          "title": "Message",
          "x-ms-visibility": "advanced"
        },
        "reminderFrequency": {
          "description": "Optional parameter that sets how often you want to send reminders to the participants. If it is not specified, the default frequency set for the account will be used",
          "type": "string",
          "enum": [
            "DAILY_UNTIL_SIGNED",
            "WEEKLY_UNTIL_SIGNED"
          ],
          "title": "Reminder Frequency",
          "x-ms-visibility": "advanced"
        },
        "postSignOption": {
          "type": "object",
          "description": "URL and associated properties for the success page the user will be taken to after completing the signing process.",
          "x-ms-summary": "Post Sign Option",
          "properties": {
            "redirectUrl": {
              "description": "A publicly accessible url to which the user will be sent after successfully completing the signing process",
              "type": "string",
              "title": "Post Sign Redirect Url",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "workflowId": {
          "description": "The ID of custom workflow which defines the routing path of an agreement.",
          "type": "string",
          "title": "Workflow ID",
          "x-ms-visibility": "advanced"
        },
        "senderEmail": {
          "description": "Email of agreement sender",
          "type": "string",
          "title": "Sender Email",
          "x-ms-visibility": "important"
        },
        "documentVisibilityEnabled": {
          "description": "Is document visibility enabled",
          "type": "boolean",
          "title": "Document Visibility?",
          "x-ms-visibility": "advanced"
        },
        "vaultingInfo": {
          "type": "object",
          "description": "The vaulting information of the agreement",
          "title": "Vaulted",
          "properties": {
            "enabled": {
              "description": "For accounts set up for document vaulting and the option to enable per agreement, this determines whether the document is to be vaulted",
              "type": "boolean",
              "title": "Vaulting Enabled?",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "participantSetsInfo": {
          "type": "object",
          "title": "Participant Sets Info",
          "description": "Information about all the participant sets of this document",
          "properties": {
            "participantSets": {
              "description": "The participant sets info",
              "items": {
                "$ref": "#/definitions/WebhookParticipantSets"
              },
              "type": "array",
              "title": "Participant Sets",
              "x-ms-visibility": "important"
            },
            "nextParticipantSets": {
              "description": "The next participant sets info",
              "items": {
                "$ref": "#/definitions/WebhookParticipantSets"
              },
              "type": "array",
              "title": "Next Participant Sets",
              "x-ms-visibility": "important"
            }
          }
        },
        "documentsInfo": {
          "type": "object",
          "title": "Documents Info",
          "description": "The complete info of the document",
          "properties": {
            "documents": {
              "description": "A list of objects representing the documents",
              "items": {
                "$ref": "#/definitions/WebhookDocument"
              },
              "type": "array",
              "title": "Documents",
              "x-ms-visibility": "important"
            },
            "supportingDocuments": {
              "description": "A list of supporting documents This is returned only if there are any supporting document in the agreement",
              "items": {
                "$ref": "#/definitions/WebhookSupportingDocument"
              },
              "type": "array",
              "title": "Supporting Documents",
              "x-ms-visibility": "advanced"
            }
          },
          "required": [
            "documents"
          ]
        },
        "signedDocumentInfo": {
          "type": "object",
          "description": "The information about the signed document info object",
          "x-ms-summary": "Signed Document",
          "properties": {
            "document": {
              "description": "A base64 encoded string of the signed document",
              "type": "string",
              "title": "Signed Document Info",
              "x-ms-visibility": "important"
            }
          }
        }
      }
    },
    "WebhookAgreementInfoWithSignedDocument": {
      "type": "object",
      "title": "Agreement",
      "description": "The complete information of the agreement",
      "properties": {
        "id": {
          "description": "The unique ID of the agreement",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the agreement",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "signatureType": {
          "description": "Specifies the Signature type that was requested - E-signature or Written",
          "type": "string",
          "enum": [
            "ESIGN",
            "WRITTEN"
          ],
          "title": "Signature Type",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "The current status of the agreement",
          "type": "string",
          "enum": [
            "OUT_FOR_SIGNATURE",
            "OUT_FOR_DELIVERY",
            "OUT_FOR_ACCEPTANCE",
            "OUT_FOR_FORM_FILLING",
            "OUT_FOR_APPROVAL",
            "AUTHORING",
            "CANCELLED",
            "SIGNED",
            "APPROVED",
            "DELIVERED",
            "ACCEPTED",
            "FORM_FILLED",
            "EXPIRED",
            "ARCHIVED",
            "PREFILL",
            "WIDGET_WAITING_FOR_VERIFICATION",
            "DRAFT",
            "DOCUMENTS_NOT_YET_PROCESSED",
            "WAITING_FOR_FAXIN",
            "WAITING_FOR_VERIFICATION"
          ],
          "title": "Status",
          "x-ms-visibility": "important"
        },
        "ccs": {
          "description": "A list of one or more CCs that will be copied in the agreement transaction",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CcInfo"
          },
          "title": "CCs",
          "x-ms-visibility": "advanced"
        },
        "createdDate": {
          "description": "Date when agreement was created",
          "format": "date",
          "type": "string",
          "title": "Creation Date",
          "x-ms-visibility": "important"
        },
        "documentVisibilityEnabled": {
          "description": "Is document visibility enabled",
          "type": "boolean",
          "title": "Document Visibility?",
          "x-ms-visibility": "advanced"
        },
        "expirationTime": {
          "description": "Time after which Agreement expires and needs to be signed before it",
          "type": "string",
          "title": "Expiration Time",
          "x-ms-visibility": "important"
        },
        "externalId": {
          "type": "object",
          "title": "External Info",
          "description": "The external information associated with the agreement.",
          "properties": {
            "id": {
              "description": "An arbitrary value from your system, which can be specified at sending time and then later returned or queried",
              "type": "string",
              "title": "External ID",
              "x-ms-visibility": "advanced"
            },
            "group": {
              "description": "An arbitrary value from your system, which can be specified at sending time and then later returned or queried",
              "type": "string",
              "title": "External Group",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "firstReminderDelay": {
          "description": "Integer which specifies the delay in hours before sending the first reminder.",
          "type": "integer",
          "title": "First Reminder Delay",
          "x-ms-visibility": "advanced"
        },
        "locale": {
          "description": "The locale associated with this agreement",
          "type": "string",
          "title": "Locale",
          "x-ms-visibility": "advanced"
        },
        "message": {
          "description": "An optional message to the participants, describing what is being sent or why their signature is required",
          "type": "string",
          "title": "Message",
          "x-ms-visibility": "advanced"
        },
        "reminderFrequency": {
          "description": "Optional parameter that sets how often you want to send reminders to the participants. If it is not specified, the default frequency set for the account will be used",
          "type": "string",
          "enum": [
            "DAILY_UNTIL_SIGNED",
            "WEEKLY_UNTIL_SIGNED",
            "EVERY_FIFTH_DAY_UNTIL_SIGNED",
            "EVERY_THIRD_DAY_UNTIL_SIGNED"
          ],
          "title": "Reminder Frequency",
          "x-ms-visibility": "advanced"
        },
        "senderEmail": {
          "description": "Email of agreement sender",
          "type": "string",
          "title": "Sender Email",
          "x-ms-visibility": "important"
        },
        "vaultingInfo": {
          "type": "object",
          "description": "The vaulting information of the agreement",
          "title": "Vaulted",
          "properties": {
            "enabled": {
              "description": "For accounts set up for document vaulting and the option to enable per agreement, this determines whether the document is to be vaulted",
              "type": "boolean",
              "title": "Vaulting Enabled?",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "postSignOption": {
          "type": "object",
          "description": "URL and associated properties for the success page the user will be taken to after completing the signing process.",
          "x-ms-summary": "Post Sign Option",
          "properties": {
            "redirectUrl": {
              "description": "A publicly accessible url to which the user will be sent after successfully completing the signing process",
              "type": "string",
              "title": "Post Sign Redirect Url",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "workflowId": {
          "description": "The ID of custom workflow which defines the routing path of an agreement.",
          "type": "string",
          "title": "Workflow ID",
          "x-ms-visibility": "advanced"
        },
        "participantSetsInfo": {
          "type": "object",
          "title": "Participant Sets Info",
          "description": "Information about all the participant sets of this document",
          "properties": {
            "participantSets": {
              "description": "The participant sets info",
              "items": {
                "$ref": "#/definitions/WebhookParticipantSets"
              },
              "type": "array",
              "title": "Participant Sets",
              "x-ms-visibility": "important"
            }
          }
        },
        "documentsInfo": {
          "type": "object",
          "title": "Documents Info",
          "description": "The complete info of the document",
          "properties": {
            "documents": {
              "description": "A list of objects representing the documents",
              "items": {
                "$ref": "#/definitions/WebhookDocument"
              },
              "type": "array",
              "title": "Documents",
              "x-ms-visibility": "important"
            },
            "supportingDocuments": {
              "description": "A list of supporting documents This is returned only if there are any supporting document in the agreement",
              "items": {
                "$ref": "#/definitions/WebhookSupportingDocument"
              },
              "type": "array",
              "title": "Supporting Documents",
              "x-ms-visibility": "advanced"
            }
          },
          "required": [
            "documents"
          ]
        },
        "signedDocumentInfo": {
          "type": "object",
          "description": "The information about the signed document info object",
          "x-ms-summary": "Signed Document",
          "properties": {
            "document": {
              "description": "A base64 encoded string of the signed document",
              "type": "string",
              "title": "Signed Document Info",
              "x-ms-visibility": "important"
            }
          }
        }
      }
    },
    "WebhookMegaSignInfo": {
      "type": "object",
      "title": "Mega Sign",
      "description": "The complete information of the mega sign",
      "properties": {
        "id": {
          "description": "The unique ID of the megasign",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the megasign",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "status": {
          "description": "The status of the megasign",
          "type": "string",
          "enum": [
            "AUTHORING",
            "IN_PROCESS",
            "CANCELLED",
            "COMPLETED",
            "EXPIRED",
            "PREFILL"
          ],
          "title": "Status",
          "x-ms-visibility": "important"
        },
        "ccs": {
          "description": "A list of one or more email addresses that you want to copy on this megasign.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MegaSignCcInfo"
          },
          "title": "CCs",
          "x-ms-visibility": "advanced"
        },
        "externalId": {
          "type": "object",
          "title": "External Info",
          "description": "The external information associated with the agreement.",
          "properties": {
            "id": {
              "description": "An arbitrary value from your system, which can be specified at sending time and then later returned or queried",
              "type": "string",
              "title": "External ID",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "firstReminderDelay": {
          "description": "Integer which specifies the delay in hours before sending the first reminder.",
          "type": "integer",
          "title": "First Reminder Delay",
          "x-ms-visibility": "advanced"
        },
        "locale": {
          "description": "The locale associated with this agreement",
          "type": "string",
          "title": "Locale",
          "x-ms-visibility": "advanced"
        },
        "message": {
          "description": "An optional message to the participants, describing what is being sent or why their signature is required",
          "type": "string",
          "title": "Message",
          "x-ms-visibility": "advanced"
        },
        "postSignOption": {
          "type": "object",
          "description": "URL and associated properties for the success page the user will be taken to after completing the signing process.",
          "x-ms-summary": "Post Sign Option",
          "properties": {
            "redirectUrl": {
              "description": "A publicly accessible url to which the user will be sent after successfully completing the signing process",
              "type": "string",
              "title": "Post Sign Redirect Url",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "senderEmail": {
          "description": "Email of megasign creator",
          "type": "string",
          "title": "Sender Email",
          "x-ms-visibility": "important"
        },
        "signatureType": {
          "description": "Specifies the Signature type that was requested - E-signature or Written",
          "type": "string",
          "enum": [
            "ESIGN",
            "WRITTEN"
          ],
          "title": "Signature Type",
          "x-ms-visibility": "advanced"
        },
        "vaultingInfo": {
          "type": "object",
          "description": "The vaulting information of the agreement",
          "title": "Vaulted",
          "properties": {
            "enabled": {
              "description": "For accounts set up for document vaulting and the option to enable per agreement, this determines whether the document is to be vaulted",
              "type": "boolean",
              "title": "Vaulting Enabled?",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "childAgreementsInfo": {
          "type": "object",
          "title": "Child Agreements Info",
          "description": "The information about the child agreements of mega sign.",
          "properties": {
            "fileInfo": {
              "$ref": "#/definitions/MegaSignChildAgreementsFileInfo"
            }
          }
        }
      }
    },
    "WebhookWidgetInfo": {
      "type": "object",
      "title": "Web Form",
      "description": "The complete information of the web form",
      "properties": {
        "id": {
          "description": "The unique ID of the web form",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the web form",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "status": {
          "description": "The status of the web form",
          "type": "string",
          "enum": [
            "DRAFT",
            "AUTHORING",
            "ACTIVE",
            "DOCUMENTS_NOT_YET_PROCESSED",
            "DISABLED",
            "DISCARDED"
          ],
          "title": "Status",
          "x-ms-visibility": "important"
        },
        "authFailureInfo": {
          "$ref": "#/definitions/AuthFailureWidgetRedirectionInfo"
        },
        "ccs": {
          "description": "A list of one or more email addresses that you want to copy on this web form.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WidgetCcInfo"
          },
          "title": "CCs",
          "x-ms-visibility": "advanced"
        },
        "createdDate": {
          "description": "Date when web form was created",
          "format": "date",
          "type": "string",
          "title": "Creation Date",
          "x-ms-visibility": "important"
        },
        "completionInfo": {
          "$ref": "#/definitions/WidgetCompletionRedirectionInfo"
        },
        "creatorEmail": {
          "type": "string",
          "description": "The email of the creator of the web form",
          "title": "Creator Email",
          "x-ms-visibility": "important"
        },
        "vaultingInfo": {
          "type": "object",
          "description": "The vaulting information of the agreement",
          "title": "Vaulted",
          "properties": {
            "enabled": {
              "description": "For accounts set up for document vaulting and the option to enable per agreement, this determines whether the document is to be vaulted",
              "type": "boolean",
              "title": "Vaulting Enabled?",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "participantSetsInfo": {
          "type": "object",
          "title": "Participant Sets Info",
          "description": "Information about all the participant sets of this web form",
          "properties": {
            "additionalParticipantSets": {
              "description": "List of all the participants in the web form except web form signer",
              "type": "array",
              "items": {
                "$ref": "#/definitions/WidgetParticipantSetInfo"
              },
              "title": "Additional Participant Sets Info",
              "x-ms-visibility": "important"
            },
            "widgetParticipantSet": {
              "type": "object",
              "description": "Represents web form first participant details",
              "title": "First Participant Set",
              "x-ms-visibility": "important",
              "properties": {
                "role": {
                  "description": "Role assumed by all participants in the set (signer, approver etc.)",
                  "type": "string",
                  "enum": [
                    "SIGNER",
                    "DELEGATE_TO_SIGNER",
                    "APPROVER",
                    "DELEGATE_TO_APPROVER",
                    "ACCEPTOR",
                    "DELEGATE_TO_ACCEPTOR",
                    "FORM_FILLER",
                    "DELEGATE_TO_FORM_FILLER",
                    "CERTIFIED_RECIPIENT",
                    "DELEGATE_TO_CERTIFIED_RECIPIENT",
                    "SHARE"
                  ],
                  "title": "First Participant Set Role",
                  "x-ms-visibility": "important"
                },
                "order": {
                  "description": "Index indicating sequential signing group (specified for hybrid routing)",
                  "type": "integer",
                  "title": "First Participant Set Order",
                  "x-ms-visibility": "important"
                }
              }
            }
          }
        },
        "documentsInfo": {
          "type": "object",
          "title": "Documents Info",
          "description": "The complete info of the document",
          "properties": {
            "documents": {
              "description": "A list of objects representing the documents",
              "items": {
                "$ref": "#/definitions/WidgetWebhookDocument"
              },
              "type": "array",
              "title": "Documents",
              "x-ms-visibility": "important"
            }
          }
        }
      }
    },
    "AuthFailureWidgetRedirectionInfo": {
      "type": "object",
      "description": "URL and associated properties for the error page the web form signer will be taken after failing to authenticate",
      "title": "Authentication Failure Info",
      "properties": {
        "delay": {
          "description": "The delay (in seconds) before the user is taken to the resultant page",
          "type": "integer",
          "title": "Auth Failure Redirect Delay",
          "x-ms-visibility": "advanced"
        },
        "deframe": {
          "description": "If deframe is false, the resultant page will be shown inside the web form frame",
          "type": "boolean",
          "title": "Auth Failure Redirect Deframe",
          "x-ms-visibility": "advanced"
        },
        "url": {
          "description": "A publicly accessible url to which the user will be sent after successfully completing the web form",
          "type": "string",
          "title": "Auth Failure Redirect Url",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "WidgetCompletionRedirectionInfo": {
      "type": "object",
      "description": "URL and associated properties for the success page the web form signer will be taken to after performing desired action on the web form",
      "title": "Completion Info",
      "properties": {
        "delay": {
          "description": "The delay (in seconds) before the user is taken to the resultant page",
          "type": "integer",
          "title": "Completion Redirect Delay",
          "x-ms-visibility": "advanced"
        },
        "deframe": {
          "description": "If deframe is false, the resultant page will be shown inside the web form frame",
          "type": "boolean",
          "title": "Completion Redirect Deframe",
          "x-ms-visibility": "advanced"
        },
        "url": {
          "description": "A publicly accessible url to which the user will be sent after successfully completing the web form",
          "type": "string",
          "title": "Completion Redirect Url",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "WebhookParticipantSets": {
      "type": "object",
      "properties": {
        "memberInfos": {
          "description": "The information about participant members",
          "items": {
            "$ref": "#/definitions/MemberInfos"
          },
          "type": "array",
          "title": "Member Infos",
          "x-ms-visibility": "important"
        },
        "order": {
          "description": "Index indicating position at which signing group needs to sign.",
          "type": "integer",
          "title": "Order",
          "x-ms-visibility": "important"
        },
        "role": {
          "description": "Role assumed by all participants in the set (signer, approver etc.)",
          "type": "string",
          "enum": [
            "SIGNER",
            "APPROVER",
            "ACCEPTOR",
            "CERTIFIED_RECIPIENT",
            "FORM_FILLER",
            "DELEGATE_TO_SIGNER",
            "DELEGATE_TO_APPROVER",
            "DELEGATE_TO_ACCEPTOR",
            "DELEGATE_TO_CERTIFIED_RECIPIENT",
            "DELEGATE_TO_FORM_FILLER",
            "SHARE"
          ],
          "title": "Role",
          "x-ms-visibility": "important"
        },
        "status": {
          "description": "Current status of the agreement from the perspective of the user",
          "type": "string",
          "enum": [
            "CANCELLED",
            "COMPLETED",
            "EXPIRED",
            "NOT_YET_VISIBLE",
            "WAITING_FOR_AUTHORING",
            "WAITING_FOR_MY_DELEGATION",
            "WAITING_FOR_MY_ACCEPTANCE",
            "WAITING_FOR_MY_ACKNOWLEDGEMENT",
            "WAITING_FOR_MY_APPROVAL",
            "WAITING_FOR_MY_FORM_FILLING",
            "WAITING_FOR_MY_SIGNATURE",
            "WAITING_FOR_OTHERS"
          ],
          "title": "Status",
          "x-ms-visibility": "important"
        },
        "id": {
          "description": "The ID of the participant set",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the participant set",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "privateMessage": {
          "description": "Private message for the participants in the set",
          "type": "string",
          "title": "Private Message",
          "x-ms-visibility": "important"
        }
      }
    },
    "MegaSignChildAgreementsFileInfo": {
      "type": "object",
      "description": "File info containing per child agreement information of megaSign.",
      "title": "Child Agreements File Info",
      "properties": {
        "childAgreementsInfoFileId": {
          "description": "The ID of the file containing information about the existing childAgreementsInfo of the megaSign.",
          "type": "string",
          "title": "Child Agreements File ID",
          "x-ms-visibility": "important"
        }
      }
    },
    "WidgetWebhookDocument": {
      "type": "object",
      "title": "Document",
      "description": "The information about the document of the web form",
      "properties": {
        "id": {
          "description": "The unique ID of the document",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the document",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        }
      }
    },
    "WebhookDocument": {
      "type": "object",
      "title": "Document",
      "description": "The information about the document of the agreement",
      "properties": {
        "id": {
          "description": "The unique ID of the document",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the document",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        }
      }
    },
    "WebhookSupportingDocument": {
      "type": "object",
      "title": "Supporting Document",
      "description": "The information about the supporting document",
      "properties": {
        "displayLabel": {
          "description": "Display name of the supporting document",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "advanced"
        },
        "fieldName": {
          "description": "The name of the supporting document field",
          "type": "string",
          "title": "Field Name",
          "x-ms-visibility": "advanced"
        },
        "id": {
          "description": "The unique ID representing the supporting document",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "WidgetCcInfo": {
      "type": "object",
      "title": "CC",
      "description": "The information about the CC of the web form",
      "properties": {
        "email": {
          "description": "Email of the CC participant of the web form",
          "type": "string",
          "title": "Email",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "MegaSignCcInfo": {
      "type": "object",
      "title": "CC",
      "description": "The information about the CC of the mega sign",
      "properties": {
        "email": {
          "description": "Email of the CC participant of the megasign",
          "type": "string",
          "title": "Email",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CcInfo": {
      "type": "object",
      "title": "CC",
      "description": "The information about the CC of the agreement",
      "properties": {
        "email": {
          "description": "The email of the CC of the agreement",
          "type": "string",
          "title": "Email",
          "x-ms-visibility": "advanced"
        },
        "label": {
          "description": "The label of the CC list as returned in workflow description",
          "type": "string",
          "title": "Label",
          "x-ms-visibility": "advanced"
        },
        "visiblePages": {
          "description": "The pages that are visible to the CC",
          "title": "Visible Pages",
          "x-ms-visibility": "advanced",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        }
      }
    },
    "AgreementCcInfo": {
      "type": "object",
      "title": "CC",
      "description": "The information about the CC of the agreement",
      "properties": {
        "email": {
          "description": "The email of the CC of the agreement",
          "type": "string",
          "title": "Email",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "WidgetParticipantSetInfo": {
      "type": "object",
      "properties": {
        "role": {
          "description": "Role assumed by all participants in the set (signer, approver etc.)",
          "type": "string",
          "enum": [
            "SIGNER",
            "DELEGATE_TO_SIGNER",
            "APPROVER",
            "DELEGATE_TO_APPROVER",
            "ACCEPTOR",
            "DELEGATE_TO_ACCEPTOR",
            "FORM_FILLER",
            "DELEGATE_TO_FORM_FILLER",
            "CERTIFIED_RECIPIENT",
            "DELEGATE_TO_CERTIFIED_RECIPIENT",
            "SHARE"
          ],
          "title": "Role",
          "x-ms-visibility": "important"
        },
        "id": {
          "description": "The unique identifier of the participant set",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "memberInfos": {
          "description": "The information about the participant members",
          "items": {
            "$ref": "#/definitions/MemberInfos"
          },
          "type": "array",
          "title": "Member Infos",
          "x-ms-visibility": "important"
        },
        "order": {
          "description": "Index indicating sequential signing group (specified for hybrid routing)",
          "type": "integer",
          "title": "Order",
          "x-ms-visibility": "important"
        }
      }
    },
    "MemberInfos": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique Id of the participant",
          "type": "string",
          "title": "ID",
          "x-ms-visibility": "important"
        },
        "email": {
          "description": "The email of the participant",
          "type": "string",
          "title": "Email",
          "x-ms-visibility": "important"
        },
        "company": {
          "description": "The company of the participant",
          "type": "string",
          "title": "Company",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "description": "The name of the participant",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "advanced"
        },
        "privateMessage": {
          "description": "The private message of the participant",
          "type": "string",
          "title": "Private Message",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "The status of the participant",
          "type": "string",
          "title": "Status",
          "x-ms-visibility": "advanced",
          "enum": [
            "REPLACED",
            "ACTIVE"
          ]
        }
      }
    },
    "LibraryDocumentCreationResponseV6": {
      "type": "object",
      "description": "A JSON object describing the library template",
      "properties": {
        "id": {
          "description": "The unique ID that can be used to refer to the library template",
          "type": "string",
          "title": "Library Template Id",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "id"
      ]
    },
    "LibraryDocumentFileInfoId": {
      "type": "object",
      "required": [
        "transientDocumentId"
      ],
      "properties": {
        "transientDocumentId": {
          "description": "The document id received by uploading a transient document",
          "type": "string",
          "x-ms-summary": "ID"
        }
      }
    },
    "LibraryDocumentInfoId": {
      "type": "object",
      "required": [
        "fileInfos",
        "sharingMode",
        "templateTypes",
        "name",
        "state"
      ],
      "properties": {
        "name": {
          "description": "Agreement Name used to identify the template",
          "type": "string",
          "x-ms-summary": "Template Name",
          "x-ms-visibility": "important"
        },
        "templateTypes": {
          "description": "A list of one or more library template types",
          "items": {
            "enum": [
              "DOCUMENT",
              "FORM_FIELD_LAYER"
            ],
            "x-ms-summary": "Template Type",
            "title": "Template Type",
            "type": "string"
          },
          "type": "array",
          "default": [
            "DOCUMENT"
          ],
          "x-ms-summary": "Template Type",
          "x-ms-visibility": "important"
        },
        "sharingMode": {
          "description": "Specifies who should have access to this library document",
          "enum": [
            "USER",
            "GROUP",
            "ACCOUNT"
          ],
          "type": "string",
          "x-ms-summary": "Sharing Mode",
          "x-ms-visibility": "important",
          "default": "USER"
        },
        "fileInfos": {
          "x-ms-summary": "Document",
          "x-ms-visibility": "important",
          "description": "Provide transient document id",
          "items": {
            "$ref": "#/definitions/LibraryDocumentFileInfoId"
          },
          "type": "array"
        },
        "state": {
          "description": "State of the library document.",
          "enum": [
            "AUTHORING",
            "ACTIVE"
          ],
          "type": "string",
          "x-ms-summary": "Template State",
          "x-ms-visibility": "advanced",
          "default": "ACTIVE"
        }
      }
    },
    "LibraryDocumentFileInfoUrl": {
      "type": "object",
      "required": [
        "urlFileInfo"
      ],
      "properties": {
        "urlFileInfo": {
          "$ref": "#/definitions/URLFileInfo"
        }
      }
    },
    "LibraryDocumentInfoUrl": {
      "type": "object",
      "required": [
        "fileInfos",
        "sharingMode",
        "templateTypes",
        "name",
        "state"
      ],
      "properties": {
        "name": {
          "description": "Agreement Name used to identify the template",
          "type": "string",
          "x-ms-summary": "Template Name",
          "x-ms-visibility": "important"
        },
        "templateTypes": {
          "description": "A list of one or more library template types",
          "items": {
            "enum": [
              "DOCUMENT",
              "FORM_FIELD_LAYER"
            ],
            "x-ms-summary": "Template Type",
            "title": "Template Type",
            "type": "string"
          },
          "type": "array",
          "default": [
            "DOCUMENT"
          ],
          "x-ms-summary": "Template Type",
          "x-ms-visibility": "important"
        },
        "sharingMode": {
          "description": "Specifies who should have access to this library document",
          "enum": [
            "USER",
            "GROUP",
            "ACCOUNT"
          ],
          "type": "string",
          "x-ms-summary": "Sharing Mode",
          "x-ms-visibility": "important",
          "default": "USER"
        },
        "fileInfos": {
          "x-ms-summary": "Document",
          "x-ms-visibility": "important",
          "description": "Provide a public URL of document",
          "items": {
            "$ref": "#/definitions/LibraryDocumentFileInfoUrl"
          },
          "type": "array"
        },
        "state": {
          "description": "State of the library document.",
          "enum": [
            "AUTHORING",
            "ACTIVE"
          ],
          "type": "string",
          "x-ms-summary": "Template State",
          "x-ms-visibility": "advanced",
          "default": "ACTIVE"
        }
      }
    },
    "LibraryDocument": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier that is used to refer to the library template",
          "type": "string",
          "title": "Library Template Id",
          "x-ms-visibility": "important"
        },
        "hidden": {
          "description": "True if Library Document is hidden",
          "type": "boolean",
          "title": "Hidden",
          "x-ms-visibility": "important"
        },
        "templateTypes": {
          "description": "A list of one or more library template types",
          "items": {
            "enum": [
              "DOCUMENT",
              "FORM_FIELD_LAYER"
            ],
            "type": "string"
          },
          "type": "array",
          "default": [
            "DOCUMENT"
          ],
          "x-ms-summary": "Template Type(s)",
          "title": "Template Type(s)",
          "x-ms-visibility": "important"
        },
        "modifiedDate": {
          "description": "The day on which the library template was last modified",
          "format": "date",
          "type": "string",
          "title": "Modified Date",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the library template",
          "type": "string",
          "title": "Library Template Name",
          "x-ms-visibility": "important"
        },
        "sharingMode": {
          "description": "The scope of visibility of the library template",
          "enum": [
            "USER",
            "GROUP",
            "ACCOUNT",
            "GLOBAL"
          ],
          "type": "string",
          "title": "Template Sharing Mode",
          "x-ms-visibility": "important"
        },
        "creatorEmail": {
          "description": "Email address of the library document creator. ",
          "type": "string",
          "title": "Creator Email",
          "x-ms-visibility": "important"
        },
        "groupId": {
          "description": "The unique identifier of the group to which the library template belongs to.",
          "type": "string",
          "title": "Group ID",
          "x-ms-visibility": "important"
        },
        "status": {
          "description": "Status of the library document",
          "enum": [
            "AUTHORING",
            "ACTIVE",
            "REMOVED"
          ],
          "type": "string",
          "title": "Status",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "id",
        "templateTypes",
        "modifiedDate",
        "name",
        "sharingMode"
      ]
    },
    "LibraryDocuments": {
      "type": "object",
      "description": "A JSON that contains the library template array object",
      "properties": {
        "page": {
          "$ref": "#/definitions/page"
        },
        "libraryDocumentList": {
          "description": "A list of library template items",
          "items": {
            "$ref": "#/definitions/LibraryDocument"
          },
          "type": "array",
          "title": "Library Templates List",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "libraryDocumentList"
      ]
    },
    "AgreementStateInfo": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string",
          "default": "CANCELLED",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Agrement State",
          "description": "The state in which the agreement should land."
        },
        "agreementCancellationInfo": {
          "description": "The Security info required for the recipient to view & sign the document",
          "type": "object",
          "x-ms-summary": "Notify",
          "properties": {
            "comment": {
              "type": "string",
              "x-ms-visibility": "important",
              "x-ms-summary": "Comment",
              "description": "An optional comment describing the reason of cancellation to the recipients."
            },
            "notifyOthers": {
              "type": "boolean",
              "default": "false",
              "x-ms-visibility": "important",
              "x-ms-summary": "Others",
              "description": "Whether or not you would like the recipients to be notified."
            }
          }
        }
      }
    },
    "WebFormWebhookCreationInfoAgreementEvent": {
      "type": "object",
      "required": [
        "state",
        "scope",
        "name",
        "webhookUrlInfo",
        "webhookSubscriptionEvents",
        "resourceId",
        "resourceType"
      ],
      "properties": {
        "state": {
          "description": "The default state of webhook",
          "type": "string",
          "title": "State",
          "default": "ACTIVE",
          "x-ms-visibility": "internal"
        },
        "webhookUrlInfo": {
          "$ref": "#/definitions/WebhookUrlInfo"
        },
        "name": {
          "description": "The name of the trigger",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "scope": {
          "description": "The scope of the trigger",
          "type": "string",
          "title": "Scope",
          "default": "RESOURCE",
          "x-ms-visibility": "internal",
          "enum": [
            "RESOURCE"
          ]
        },
        "pageSize": {
          "description": "Select the number of web forms to display in the drop down list",
          "type": "integer",
          "title": "Web Forms Page Size",
          "x-ms-visibility": "advanced",
          "default": 50,
          "enum": [
            50,
            100,
            200,
            300,
            400,
            500
          ]
        },
        "resourceType": {
          "description": "Web Form for which the flow should be triggered.",
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "WIDGET",
          "title": "Resource Type",
          "enum": [
            "WIDGET"
          ]
        },
        "resourceId": {
          "type": "string",
          "description": "Select web form from the list or enter the web form ID.",
          "title": "Web Form Name/ID",
          "x-ms-visibility": "important",
          "x-ms-dynamic-values": {
            "operationId": "GetAllWebForms",
            "value-path": "id",
            "value-title": "name",
            "value-collection": "userWidgetList",
            "parameters": {
              "pageSize": {
                "parameter": "pageSize"
              }
            }
          },
          "x-ms-dynamic-list": {
            "operationId": "GetAllWebForms",
            "itemsPath": "userWidgetList",
            "itemValuePath": "id",
            "itemTitlePath": "name",
            "parameters": {
              "pageSize": {
                "parameterReference": "WebhookCreationInfo/pageSize"
              }
            }
          }
        },
        "webhookSubscriptionEvents": {
          "description": "The events for which the flow should be triggered",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "When any web form agreement event occurs",
              "When a web form agreement is created",
              "When a web form agreement is sent",
              "When a web form agreement participant completes their action",
              "When a web form agreement workflow is completed successfully",
              "When a web form agreement is cancelled",
              "When a web form agreement is rejected by a participant",
              "When a web form agreement expires"
            ],
            "title": "Events",
            "x-ms-visibility": "important"
          },
          "x-ms-visibility": "important"
        },
        "webhookConditionalParams": {
          "$ref": "#/definitions/WebhookConditionalParamsForAgreementStatusChange"
        }
      }
    },
    "UserWidgetV6": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique identifier of a web form",
          "type": "string",
          "title": "Web Form ID",
          "x-ms-visibility": "important"
        },
        "modifiedDate": {
          "description": "The date on which the web form was last modified",
          "type": "string",
          "title": "Modified Date",
          "x-ms-visibility": "important"
        },
        "hidden": {
          "description": "True if agreement is hidden for the user",
          "type": "boolean",
          "title": "Hidden",
          "x-ms-visibility": "important"
        },
        "groupId": {
          "description": "Unique identifier of the group",
          "type": "string",
          "title": "Group ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the web form",
          "type": "string",
          "title": "Name",
          "x-ms-visibility": "important"
        },
        "status": {
          "description": "The web form status",
          "enum": [
            "AUTHORING",
            "ACTIVE",
            "DRAFT",
            "DISABLED"
          ],
          "type": "string",
          "title": "Status",
          "x-ms-visibility": "important"
        },
        "url": {
          "description": "The hosted url of the web form",
          "type": "string",
          "title": "Url",
          "x-ms-visibility": "important"
        },
        "javascript": {
          "description": "The embedded javascript code of the web form",
          "type": "string",
          "title": "Javascript",
          "x-ms-visibility": "important"
        }
      },
      "required": [
        "id",
        "modifiedDate",
        "name",
        "status",
        "hidden",
        "url"
      ]
    },
    "userWidgetListV6": {
      "type": "object",
      "description": "A JSON that contains the user web form array object",
      "properties": {
        "page": {
          "$ref": "#/definitions/page"
        },
        "userWidgetList": {
          "description": "An array of web form items",
          "items": {
            "$ref": "#/definitions/UserWidgetV6"
          },
          "type": "array",
          "title": "Web Form List",
          "x-ms-visibility": "important"
        }
      }
    }
  },
  "host": "europe-002.azure-apim.net",
  "info": {
    "description": "Adobe is the most trusted digital document sign service in the world. With Adobe Acrobat Sign, you can transform manual processes into all-digital experiences. Incorporate Adobe Acrobat Sign functionality into your favorite applications to create, send and monitor the status of agreements.",
    "license": {
      "name": "Apache License 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "title": "Adobe Acrobat Sign",
    "version": "4.2.1",
    "contact": {
      "name": "Adobe Acrobat Sign Support",
      "url": "https://helpx.adobe.com/contact/enterprise-support.dc.html#sign",
      "email": "support@echosign.zendesk.com"
    },
    "x-ms-api-annotation": {
      "status": "Production"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://acrobat.adobe.com/us/en/sign.html"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.adobe.com/privacy/policy.html"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Website"
    }
  ],
  "parameters": {},
  "paths": {
    "/{connectionId}/v5/agreements": {
      "get": {
        "operationId": "GetAllAgreements",
        "description": "This operation fetches the list of all agreements of the user.",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User Agreements list",
            "schema": {
              "$ref": "#/definitions/UserAgreements"
            }
          }
        },
        "summary": "Get a list of all agreements (Old)",
        "tags": [
          "agreements"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-list-of-all-agreements-(old)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v6/agreements": {
      "get": {
        "operationId": "GetAllAgreements_V2",
        "description": "This operation fetches the list of all agreements of the user.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Used to navigate through the pages. If not provided, returns the first page.",
            "x-ms-summary": "Cursor",
            "type": "string",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items in the response page. By default: 100; Max: 10000",
            "x-ms-summary": "Page Size",
            "type": "integer",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User Agreements list",
            "schema": {
              "$ref": "#/definitions/userAgreementListV6"
            }
          }
        },
        "summary": "Get a list of all agreements",
        "tags": [
          "agreements"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-list-of-all-agreements"
        }
      }
    },
    "/{connectionId}/v6/agreements/{agreementId}/formData": {
      "get": {
        "summary": "Get form field data of agreement (Old)",
        "description": "Retrieves data entered into the interactive form fields of the agreement.",
        "operationId": "GetAgreementFormFieldData",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "required": true,
            "x-ms-visibility": "internal"
          },
          {
            "name": "agreementId",
            "in": "path",
            "description": "The agreement ID of the agreement whose information is needed",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          }
        ],
        "produces": [
          "text/csv"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "The content type of the response",
                "x-ms-summary": "File Content Type"
              },
              "Content-Length": {
                "type": "integer",
                "description": "The content size of the response",
                "x-ms-summary": "File Content Size"
              }
            },
            "schema": {
              "type": "file"
            }
          }
        },
        "tags": [
          "agreements"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-form-field-data-of-agreement-(old)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/custom/v6/agreements/{agreementId}/formData": {
      "get": {
        "summary": "Get form field data of agreement in CSV format",
        "description": "Retrieves data entered into the interactive form fields of the agreement.",
        "operationId": "GetAgreementFormFieldData_V2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "required": true,
            "x-ms-visibility": "internal"
          },
          {
            "name": "agreementId",
            "in": "path",
            "description": "The agreement ID of the agreement whose information is needed",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "text/csv"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "The content type of the response",
                "x-ms-summary": "File Content Type"
              },
              "Content-Length": {
                "type": "integer",
                "description": "The content size of the response",
                "x-ms-summary": "File Content Size"
              }
            },
            "schema": {
              "description": "The content of the Form Data",
              "x-ms-summary": "Form Data Content",
              "format": "binary",
              "type": "string"
            }
          }
        },
        "tags": [
          "agreements"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-form-field-data-of-agreement-in-csv-format"
        }
      }
    },
    "/{connectionId}/custom_json/v6/agreements/{agreementId}/formData": {
      "get": {
        "summary": "Get form field data of agreement in JSON format",
        "description": "Retrieves data entered into the interactive form fields of the agreement.",
        "operationId": "GetAgreementFormFieldData_V3",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "required": true,
            "x-ms-visibility": "internal"
          },
          {
            "name": "agreementId",
            "in": "path",
            "description": "The agreement ID of the agreement whose information is needed",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "Accept",
            "in": "header",
            "description": "Selecting format type",
            "type": "string",
            "default": "application/json",
            "required": true,
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "The content type of the response",
                "x-ms-summary": "File Content Type"
              },
              "Content-Length": {
                "type": "integer",
                "description": "The content size of the response",
                "x-ms-summary": "File Content Size"
              }
            },
            "schema": {
              "description": "The content of the Form Data",
              "x-ms-summary": "Form Data Content",
              "type": "object"
            }
          }
        },
        "tags": [
          "agreements"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-form-field-data-of-agreement-in-json-format"
        }
      }
    },
    "/{connectionId}/createagreementbyid_custom/v5/agreements": {
      "post": {
        "operationId": "CreateAgreementById",
        "description": "This operation creates an agreement from a document uploaded in Adobe Acrobat Sign and sends it for signature.",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the agreement that you want to send",
            "in": "body",
            "name": "AgreementCreationInfoId",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementCreationInfoId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AgreementCreationResponse"
            }
          }
        },
        "tags": [
          "agreements"
        ],
        "summary": "Create an agreement from an uploaded document and send for signature (Old)",
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#create-an-agreement-from-an-uploaded-document-and-send-for-signature-(old)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/createagreementbyid_custom/v6/agreements": {
      "post": {
        "operationId": "CreateAgreementById_V2",
        "description": "This operation creates an agreement from a document uploaded in Adobe Acrobat Sign and sends it for signature.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the agreement that you want to send",
            "in": "body",
            "name": "AgreementCreationInfoIdV6",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementCreationInfoIdV6"
            }
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AgreementCreationResponseV6"
            }
          }
        },
        "tags": [
          "agreements"
        ],
        "summary": "Create an agreement from an uploaded document and send for signature",
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#create-an-agreement-from-an-uploaded-document-and-send-for-signature"
        }
      }
    },
    "/{connectionId}/createagreementbytemplate_custom/v5/agreements": {
      "post": {
        "operationId": "CreateAgreementByTemplate",
        "description": "This operation creates an agreement from a template stored in the user's Adobe Acrobat Sign library and sends it for signature.",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the agreement that you want to send",
            "in": "body",
            "name": "AgreementCreationInfoTemplate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementCreationInfoTemplate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AgreementCreationResponse"
            }
          }
        },
        "tags": [
          "agreements"
        ],
        "summary": "Create an agreement from a library template and send for signature (Old)",
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#create-an-agreement-from-a-library-template-and-send-for-signature-(old)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/createagreementbytemplate_custom/v6/agreements": {
      "post": {
        "operationId": "CreateAgreementByTemplate_V2",
        "description": "This operation creates an agreement from a template stored in the user's Adobe Acrobat Sign library and sends it for signature.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the agreement that you want to send",
            "in": "body",
            "name": "AgreementCreationInfoTemplateV6",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementCreationInfoTemplateV6"
            }
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AgreementCreationResponseV6"
            }
          }
        },
        "tags": [
          "agreements"
        ],
        "summary": "Create an agreement from a library template and send for signature",
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#create-an-agreement-from-a-library-template-and-send-for-signature"
        }
      }
    },
    "/{connectionId}/createagreementbyurl_custom/v5/agreements": {
      "post": {
        "operationId": "CreateAgreementByUrl",
        "description": "This operation creates an agreement from a document uploaded in Adobe Acrobat Sign and sends it for signature.",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the agreement that you want to send",
            "in": "body",
            "name": "AgreementCreationInfoUrl",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementCreationInfoUrl"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AgreementCreationResponse"
            }
          }
        },
        "tags": [
          "agreements"
        ],
        "summary": "Create an agreement from a document URL and send for signature (Old)",
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#create-an-agreement-from-a-document-url-and-send-for-signature-(old)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/createagreementbyurl_custom/v6/agreements": {
      "post": {
        "operationId": "CreateAgreementByUrl_V2",
        "description": "This operation creates an agreement from a document uploaded in Adobe Acrobat Sign and sends it for signature.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the agreement that you want to send",
            "in": "body",
            "name": "AgreementCreationInfoUrlV6",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementCreationInfoUrlV6"
            }
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AgreementCreationResponseV6"
            }
          }
        },
        "tags": [
          "agreements"
        ],
        "summary": "Create an agreement from a document URL and send for signature",
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#create-an-agreement-from-a-document-url-and-send-for-signature"
        }
      }
    },
    "/{connectionId}/v5/agreements/{agreementId}": {
      "get": {
        "x-ms-api-annotation": {
          "family": "GetAgreementInfo",
          "revision": 1,
          "status": "Production"
        },
        "operationId": "GetAgreementInfo",
        "deprecated": true,
        "x-ms-visibility": "advanced",
        "description": "This operation fetches all the current information of an agreement, like status.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The agreement ID of the agreement whose information is needed",
            "in": "path",
            "name": "agreementId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AgreementInfo"
            }
          }
        },
        "summary": "Get the status of an agreement",
        "tags": [
          "agreements"
        ],
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-the-status-of-an-agreement-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v6/agreements/{agreementId}": {
      "get": {
        "x-ms-api-annotation": {
          "family": "GetAgreementInfo",
          "revision": 2,
          "status": "Production"
        },
        "operationId": "GetAgreementInfo_V2",
        "description": "This operation fetches all the current information of an agreement, like status.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The agreement ID of the agreement whose information is needed",
            "in": "path",
            "name": "agreementId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AgreementInfoV6"
            }
          }
        },
        "summary": "Get the status of an agreement",
        "tags": [
          "agreements"
        ],
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-the-status-of-an-agreement"
        }
      }
    },
    "/{connectionId}/v6/agreements/{agreementId}/state": {
      "put": {
        "operationId": "CancelAgreement",
        "description": "Cancels the agreement identified by agreementId in the path.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The agreement ID of the agreement which is to be cancelled.",
            "in": "path",
            "name": "agreementId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "Cancel Agreement",
            "in": "body",
            "name": "Cancel Agreement",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AgreementStateInfo"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "summary": "Cancel an agreement",
        "tags": [
          "agreements"
        ],
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#cancel-an-agreement"
        }
      }
    },
    "/{connectionId}/v5/agreements/{agreementId}/documents": {
      "get": {
        "x-ms-api-annotation": {
          "family": "GetAllDocumentsofAnAgreement",
          "revision": 1,
          "status": "Preview"
        },
        "deprecated": true,
        "x-ms-visibility": "advanced",
        "operationId": "GetAllDocumentsofAnAgreement",
        "description": "This operation fetches the IDs of all documents and supporting documents of an agreement.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The agreement ID of the agreement whose documents are needed",
            "in": "path",
            "name": "agreementId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "description": " Content type of the supporting documents of the agreement",
            "enum": [
              "ORIGINAL",
              "CONVERTED_PDF"
            ],
            "in": "query",
            "name": "supportingDocumentContentFormat",
            "default": "CONVERTED_PDF",
            "type": "string",
            "x-ms-summary": "Supporting documents - Content Type",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AgreementDocuments"
            }
          }
        },
        "summary": "Get a list of all the document IDs from an agreement",
        "tags": [
          "documents"
        ],
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-list-of-all-the-document-ids-from-an-agreement-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v6/agreements/{agreementId}/documents": {
      "get": {
        "x-ms-api-annotation": {
          "family": "GetAllDocumentsofAnAgreement",
          "revision": 2,
          "status": "Production"
        },
        "operationId": "GetAllDocumentsofAnAgreement_V2",
        "description": "This operation fetches the IDs of all documents and supporting documents of an agreement.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The agreement ID of the agreement whose documents are needed",
            "in": "path",
            "name": "agreementId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "description": " Content type of the supporting documents of the agreement",
            "enum": [
              "ORIGINAL",
              "CONVERTED_PDF"
            ],
            "in": "query",
            "name": "supportingDocumentContentFormat",
            "default": "CONVERTED_PDF",
            "type": "string",
            "x-ms-summary": "Supporting documents - Content Type",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AgreementDocumentsV6"
            }
          }
        },
        "summary": "Get a list of all the document IDs from an agreement",
        "tags": [
          "documents"
        ],
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-list-of-all-the-document-ids-from-an-agreement"
        }
      }
    },
    "/{connectionId}/v5/agreements/{agreementId}/combinedDocument": {
      "get": {
        "x-ms-api-annotation": {
          "family": "GetCombinedDocument",
          "revision": 1,
          "status": "Preview"
        },
        "deprecated": true,
        "x-ms-visibility": "advanced",
        "description": "This operation fetches the PDF file stream of the combined or signed agreement. Note that the file stream should be stored with a filename ending in .pdf file extension.",
        "operationId": "GetCombinedDocument",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The agreement ID as provided by the action that creates the agreement",
            "in": "path",
            "name": "agreementId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "description": "If true, attach supporting documents to the signed agreement PDF",
            "in": "query",
            "name": "attachSupportingDocuments",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Attach Supporting Documents?",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "If true, attach an audit report to the signed agreement PDF",
            "in": "query",
            "name": "auditReport",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Attach Audit Report?",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "The content type of the response",
                "x-ms-summary": "File Content Type"
              },
              "Content-Length": {
                "type": "integer",
                "description": "The content size of the response",
                "x-ms-summary": "File Content Size"
              }
            },
            "schema": {
              "$ref": "#/definitions/CombinedDocumentResponse"
            }
          }
        },
        "summary": "Get a PDF of a signed agreement",
        "tags": [
          "agreements"
        ],
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-pdf-of-a-signed-agreement-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v6/agreements/{agreementId}/combinedDocument": {
      "get": {
        "x-ms-api-annotation": {
          "family": "GetCombinedDocument",
          "revision": 2,
          "status": "Production"
        },
        "description": "This operation fetches the PDF file stream of the combined or signed agreement. Note that the file stream should be stored with a filename ending in .pdf file extension.",
        "operationId": "GetCombinedDocument_V2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The agreement ID as provided by the action that creates the agreement",
            "in": "path",
            "name": "agreementId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "description": "If true, attach supporting documents to the signed agreement PDF",
            "in": "query",
            "name": "attachSupportingDocuments",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Attach Supporting Documents?",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "If true, attach an audit report to the signed agreement PDF",
            "in": "query",
            "name": "attachAuditReport",
            "required": false,
            "type": "boolean",
            "x-ms-summary": "Attach Audit Report?",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "The content type of the response",
                "x-ms-summary": "File Content Type"
              },
              "Content-Length": {
                "type": "integer",
                "description": "The content size of the response",
                "x-ms-summary": "File Content Size"
              }
            },
            "schema": {
              "$ref": "#/definitions/CombinedDocumentResponse"
            }
          }
        },
        "summary": "Get a PDF of a signed agreement",
        "tags": [
          "agreements"
        ],
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-pdf-of-a-signed-agreement"
        }
      }
    },
    "/{connectionId}/v5/agreements/{agreementId}/documents/{documentId}": {
      "get": {
        "x-ms-api-annotation": {
          "family": "GetDocument",
          "revision": 1,
          "status": "Preview"
        },
        "deprecated": true,
        "x-ms-visibility": "advanced",
        "description": "This operation fetches the file stream of a specific document of the agreement.",
        "operationId": "GetDocument",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The agreement ID of the agreement whose document is needed",
            "in": "path",
            "name": "agreementId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "description": "The document ID of the specific document of the agreement",
            "in": "path",
            "name": "documentId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Document ID",
            "x-ms-visibility": "important"
          }
        ],
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "The content type of the response",
                "x-ms-summary": "File Content Type"
              },
              "Content-Length": {
                "type": "integer",
                "description": "The content size of the response",
                "x-ms-summary": "File Content Size"
              }
            },
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            }
          }
        },
        "summary": "Get a document from an agreement",
        "tags": [
          "agreements"
        ],
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-document-from-an-agreement-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v6/agreements/{agreementId}/documents/{documentId}": {
      "get": {
        "x-ms-api-annotation": {
          "family": "GetDocument",
          "revision": 2,
          "status": "Production"
        },
        "description": "This operation fetches the file stream of a specific document of the agreement.",
        "operationId": "GetDocument_V2",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The agreement ID of the agreement whose document is needed",
            "in": "path",
            "name": "agreementId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "description": "The document ID of the specific document of the agreement",
            "in": "path",
            "name": "documentId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Document ID",
            "x-ms-visibility": "important"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "The content type of the response",
                "x-ms-summary": "File Content Type"
              },
              "Content-Length": {
                "type": "integer",
                "description": "The content size of the response",
                "x-ms-summary": "File Content Size"
              }
            },
            "schema": {
              "$ref": "#/definitions/DocumentResponse"
            }
          }
        },
        "summary": "Get a document from an agreement",
        "tags": [
          "agreements"
        ],
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-document-from-an-agreement"
        }
      }
    },
    "/{connectionId}/v6/agreements/{agreementId}/signingUrls": {
      "get": {
        "description": "This operation retrieves the URL for the e-sign page for the current signer(s) of an agreement.",
        "operationId": "GetSigningUrls",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The agreement ID as provided by the action that creates the agreement",
            "in": "path",
            "name": "agreementId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Agreement ID",
            "x-ms-visibility": "important"
          },
          {
            "name": "x-api-client-id",
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal",
            "required": true
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "Content-Type": {
                "type": "string",
                "description": "The content type of the response",
                "x-ms-summary": "File Content Type"
              },
              "Content-Length": {
                "type": "integer",
                "description": "The content size of the response",
                "x-ms-summary": "File Content Size"
              }
            },
            "schema": {
              "$ref": "#/definitions/SigningUrlResponse"
            }
          }
        },
        "summary": "Retrieve the Signing URL",
        "tags": [
          "agreements"
        ],
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#retrieve-the-signing-url"
        }
      }
    },
    "/{connectionId}/v5/libraryDocuments": {
      "get": {
        "description": "This operation fetches the list of all documents stored as templates in the Adobe Acrobat Sign library of the user.",
        "operationId": "GetLibraryDocuments",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "External ID for which you would like to retrieve agreement information.",
            "in": "query",
            "name": "libraryTemplateType",
            "required": false,
            "type": "string",
            "x-ms-summary": "Library Template Type",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DocumentLibraryItems"
            }
          }
        },
        "summary": "Get a list of all library templates (Old)",
        "tags": [
          "libraryDocuments"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-list-of-all-library-templates-(old)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v6/libraryDocuments": {
      "get": {
        "description": "This operation fetches the list of all documents stored as templates in the Adobe Acrobat Sign library of the user.",
        "operationId": "GetLibraryDocuments_V2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Used to navigate through the pages. If not provided, returns the first page.",
            "x-ms-summary": "Cursor",
            "type": "string",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items in the response page. By default: 100; Max: 10000",
            "x-ms-summary": "Page Size",
            "type": "integer",
            "x-ms-visibility": "advanced"
          },
          {
            "description": "External ID for which you would like to retrieve agreement information.",
            "in": "query",
            "name": "libraryTemplateType",
            "required": false,
            "type": "string",
            "x-ms-summary": "Library Template Type",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LibraryDocuments"
            }
          }
        },
        "summary": "Get a list of all library templates",
        "tags": [
          "libraryDocuments"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-list-of-all-library-templates"
        }
      }
    },
    "/{connectionId}/createlibrarydocumentbyid_custom/v5/libraryDocuments": {
      "post": {
        "operationId": "CreateLibraryDocumentById",
        "description": "This operation creates a template in Adobe Acrobat Sign library from an uploaded document. Use this template for sending agreements.",
        "summary": "Create a library template from an uploaded document (Old)",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "tags": [
          "libraryDocuments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the library document that you want to create",
            "in": "body",
            "name": "LibraryCreationInfoId",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LibraryCreationInfoId"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LibraryDocumentCreationResponse"
            }
          }
        },
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#create-a-library-template-from-an-uploaded-document-(old)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/createlibrarydocumentbyid_custom/v6/libraryDocuments": {
      "post": {
        "operationId": "CreateLibraryDocumentById_V2",
        "description": "This operation creates a template in Adobe Acrobat Sign library from an uploaded document. Use this template for sending agreements.",
        "summary": "Create a library template from an uploaded document",
        "tags": [
          "libraryDocuments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the library document that you want to create",
            "in": "body",
            "name": "LibraryDocumentInfoId",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LibraryDocumentInfoId"
            }
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LibraryDocumentCreationResponseV6"
            }
          }
        },
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#create-a-library-template-from-an-uploaded-document"
        }
      }
    },
    "/{connectionId}/createlibrarydocumentbyurl_custom/v5/libraryDocuments": {
      "post": {
        "operationId": "CreateLibraryDocumentByUrl",
        "description": "This operation creates a template in Adobe Acrobat Sign library from a document URL. Use this template for sending agreements",
        "summary": "Create a library template from a document URL (Old)",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "tags": [
          "libraryDocuments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the library document that you want to create",
            "in": "body",
            "name": "LibraryCreationInfoUrl",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LibraryCreationInfoUrl"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LibraryDocumentCreationResponse"
            }
          }
        },
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#create-a-library-template-from-a-document-url-(old)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/createlibrarydocumentbyurl_custom/v6/libraryDocuments": {
      "post": {
        "operationId": "CreateLibraryDocumentByUrl_V2",
        "description": "This operation creates a template in Adobe Acrobat Sign library from a document URL. Use this template for sending agreements",
        "summary": "Create a library template from a document URL",
        "tags": [
          "libraryDocuments"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the library document that you want to create",
            "in": "body",
            "name": "LibraryDocumentInfoUrl",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LibraryDocumentInfoUrl"
            }
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LibraryDocumentCreationResponseV6"
            }
          }
        },
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#create-a-library-template-from-a-document-url"
        }
      }
    },
    "/{connectionId}/v5/transientDocuments": {
      "post": {
        "tags": [
          "transientDocuments"
        ],
        "summary": "Upload a document and get a document ID (Old)",
        "x-ms-visibility": "advanced",
        "deprecated": true,
        "consumes": [
          "multipart/form-data"
        ],
        "description": "This operation uploads a document in your Adobe Acrobat Sign account and returns a document ID for it. This document is temporarily stored in Adobe Acrobat Sign and the document ID can be used for further operations like creating an agreement.",
        "operationId": "CreateTransientDocument",
        "schemes": [
          "https"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The name of the document to be uploaded, with extension",
            "name": "File-Name",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-ms-summary": "File Name",
            "x-ms-visibility": "important"
          },
          {
            "description": "The file stream of the document to be uploaded",
            "in": "formData",
            "name": "File",
            "required": true,
            "type": "file",
            "x-ms-summary": "File Content",
            "x-ms-visibility": "important",
            "x-ms-format": "contentOnly",
            "format": "contentOnly"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransientDocumentResponse"
            }
          }
        },
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#upload-a-document-and-get-a-document-id-(old)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v6/transientDocuments": {
      "post": {
        "tags": [
          "transientDocuments"
        ],
        "summary": "Upload a document and get a document ID",
        "consumes": [
          "multipart/form-data"
        ],
        "description": "This operation uploads a document in your Adobe Acrobat Sign account and returns a document ID for it. This document is temporarily stored in Adobe Acrobat Sign and the document ID can be used for further operations like creating an agreement.",
        "operationId": "CreateTransientDocument_V2",
        "schemes": [
          "https"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The name of the document to be uploaded, with extension",
            "name": "File-Name",
            "in": "formData",
            "required": true,
            "type": "string",
            "x-ms-summary": "File Name",
            "x-ms-visibility": "important"
          },
          {
            "description": "The file stream of the document to be uploaded",
            "in": "formData",
            "name": "File",
            "required": true,
            "type": "file",
            "x-ms-summary": "File Content",
            "x-ms-visibility": "important",
            "x-ms-format": "contentOnly",
            "format": "contentOnly"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransientDocumentResponse"
            }
          }
        },
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#upload-a-document-and-get-a-document-id"
        }
      }
    },
    "/{connectionId}/v6/widgets": {
      "get": {
        "operationId": "GetAllWebForms",
        "description": "This operation fetches the list of all web forms of the user.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-api-client-id",
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Used to navigate through the pages. If not provided, returns the first page.",
            "x-ms-summary": "Cursor",
            "type": "string",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items in the response page. By default: 100; Max: 10000",
            "x-ms-summary": "Page Size",
            "type": "integer",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "x-api-user",
            "x-ms-summary": "In the name of",
            "in": "header",
            "description": "The email of API caller in the format: email:{adobesignuser@domain.com}",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "User Web Forms list",
            "schema": {
              "$ref": "#/definitions/userWidgetListV6"
            }
          }
        },
        "summary": "Get a list of all web forms",
        "tags": [
          "webForms"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#get-a-list-of-all-web-forms"
        }
      }
    },
    "/{connectionId}/createwebhookforAgreementCreatedEvent_custom/v6/webhooks": {
      "x-ms-notification-content": {
        "description": "Data sent by Adobe Acrobat Sign",
        "schema": {
          "$ref": "#/definitions/WebhookPayloadWithoutNextParticipantSet"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "operationId": "CreateWebhookForAgreementCreatedEvent",
        "description": "Triggers a new flow when a new agreement is created.",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the trigger that you want to create",
            "in": "body",
            "name": "WebhookCreationInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookCreationInfoForAgreementCreatedEvent"
            }
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebhookCreationResponse"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "summary": "When a new agreement is created",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#when-a-new-agreement-is-created"
        }
      }
    },
    "/{connectionId}/createwebhookforSignatureRquestedEvent_custom/v6/webhooks": {
      "x-ms-notification-content": {
        "description": "Data sent by Adobe Acrobat Sign",
        "schema": {
          "$ref": "#/definitions/WebhookPayload"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "operationId": "CreateWebhookForAgreementSignatureRequestedEvent",
        "description": "Triggers a new flow when an agreement is sent to a participant.",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the trigger that you want to create",
            "in": "body",
            "name": "WebhookCreationInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookCreationInfoForAgreementSignatureRequestedEvent"
            }
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebhookCreationResponse"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "summary": "When an agreement is sent to a participant",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#when-an-agreement-is-sent-to-a-participant"
        }
      }
    },
    "/{connectionId}/createwebhookforSignedDocumentEvent_custom/v6/webhooks": {
      "x-ms-notification-content": {
        "description": "Data sent by Adobe Acrobat Sign",
        "schema": {
          "$ref": "#/definitions/WebhookPayloadWithSignedDocument"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "operationId": "CreateWebhookForAgreementSignedEvent",
        "description": "Triggers a new flow when an agreement workflow is completed successfully",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the trigger that you want to create",
            "in": "body",
            "name": "WebhookCreationInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookCreationInfoForAgreementWorkflowCompletedEvent"
            }
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebhookCreationResponse"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "summary": "When an agreement workflow is completed successfully",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#when-an-agreement-workflow-is-completed-successfully"
        }
      }
    },
    "/{connectionId}/createwebhookforStatusChange_custom/v6/webhooks": {
      "x-ms-notification-content": {
        "description": "Data sent by Adobe Acrobat Sign",
        "schema": {
          "$ref": "#/definitions/WebhookPayloadWithSignedDocumentForStatusChange"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "operationId": "CreateWebhookForAgreementStatusUpdated",
        "description": "Triggers a new flow when the status of an agreement changes. Covers most common Agreement events such as creation, completion, etc.",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the webhook that you want to create",
            "in": "body",
            "name": "WebhookCreationInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookCreationInfoStatusChange"
            }
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebhookCreationResponse"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "summary": "When the state of an agreement changes",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#when-the-state-of-an-agreement-changes"
        }
      }
    },
    "/{connectionId}/createwebhookGeneric_custom/v6/webhooks": {
      "x-ms-notification-content": {
        "description": "Details for Webhook payload sent by Adobe Acrobat Sign",
        "schema": {
          "$ref": "#/definitions/WebhookPayloadGeneric"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "operationId": "CreateWebhookGeneric",
        "description": "Triggers a new flow when an event occurs. Covers all Agreement, Mega Sign and Web Form events.",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the webhook that you want to create",
            "in": "body",
            "name": "WebhookCreationInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebhookCreationInfoGeneric"
            }
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebhookCreationResponse"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "summary": "When an event occurs",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#when-an-event-occurs"
        }
      }
    },
    "/{connectionId}/createwebhookforWebFormAgreementEvent_custom/v6/webhooks": {
      "x-ms-notification-content": {
        "description": "Data sent by Adobe Acrobat Sign",
        "schema": {
          "$ref": "#/definitions/WebFormWebhookAgreementEventPayload"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "operationId": "CreateWebhookForWebFormAgreementEvent",
        "description": "Triggers a new flow when web form agreement event occurs. Covers most common Agreement events such as creation, completion, etc.",
        "consumes": [
          "application/json"
        ],
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Information about the webhook that you want to create",
            "in": "body",
            "name": "WebhookCreationInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebFormWebhookCreationInfoAgreementEvent"
            }
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebhookCreationResponse"
            }
          }
        },
        "tags": [
          "webhooks"
        ],
        "summary": "When a web form agreement event occurs",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#when-a-web-form-agreement-event-occurs"
        }
      }
    },
    "/{connectionId}/v6/webhooks/{webhookId}": {
      "delete": {
        "operationId": "DeleteWebhook",
        "description": "Deletes a webhook.",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The ID of the webhook",
            "in": "path",
            "name": "webhookId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Webhook Id"
          },
          {
            "name": "x-api-client-id",
            "required": true,
            "in": "header",
            "description": "Microsoft Power Automate Integration",
            "type": "string",
            "default": "MicrosoftPowerAutomate;v5.0.0;;;",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "204": {
            "description": "Success."
          }
        },
        "summary": "Deletes a webhook",
        "tags": [
          "webhooks"
        ],
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/adobesign/#deletes-a-webhook"
        }
      }
    },
    "/whr": {
      "get": {
        "operationId": "WebhookEcho",
        "parameters": [],
        "responses": {
          "default": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [],
        "x-ms-visibility": "internal",
        "x-ms-no-generic-test": true
      },
      "post": {
        "operationId": "WebhookResponse",
        "parameters": [],
        "responses": {
          "default": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [],
        "x-ms-visibility": "internal",
        "x-ms-no-generic-test": true
      }
    }
  },
  "produces": [],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [
    {
      "as_auth": [
        "agreement_read:self",
        "agreement_send:self",
        "agreement_write:self",
        "library_read:self",
        "library_write:self",
        "webhook_read:self",
        "webhook_write:self",
        "webhook_retention:self",
        "widget_read:self"
      ]
    }
  ],
  "securityDefinitions": {
    "as_auth": {
      "authorizationUrl": "https://static.adobesigncdn.com/sign-partner-oauth-cdn/oauthselector.html",
      "flow": "accessCode",
      "scopes": {
        "agreement_read:self": "agreement_read:self",
        "agreement_send:self": "agreement_send:self",
        "agreement_write:self": "agreement_write:self",
        "library_read:self": "library_read:self",
        "library_write:self": "library_write:self",
        "webhook_read:self": "webhook_read:self",
        "webhook_retention:self": "webhook_retention:self",
        "webhook_write:self": "webhook_write:self",
        "widget_read:self": "widget_read:self"
      },
      "tokenUrl": "https://api.adobesign.com/oauth/v2/token",
      "type": "oauth2"
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "Agreements",
      "name": "agreements"
    },
    {
      "description": "Combined or signed Agreement",
      "name": "combinedDocument"
    },
    {
      "description": "Documents",
      "name": "documents"
    },
    {
      "description": "Library documents",
      "name": "libraryDocuments"
    },
    {
      "description": "Transient Documents",
      "name": "transientDocuments"
    },
    {
      "description": "Webhooks",
      "name": "webhooks"
    }
  ],
  "x-ms-capabilities": {
    "testConnection": {
      "operationId": "GetAllAgreements_V2"
    }
  },
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/adobesign"
  }
}