{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "MailChimp",
    "description": "MailChimp is a SaaS service that allows businesses to manage and automate email marketing activities, including sending marketing emails, automated messages and targeted campaigns.",
    "x-ms-api-annotation": {
      "status": "Production"
    },
    "x-ms-keywords": [
      "mailchimp",
      "campaign",
      "campaigns",
      "lists"
    ],
    "contact": {
      "name": "Microsoft"
    }
  },
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/mailchimp",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectionId}/campaigns": {
      "post": {
        "tags": [
          "MailChimp"
        ],
        "summary": "New Campaign",
        "description": "Create a new campaign based on a Campaign Type, Recipients list and Campaign Settings (subject line, title, from_name and reply_to)",
        "operationId": "newcampaign",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "newCampaignRequest",
            "in": "body",
            "description": "Json object to send in the body with the new campaign request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewCampaignRequest"
            },
            "x-ms-summary": "Json object to send in the body with the new campaign request parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampaignResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "newcampaign",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#new-campaign-%5bdeprecated%5d"
        }
      },
      "get": {
        "tags": [
          "MailChimp"
        ],
        "summary": "List campaigns",
        "description": "This operation retrieves a list of campaigns in an account",
        "operationId": "GetCampaigns",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Response when getting campaigns",
              "type": "object",
              "properties": {
                "campaigns": {
                  "description": "An array of objects, each representing a campaign",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CampaignResponseModel"
                  },
                  "x-ms-summary": "Campaigns"
                }
              }
            }
          }
        },
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "summary": "List campaigns",
              "description": "This operation retrieves a list of campaigns in an account",
              "operationId": "GetCampaigns",
              "responses": {
                "200": {
                  "description": "OK",
                  "schema": {
                    "description": "Response when getting campaigns",
                    "type": "object"
                  }
                }
              }
            }
          ]
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#list-campaigns"
        }
      }
    },
    "/{connectionId}/v2/campaigns": {
      "post": {
        "tags": [
          "MailChimp"
        ],
        "summary": "New Campaign (V2)",
        "description": "Create a new campaign based on a Campaign Type, Recipients list and Campaign Settings (subject line, title, from_name and reply_to) (V2).",
        "operationId": "newcampaignV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "newCampaignRequest",
            "in": "body",
            "description": "Json object to send in the body with the new campaign request parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewCampaignRequestV2"
            },
            "x-ms-summary": "Json object to send in the body with the new campaign request parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CampaignResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "newcampaign",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#new-campaign-(v2)"
        }
      }
    },
    "/{connectionId}/campaigns/{campaign_id}/actions/send": {
      "post": {
        "tags": [
          "MailChimp"
        ],
        "summary": "Send Campaign",
        "description": "Send an existing campaign",
        "operationId": "sendcampaign",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "campaign_id",
            "in": "path",
            "description": "The unique id for the list",
            "required": true,
            "x-ms-summary": "Campaign",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetCampaigns",
              "value-collection": "campaigns",
              "value-path": "id",
              "value-title": "settings/title"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "sendcampaign",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#send-campaign"
        }
      }
    },
    "/{connectionId}/lists": {
      "get": {
        "tags": [
          "MailChimp"
        ],
        "summary": "Get all the lists",
        "description": "Find all the lists for the current user",
        "operationId": "GetLists",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of records to return. Default value is 10. Maximum value is 1000",
            "required": false,
            "x-ms-summary": "Maximum Results",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Default value is 0.",
            "required": false,
            "x-ms-summary": "Offset",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetListsResponseModel"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced",
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "summary": "Get all the lists",
              "description": "Find all the lists for the current user",
              "operationId": "GetLists",
              "responses": {
                "200": {
                  "description": "OK",
                  "schema": {
                    "description": "Response when getting lists",
                    "type": "object"
                  }
                }
              }
            }
          ]
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#get-all-the-lists"
        }
      },
      "post": {
        "tags": [
          "MailChimp"
        ],
        "summary": "New List",
        "description": "Create a new list in your MailChimp account",
        "operationId": "newlist",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "newListRequest",
            "in": "body",
            "description": "Json object to send in the body with the new campaign request parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewListRequest"
            },
            "x-ms-summary": "Json object to send in the body with the new campaign request parameters"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateNewListResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#new-list"
        }
      }
    },
    "/{connectionId}/lists/{list_id}": {
      "post": {
        "tags": [
          "MailChimp"
        ],
        "summary": "Subscribe or unsubscribe list members",
        "description": "Batch subscribe or unsubscribe list members.",
        "operationId": "AddMembers",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id for the list",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetLists",
              "parameters": {
                "count": 100
              },
              "value-collection": "lists",
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "skip_merge_validation",
            "in": "query",
            "description": "Allows member data to be accepted without merge field values",
            "required": false,
            "x-ms-summary": "Skip Merge Validation",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "skip_duplicate_check",
            "in": "query",
            "description": "Ignores duplicates sent in the request",
            "required": false,
            "x-ms-summary": "Skip Duplicate Check",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An array of objects, each representing an email address and the subscription status for a specific list. Up to 500 members may be added or updated with each API call.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewMembersInListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAddMembersBatchResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#subscribe-or-unsubscribe-list-members"
        }
      }
    },
    "/{connectionId}/lists/{list_id}/members": {
      "get": {
        "tags": [
          "MailChimp"
        ],
        "summary": "Show list members",
        "description": "Show all the members of a list",
        "operationId": "GetListMembers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id for the list",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetLists",
              "parameters": {
                "count": 100
              },
              "value-collection": "lists",
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of records to return. Default value is 10. Maximum value is 1000",
            "required": false,
            "x-ms-summary": "Maximum Results",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The number of records from a collection to skip. Default value is 0.",
            "required": false,
            "x-ms-summary": "Offset",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAllMembersResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#show-list-members"
        }
      },
      "post": {
        "tags": [
          "MailChimp"
        ],
        "summary": "Add member to list",
        "description": "Add or update a list member",
        "operationId": "addmember",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id for the list",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetLists",
              "parameters": {
                "count": 100
              },
              "value-collection": "lists",
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "newMemberInList",
            "in": "body",
            "description": "Json object to send in the body with the new member information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewMemberInListRequest"
            },
            "x-ms-summary": "New member information"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MemberResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "addmember",
              "x-ms-require-user-confirmation": true
            }
          ]
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#add-member-to-list"
        }
      }
    },
    "/{connectionId}/lists/replacemailwithhash/{list_id}/members/{member_email}": {
      "delete": {
        "tags": [
          "MailChimp"
        ],
        "summary": "Remove Member from list (Deprecated)",
        "description": "Delete a member from a list. (Deprecated)",
        "operationId": "removemember",
        "x-ms-api-annotation": {
          "family": "removemember",
          "revision": 1
        },
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id for the list",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetLists",
              "parameters": {
                "count": 100
              },
              "value-collection": "lists",
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "member_email",
            "in": "path",
            "description": "The email address of the member to delete",
            "required": true,
            "x-ms-summary": "Member email",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetListMembers",
              "parameters": {
                "list_id": {
                  "parameter": "list_id"
                },
                "count": 100
              },
              "value-collection": "members",
              "value-path": "email_address",
              "value-title": "email_address"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#remove-member-from-list-(deprecated)-%5bdeprecated%5d"
        }
      },
      "patch": {
        "tags": [
          "MailChimp"
        ],
        "summary": "Update member information. (Deprecated)",
        "description": "Update information for a specific list member (Deprecated)",
        "operationId": "updatemember",
        "x-ms-api-annotation": {
          "family": "updatemember",
          "revision": 1
        },
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id for the list",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetLists",
              "parameters": {
                "count": 100
              },
              "value-collection": "lists",
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "member_email",
            "in": "path",
            "description": "The unique email address of the member to update",
            "required": true,
            "x-ms-summary": "Member email",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetListMembers",
              "parameters": {
                "list_id": {
                  "parameter": "list_id"
                },
                "count": 100
              },
              "value-collection": "members",
              "value-path": "email_address",
              "value-title": "email_address"
            },
            "type": "string"
          },
          {
            "name": "updateMemberInListRequest",
            "in": "body",
            "description": "Json object to send in the body with the updated member information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMemberInListRequest"
            },
            "x-ms-summary": "Json object to send in the body with the updated member information"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MemberResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#update-member-information.-(deprecated)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/lists/replacemailwithhash/{list_id}/members": {
      "delete": {
        "tags": [
          "MailChimp"
        ],
        "summary": "Remove Member from list",
        "description": "Delete a member from a list.",
        "operationId": "removemember_v2",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "removemember",
          "revision": 2
        },
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id for the list",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetLists",
              "parameters": {
                "count": 100
              },
              "value-collection": "lists",
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "member_email",
            "in": "header",
            "description": "The email address of the member to delete",
            "required": true,
            "x-ms-summary": "Member email",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetListMembers",
              "parameters": {
                "list_id": {
                  "parameter": "list_id"
                },
                "count": 100
              },
              "value-collection": "members",
              "value-path": "email_address",
              "value-title": "email_address"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "removemember_v2",
              "x-ms-require-user-confirmation": true
            }
          ]
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#remove-member-from-list"
        }
      },
      "patch": {
        "tags": [
          "MailChimp"
        ],
        "summary": "Update member information",
        "description": "Update information for a specific list member.",
        "operationId": "updatemember_v2",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "updatemember",
          "revision": 2
        },
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id for the list",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetLists",
              "parameters": {
                "count": 100
              },
              "value-collection": "lists",
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "member_email",
            "in": "header",
            "description": "The unique email address of the member to update",
            "required": true,
            "x-ms-summary": "Member email",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetListMembers",
              "parameters": {
                "list_id": {
                  "parameter": "list_id"
                },
                "count": 100
              },
              "value-collection": "members",
              "value-path": "email_address",
              "value-title": "email_address"
            },
            "type": "string"
          },
          {
            "name": "updateMemberInListRequest",
            "in": "body",
            "description": "Json object to send in the body with the updated member information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateMemberInListRequest"
            },
            "x-ms-summary": "Json object to send in the body with the updated member information"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MemberResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#update-member-information"
        }
      }
    },
    "/{connectionId}/trigger/lists/{list_id}/members": {
      "get": {
        "tags": [
          "MailChimp"
        ],
        "summary": "When a Member has been added to a list",
        "description": "Triggers a workflow when a new member has been added to a list",
        "operationId": "OnMemberSubscribed",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id for the list",
            "required": true,
            "x-ms-summary": "List ID",
            "x-ms-dynamic-values": {
              "operationId": "GetLists",
              "parameters": {
                "count": 100
              },
              "value-collection": "lists",
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetMembersResponseModel"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, add a member to a MailChimp list.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#when-a-member-has-been-added-to-a-list"
        }
      }
    },
    "/{connectionId}/trigger/lists": {
      "get": {
        "tags": [
          "MailChimp"
        ],
        "summary": "When a new list is created",
        "description": "Triggers a workflow when a new list is created",
        "operationId": "OnCreateList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetListsResponseModel"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, create a MailChimp list.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/mailchimp/#when-a-new-list-is-created"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    }
  },
  "definitions": {
    "NewCampaignRequest": {
      "description": "Body parameters to create a new campaign",
      "required": [
        "type",
        "recipients",
        "settings"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "There are four types of campaigns you can create in MailChimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead. Possible Values: regular, plaintext, absplit, rss, variate",
          "enum": [
            "",
            "regular",
            "plaintext",
            "absplit",
            "rss",
            "variate"
          ],
          "type": "string",
          "x-ms-summary": "Campaign Type",
          "x-ms-visibility": "important"
        },
        "recipients": {
          "$ref": "#/definitions/Recipient"
        },
        "settings": {
          "$ref": "#/definitions/Settings"
        },
        "variate_settings": {
          "$ref": "#/definitions/Variate_Settings"
        },
        "tracking": {
          "$ref": "#/definitions/Tracking"
        },
        "rss_opts": {
          "$ref": "#/definitions/RSS_Opts"
        },
        "social_card": {
          "$ref": "#/definitions/Social_Card"
        }
      }
    },
    "Recipient": {
      "description": "Settings for the campaign",
      "required": [
        "list_id"
      ],
      "type": "object",
      "properties": {
        "list_id": {
          "description": "The unique list id",
          "type": "string",
          "x-ms-summary": "List Id",
          "x-ms-visibility": "important",
          "x-ms-dynamic-values": {
            "operationId": "GetLists",
            "parameters": {
              "count": 100
            },
            "value-collection": "lists",
            "value-path": "id",
            "value-title": "name"
          }
        },
        "segment_opts": {
          "$ref": "#/definitions/Segment_Opts"
        }
      }
    },
    "Settings": {
      "description": "Settings for the campaign",
      "required": [
        "subject_line",
        "from_name",
        "reply_to"
      ],
      "type": "object",
      "properties": {
        "subject_line": {
          "description": "The subject line for the campaign",
          "type": "string",
          "x-ms-summary": "Campaign Subject Line",
          "x-ms-visibility": "important"
        },
        "title": {
          "description": "The title of the campaign",
          "type": "string",
          "x-ms-summary": "Title",
          "x-ms-visibility": "advanced"
        },
        "from_name": {
          "description": "The 'from' name on the campaign (not an email address)",
          "type": "string",
          "x-ms-summary": "From Name",
          "x-ms-visibility": "important"
        },
        "reply_to": {
          "description": "The reply-to email address for the campaign",
          "type": "string",
          "x-ms-summary": "Reply To Address",
          "x-ms-visibility": "important"
        },
        "use_conversation": {
          "description": "Use MailChimp Conversation feature to manage out-of-office replies",
          "type": "boolean",
          "x-ms-summary": "Conversation",
          "x-ms-visibility": "advanced"
        },
        "to_name": {
          "description": "The campaign's custom 'To' name. Typically the first name merge field",
          "type": "string",
          "x-ms-summary": "To Name",
          "x-ms-visibility": "advanced"
        },
        "folder_id": {
          "format": "int32",
          "description": "If the campaign is listed in a folder, the id for that folder",
          "type": "integer",
          "x-ms-summary": "Folder ID",
          "x-ms-visibility": "advanced"
        },
        "authenticate": {
          "description": "Whether MailChimp authenticated the campaign. Defaults to true",
          "type": "boolean",
          "x-ms-summary": "Authentication",
          "x-ms-visibility": "advanced"
        },
        "auto_footer": {
          "description": "Automatically append MailChimp's default footer to the campaign",
          "type": "boolean",
          "x-ms-summary": "Auto-Footer",
          "x-ms-visibility": "advanced"
        },
        "inline_css": {
          "description": "Automatically inline the CSS included with the campaign content",
          "type": "boolean",
          "x-ms-summary": "Inline CSS",
          "x-ms-visibility": "advanced"
        },
        "auto_tweet": {
          "description": "Automatically tweet a link to the campaign archive page when the campaign is sent",
          "type": "boolean",
          "x-ms-summary": "Auto-Tweet",
          "x-ms-visibility": "advanced"
        },
        "auto_fb_post": {
          "description": "An array of Facebook page ids to auto-post to",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-ms-summary": "Auto Post to Facebook",
          "x-ms-visibility": "advanced"
        },
        "fb_comments": {
          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to true",
          "type": "boolean",
          "x-ms-summary": "Facebook Comments",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Variate_Settings": {
      "description": "Settings for the campaign",
      "type": "object",
      "properties": {
        "winner_criteria": {
          "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue—or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_critera is ignored. For Multivariate Campaigns with 'manual' as the winner_citeria, the winner must be chosen in the MailChimp web application",
          "type": "string",
          "x-ms-summary": "Winning Criteria",
          "x-ms-visibility": "advanced"
        },
        "wait_time": {
          "format": "int32",
          "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes",
          "type": "integer",
          "x-ms-summary": "Wait Time",
          "x-ms-visibility": "advanced"
        },
        "test_size": {
          "format": "int32",
          "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100",
          "type": "integer",
          "x-ms-summary": "Test Size",
          "x-ms-visibility": "advanced"
        },
        "subject_lines": {
          "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Subject Lines",
          "x-ms-visibility": "advanced"
        },
        "send_times": {
          "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Send Times",
          "x-ms-visibility": "advanced"
        },
        "from_names": {
          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "From Names",
          "x-ms-visibility": "advanced"
        },
        "reply_to_addresses": {
          "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Reply To Addresses",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Tracking": {
      "description": "Settings for the campaign",
      "type": "object",
      "properties": {
        "opens": {
          "description": "Whether to track opens. Defaults to true. Cannot be set to false for variate campaigns",
          "type": "boolean",
          "x-ms-summary": "Opens",
          "x-ms-visibility": "advanced"
        },
        "html_clicks": {
          "description": "Whether to track clicks in the HTML version of the campaign. Defaults to true. Cannot be set to false for variate campaigns",
          "type": "boolean",
          "x-ms-summary": "HTML Click Tracking",
          "x-ms-visibility": "advanced"
        },
        "text_clicks": {
          "description": "Whether to track clicks in the plain-text version of the campaign. Defaults to true. Cannot be set to false for variate campaigns",
          "type": "boolean",
          "x-ms-summary": "Plain-Text Click Tracking",
          "x-ms-visibility": "advanced"
        },
        "goal_tracking": {
          "description": "Whether to enable Goal tracking",
          "type": "boolean",
          "x-ms-summary": "MailChimp Goal Tracking",
          "x-ms-visibility": "advanced"
        },
        "ecomm360": {
          "description": "Whether to enable eCommerce360 tracking",
          "type": "boolean",
          "x-ms-summary": "eCommerce360 Tracking",
          "x-ms-visibility": "advanced"
        },
        "google_analytics": {
          "description": "The custom slug for Google Analytics tracking (max of 50 bytes)",
          "type": "string",
          "x-ms-summary": "Google Analytics Tracking",
          "x-ms-visibility": "advanced"
        },
        "clicktale": {
          "description": "The custom slug for ClickTale tracking (max of 50 bytes)",
          "type": "string",
          "x-ms-summary": "ClickTale Analytics Tracking",
          "x-ms-visibility": "advanced"
        },
        "salesforce": {
          "$ref": "#/definitions/Salesforce"
        },
        "highrise": {
          "$ref": "#/definitions/Highrise"
        },
        "capsule": {
          "$ref": "#/definitions/Capsule"
        }
      }
    },
    "RSS_Opts": {
      "description": "RSS options for a campaign",
      "type": "object",
      "properties": {
        "feed_url": {
          "description": "The URL for the RSS feed",
          "type": "string",
          "x-ms-summary": "Feed URL",
          "x-ms-visibility": "advanced"
        },
        "frequency": {
          "description": "The frequency of the RSS Campaign",
          "enum": [
            "",
            "daily",
            "weekly",
            "monthly"
          ],
          "type": "string",
          "x-ms-summary": "Frequency",
          "x-ms-visibility": "advanced"
        },
        "constrain_rss_img": {
          "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns",
          "type": "string",
          "x-ms-summary": "Constrain RSS Images",
          "x-ms-visibility": "advanced"
        },
        "schedule": {
          "$ref": "#/definitions/Schedule"
        }
      }
    },
    "Social_Card": {
      "description": "Settings for the campaign",
      "type": "object",
      "properties": {
        "image_url": {
          "description": "The url for the header image for the card",
          "type": "string",
          "x-ms-summary": "Image URL",
          "x-ms-visibility": "advanced"
        },
        "description": {
          "description": "A short summary of the campaign to display",
          "type": "string",
          "x-ms-summary": "Campaign Description",
          "x-ms-visibility": "advanced"
        },
        "title": {
          "description": "The title for the card. Typically the subject line of the campaign",
          "type": "string",
          "x-ms-summary": "Title",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Segment_Opts": {
      "description": "An object representing all segmentation options",
      "type": "object",
      "properties": {
        "saved_segment_id": {
          "format": "int32",
          "description": "The id for an existing saved segment",
          "type": "integer",
          "x-ms-summary": "Saved Segment ID",
          "x-ms-visibility": "advanced"
        },
        "match": {
          "description": "Segment match type: Possible Values: any, all",
          "type": "string",
          "x-ms-summary": "Match Type",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Salesforce": {
      "description": "Salesforce tracking options for a campaign. Must be using MailChimp’s built-in Salesforce integration",
      "type": "object",
      "properties": {
        "campaign": {
          "description": "Create a campaign in a connected Salesforce account",
          "type": "boolean",
          "x-ms-summary": "Salesforce Campaign",
          "x-ms-visibility": "advanced"
        },
        "notes": {
          "description": "Update contact notes for a campaign based on subscriber email addresses",
          "type": "boolean",
          "x-ms-summary": "Salesforce Note",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Highrise": {
      "description": "Highrise tracking options for a campaign. Must be using MailChimp’s built-in Highrise integration",
      "type": "object",
      "properties": {
        "campaign": {
          "description": "Create a campaign in a connected Highrise account",
          "type": "boolean",
          "x-ms-summary": "Highrise Campaign",
          "x-ms-visibility": "advanced"
        },
        "notes": {
          "description": "Update contact notes for a campaign based on subscriber email addresses",
          "type": "boolean",
          "x-ms-summary": "Highrise Note",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Capsule": {
      "description": "Capsule tracking options for a campaign. Must be using MailChimp’s built-in Capsule integration",
      "type": "object",
      "properties": {
        "notes": {
          "description": "Update contact notes for a campaign based on subscriber email addresses",
          "type": "boolean",
          "x-ms-summary": "Capsule Note",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Schedule": {
      "description": "The schedule for sending the RSS Campaign",
      "type": "object",
      "properties": {
        "hour": {
          "format": "int32",
          "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, ‘4’ would be 4am in your account’s default time zone",
          "type": "integer",
          "x-ms-summary": "Sending Hour",
          "x-ms-visibility": "advanced"
        },
        "daily_send": {
          "$ref": "#/definitions/Daily_Send"
        },
        "weekly_send_day": {
          "description": "The day of the week to send a weekly RSS Campaign",
          "enum": [
            "",
            "sunday",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday"
          ],
          "type": "string",
          "x-ms-summary": "Weekly Sending Day",
          "x-ms-visibility": "advanced"
        },
        "monthly_send_date": {
          "format": "float",
          "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 1-32, where ‘0’ is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February",
          "type": "number",
          "x-ms-summary": "Monthly Sending Day",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Daily_Send": {
      "description": "The days of the week to send a daily RSS Campaign.",
      "type": "object",
      "properties": {
        "sunday": {
          "description": "Sends the daily RSS Campaign on Sundays",
          "type": "boolean",
          "x-ms-summary": "Sunday",
          "x-ms-visibility": "advanced"
        },
        "monday": {
          "description": "Sends the daily RSS Campaign on Mondays",
          "type": "boolean",
          "x-ms-summary": "Monday",
          "x-ms-visibility": "advanced"
        },
        "tuesday": {
          "description": "Sends the daily RSS Campaign on Tuesdays",
          "type": "boolean",
          "x-ms-summary": "Tuesday",
          "x-ms-visibility": "advanced"
        },
        "wednesday": {
          "description": "Sends the daily RSS Campaign on Wednesdays",
          "type": "boolean",
          "x-ms-summary": "Wednesday",
          "x-ms-visibility": "advanced"
        },
        "thursday": {
          "description": "Sends the daily RSS Campaign on Thursdays",
          "type": "boolean",
          "x-ms-summary": "Thursday",
          "x-ms-visibility": "advanced"
        },
        "friday": {
          "description": "Sends the daily RSS Campaign on Fridays",
          "type": "boolean",
          "x-ms-summary": "Friday",
          "x-ms-visibility": "advanced"
        },
        "saturday": {
          "description": "Sends the daily RSS Campaign on Saturdays",
          "type": "boolean",
          "x-ms-summary": "Saturday",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CampaignResponseModel": {
      "description": "New Campaign Result Model",
      "type": "object",
      "properties": {
        "id": {
          "description": "A string that uniquely identifies this campaign",
          "type": "string",
          "x-ms-summary": "Campaign ID",
          "x-ms-visibility": "advanced"
        },
        "type": {
          "description": "There are four types of campaigns you can create in MailChimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead",
          "enum": [
            "",
            "regular",
            "plaintext",
            "absplit",
            "rss",
            "variate"
          ],
          "type": "string",
          "x-ms-summary": "Campaign Type",
          "x-ms-visibility": "important"
        },
        "create_time": {
          "description": "The date and time the campaign was created",
          "type": "string",
          "x-ms-summary": "Created Time",
          "x-ms-visibility": "advanced"
        },
        "archive_url": {
          "description": "The link to the campaign’s archive version",
          "type": "string",
          "x-ms-summary": "Archive URL",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "The link to the campaign’s archive version",
          "type": "string",
          "x-ms-summary": "Status",
          "x-ms-visibility": "advanced"
        },
        "emails_sent": {
          "format": "int32",
          "description": "The total number of emails sent for this campaign",
          "type": "integer",
          "x-ms-summary": "Emails Sent",
          "x-ms-visibility": "advanced"
        },
        "send_time": {
          "description": "The time and date a campaign was sent",
          "type": "string",
          "x-ms-summary": "Send Time",
          "x-ms-visibility": "advanced"
        },
        "content_type": {
          "description": "How the campaign’s content is put together (‘template’, ‘drag_and_drop’, ‘html’, ‘url’)",
          "type": "string",
          "x-ms-summary": "Content Type",
          "x-ms-visibility": "advanced"
        },
        "recipient": {
          "description": "List settings for the campaign",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Recipient"
          },
          "x-ms-summary": "List",
          "x-ms-visibility": "advanced"
        },
        "settings": {
          "$ref": "#/definitions/SettingsV2"
        },
        "variate_settings": {
          "$ref": "#/definitions/Variate_Settings"
        },
        "tracking": {
          "$ref": "#/definitions/Tracking"
        },
        "rss_opts": {
          "$ref": "#/definitions/RSS_Opts"
        },
        "ab_split_opts": {
          "$ref": "#/definitions/AB_Split_Opts"
        },
        "social_card": {
          "$ref": "#/definitions/Social_Card"
        },
        "report_summary": {
          "$ref": "#/definitions/Report_Summary"
        },
        "delivery_status": {
          "$ref": "#/definitions/Delivery_Status"
        },
        "_links": {
          "description": "A list of link types and descriptions for the API schema documents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-visibility": "advanced"
        }
      }
    },
    "SettingsV2": {
      "description": "Settings for the campaign",
      "required": [
        "subject_line",
        "from_name",
        "reply_to"
      ],
      "type": "object",
      "properties": {
        "subject_line": {
          "description": "The subject line for the campaign",
          "type": "string",
          "x-ms-summary": "Campaign Subject Line",
          "x-ms-visibility": "important"
        },
        "title": {
          "description": "The title of the campaign",
          "type": "string",
          "x-ms-summary": "Title",
          "x-ms-visibility": "advanced"
        },
        "from_name": {
          "description": "The 'from' name on the campaign (not an email address)",
          "type": "string",
          "x-ms-summary": "From Name",
          "x-ms-visibility": "important"
        },
        "reply_to": {
          "description": "The reply-to email address for the campaign",
          "type": "string",
          "x-ms-summary": "Reply To Address",
          "x-ms-visibility": "important"
        },
        "use_conversation": {
          "description": "Use MailChimp Conversation feature to manage out-of-office replies",
          "type": "boolean",
          "x-ms-summary": "Conversation",
          "x-ms-visibility": "advanced"
        },
        "to_name": {
          "description": "The campaign's custom 'To' name. Typically the first name merge field",
          "type": "string",
          "x-ms-summary": "To Name",
          "x-ms-visibility": "advanced"
        },
        "folder_id": {
          "description": "If the campaign is listed in a folder, the id for that folder",
          "type": "string",
          "x-ms-summary": "Folder ID",
          "x-ms-visibility": "advanced"
        },
        "authenticate": {
          "description": "Whether MailChimp authenticated the campaign. Defaults to true",
          "type": "boolean",
          "x-ms-summary": "Authentication",
          "x-ms-visibility": "advanced"
        },
        "auto_footer": {
          "description": "Automatically append MailChimp's default footer to the campaign",
          "type": "boolean",
          "x-ms-summary": "Auto-Footer",
          "x-ms-visibility": "advanced"
        },
        "inline_css": {
          "description": "Automatically inline the CSS included with the campaign content",
          "type": "boolean",
          "x-ms-summary": "Inline CSS",
          "x-ms-visibility": "advanced"
        },
        "auto_tweet": {
          "description": "Automatically tweet a link to the campaign archive page when the campaign is sent",
          "type": "boolean",
          "x-ms-summary": "Auto-Tweet",
          "x-ms-visibility": "advanced"
        },
        "auto_fb_post": {
          "description": "An array of Facebook page ids to auto-post to",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "x-ms-summary": "Auto Post to Facebook",
          "x-ms-visibility": "advanced"
        },
        "fb_comments": {
          "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to true",
          "type": "boolean",
          "x-ms-summary": "Facebook Comments",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "AB_Split_Opts": {
      "description": "A/B Testing options for a campaign",
      "type": "object",
      "properties": {
        "split_test": {
          "description": "The type of AB split to run",
          "type": "string",
          "x-ms-summary": "Split Test",
          "x-ms-visibility": "advanced"
        },
        "pick_winner": {
          "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'",
          "type": "string",
          "x-ms-summary": "Pick Winner",
          "x-ms-visibility": "advanced"
        },
        "wait_units": {
          "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent",
          "type": "string",
          "x-ms-summary": "Wait Time",
          "x-ms-visibility": "advanced"
        },
        "wait_time": {
          "format": "int32",
          "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent",
          "type": "integer",
          "x-ms-summary": "Wait Time",
          "x-ms-visibility": "advanced"
        },
        "split_size": {
          "format": "int32",
          "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50",
          "type": "integer",
          "x-ms-summary": "Split Size",
          "x-ms-visibility": "advanced"
        },
        "from_name_a": {
          "description": "For campaigns split on 'From Name', the name for Group A",
          "type": "string",
          "x-ms-summary": "From Name Group A",
          "x-ms-visibility": "advanced"
        },
        "from_name_b": {
          "description": "For campaigns split on 'From Name', the name for Group B",
          "type": "string",
          "x-ms-summary": "From Name Group B",
          "x-ms-visibility": "advanced"
        },
        "reply_email_a": {
          "description": "For campaigns split on ‘From Name’, the reply-to address for Group A",
          "type": "string",
          "x-ms-summary": "Reply Email Group A",
          "x-ms-visibility": "advanced"
        },
        "reply_email_b": {
          "description": "For campaigns split on ‘From Name’, the reply-to address for Group B",
          "type": "string",
          "x-ms-summary": "Reply Email Group B",
          "x-ms-visibility": "advanced"
        },
        "subject_a": {
          "description": "For campaigns split on ‘Subject Line’, the subject line for Group A",
          "type": "string",
          "x-ms-summary": "Subject Line Group A",
          "x-ms-visibility": "advanced"
        },
        "subject_b": {
          "description": "For campaigns split on ‘Subject Line’, the subject line for Group B",
          "type": "string",
          "x-ms-summary": "Subject Line Group B",
          "x-ms-visibility": "advanced"
        },
        "send_time_a": {
          "description": "The send time for Group A",
          "type": "string",
          "x-ms-summary": "Send Time Group A",
          "x-ms-visibility": "advanced"
        },
        "send_time_b": {
          "description": "The send time for Group B",
          "type": "string",
          "x-ms-summary": "Send Time Group B",
          "x-ms-visibility": "advanced"
        },
        "send_time_winner": {
          "description": "The send time for the winning version",
          "type": "string",
          "x-ms-summary": "Send Time Winner",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Report_Summary": {
      "description": "For sent campaigns, a summary of opens, clicks, and unsubscribes",
      "type": "object",
      "properties": {
        "opens": {
          "format": "int32",
          "description": "The total number of opens for a campaign",
          "type": "integer",
          "x-ms-summary": "Automation Opens",
          "x-ms-visibility": "advanced"
        },
        "unique_opens": {
          "format": "int32",
          "description": "The number of unique opens",
          "type": "integer",
          "x-ms-summary": "Unique Opens",
          "x-ms-visibility": "advanced"
        },
        "open_rate": {
          "format": "float",
          "description": "The number of unique opens divided by the total number of successful deliveries",
          "type": "number",
          "x-ms-summary": "Open Rate",
          "x-ms-visibility": "advanced"
        },
        "clicks": {
          "format": "int32",
          "description": "The total number of clicks for an campaign",
          "type": "integer",
          "x-ms-summary": "Total Clicks",
          "x-ms-visibility": "advanced"
        },
        "subscriber_clicks": {
          "format": "float",
          "description": "The number of unique clicks",
          "type": "number",
          "x-ms-summary": "Unique Subscriber Clicks",
          "x-ms-visibility": "advanced"
        },
        "click_rate": {
          "format": "float",
          "description": "The number of unique clicks divided by the total number of successful deliveries",
          "type": "number",
          "x-ms-summary": "Click Rate",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Delivery_Status": {
      "description": "Updates on campaigns in the process of sending",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether Campaign Delivery Status is enabled for this account and campaign",
          "type": "boolean",
          "x-ms-summary": "Delivery Staut Enabled",
          "x-ms-visibility": "advanced"
        },
        "can_cancel": {
          "description": "Whether a campaign send can be canceled",
          "type": "boolean",
          "x-ms-summary": "Campaign Cancelable",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "The current state of a campaign delivery",
          "type": "string",
          "x-ms-summary": "Campaign Delivery Status",
          "x-ms-visibility": "advanced"
        },
        "emails_sent": {
          "format": "int32",
          "description": "The total number of emails confirmed sent for this campaign so far",
          "type": "integer",
          "x-ms-summary": "Emails Sent",
          "x-ms-visibility": "advanced"
        },
        "emails_canceled": {
          "format": "int32",
          "description": "The total number of emails canceled for this campaign",
          "type": "integer",
          "x-ms-summary": "Emails Canceled",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Link": {
      "description": "Capsule tracking options for a campaign. Must be using MailChimp’s built-in Capsule integration",
      "type": "object",
      "properties": {
        "rel": {
          "description": "As with an HTML ‘rel’ attribute, this describes the type of link",
          "type": "string",
          "x-ms-summary": "Rel",
          "x-ms-visibility": "advanced"
        },
        "href": {
          "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action",
          "type": "string",
          "x-ms-summary": "Href",
          "x-ms-visibility": "advanced"
        },
        "method": {
          "description": "The HTTP method that should be used when accessing the URL defined in ‘href’. (GET, POST, PUT, PATCH, DELETE, OPTIONS, HEAD)",
          "type": "string",
          "x-ms-summary": "Method",
          "x-ms-visibility": "advanced"
        },
        "targetSchema": {
          "description": "For GETs, this is a URL representing the schema that the response should conform to",
          "type": "string",
          "x-ms-summary": "Target Schema",
          "x-ms-visibility": "advanced"
        },
        "schema": {
          "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to",
          "type": "string",
          "x-ms-summary": "Schema",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "NewCampaignRequestV2": {
      "description": "Body parameters to create a new campaign (V2)",
      "required": [
        "type",
        "recipients",
        "settings"
      ],
      "type": "object",
      "properties": {
        "type": {
          "description": "There are four types of campaigns you can create in MailChimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead. Possible Values: regular, plaintext, absplit, rss, variate",
          "enum": [
            "",
            "regular",
            "plaintext",
            "absplit",
            "rss",
            "variate"
          ],
          "type": "string",
          "x-ms-summary": "Campaign Type",
          "x-ms-visibility": "important"
        },
        "recipients": {
          "$ref": "#/definitions/Recipient"
        },
        "settings": {
          "$ref": "#/definitions/SettingsV2"
        },
        "variate_settings": {
          "$ref": "#/definitions/Variate_Settings"
        },
        "tracking": {
          "$ref": "#/definitions/Tracking"
        },
        "rss_opts": {
          "$ref": "#/definitions/RSS_Opts"
        },
        "social_card": {
          "$ref": "#/definitions/Social_Card"
        }
      }
    },
    "NewListRequest": {
      "description": "Body parameters to create a new campaign",
      "required": [
        "name",
        "contact",
        "permission_reminder",
        "campaign_defaults",
        "email_type_option"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the list",
          "type": "string",
          "x-ms-summary": "List Name",
          "x-ms-visibility": "important"
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        },
        "permission_reminder": {
          "description": "Text to remind people how they signed up to this list",
          "type": "string",
          "x-ms-summary": "Permission Reminder",
          "x-ms-visibility": "important"
        },
        "use_archive_bar": {
          "description": "Whether campaigns for this list use the Archive Bar in archives by default",
          "type": "boolean",
          "x-ms-summary": "Use Archive Bar",
          "x-ms-visibility": "advanced"
        },
        "campaign_defaults": {
          "$ref": "#/definitions/Campaign_Defaults"
        },
        "notify_on_subscribe": {
          "description": "The email address to send subscribe notifications to",
          "type": "string",
          "x-ms-summary": "Notify on Subscribe",
          "x-ms-visibility": "advanced"
        },
        "notify_on_unsubscribe": {
          "description": "The email address to send unsubscribe notifications to",
          "type": "string",
          "x-ms-summary": "Notify on Unsubscribe",
          "x-ms-visibility": "advanced"
        },
        "email_type_option": {
          "description": "When set to true, subscribers can choose whether they want to receive HTML or plain-text emails. When set to false, subscribers will receive HTML emails, with a plain-text alternative backup",
          "default": true,
          "type": "boolean",
          "x-ms-summary": "Allow users to choose between HTML and Plain text (true/false)?",
          "x-ms-visibility": "important"
        },
        "visibility": {
          "description": "Whether this list is public or private",
          "enum": [
            "",
            "pub",
            "prv"
          ],
          "type": "string",
          "x-ms-summary": "Visibility",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Contact": {
      "description": "Capsule tracking options for a campaign. Must be using MailChimp’s built-in Capsule integration",
      "required": [
        "company",
        "address1",
        "city",
        "state",
        "zip",
        "country",
        "phone"
      ],
      "type": "object",
      "properties": {
        "company": {
          "description": "The company name for the list",
          "type": "string",
          "x-ms-summary": "Company Name",
          "x-ms-visibility": "important"
        },
        "address1": {
          "description": "The street address for the list contact",
          "type": "string",
          "x-ms-summary": "Address Line 1",
          "x-ms-visibility": "important"
        },
        "address2": {
          "description": "The street address for the list contact",
          "type": "string",
          "x-ms-summary": "Address Line 2",
          "x-ms-visibility": "advanced"
        },
        "city": {
          "description": "The city for the list contact",
          "type": "string",
          "x-ms-summary": "City",
          "x-ms-visibility": "important"
        },
        "state": {
          "description": "The state for the list contact",
          "type": "string",
          "x-ms-summary": "State",
          "x-ms-visibility": "important"
        },
        "zip": {
          "description": "The postal or zip code for the list contact",
          "type": "string",
          "x-ms-summary": "Postal Code",
          "x-ms-visibility": "important"
        },
        "country": {
          "description": "A two-character ISO3166 country code. Defaults to US if invalid",
          "default": "US",
          "type": "string",
          "x-ms-summary": "Country Code",
          "x-ms-visibility": "important"
        },
        "phone": {
          "description": "The phone number for the list contact",
          "type": "string",
          "x-ms-summary": "Phone Number",
          "x-ms-visibility": "important"
        }
      }
    },
    "Campaign_Defaults": {
      "description": "Capsule tracking options for a campaign. Must be using MailChimp’s built-in Capsule integration",
      "required": [
        "from_name",
        "from_email",
        "subject",
        "language"
      ],
      "type": "object",
      "properties": {
        "from_name": {
          "description": "The default from name for campaigns sent to this list",
          "type": "string",
          "x-ms-summary": "Sender's Name",
          "x-ms-visibility": "important"
        },
        "from_email": {
          "description": "The default from email for campaigns sent to this list",
          "type": "string",
          "x-ms-summary": "Sender's Email Address",
          "x-ms-visibility": "important"
        },
        "subject": {
          "description": "The default subject line for campaigns sent to this list",
          "type": "string",
          "x-ms-summary": "Subject",
          "x-ms-visibility": "important"
        },
        "language": {
          "description": "The default language for this lists’s forms",
          "default": "en",
          "enum": [
            "",
            "en",
            "ar",
            "af",
            "be",
            "bg",
            "ca",
            "zh",
            "hr",
            "cs",
            "da",
            "nl",
            "et",
            "fa",
            "fi",
            "fr",
            "fr_CA",
            "de",
            "el",
            "he",
            "hi",
            "hu",
            "is",
            "id",
            "ga",
            "it",
            "ja",
            "km",
            "ko",
            "lv",
            "lt",
            "mt",
            "ms",
            "mk",
            "no",
            "pl",
            "pt",
            "pt_PT",
            "ro",
            "ru",
            "sr",
            "sk",
            "sl",
            "es",
            "es_ES",
            "sw",
            "sv",
            "ta",
            "th",
            "tr",
            "uk",
            "vi"
          ],
          "type": "string",
          "x-ms-summary": "Language",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CreateNewListResponseModel": {
      "description": "Create New List Result Model",
      "required": [
        "id",
        "name",
        "contact",
        "permission_reminder",
        "campaign_defaults",
        "email_type_option"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "A string that uniquely identifies this list",
          "type": "string",
          "x-ms-summary": "List ID",
          "x-ms-visibility": "important"
        },
        "name": {
          "description": "The name of the list",
          "type": "string",
          "x-ms-summary": "List Name",
          "x-ms-visibility": "important"
        },
        "contact": {
          "$ref": "#/definitions/Contact"
        },
        "permission_reminder": {
          "description": "The permission reminder for the list",
          "type": "string",
          "x-ms-summary": "Permission Reminder",
          "x-ms-visibility": "important"
        },
        "use_archive_bar": {
          "description": "Whether campaigns for this list use the Archive Bar in archives by default",
          "type": "boolean",
          "x-ms-summary": "Use Archive Bar",
          "x-ms-visibility": "advanced"
        },
        "campaign_defaults": {
          "$ref": "#/definitions/Campaign_Defaults"
        },
        "notify_on_subscribe": {
          "description": "The email address to send subscribe notifications to",
          "type": "string",
          "x-ms-summary": "Notify on Subscribe",
          "x-ms-visibility": "advanced"
        },
        "notify_on_unsubscribe": {
          "description": "The email address to send unsubscribe notifications to",
          "type": "string",
          "x-ms-summary": "Notify on Unsubscribe",
          "x-ms-visibility": "advanced"
        },
        "date_created": {
          "description": "The date and time that this list was created",
          "type": "string",
          "x-ms-summary": "Creation Date",
          "x-ms-visibility": "advanced"
        },
        "list_rating": {
          "format": "int32",
          "description": "An auto-generated activity score for the list (0-5)",
          "type": "integer",
          "x-ms-summary": "List Rating",
          "x-ms-visibility": "advanced"
        },
        "email_type_option": {
          "description": "Whether the list supports multiple formats for emails.When set to true, subscribers can choose whether they want to receive HTML or plain-text emails.When set to false, subscribers will receive HTML emails, with a plain-text alternative backup",
          "type": "boolean",
          "x-ms-summary": "Email Type Option",
          "x-ms-visibility": "advanced"
        },
        "subscribe_url_short": {
          "description": "Our EepURL shortened version of this list’s subscribe form",
          "type": "string",
          "x-ms-summary": "Subscribe URL Short",
          "x-ms-visibility": "advanced"
        },
        "subscribe_url_long": {
          "description": "The full version of this list’s subscribe form (host will vary)",
          "type": "string",
          "x-ms-summary": "Subscribe URL Long",
          "x-ms-visibility": "advanced"
        },
        "beamer_address": {
          "description": "The list’s Email Beamer address",
          "type": "string",
          "x-ms-summary": "Beamer Address",
          "x-ms-visibility": "advanced"
        },
        "visibility": {
          "description": "Whether this list is public or private",
          "type": "string",
          "x-ms-summary": "Visibility",
          "x-ms-visibility": "advanced"
        },
        "modules": {
          "description": "Any list-specific modules installed for this list",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Modules",
          "x-ms-visibility": "advanced"
        },
        "stats": {
          "$ref": "#/definitions/Stats"
        },
        "_links": {
          "description": "A list of link types and descriptions for the API schema documents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-summary": "Links",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Stats": {
      "description": "Stats for the list. Many of these are cached for at least five minutes",
      "type": "object",
      "properties": {
        "member_count": {
          "format": "int32",
          "description": "The number of active members in the list",
          "type": "integer",
          "x-ms-summary": "Member Count",
          "x-ms-visibility": "advanced"
        },
        "unsubscribe_count": {
          "format": "int32",
          "description": "The number of members who have unsubscribed from the list",
          "type": "integer",
          "x-ms-summary": "Unsubscribe Count",
          "x-ms-visibility": "advanced"
        },
        "cleaned_count": {
          "format": "int32",
          "description": "The number of members cleaned from the list",
          "type": "integer",
          "x-ms-summary": "Cleaned Count",
          "x-ms-visibility": "advanced"
        },
        "member_count_since_send": {
          "format": "int32",
          "description": "The number of active members in the list since the last campaign was sent",
          "type": "integer",
          "x-ms-summary": "Member Count Since Send",
          "x-ms-visibility": "advanced"
        },
        "unsubscribe_count_since_send": {
          "format": "int32",
          "description": "The number of members who have unsubscribed since the last campaign was sent",
          "type": "integer",
          "x-ms-summary": "Unsubscribe Count Since Send",
          "x-ms-visibility": "advanced"
        },
        "cleaned_count_since_send": {
          "format": "int32",
          "description": "The number of members cleaned from the list since the last campaign was sent",
          "type": "integer",
          "x-ms-summary": "Cleaned Count Since Send",
          "x-ms-visibility": "advanced"
        },
        "campaign_count": {
          "format": "int32",
          "description": "The number of campaigns in any status that use this list",
          "type": "integer",
          "x-ms-summary": "Campaign Count",
          "x-ms-visibility": "advanced"
        },
        "campaign_last_sent": {
          "format": "date-time",
          "description": "The date and time the last campaign was sent to this list",
          "type": "string",
          "x-ms-summary": "Campaign Last Sent",
          "x-ms-visibility": "advanced"
        },
        "merge_field_count": {
          "format": "int32",
          "description": "The number of merge vars for this list (not EMAIL, which is required)",
          "type": "integer",
          "x-ms-summary": "Merge Var Count",
          "x-ms-visibility": "advanced"
        },
        "avg_sub_rate": {
          "format": "float",
          "description": "The average number of subscriptions per month for the list(not returned if we haven’t calculated it yet)",
          "type": "number",
          "x-ms-summary": "Average Subscription Rate",
          "x-ms-visibility": "advanced"
        },
        "avg_unsub_rate": {
          "format": "float",
          "description": "The average number of unsubscriptions per month for the list(not returned if we haven’t calculated it yet)",
          "type": "number",
          "x-ms-summary": "Average Unsubscription Rate",
          "x-ms-visibility": "advanced"
        },
        "target_sub_rate": {
          "format": "float",
          "description": "The target number of subscriptions per month for the list to keep it growing(not returned if we haven’t calculated it yet)",
          "type": "number",
          "x-ms-summary": "Target Subscription Rate",
          "x-ms-visibility": "advanced"
        },
        "open_rate": {
          "format": "float",
          "description": "The average open rate(a percentage represented as a number between 0 and 100) per campaign for the list(not returned if we haven’t calculated it yet)",
          "type": "number",
          "x-ms-summary": "Open Rate",
          "x-ms-visibility": "advanced"
        },
        "click_rate": {
          "format": "float",
          "description": "The average click rate(a percentage represented as a number between 0 and 100) per campaign for the list(not returned if we haven’t calculated it yet)",
          "type": "number",
          "x-ms-summary": "Click Rate",
          "x-ms-visibility": "advanced"
        },
        "last_sub_date": {
          "description": "The date and time of the last time someone subscribed to this list",
          "type": "string",
          "x-ms-summary": "Date of Last List Subscribe",
          "x-ms-visibility": "advanced"
        },
        "last_unsub_date": {
          "description": "The date and time of the last time someone unsubscribed from this list",
          "type": "string",
          "x-ms-summary": "Date of Last List Unsubscribe",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "GetListsResponseModel": {
      "description": "Response when getting lists",
      "type": "object",
      "properties": {
        "lists": {
          "description": "An array of objects, each representing a list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateNewListResponseModel"
          },
          "x-ms-summary": "Lists"
        },
        "total_items": {
          "format": "int32",
          "description": "The total number of items matching the query regardless of pagination",
          "type": "integer",
          "x-ms-summary": "Item Count",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "NewMembersInListRequest": {
      "description": "Add new members to the list",
      "required": [
        "members"
      ],
      "type": "object",
      "properties": {
        "members": {
          "title": "List Members",
          "description": "An array of objects, each representing an email address and the subscription status for a specific list. Up to 500 members may be added or updated with each API call.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NewMemberInListRequest"
          }
        },
        "update_existing": {
          "title": "Update Existing Members",
          "description": "Whether this batch operation will change existing members' subscription status.",
          "type": "boolean"
        }
      }
    },
    "NewMemberInListRequest": {
      "description": "Add a new member to the list",
      "required": [
        "status",
        "email_address"
      ],
      "type": "object",
      "properties": {
        "email_type": {
          "description": "Type of email this member asked to get (‘html’ or ‘text’)",
          "default": "html",
          "enum": [
            "",
            "html",
            "text"
          ],
          "type": "string",
          "x-ms-summary": "Email Type",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "Subscriber’s current status. Possible Values: subscribed, unsubscribed, cleaned, pending",
          "enum": [
            "",
            "subscribed",
            "unsubscribed",
            "cleaned",
            "pending"
          ],
          "type": "string",
          "x-ms-summary": "Status",
          "x-ms-visibility": "important"
        },
        "merge_fields": {
          "$ref": "#/definitions/FirstAndLastName"
        },
        "language": {
          "description": "If set/detected, the subscriber’s language",
          "type": "string",
          "x-ms-summary": "Language",
          "x-ms-visibility": "advanced"
        },
        "vip": {
          "description": "VIP status for subscriber",
          "type": "boolean",
          "x-ms-summary": "VIP",
          "x-ms-visibility": "advanced"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "email_address": {
          "description": "Email address for a subscriber",
          "type": "string",
          "x-ms-summary": "Email Address",
          "x-ms-visibility": "important"
        }
      }
    },
    "FirstAndLastName": {
      "description": "Merged fields containing User First name and last name",
      "type": "object",
      "properties": {
        "FNAME": {
          "description": "First name of the subscriber",
          "type": "string",
          "x-ms-summary": "First Name",
          "x-ms-visibility": "important"
        },
        "LNAME": {
          "description": "Last name of the subscriber",
          "type": "string",
          "x-ms-summary": "Last Name",
          "x-ms-visibility": "important"
        }
      }
    },
    "Location": {
      "description": "Subscriber location information",
      "type": "object",
      "properties": {
        "latitude": {
          "format": "float",
          "description": "The location latitude",
          "type": "number",
          "x-ms-summary": "Latitude",
          "x-ms-visibility": "advanced"
        },
        "longitude": {
          "format": "float",
          "description": "The location longitude",
          "type": "number",
          "x-ms-summary": "Longitude",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "MemberResponseModel": {
      "description": "Member Result Model",
      "type": "object",
      "properties": {
        "id": {
          "description": "The MD5 hash of the lowercase version of the list member’s email address",
          "type": "string",
          "x-ms-summary": "Email ID",
          "x-ms-visibility": "advanced"
        },
        "email_address": {
          "description": "Email address for a subscriber",
          "type": "string",
          "x-ms-summary": "Email Address",
          "x-ms-visibility": "important"
        },
        "unique_email_id": {
          "description": "An identifier for the address across all of MailChimp",
          "type": "string",
          "x-ms-summary": "Unique Email ID",
          "x-ms-visibility": "advanced"
        },
        "email_type": {
          "description": "Type of email this member asked to get (‘html’ or ‘text’).",
          "type": "string",
          "x-ms-summary": "Email Type",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "Subscriber’s current status. Possible Values: subscribed, unsubscribed, cleaned, pending",
          "type": "string",
          "x-ms-summary": "Status",
          "x-ms-visibility": "important"
        },
        "merge_fields": {
          "$ref": "#/definitions/FirstAndLastName"
        },
        "stats": {
          "$ref": "#/definitions/Stats"
        },
        "ip_signup": {
          "description": "IP address the subscriber signed up from",
          "type": "string",
          "x-ms-summary": "Signup IP",
          "x-ms-visibility": "advanced"
        },
        "timestamp_signup": {
          "description": "Date and time the subscriber signed up for the list",
          "type": "string",
          "x-ms-summary": "Signup Timestamp",
          "x-ms-visibility": "advanced"
        },
        "ip_opt": {
          "description": "The IP address the subscriber used to confirm their opt-in status",
          "type": "string",
          "x-ms-summary": "Opt-in IP",
          "x-ms-visibility": "advanced"
        },
        "timestamp_opt": {
          "description": "Date and time the subscribe confirmed their opt-in status",
          "type": "string",
          "x-ms-summary": "Opt-in Timestamp",
          "x-ms-visibility": "advanced"
        },
        "member_rating": {
          "format": "int32",
          "description": "Star rating for this member, between 1 and 5",
          "type": "integer",
          "x-ms-summary": "Member Rating",
          "x-ms-visibility": "advanced"
        },
        "last_changed": {
          "description": "Date and time the member’s info was last changed",
          "type": "string",
          "x-ms-summary": "Last Changed Date",
          "x-ms-visibility": "advanced"
        },
        "language": {
          "description": "If set/detected, the subscriber’s language",
          "type": "string",
          "x-ms-summary": "Language",
          "x-ms-visibility": "advanced"
        },
        "vip": {
          "description": "VIP status for subscriber",
          "type": "boolean",
          "x-ms-summary": "VIP",
          "x-ms-visibility": "advanced"
        },
        "email_client": {
          "description": "The list member’s email client",
          "type": "string",
          "x-ms-summary": "Email Client",
          "x-ms-visibility": "advanced"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "last_note": {
          "$ref": "#/definitions/Last_Note"
        },
        "list_id": {
          "description": "The list id",
          "type": "string",
          "x-ms-summary": "List ID",
          "x-ms-visibility": "advanced"
        },
        "_links": {
          "description": "A list of link types and descriptions for the API schema documents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-summary": "Links",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Last_Note": {
      "description": "THe most recent Note added about this member",
      "type": "object",
      "properties": {
        "note_id": {
          "format": "int32",
          "description": "The note id",
          "type": "integer",
          "x-ms-summary": "Note ID",
          "x-ms-visibility": "advanced"
        },
        "created_at": {
          "description": "The date the note was created",
          "type": "string",
          "x-ms-summary": "Created Time",
          "x-ms-visibility": "advanced"
        },
        "created_by": {
          "description": "The author of the note",
          "type": "string",
          "x-ms-summary": "Author",
          "x-ms-visibility": "advanced"
        },
        "note": {
          "description": "The content of the note",
          "type": "string",
          "x-ms-summary": "Note",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "GetAddMembersBatchResponseModel": {
      "description": "Response when subscribing or unsubscribing list members in a batch",
      "type": "object",
      "properties": {
        "total_created": {
          "description": "Total number of members that were added to the list",
          "type": "integer",
          "x-ms-summary": "Total Created"
        },
        "total_updated": {
          "format": "int32",
          "description": "The total number of an existing list members whose subscription status was updated",
          "type": "integer",
          "x-ms-summary": "Total Updated"
        },
        "error_count": {
          "format": "int32",
          "description": "The number email addresses that could not be added to the list or updated",
          "type": "integer",
          "x-ms-summary": "Error Count"
        }
      }
    },
    "GetAllMembersResponseModel": {
      "description": "Response when querying for all members in a list",
      "type": "object",
      "properties": {
        "members": {
          "description": "An array of objects, each representing a specific list member",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MemberResponseModel"
          },
          "x-ms-summary": "Members"
        },
        "list_id": {
          "description": "The list id",
          "type": "string",
          "x-ms-summary": "List Id"
        },
        "total_items": {
          "format": "int32",
          "description": "The total number of items matching the query regardless of pagination",
          "type": "integer",
          "x-ms-summary": "Total Items"
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "UpdateMemberInListRequest": {
      "description": "Body parameters to update a member in a list",
      "required": [
        "status"
      ],
      "type": "object",
      "properties": {
        "email_type": {
          "description": "Type of email this member asked to get (‘html’ or ‘text’)",
          "default": "html",
          "enum": [
            "",
            "html",
            "text"
          ],
          "type": "string",
          "x-ms-summary": "Email Type",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "Subscriber’s current status. Possible Values: subscribed, unsubscribed, cleaned, pending",
          "enum": [
            "",
            "subscribed",
            "unsubscribed",
            "cleaned",
            "pending"
          ],
          "type": "string",
          "x-ms-summary": "Status",
          "x-ms-visibility": "important"
        },
        "merge_fields": {
          "$ref": "#/definitions/FirstAndLastName"
        },
        "language": {
          "description": "If set/detected, the subscriber’s language",
          "type": "string",
          "x-ms-summary": "Language",
          "x-ms-visibility": "advanced"
        },
        "vip": {
          "description": "VIP status for subscriber",
          "type": "boolean",
          "x-ms-summary": "VIP",
          "x-ms-visibility": "advanced"
        },
        "location": {
          "$ref": "#/definitions/Location"
        }
      }
    },
    "GetMembersResponseModel": {
      "description": "Response when getting members in a list",
      "type": "object",
      "properties": {
        "members": {
          "description": "An array of objects, each representing a specific list member",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddUserResponseModel"
          },
          "x-ms-summary": "Members"
        },
        "list_id": {
          "description": "The list id",
          "type": "string",
          "x-ms-summary": "List ID",
          "x-ms-visibility": "internal"
        },
        "total_items": {
          "format": "int32",
          "description": "The total number of items matching the query regardless of pagination",
          "type": "integer",
          "x-ms-summary": "Item Count",
          "x-ms-visibility": "internal"
        }
      }
    },
    "AddUserResponseModel": {
      "description": "New Campaign Result Model",
      "required": [
        "id",
        "email_address",
        "merge_fields"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The MD5 hash of the lowercase version of the list member’s email address",
          "type": "string",
          "x-ms-summary": "Email ID",
          "x-ms-visibility": "important"
        },
        "email_address": {
          "description": "Email address for a subscriber",
          "type": "string",
          "x-ms-summary": "Email Address",
          "x-ms-visibility": "important"
        },
        "unique_email_id": {
          "description": "An identifier for the address across all of MailChimp",
          "type": "string",
          "x-ms-summary": "Unique Email ID",
          "x-ms-visibility": "advanced"
        },
        "email_type": {
          "description": "Type of email this member asked to get (‘html’ or ‘text’).",
          "type": "string",
          "x-ms-summary": "Email Type",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "Subscriber’s current status. Possible Values: subscribed, unsubscribed, cleaned, pending",
          "type": "string",
          "x-ms-summary": "Status",
          "x-ms-visibility": "advanced"
        },
        "merge_fields": {
          "$ref": "#/definitions/FirstAndLastName"
        },
        "stats": {
          "$ref": "#/definitions/Stats"
        },
        "ip_signup": {
          "description": "IP address the subscriber signed up from",
          "type": "string",
          "x-ms-summary": "Signup IP",
          "x-ms-visibility": "advanced"
        },
        "timestamp_signup": {
          "description": "Date and time the subscriber signed up for the list",
          "type": "string",
          "x-ms-summary": "Signup Timestamp",
          "x-ms-visibility": "advanced"
        },
        "ip_opt": {
          "description": "The IP address the subscriber used to confirm their opt-in status",
          "type": "string",
          "x-ms-summary": "Opt-in IP",
          "x-ms-visibility": "advanced"
        },
        "timestamp_opt": {
          "description": "Date and time the subscribe confirmed their opt-in status",
          "type": "string",
          "x-ms-summary": "Opt-in Timestamp",
          "x-ms-visibility": "advanced"
        },
        "member_rating": {
          "format": "int32",
          "description": "Star rating for this member, between 1 and 5",
          "type": "integer",
          "x-ms-summary": "Member Rating",
          "x-ms-visibility": "advanced"
        },
        "last_changed": {
          "description": "Date and time the member’s info was last changed",
          "type": "string",
          "x-ms-summary": "Last Changed Date",
          "x-ms-visibility": "advanced"
        },
        "language": {
          "description": "If set/detected, the subscriber’s language",
          "type": "string",
          "x-ms-summary": "Language",
          "x-ms-visibility": "advanced"
        },
        "vip": {
          "description": "VIP status for subscriber",
          "type": "boolean",
          "x-ms-summary": "VIP",
          "x-ms-visibility": "advanced"
        },
        "email_client": {
          "description": "The list member’s email client",
          "type": "string",
          "x-ms-summary": "Email Client",
          "x-ms-visibility": "advanced"
        },
        "location": {
          "$ref": "#/definitions/Location"
        },
        "last_note": {
          "$ref": "#/definitions/Last_Note"
        },
        "list_id": {
          "description": "The list id",
          "type": "string",
          "x-ms-summary": "List ID",
          "x-ms-visibility": "advanced"
        },
        "_links": {
          "description": "A list of link types and descriptions for the API schema documents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          },
          "x-ms-summary": "Links",
          "x-ms-visibility": "advanced"
        }
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://mailchimp.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://mailchimp.com/legal/privacy/"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/mailchimp"
  }
}
