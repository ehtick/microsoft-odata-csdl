{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Content Moderator",
    "description": "Content Moderator is a Microsoft Cognitive Services product which provides machine-assisted moderation of text and images for potentially offensive or unwanted content, augmented with built-in human review tools",
    "contact": {
      "name": "Microsoft"
    },
    "x-ms-api-annotation": {
      "status": "Production"
    }
  },
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/cognitiveservicescontentmoderator",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{connectionId}/contentmoderator/lists/v1.0/imagelists": {
      "get": {
        "summary": "Get all the image lists",
        "operationId": "GetAllImageList",
        "description": "Return all the image lists.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "Id": {
                    "x-ms-summary": "Image List Id",
                    "description": "Image list Id.",
                    "type": "number"
                  },
                  "Name": {
                    "x-ms-summary": "Image List Name",
                    "description": "Image list name.",
                    "type": "string"
                  },
                  "Description": {
                    "x-ms-summary": "Image list details",
                    "description": "Description of the image list.",
                    "type": "string"
                  },
                  "Metadata": {
                    "x-ms-summary": "Image List Metadata",
                    "description": "Image list metadata.",
                    "type": "object",
                    "properties": {
                      "sample string 1": {
                        "x-ms-summary": "key one parameter",
                        "description": "key one parameter.",
                        "type": "string"
                      },
                      "sample string 2": {
                        "x-ms-summary": "key two parameter",
                        "description": "key two parameter.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "produces": [
          "application/json"
        ],
        "deprecated": false,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#get-all-the-image-lists"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/contentmoderator/moderate/v1.0/imageSchema": {
      "get": {
        "summary": "Get Request Body Parameters",
        "description": "Return the schema for the request body format desired.",
        "operationId": "GetImageSchema",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/ImageFormatParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Schema of the request body.",
            "schema": {
              "type": "object",
              "properties": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#get-request-body-parameters"
        }
      }
    },
    "/{connectionId}/contentmoderator/moderate/v1.0/ProcessImage/Evaluate": {
      "post": {
        "summary": "Check if an image contains racy or adult content",
        "description": "Returns probabilities of an image containing racy or adult content.",
        "operationId": "EvaluateImage",
        "x-ms-no-generic-test": true,
        "consumes": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/ImageFormatParameter"
          },
          {
            "name": "Image",
            "in": "body",
            "required": true,
            "description": "Your image content.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-ms-dynamic-schema": {
                "operationId": "GetImageSchema",
                "parameters": {
                  "format": {
                    "parameter": "format"
                  }
                },
                "value-path": "schema"
              }
            },
            "x-ms-summary": "Image"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200.",
            "schema": {
              "required": [
                "AdultClassificationScore",
                "IsImageAdultClassified",
                "IsImageRacyClassified",
                "RacyClassificationScore"
              ],
              "type": "object",
              "properties": {
                "AdultClassificationScore": {
                  "x-ms-summary": "Adult Classification Score",
                  "description": "Confidence score of the adult classification.",
                  "type": "number"
                },
                "IsImageAdultClassified": {
                  "x-ms-summary": "Is Image Adult Classified",
                  "description": "Is the image classified as an adult content.",
                  "type": "boolean"
                },
                "RacyClassificationScore": {
                  "x-ms-summary": "Racy Classification Score",
                  "description": "Confidence score of the racy classification.",
                  "type": "number"
                },
                "IsImageRacyClassified": {
                  "x-ms-summary": "Is Image Racy Classified",
                  "description": "Is the image classified as a racy content.",
                  "type": "boolean"
                },
                "TrackingId": {
                  "x-ms-summary": "Tracking Id",
                  "description": "Unique Content Moderator transaction Id.",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"AdultClassificationScore\": x.xxx,\n  \"IsImageAdultClassified\": <Bool>,\n  \"RacyClassificationScore\": x.xxx,\n  \"IsImageRacyClassified\": <Bool>,\n  \"AdvancedInfo\": [],\n  \"Result\": false,\n  \"Status\": {\n    \"Code\": 3000,\n    \"Description\": \"OK\",\n    \"Exception\": null\n  },\n  \"TrackingId\": \"<Request Tracking Id>\"\n}"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#check-if-an-image-contains-racy-or-adult-content"
        }
      }
    },
    "/{connectionId}/contentmoderator/review/v1.0/teams/{teamName}/jobs": {
      "post": {
        "summary": "Execute desired workflow in your team to evaluate image or text content",
        "description": "A job Id will be returned for the Image or Text content posted on this endpoint. \r\n Once the content is evaluated against the Workflow provided, a review will be created or ignored based on the workflow expression.",
        "operationId": "CreateJob",
        "x-ms-no-generic-test": true,
        "consumes": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "x-ms-summary": "Team Name",
            "name": "teamName",
            "description": "Your Team Name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "x-ms-summary": "Content Type",
            "name": "ContentType",
            "description": "Type of the content.",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "Image",
              "Text"
            ]
          },
          {
            "x-ms-summary": "Content Id",
            "name": "ContentId",
            "description": "Content Identifier.",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "WorkflowName",
            "in": "query",
            "description": "Select the workflow that you want to invoke.",
            "required": true,
            "x-ms-summary": "Select Workflow",
            "x-ms-dynamic-values": {
              "operationId": "GetWorkflows",
              "value-path": "Name",
              "value-title": "Name",
              "parameters": {
                "teamName": {
                  "parameter": "teamName"
                }
              }
            },
            "type": "string"
          },
          {
            "x-ms-summary": "CallBack Endpoint",
            "name": "CallBackEndpoint",
            "description": "CallBack Endpoint.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "Content",
            "description": "Image url(for Image type)/text(for Text type) content to evaluate.",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "ContentValue"
              ],
              "type": "object",
              "properties": {
                "ContentValue": {
                  "x-ms-summary": "Content Value",
                  "description": "Content to evaluate for a job.",
                  "type": "string"
                }
              }
            },
            "x-examples": {
              "application/json": "{\n  \"ContentValue\": \"<Replace with you Image Url>\"\n}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200.",
            "schema": {
              "required": [
                "JobId"
              ],
              "type": "object",
              "properties": {
                "JobId": {
                  "x-ms-summary": "Job Id",
                  "description": "Job Id for the content posted.",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"JobId\": \"234\"\n}"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#execute-desired-workflow-in-your-team-to-evaluate-image-or-text-content"
        }
      }
    },
    "/{connectionId}/contentmoderator/moderate/v1.0/ProcessImage/OCR": {
      "post": {
        "summary": "Return any text found in an image for the specified language",
        "description": "Returns any text found in the image for the language specified. If no language is specified in input then the detection defaults to English.",
        "operationId": "OCR",
        "x-ms-no-generic-test": true,
        "consumes": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "x-ms-summary": "Language",
            "name": "language",
            "description": "Language of the text(E.g. eng for english).",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ImageFormatParameter"
          },
          {
            "name": "Image",
            "in": "body",
            "required": true,
            "description": "Your Image Content.",
            "schema": {
              "type": "object",
              "properties": {},
              "x-ms-dynamic-schema": {
                "operationId": "GetImageSchema",
                "parameters": {
                  "format": {
                    "parameter": "format"
                  }
                },
                "value-path": "schema"
              }
            },
            "x-ms-summary": "Image"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200.",
            "schema": {
              "required": [
                "TrackingId"
              ],
              "type": "object",
              "properties": {
                "TrackingId": {
                  "x-ms-summary": "Tracking Id",
                  "description": "Unique Content Moderator transaction Id.",
                  "type": "string"
                },
                "CacheId": {
                  "x-ms-summary": "Cache Id",
                  "description": "Cache Id.",
                  "type": "string"
                },
                "Language": {
                  "x-ms-summary": "Text Language",
                  "description": "Language of the text found in the image.",
                  "type": "string"
                },
                "Text": {
                  "x-ms-summary": "Detected Text",
                  "description": "Text found in the image.",
                  "type": "string"
                },
                "Candidates": {
                  "type": "array",
                  "x-ms-summary": "Detected Candidates",
                  "description": "Detected text candidates found in the image.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Text": {
                        "x-ms-summary": "Detected text content candidates",
                        "description": "Detected text content candidates from the image.",
                        "type": "string"
                      },
                      "Confidence": {
                        "x-ms-summary": "Confidence Score",
                        "description": "Confidence Score of the detected text content candidate.",
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"TrackingId\":\"xxxx_xxxxxxxxxxxxxxxxxxxxxxxx_xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n  \"CacheId\": \"xxxxxxxxxxxx\",\n  \"Language\": \"eng\",\n  \"Text\": \"The quick brown fox jumped over the lazy dog\",\n  \"Candidates\": [\n    {\"Text\": \"The quick brown fox jumped over the lazy dog\", \"Confidence\": 1234},\n    {\"Text\": \"The qu1ck brawn fox iumped over the 1azy d0g\", \"Confidence\": 0.001},\n  ]\n}"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#return-any-text-found-in-an-image-for-the-specified-language"
        }
      }
    },
    "/{connectionId}/contentmoderator/moderate/v1.0/ProcessText/Screen/": {
      "post": {
        "summary": "Detect profanity and match against custom and shared block lists",
        "description": "Detects profanity in more than 100 languages and match against custom and shared block lists.",
        "operationId": "ScreenText",
        "x-ms-no-generic-test": true,
        "consumes": [
          "text/plain",
          "text/html",
          "text/xml",
          "text/markdown"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "x-ms-summary": "Language",
            "name": "language",
            "description": "Language of the text(E.g. eng for english).",
            "in": "query",
            "type": "string"
          },
          {
            "x-ms-summary": "Autocorrect",
            "description": "Autocorrect text.",
            "name": "autocorrect",
            "in": "query",
            "type": "boolean"
          },
          {
            "x-ms-summary": "Personal Identifiable Information",
            "description": "Personal Identifiable Information in the text.",
            "name": "PII",
            "in": "query",
            "type": "boolean"
          },
          {
            "x-ms-summary": "List Id",
            "name": "listId",
            "in": "query",
            "description": "Comma separated list Ids.",
            "required": false,
            "type": "string"
          },
          {
            "x-ms-summary": "Classify input",
            "name": "classify",
            "description": "Classify input.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "x-ms-summary": "Content Type",
            "name": "Content-Type",
            "in": "header",
            "description": "Content type of the input text.",
            "required": true,
            "type": "string",
            "enum": [
              "text/plain",
              "text/html",
              "text/xml",
              "text/markdown"
            ]
          },
          {
            "name": "Text Content",
            "description": "Your text content.",
            "in": "body",
            "required": true,
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200.",
            "schema": {
              "type": "object",
              "properties": {
                "OriginalText": {
                  "x-ms-summary": "Original Text",
                  "description": "The original text.",
                  "type": "string"
                },
                "NormalizedText": {
                  "x-ms-summary": "Normalized Text",
                  "description": "The normalized text.",
                  "type": "string"
                },
                "AutoCorrectedText": {
                  "x-ms-summary": "AutoCorrected Text",
                  "description": "The autocorrected text",
                  "type": "string"
                },
                "Misrepresentation": {
                  "x-ms-summary": "Misrepresentation",
                  "description": "The misrepresentation text details.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "PII": {
                  "x-ms-summary": "Personal Identifiable Information",
                  "type": "object",
                  "description": "Personal Identifiable Information in the text content.",
                  "properties": {
                    "Email": {
                      "type": "array",
                      "x-ms-summary": "Detected Email",
                      "description": "Detected Email Details.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Detected": {
                            "x-ms-summary": "Detected Email",
                            "description": "Detected Email Address from the input text content.",
                            "type": "string"
                          },
                          "SubType": {
                            "x-ms-summary": "Email Subtype",
                            "description": "Subtype of the detected Email Address.",
                            "type": "string"
                          },
                          "Text": {
                            "x-ms-summary": "Email Address",
                            "description": "Email Address in the input text content.",
                            "type": "string"
                          },
                          "Index": {
                            "x-ms-summary": "Email- Index",
                            "description": "Index(Location) of the Email address in the input text content.",
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "SSN": {
                      "type": "array",
                      "x-ms-summary": "Detected SSN",
                      "description": "Detected SSN details.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Text": {
                            "x-ms-summary": "SSN",
                            "description": "Detected SSN.",
                            "type": "string"
                          },
                          "Index": {
                            "x-ms-summary": "SSN Index",
                            "description": "Index(Location) of the SSN in the input text content.",
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "IPA": {
                      "type": "array",
                      "x-ms-summary": "Detected IP Address",
                      "description": "Detected IP Address Details.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "SubType": {
                            "x-ms-summary": "IP Address Subtype",
                            "description": "Subtype of the detected IP Address.",
                            "type": "string"
                          },
                          "Text": {
                            "x-ms-summary": "IP Address",
                            "description": "Detected IP Address.",
                            "type": "string"
                          },
                          "Index": {
                            "x-ms-summary": "IP Address Index",
                            "description": "Index(Location) of the IP Address in the input text content.",
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "Phone": {
                      "type": "array",
                      "x-ms-summary": "Detected Phone Number",
                      "description": "Detected phone number details.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "CountryCode": {
                            "x-ms-summary": "Phone CountryCode",
                            "description": "Country Code of the detected Phone number.",
                            "type": "string"
                          },
                          "Text": {
                            "x-ms-summary": "Phone Number",
                            "description": "Detected Phone number.",
                            "type": "string"
                          },
                          "Index": {
                            "x-ms-summary": "Phone Index",
                            "description": "Index(Location) of the Phone number in the input text content.",
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "Address": {
                      "x-ms-summary": "Detected Address",
                      "description": "Detected address details.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Text": {
                            "x-ms-summary": "Address",
                            "description": "Detected Address from the input text content.",
                            "type": "string"
                          },
                          "Index": {
                            "x-ms-summary": "Address - Index",
                            "description": "Index(Location) of the Address in the input text content.",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                },
                "Classification": {
                  "x-ms-summary": "Classification Details",
                  "description": "The classification details of the text.",
                  "type": "object",
                  "properties": {
                    "Category1": {
                      "type": "object",
                      "properties": {
                        "score": {
                          "x-ms-summary": "Category1 Score",
                          "description": "The category1 score details of the text. <a href=\"https://aka.ms/textClassifyCategories\">Click here</a> for more details on category classification.",
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "Category2": {
                      "type": "object",
                      "properties": {
                        "score": {
                          "x-ms-summary": "Category2 Score",
                          "description": "The category2 score details of the text. <a href=\"https://aka.ms/textClassifyCategories\">Click here</a> for more details on category classification.",
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "Category3": {
                      "type": "object",
                      "properties": {
                        "score": {
                          "x-ms-summary": "Category3 Score",
                          "description": "The category3 score details of the text. <a href=\"https://aka.ms/textClassifyCategories\">Click here</a> for more details on category classification.",
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "ReviewRecommended": {
                      "x-ms-summary": "Review Recommended",
                      "description": "The review recommended flag status.",
                      "type": "boolean"
                    }
                  }
                },
                "Language": {
                  "x-ms-summary": "Text Language",
                  "description": "Language of the input text content.",
                  "type": "string"
                },
                "Terms": {
                  "type": "array",
                  "x-ms-summary": "Detected profanity terms",
                  "description": "Detected profanity term details.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Index": {
                        "x-ms-summary": "Term Index",
                        "description": "Index(Location) of the detected profanity term in the input text content.",
                        "type": "integer"
                      },
                      "OriginalIndex": {
                        "x-ms-summary": "Term Original Index",
                        "description": "Original Index(Location) of the detected profanity term in the input text content.",
                        "type": "integer"
                      },
                      "ListId": {
                        "x-ms-summary": "Terms List Id",
                        "description": "Matched Terms list Id.",
                        "type": "integer"
                      },
                      "Term": {
                        "x-ms-summary": "Detected Term",
                        "description": "Detected profanity term.",
                        "type": "string"
                      }
                    }
                  }
                },
                "TrackingId": {
                  "x-ms-summary": "Tracking Id",
                  "description": "Unique Content Moderator transaction Id.",
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"OriginalText\": \"Is this a crap email abcdef@abcd.com, phone: 6657789887, IP: 255.255.255.255,\\n1 Microsoft Way, Redmond, WA 98052\\n\",\n  \"NormalizedText\": \"Is this a crap email abide@ abed. com, phone: 6657789887, IP: 255. 255. 255. 255, \\n1 Microsoft Way, Redmond, WA 98052\",\n  \"AutoCorrectedText\": \"Is this a crap email abide@ abed. com, phone: 6657789887, IP: 255. 255. 255. 255, \\n1 Microsoft Way, Redmond, WA 98052\",\n  \"Misrepresentation\": null,\n  \"PII\": {\n    \"Email\": [\n      {\n        \"Detected\": \"abcdef@abcd.com\",\n        \"SubType\": \"Regular\",\n        \"Text\": \"abcdef@abcd.com\",\n        \"Index\": 21\n      }\n    ],\n    \"IPA\": [\n      {\n        \"SubType\": \"IPV4\",\n        \"Text\": \"255.255.255.255\",\n        \"Index\": 61\n      }\n    ],\n    \"Phone\": [\n      {\n        \"CountryCode\": \"US\",\n        \"Text\": \"6657789887\",\n        \"Index\": 45\n      }\n    ],\n    \"Address\": [\n      {\n        \"Text\": \"1 Microsoft Way, Redmond, WA 98052\",\n        \"Index\": 78\n      }\n    ]\n  },\n  \"Language\": \"eng\",\n  \"Terms\": [\n    {\n      \"Index\": 10,\n      \"OriginalIndex\": 10,\n      \"ListId\": 0,\n      \"Term\": \"crap\"\n    }\n  ],\n  \"Status\": {\n    \"Code\": 3000,\n    \"Description\": \"OK\",\n    \"Exception\": null\n  },\n  \"TrackingId\": \"1717c837-cfb5-4fc0-9adc-24859bfd7fac\"\n}"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#detect-profanity-and-match-against-custom-and-shared-block-lists"
        }
      }
    },
    "/{connectionId}/contentmoderator/moderate/v1.0/ProcessImage/FindFaces": {
      "post": {
        "summary": "Find faces in an image content",
        "description": "Find Faces an image content.",
        "operationId": "FindFaces",
        "x-ms-no-generic-test": true,
        "consumes": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/ImageFormatParameter"
          },
          {
            "name": "Image",
            "description": "Your Image Content.",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {},
              "x-ms-dynamic-schema": {
                "operationId": "GetImageSchema",
                "parameters": {
                  "format": {
                    "parameter": "format"
                  }
                },
                "value-path": "schema"
              }
            },
            "x-ms-summary": "Image"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200.",
            "schema": {
              "type": "object",
              "properties": {
                "TrackingId": {
                  "x-ms-summary": "Tracking Id",
                  "description": "Unique Content Moderator transaction Id.",
                  "type": "string"
                },
                "CacheId": {
                  "x-ms-summary": "Cache Id",
                  "description": "Cache Id.",
                  "type": "string"
                },
                "Count": {
                  "x-ms-summary": "Face Count",
                  "description": "Number of faces detected in an image.",
                  "type": "number"
                },
                "Faces": {
                  "type": "array",
                  "x-ms-summary": "Detected face position",
                  "description": "Detected face position.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Bottom": {
                        "x-ms-summary": "Bottom Location",
                        "description": "Bottom Location of the detected face.",
                        "type": "number"
                      },
                      "Left": {
                        "x-ms-summary": "Left Location",
                        "description": "Left Location of the detected face.",
                        "type": "number"
                      },
                      "Right": {
                        "x-ms-summary": "Right Location",
                        "description": "Right Location of the detected face.",
                        "type": "number"
                      },
                      "Top": {
                        "x-ms-summary": "Top Location",
                        "description": "Top Location of the detected face.",
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#find-faces-in-an-image-content"
        }
      }
    },
    "/{connectionId}/contentmoderator/moderate/v1.0/ProcessText/DetectLanguage": {
      "post": {
        "summary": "Detect Language of a given text input content",
        "description": "This operation will detect the language of given input content. Returns the <a href=\"http://www-01.sil.org/iso639-3/codes.asp\">ISO 639-3 code</a> for the predominant language comprising the submitted text. Over 110 languages supported.",
        "operationId": "DetectLanguage",
        "x-ms-no-generic-test": true,
        "consumes": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "x-ms-summary": "Content Type",
            "name": "Content-Type",
            "in": "header",
            "description": "Type of the text content.",
            "required": true,
            "enum": [
              "text/plain",
              "text/html",
              "text/xml",
              "text/markdown"
            ],
            "type": "string"
          },
          {
            "name": "Text Content",
            "description": "Text Content.",
            "in": "body",
            "required": true,
            "schema": {
              "format": "binary",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200.",
            "schema": {
              "type": "object",
              "properties": {
                "DetectedLanguage": {
                  "type": "string",
                  "x-ms-summary": "Detected Language",
                  "description": "Detected Language of the text."
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#detect-language-of-a-given-text-input-content"
        }
      }
    },
    "/{connectionId}/contentmoderator/moderate/v1.0/ProcessImage/Match": {
      "post": {
        "summary": "Match an image against one of your custom image lists",
        "description": "Fuzzily match an image against one of your custom Image Lists. You can create and manage your custom image lists using <a href=\"/docs/services/578ff44d2703741568569ab9/operations/578ff7b12703741568569abe\">this</a> API. \r\n\r\nReturns ID and tags of matching image.<br/>\r\n<br/>\r\nNote: Refresh Index must be run on the corresponding Image List before additions and removals are reflected in the response.",
        "operationId": "MatchImage",
        "x-ms-no-generic-test": true,
        "consumes": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "x-ms-summary": "List Id",
            "description": "Optionally specify a listId to match against. If not specified, the image would matched against all your Image Lists.",
            "name": "listId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ImageFormatParameter"
          },
          {
            "name": "Image",
            "in": "body",
            "description": "Your Image Content.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {},
              "x-ms-dynamic-schema": {
                "operationId": "GetImageSchema",
                "parameters": {
                  "format": {
                    "parameter": "format"
                  }
                },
                "value-path": "schema"
              }
            },
            "x-ms-summary": "Image"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200.",
            "schema": {
              "required": [
                "TrackingId"
              ],
              "type": "object",
              "properties": {
                "TrackingId": {
                  "x-ms-summary": "Tracking Id",
                  "description": "Unique Content Moderator transaction Id.",
                  "type": "string"
                },
                "CacheId": {
                  "x-ms-summary": "Cache Id",
                  "description": "Cache Id.",
                  "type": "string"
                },
                "IsMatch": {
                  "x-ms-summary": "Is Match",
                  "description": "Has image matched against input image list ID or your custom image list Ids.",
                  "type": "boolean"
                },
                "MatchDetails": {
                  "x-ms-summary": "Match Details",
                  "description": "Image match details.",
                  "type": "object",
                  "properties": {
                    "Score": {
                      "x-ms-summary": "Match Details - Score",
                      "description": "Confidence score of the image match.",
                      "type": "number"
                    },
                    "MatchId": {
                      "x-ms-summary": "Match Details - Match Id",
                      "description": "Matched custom image list Id.",
                      "type": "number"
                    },
                    "Source": {
                      "x-ms-summary": "Match Details - Source",
                      "description": "Source of the matched image.",
                      "type": "string"
                    },
                    "Tags": {
                      "x-ms-summary": "Match Details - Tags",
                      "description": "Tags associated with the matched image.",
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "Label": {
                      "x-ms-summary": "Match Details - Label",
                      "description": "Matched image label.",
                      "type": "string"
                    }
                  },
                  "x-ms-visibility": "important"
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#match-an-image-against-one-of-your-custom-image-lists"
        }
      }
    },
    "/{connectionId}/contentmoderator/review/v1.0/teams/{teamName}/reviews": {
      "post": {
        "summary": "Create Reviews for Reviewers in your moderation team",
        "description": "The reviews created would show up for Reviewers on your team. As Reviewers complete reviewing, results of the Review would be POSTED (i.e. HTTP POST) on the specified CallBackEndpoint.",
        "operationId": "CreateReviews",
        "x-ms-no-generic-test": true,
        "consumes": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "x-ms-summary": "Team Name",
            "name": "teamName",
            "description": "Your team name.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "x-ms-summary": "SubTeam",
            "description": "SubTeam of your team, you want to assign the review to.",
            "name": "subTeam",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "description": "Schema of the body.",
              "items": {
                "required": [
                  "Content",
                  "ContentId",
                  "Type"
                ],
                "type": "object",
                "description": "Schema items of the body.",
                "properties": {
                  "Type": {
                    "x-ms-summary": "Content Type",
                    "description": "Type of the content.",
                    "enum": [
                      "Image",
                      "Text"
                    ],
                    "type": "string"
                  },
                  "Content": {
                    "x-ms-summary": "Review Content",
                    "description": "Image url(for Image type)/text(for Text type) content to review.",
                    "type": "string"
                  },
                  "ContentId": {
                    "x-ms-summary": "Content Id",
                    "description": "Content Identifier.",
                    "type": "string"
                  },
                  "CallbackEndpoint": {
                    "x-ms-summary": "Callback Endpoint",
                    "description": "Optional callback endpoint.",
                    "type": "string"
                  },
                  "Metadata": {
                    "x-ms-summary": "Optional Metadata",
                    "description": "Optional metadata details.",
                    "type": "array",
                    "items": {
                      "required": [
                        "Key",
                        "Value"
                      ],
                      "type": "object",
                      "properties": {
                        "Key": {
                          "x-ms-summary": "Key Parameter",
                          "description": "Your key parameter.",
                          "type": "string"
                        },
                        "Value": {
                          "x-ms-summary": "Value Parameter",
                          "description": "Your value parameter.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": "[\n  {\n    \"Metadata\": [\n      {\n        \"Key\": \"string\",\n        \"Value\": \"string\"\n      }\n    ],\n    \"Type\": \"Image\",\n    \"Content\": \"<Content Url>\",\n    \"ContentId\": \"<Your identifier for this content>\",\n    \"CallbackEndpoint\": \"<Url where you would receive callbacks>\"\n  }\n]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200.",
            "schema": {
              "type": "array",
              "items": {
                "x-ms-summary": "Review Id",
                "description": "Review Id of the created review.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#create-reviews-for-reviewers-in-your-moderation-team"
        }
      }
    },
    "/{connectionId}/contentmoderator/review/v1.0/teams/{teamName}/workflows": {
      "get": {
        "summary": "Get Workflows",
        "description": "Get workflows configured in your team.",
        "operationId": "GetWorkflows",
        "consumes": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "teamName",
            "x-ms-summary": "Team Name",
            "description": "Your team name.",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-test-value": "FlowTeam"
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200.",
            "schema": {
              "$ref": "#/definitions/getworkflowsresponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator/#get-workflows"
        }
      }
    }
  },
  "definitions": {
    "getworkflowsresponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "Name": {
            "x-ms-summary": "Workflow Name",
            "description": "Team workflow name.",
            "type": "string"
          },
          "Description": {
            "x-ms-summary": "Workflow Description",
            "description": "Workflow details.",
            "type": "string"
          },
          "Type": {
            "default": "Image",
            "x-ms-summary": "Workflow Type",
            "description": "Type of the workflow.",
            "enum": [
              "Image",
              "Text"
            ],
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "ImageFormatParameter": {
      "name": "format",
      "in": "query",
      "description": "Source of the image - either included or by reference url.",
      "required": true,
      "x-ms-summary": "Image Source",
      "x-ms-test-value": "Image URL",
      "type": "string",
      "enum": [
        "Image Content",
        "Image URL"
      ]
    }
  },
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Ocp-Apim-Subscription-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "x-ms-capabilities": {
    "testConnection": {
      "operationId": "GetAllImageList"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://azure.microsoft.com/services/cognitive-services/content-moderator/"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/cognitiveservicescontentmoderator"
  }
}
