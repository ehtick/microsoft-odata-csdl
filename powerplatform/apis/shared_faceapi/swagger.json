{
  "swagger": "2.0",
  "info": {
    "x-ms-deployment-version": "1.0.0",
    "version": "1.0.0",
    "title": "Face API",
    "description": "Microsoft Cognitive Services Face API allows you to detect, identify, analyze, organize and tag faces in photos.",
    "x-ms-api-annotation": {
      "status": "Production"
    },
    "contact": {
      "name": "Microsoft"
    }
  },
  "host": "europe-002.azure-apim.net",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/facelists/": {
      "get": {
        "summary": "",
        "description": "",
        "operationId": "GetFaceListInternalV2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "faceListId": {
                    "type": "string",
                    "x-ms-summary": "Face List Id"
                  },
                  "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                  },
                  "userData": {
                    "type": "string",
                    "x-ms-summary": "User Data"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/{connectionId}/face/v1.0/facelists/": {
      "get": {
        "summary": "",
        "description": "",
        "operationId": "GetFaceListInternal",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "faceListId": {
                    "type": "string",
                    "x-ms-summary": "Face List Id"
                  },
                  "name": {
                    "type": "string",
                    "x-ms-summary": "Name"
                  },
                  "userData": {
                    "type": "string",
                    "x-ms-summary": "User Data"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/persongroups/": {
      "get": {
        "summary": "",
        "description": "",
        "operationId": "GetPersonGroupsInternalV2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "personGroupId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "userData": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/{connectionId}/face/v1.0/persongroups/": {
      "get": {
        "summary": "",
        "description": "",
        "operationId": "GetPersonGroupsInternal",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "personGroupId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "userData": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/facelists/{faceListId}/": {
      "get": {
        "x-ms-visibility": "advanced",
        "summary": "Get a face list (V2)",
        "description": "Retrieve a face list's information, including faceListId, name, userData and faces in the face list.",
        "operationId": "GetFaceListV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "name": "faceListId",
            "in": "path",
            "description": "faceListId of the target face list.",
            "required": true,
            "x-ms-summary": "Face List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetFaceListInternalV2",
              "parameters": {
                "subdomain": {
                  "parameter": "subdomain"
                }
              },
              "value-path": "faceListId",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetFaceListResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#get-a-face-list-(v2)"
        }
      },
      "put": {
        "x-ms-visibility": "advanced",
        "summary": "Create a face list (V2)",
        "description": "Create an empty face list with user-specified faceListId, name and an optional userData.",
        "operationId": "CreateFaceListV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "name": "faceListId",
            "in": "path",
            "description": "Valid character is letter in lower case or digit or '-' or '_', maximum length is 64",
            "required": true,
            "x-ms-summary": "Face List Id",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the created face list, maximum length is 128.",
                  "type": "string",
                  "x-ms-summary": "Face List Name"
                },
                "userData": {
                  "description": "Optional user defined data for the face list. Length should not exceed 16KB.",
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "x-ms-summary": "User Data"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#create-a-face-list-(v2)"
        }
      }
    },
    "/{connectionId}/face/v1.0/facelists/{faceListId}/": {
      "get": {
        "x-ms-visibility": "advanced",
        "summary": "Get a face list",
        "description": "Retrieve a face list's information, including faceListId, name, userData and faces in the face list.",
        "operationId": "GetFaceList",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "faceListId",
            "in": "path",
            "description": "faceListId of the target face list.",
            "required": true,
            "x-ms-summary": "Face List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetFaceListInternal",
              "value-path": "faceListId",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetFaceListResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#get-a-face-list"
        }
      },
      "put": {
        "x-ms-visibility": "advanced",
        "summary": "Create a face list",
        "description": "Create an empty face list with user-specified faceListId, name and an optional userData.",
        "operationId": "CreateFaceList",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "faceListId",
            "in": "path",
            "description": "Valid character is letter in lower case or digit or '-' or '_', maximum length is 64",
            "required": true,
            "x-ms-summary": "Face List Id",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the created face list, maximum length is 128.",
                  "type": "string",
                  "x-ms-summary": "Face List Name"
                },
                "userData": {
                  "description": "Optional user defined data for the face list. Length should not exceed 16KB.",
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "x-ms-summary": "User Data"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#create-a-face-list"
        }
      }
    },
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/detect": {
      "post": {
        "x-ms-visibility": "important",
        "summary": "Detect faces (V2)",
        "description": "Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.",
        "operationId": "DetectV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "x-ms-summary": "Resource Subdomain or Region",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "name": "returnFaceId",
            "in": "query",
            "required": false,
            "x-ms-summary": "returnFaceIds",
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "true"
          },
          {
            "$ref": "#/parameters/url__in_body"
          },
          {
            "name": "returnFaceAttributes",
            "in": "query",
            "required": false,
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "age,gender,headPose,smile,facialHair,glasses"
          },
          {
            "name": "returnFaceLandmarks",
            "in": "query",
            "required": false,
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DetectResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#detect-faces-(v2)"
        }
      }
    },
    "/{connectionId}/face/v1.0/detect": {
      "post": {
        "x-ms-visibility": "important",
        "summary": "Detect faces",
        "description": "Detect human faces in an image and returns face locations, and optionally with faceIds, landmarks, and attributes.",
        "operationId": "Detect",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "returnFaceId",
            "in": "query",
            "required": false,
            "x-ms-summary": "returnFaceIds",
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "true"
          },
          {
            "$ref": "#/parameters/url__in_body"
          },
          {
            "name": "returnFaceAttributes",
            "in": "query",
            "required": false,
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "age,gender,headPose,smile,facialHair,glasses"
          },
          {
            "name": "returnFaceLandmarks",
            "in": "query",
            "required": false,
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DetectResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#detect-faces"
        }
      }
    },
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/persongroups/{personGroupId}/persons/{personId}/persistedFaces": {
      "post": {
        "x-ms-visibility": "advanced",
        "summary": "Add a person face (V2)",
        "description": "Add a representative face to a person for identification.",
        "operationId": "AddPersonFaceV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "x-ms-summary": "Resource Subdomain or Region",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "name": "personGroupId",
            "in": "path",
            "description": "Person group",
            "required": true,
            "x-ms-summary": "Person Group Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonGroupsInternalV2",
              "parameters": {
                "subdomain": {
                  "parameter": "subdomain"
                }
              },
              "value-path": "personGroupId",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "personId",
            "in": "path",
            "description": "Target person that the face is added to.",
            "required": true,
            "x-ms-summary": "Person Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonsInternalV2",
              "value-path": "personId",
              "value-title": "name",
              "parameters": {
                "personGroupId": {
                  "parameter": "personGroupId"
                },
                "subdomain": {
                  "parameter": "subdomain"
                }
              }
            },
            "type": "string"
          },
          {
            "$ref": "#/parameters/url__in_body"
          },
          {
            "$ref": "#/parameters/targetFace__in_query"
          },
          {
            "$ref": "#/parameters/userData__in_query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddPersonFaceResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#add-a-person-face-(v2)"
        }
      }
    },
    "/{connectionId}/face/v1.0/persongroups/{personGroupId}/persons/{personId}/persistedFaces": {
      "post": {
        "x-ms-visibility": "advanced",
        "summary": "Add a person face",
        "description": "Add a representative face to a person for identification.",
        "operationId": "AddPersonFace",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "personGroupId",
            "in": "path",
            "description": "Person group",
            "required": true,
            "x-ms-summary": "Person Group Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonGroupsInternal",
              "value-path": "personGroupId",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "personId",
            "in": "path",
            "description": "Target person that the face is added to.",
            "required": true,
            "x-ms-summary": "Person Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonsInternal",
              "value-path": "personId",
              "value-title": "name",
              "parameters": {
                "personGroupId": {
                  "parameter": "personGroupId"
                }
              }
            },
            "type": "string"
          },
          {
            "$ref": "#/parameters/url__in_body"
          },
          {
            "$ref": "#/parameters/targetFace__in_query"
          },
          {
            "$ref": "#/parameters/userData__in_query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddPersonFaceResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#add-a-person-face"
        }
      }
    },
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/facelists/{faceListId}/persistedFaces": {
      "post": {
        "x-ms-visibility": "advanced",
        "summary": "Add face to face list (V2)",
        "description": "Add face to face list.",
        "operationId": "AddFaceToFaceListV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "x-ms-summary": "Resource Subdomain or Region",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "description": "Image must be JPEG, PNG, GIF(the first frame), or BMP",
                  "type": "string",
                  "x-ms-summary": "Image Url"
                }
              }
            },
            "x-ms-summary": "body",
            "x-ms-visibility": "advanced"
          },
          {
            "$ref": "#/parameters/targetFace__in_query"
          },
          {
            "$ref": "#/parameters/userData__in_query"
          },
          {
            "name": "faceListId",
            "in": "path",
            "description": "Valid character is letter in lower case or digit or '-' or '_', maximum length is 64.",
            "required": true,
            "x-ms-summary": "Face List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetFaceListInternalV2",
              "parameters": {
                "subdomain": {
                  "parameter": "subdomain"
                }
              },
              "value-path": "faceListId",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddPersonFaceResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#add-face-to-face-list-(v2)"
        }
      }
    },
    "/{connectionId}/face/v1.0/facelists/{faceListId}/persistedFaces": {
      "post": {
        "x-ms-visibility": "advanced",
        "summary": "Add face to face list",
        "description": "Add face to face list.",
        "operationId": "AddFaceToFaceList",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "description": "Image must be JPEG, PNG, GIF(the first frame), or BMP",
                  "type": "string",
                  "x-ms-summary": "Image Url"
                }
              }
            },
            "x-ms-summary": "body",
            "x-ms-visibility": "advanced"
          },
          {
            "$ref": "#/parameters/targetFace__in_query"
          },
          {
            "$ref": "#/parameters/userData__in_query"
          },
          {
            "name": "faceListId",
            "in": "path",
            "description": "Valid character is letter in lower case or digit or '-' or '_', maximum length is 64.",
            "required": true,
            "x-ms-summary": "Face List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetFaceListInternal",
              "value-path": "faceListId",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddPersonFaceResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#add-face-to-face-list"
        }
      }
    },
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/persongroups/{personGroupId}": {
      "get": {
        "x-ms-visibility": "advanced",
        "summary": "Get a person group (V2)",
        "description": "Retrieve the information of a person group, including its name and userData.",
        "operationId": "GetPersonGroupV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "x-ms-summary": "Resource Subdomain or Region",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "name": "personGroupId",
            "in": "path",
            "description": "Target Person Group Id.",
            "required": true,
            "x-ms-summary": "Person Group Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonGroupsInternalV2",
              "parameters": {
                "subdomain": {
                  "parameter": "subdomain"
                }
              },
              "value-path": "personGroupId",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPersonGroupResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#get-a-person-group-(v2)"
        }
      },
      "put": {
        "x-ms-visibility": "advanced",
        "summary": "Create a person group (V2)",
        "description": "Create a new person group with specified personGroupId, name and user-provided userData. ",
        "operationId": "CreatePersonGroupV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "x-ms-summary": "Resource Subdomain or Region",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "name": "personGroupId",
            "in": "path",
            "description": "New Person Group Id (valid characters include numbers, English letters in lower case, '-' and '_')",
            "required": true,
            "x-ms-summary": "Person Group Id",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "Person group display name. The maximum length is 128.",
                  "type": "string",
                  "x-ms-summary": "Name"
                },
                "userData": {
                  "description": "User-provided data attached to the person group. The size limit is 16KB.",
                  "type": "string",
                  "x-ms-summary": "User Data",
                  "x-ms-visibility": "advanced"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#create-a-person-group-(v2)"
        }
      }
    },
    "/{connectionId}/face/v1.0/persongroups/{personGroupId}": {
      "get": {
        "x-ms-visibility": "advanced",
        "summary": "Get a person group",
        "description": "Retrieve the information of a person group, including its name and userData.",
        "operationId": "GetPersonGroup",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "personGroupId",
            "in": "path",
            "description": "Target Person Group Id.",
            "required": true,
            "x-ms-summary": "Person Group Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonGroupsInternal",
              "value-path": "personGroupId",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPersonGroupResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#get-a-person-group"
        }
      },
      "put": {
        "x-ms-visibility": "advanced",
        "summary": "Create a person group",
        "description": "Create a new person group with specified personGroupId, name and user-provided userData. ",
        "operationId": "CreatePersonGroup",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "personGroupId",
            "in": "path",
            "description": "New Person Group Id (valid characters include numbers, English letters in lower case, '-' and '_')",
            "required": true,
            "x-ms-summary": "Person Group Id",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "description": "Person group display name. The maximum length is 128.",
                  "type": "string",
                  "x-ms-summary": "Name"
                },
                "userData": {
                  "description": "User-provided data attached to the person group. The size limit is 16KB.",
                  "type": "string",
                  "x-ms-summary": "User Data",
                  "x-ms-visibility": "advanced"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#create-a-person-group"
        }
      }
    },
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/verify": {
      "post": {
        "x-ms-visibility": "advanced",
        "summary": "Find person from face (V2)",
        "description": "Verify whether two faces belong to a same person or whether one face belongs to a person.",
        "operationId": "VerifyV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "x-ms-summary": "Resource Subdomain or Region",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "faceId",
                "personGroupId",
                "personId"
              ],
              "type": "object",
              "properties": {
                "faceId": {
                  "description": "Unique faceId of the detected face. Will expire 24 hours after detection call.",
                  "type": "string",
                  "x-ms-summary": "Face Id"
                },
                "personGroupId": {
                  "description": "Person Group Id created in Face API - Create Person Group action.",
                  "type": "string",
                  "x-ms-summary": "Person Group Id",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPersonGroupsInternalV2",
                    "parameters": {
                      "subdomain": {
                        "parameter": "subdomain"
                      }
                    },
                    "value-path": "personGroupId",
                    "value-title": "name"
                  }
                },
                "personId": {
                  "description": "Person Id created in Face API - Create Person action.",
                  "type": "string",
                  "x-ms-summary": "Person Id",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPersonsInternalV2",
                    "value-path": "personId",
                    "value-title": "name",
                    "parameters": {
                      "personGroupId": {
                        "parameter": "personGroupId"
                      },
                      "subdomain": {
                        "parameter": "subdomain"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetPersonsInternalV2",
                    "parameters": {
                      "personGroupId": {
                        "parameterReference": "body/personGroupId"
                      },
                      "subdomain": {
                        "parameterReference": "subdomain"
                      }
                    },
                    "itemValuePath": "personId",
                    "itemTitlePath": "name"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VerifyResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#find-person-from-face-(v2)"
        }
      }
    },
    "/{connectionId}/face/v1.0/verify": {
      "post": {
        "x-ms-visibility": "advanced",
        "summary": "Find person from face",
        "description": "Verify whether two faces belong to a same person or whether one face belongs to a person.",
        "operationId": "Verify",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "faceId",
                "personGroupId",
                "personId"
              ],
              "type": "object",
              "properties": {
                "faceId": {
                  "description": "Unique faceId of the detected face. Will expire 24 hours after detection call.",
                  "type": "string",
                  "x-ms-summary": "Face Id"
                },
                "personGroupId": {
                  "description": "Person Group Id created in Face API - Create Person Group action.",
                  "type": "string",
                  "x-ms-summary": "Person Group Id",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPersonGroupsInternal",
                    "value-path": "personGroupId",
                    "value-title": "name"
                  }
                },
                "personId": {
                  "description": "Person Id created in Face API - Create Person action.",
                  "type": "string",
                  "x-ms-summary": "Person Id",
                  "x-ms-dynamic-values": {
                    "operationId": "GetPersonsInternal",
                    "value-path": "personId",
                    "value-title": "name",
                    "parameters": {
                      "personGroupId": {
                        "parameter": "personGroupId"
                      }
                    }
                  },
                  "x-ms-dynamic-list": {
                    "operationId": "GetPersonsInternal",
                    "parameters": {
                      "personGroupId": {
                        "parameterReference": "body/personGroupId"
                      }
                    },
                    "itemValuePath": "personId",
                    "itemTitlePath": "name"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VerifyResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#find-person-from-face"
        }
      }
    },
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/persongroups/{personGroupId}/persons/{personId}/persistedFaces/{persistedFaceId}": {
      "get": {
        "x-ms-visibility": "advanced",
        "summary": "Get a person face (V2)",
        "description": "Retrieve information about a persisted face specified by persistedFaceId, personId and its belonging personGroupId.",
        "operationId": "GetPersonFaceV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "x-ms-summary": "Resource Subdomain or Region",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/personGroupId__in_pathV2"
          },
          {
            "name": "personId",
            "in": "path",
            "description": "Specifying the target person that the face belongs to.",
            "required": true,
            "x-ms-summary": "Person Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonsInternalV2",
              "value-path": "personId",
              "value-title": "name",
              "parameters": {
                "personGroupId": {
                  "parameter": "personGroupId"
                },
                "subdomain": {
                  "parameter": "subdomain"
                }
              }
            },
            "type": "string"
          },
          {
            "name": "persistedFaceId",
            "in": "path",
            "description": "The persistedFaceId of the target persisted face of the person.",
            "required": true,
            "x-ms-summary": "Persisted Face Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonV2",
              "value-collection": "persistedFaceIds",
              "value-path": "persistedFaceId",
              "value-title": "persistedFaceId",
              "parameters": {
                "personId": {
                  "parameter": "personId"
                },
                "personGroupId": {
                  "parameter": "personGroupId"
                },
                "subdomain": {
                  "parameter": "subdomain"
                }
              }
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPersonFaceResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#get-a-person-face-(v2)"
        }
      }
    },
    "/{connectionId}/face/v1.0/persongroups/{personGroupId}/persons/{personId}/persistedFaces/{persistedFaceId}": {
      "get": {
        "x-ms-visibility": "advanced",
        "summary": "Get a person face",
        "description": "Retrieve information about a persisted face specified by persistedFaceId, personId and its belonging personGroupId.",
        "operationId": "GetPersonFace",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/personGroupId__in_path"
          },
          {
            "name": "personId",
            "in": "path",
            "description": "Specifying the target person that the face belongs to.",
            "required": true,
            "x-ms-summary": "Person Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonsInternal",
              "value-path": "personId",
              "value-title": "name",
              "parameters": {
                "personGroupId": {
                  "parameter": "personGroupId"
                }
              }
            },
            "type": "string"
          },
          {
            "name": "persistedFaceId",
            "in": "path",
            "description": "The persistedFaceId of the target persisted face of the person.",
            "required": true,
            "x-ms-summary": "Persisted Face Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPerson",
              "value-collection": "persistedFaceIds",
              "value-path": "persistedFaceId",
              "value-title": "persistedFaceId",
              "parameters": {
                "personId": {
                  "parameter": "personId"
                },
                "personGroupId": {
                  "parameter": "personGroupId"
                }
              }
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPersonFaceResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#get-a-person-face"
        }
      }
    },
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/persongroups/{personGroupId}/persons": {
      "get": {
        "summary": "",
        "description": "",
        "operationId": "GetPersonsInternalV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "name": "personGroupId",
            "in": "path",
            "required": true,
            "x-ms-summary": "personGroupId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPersonsInternalResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      },
      "post": {
        "x-ms-visibility": "advanced",
        "summary": "Create a person (V2)",
        "description": "Create a new person in a specified person group.",
        "operationId": "CreatePersonV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "name": "personGroupId",
            "in": "path",
            "required": true,
            "x-ms-summary": "Person Group Id",
            "description": "Specifying the target person group to create the person.",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonGroupsInternalV2",
              "parameters": {
                "subdomain": {
                  "parameter": "subdomain"
                }
              },
              "value-path": "personGroupId",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "x-ms-summary": "Name",
                  "description": "Display name of the target person. The maximum length is 128.",
                  "type": "string"
                },
                "userData": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "x-ms-summary": "User Data",
                  "description": "Optional fields for user-provided data attached to a person. Size limit is 16KB."
                }
              }
            },
            "x-ms-summary": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreatePersonResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#create-a-person-(v2)"
        }
      }
    },
    "/{connectionId}/face/v1.0/persongroups/{personGroupId}/persons": {
      "get": {
        "summary": "",
        "description": "",
        "operationId": "GetPersonsInternal",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "personGroupId",
            "in": "path",
            "required": true,
            "x-ms-summary": "personGroupId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPersonsInternalResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      },
      "post": {
        "x-ms-visibility": "advanced",
        "summary": "Create a person",
        "description": "Create a new person in a specified person group.",
        "operationId": "CreatePerson",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "personGroupId",
            "in": "path",
            "required": true,
            "x-ms-summary": "Person Group Id",
            "description": "Specifying the target person group to create the person.",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonGroupsInternal",
              "value-path": "personGroupId",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "name"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "x-ms-summary": "Name",
                  "description": "Display name of the target person. The maximum length is 128.",
                  "type": "string"
                },
                "userData": {
                  "type": "string",
                  "x-ms-visibility": "advanced",
                  "x-ms-summary": "User Data",
                  "description": "Optional fields for user-provided data attached to a person. Size limit is 16KB."
                }
              }
            },
            "x-ms-summary": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreatePersonResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#create-a-person"
        }
      }
    },
    "/{connectionId}/v2/subdomain/{subdomain}/face/v1.0/persongroups/{personGroupId}/persons/{personId}/": {
      "get": {
        "x-ms-visibility": "advanced",
        "summary": "Get a person (V2)",
        "description": "Retrieve a person's information, including registered persisted faces, name and userData.",
        "operationId": "GetPersonV2",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/personGroupId__in_pathV2"
          },
          {
            "name": "personId",
            "in": "path",
            "description": "Specifying the target person.",
            "required": true,
            "x-ms-summary": "Person Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonsInternalV2",
              "value-path": "personId",
              "value-title": "name",
              "parameters": {
                "personGroupId": {
                  "parameter": "personGroupId"
                },
                "subdomain": {
                  "parameter": "subdomain"
                }
              }
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPersonResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#get-a-person-(v2)"
        }
      }
    },
    "/{connectionId}/face/v1.0/persongroups/{personGroupId}/persons/{personId}/": {
      "get": {
        "x-ms-visibility": "advanced",
        "summary": "Get a person",
        "description": "Retrieve a person's information, including registered persisted faces, name and userData.",
        "operationId": "GetPerson",
        "x-ms-no-generic-test": true,
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/personGroupId__in_path"
          },
          {
            "name": "personId",
            "in": "path",
            "description": "Specifying the target person.",
            "required": true,
            "x-ms-summary": "Person Id",
            "x-ms-dynamic-values": {
              "operationId": "GetPersonsInternal",
              "value-path": "personId",
              "value-title": "name",
              "parameters": {
                "personGroupId": {
                  "parameter": "personGroupId"
                }
              }
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetPersonResponse"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#get-a-person"
        }
      }
    },
    "/{connectionId}/subdomain": {
      "get": {
        "summary": "Get the subdomain of the connection",
        "description": "Get the subdomain of the connection",
        "operationId": "GetSubdomain",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdomainList"
            }
          },
          "default": {
            "description": "Operation failed"
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/faceapi/#get-the-subdomain-of-the-connection"
        }
      }
    }
  },
  "definitions": {
    "SubdomainList": {
      "description": "List of subdomain names",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of subdomain names",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subdomain"
          }
        }
      }
    },
    "Subdomain": {
      "description": "Subdomain",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The subdomain of the connection.",
          "type": "string",
          "x-ms-summary": "The Subdomain name"
        },
        "DisplayName": {
          "description": "The display name of the subdomain.",
          "type": "string",
          "x-ms-summary": "Subdomain display name"
        }
      }
    },
    "GetPersonsInternalResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "string"
          },
          "persistedFaceIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "userData": {
            "type": "string"
          }
        }
      }
    },
    "GetPersonGroupsInternalResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "personGroupId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "userData": {
            "type": "string"
          }
        }
      }
    },
    "GetFaceListInternalResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "faceListId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "userData": {
            "type": "string"
          }
        }
      }
    },
    "DetectResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "faceId": {
            "description": "Unique faceId of the detected face. Will expire 24 hours after detection call.",
            "type": "string",
            "x-ms-summary": "Face Id"
          },
          "faceRectangle": {
            "type": "object",
            "properties": {
              "top": {
                "format": "int32",
                "type": "integer",
                "x-ms-summary": "Top",
                "description": "Parameters of a rectangle area for the face location on image."
              },
              "left": {
                "format": "int32",
                "type": "integer",
                "x-ms-summary": "Left",
                "description": "Parameters of a rectangle area for the face location on image."
              },
              "width": {
                "format": "int32",
                "type": "integer",
                "x-ms-summary": "Width",
                "description": "Parameters of a rectangle area for the face location on image."
              },
              "height": {
                "format": "int32",
                "type": "integer",
                "x-ms-summary": "Height",
                "description": "Parameters of a rectangle area for the face location on image."
              }
            },
            "x-ms-summary": "Face Rectangle"
          },
          "faceLandmarks": {
            "type": "object",
            "properties": {
              "pupilLeft": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate of the left pupil.",
                    "type": "number",
                    "x-ms-summary": "Left Pupil X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate of the left pupil.",
                    "type": "number",
                    "x-ms-summary": "Left Pupil Y"
                  }
                }
              },
              "pupilRight": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate of the right pupil.",
                    "type": "number",
                    "x-ms-summary": "Right Pupil X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate of the right pupil.",
                    "type": "number",
                    "x-ms-summary": "Right Pupil Y"
                  }
                }
              },
              "noseTip": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate of the nose tip.",
                    "type": "number",
                    "x-ms-summary": "Nose Tip X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate of the nose tip.",
                    "type": "number",
                    "x-ms-summary": "Nose Tip Y"
                  }
                }
              },
              "mouthLeft": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the left side of the mouth.",
                    "type": "number",
                    "x-ms-summary": "Mouth Left X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the left side of the mouth.",
                    "type": "number",
                    "x-ms-summary": "Mouth Left Y"
                  }
                }
              },
              "mouthRight": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the right side of the mouth.",
                    "type": "number",
                    "x-ms-summary": "Mouth Right X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the right side of the mouth.",
                    "type": "number",
                    "x-ms-summary": "Mouth Right Y"
                  }
                }
              },
              "eyebrowLeftOuter": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the outer side of the left eyebrow.",
                    "type": "number",
                    "x-ms-summary": "Outer Left Eyebrow X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the outer side of the left eyebrow.",
                    "type": "number",
                    "x-ms-summary": "Outer Left Eyebrow Y"
                  }
                }
              },
              "eyebrowLeftInner": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the inner side of the left eyebrow.",
                    "type": "number",
                    "x-ms-summary": "Inner Left Eybrow X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the inner side of the left eyebrow.",
                    "type": "number",
                    "x-ms-summary": "Inner Left Eyebrow Y"
                  }
                }
              },
              "eyeLeftOuter": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the outer side of the left eye.",
                    "type": "number",
                    "x-ms-summary": "Outer Left Eye X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the outer side of the left eye.",
                    "type": "number",
                    "x-ms-summary": "Outer Left Eye Y"
                  }
                }
              },
              "eyeLeftTop": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the top of the left eye.",
                    "type": "number",
                    "x-ms-summary": "Top of Left Eye X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the top of the left eye.",
                    "type": "number",
                    "x-ms-summary": "Top of Left Eye Y"
                  }
                }
              },
              "eyeLeftBottom": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the bottom of the left eye.",
                    "type": "number",
                    "x-ms-summary": "Bottom of Left Eye X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the bottom of the left eye.",
                    "type": "number",
                    "x-ms-summary": "Bottom of Left Eye Y"
                  }
                }
              },
              "eyeLeftInner": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the inner side of the left eye.",
                    "type": "number",
                    "x-ms-summary": "Inner Left Eye X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the inner side of the left eye.",
                    "type": "number",
                    "x-ms-summary": "Inner Left Eye Y"
                  }
                }
              },
              "eyebrowRightInner": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the inner side of the right eyebrow.",
                    "type": "number",
                    "x-ms-summary": "Inner Right Eybrow X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the inner side of the right eyebrow.",
                    "type": "number",
                    "x-ms-summary": "Inner Right Eyebrow Y"
                  }
                }
              },
              "eyebrowRightOuter": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the outer side of the right eyebrow.",
                    "type": "number",
                    "x-ms-summary": "Outer Right Eyebrow X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the outer side of the right eyebrow.",
                    "type": "number",
                    "x-ms-summary": "Outer Right Eyebrow Y"
                  }
                }
              },
              "eyeRightInner": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the inner side of the right eye.",
                    "type": "number",
                    "x-ms-summary": "Inner Right Eye X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the inner side of the right eye.",
                    "type": "number",
                    "x-ms-summary": "Inner Right Eye Y"
                  }
                }
              },
              "eyeRightTop": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the top of the right eye.",
                    "type": "number",
                    "x-ms-summary": "Top of Right Eye X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the top of the right eye.",
                    "type": "number",
                    "x-ms-summary": "Top of Right Eye Y"
                  }
                }
              },
              "eyeRightBottom": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the bottom of the right eye.",
                    "type": "number",
                    "x-ms-summary": "Bottom of Right Eye X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the bottom of the right eye.",
                    "type": "number",
                    "x-ms-summary": "Bottom of Right Eye Y"
                  }
                }
              },
              "eyeRightOuter": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for the outer side of the right eye.",
                    "type": "number",
                    "x-ms-summary": "Outer Right Eye X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for the outer side of the right eye.",
                    "type": "number",
                    "x-ms-summary": "Outer Right Eye Y"
                  }
                }
              },
              "noseRootLeft": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for left side of the nose root.",
                    "type": "number",
                    "x-ms-summary": "Left Nose Root X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for left side of the nose root.",
                    "type": "number",
                    "x-ms-summary": "Left Nose Root Y"
                  }
                }
              },
              "noseRootRight": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for right side of the nose root.",
                    "type": "number",
                    "x-ms-summary": "Right Nose Root X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for right side of the nose root.",
                    "type": "number",
                    "x-ms-summary": "Right Nose Root Y"
                  }
                }
              },
              "noseLeftAlarTop": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for top of the left nose altar.",
                    "type": "number",
                    "x-ms-summary": "Top of Left Nose Altar X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for top of the left nose altar.",
                    "type": "number",
                    "x-ms-summary": "Top of Left Nose Altar Y"
                  }
                }
              },
              "noseRightAlarTop": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for top of the right nose altar.",
                    "type": "number",
                    "x-ms-summary": "Top of Right Nose Altar X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for top of the right nose altar.",
                    "type": "number",
                    "x-ms-summary": "Top of Right Nose Altar Y"
                  }
                }
              },
              "noseLeftAlarOutTip": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for tip of the left nose altar.",
                    "type": "number",
                    "x-ms-summary": "Tip of Left Nose Altar Out X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for tip of the left nose altar/",
                    "type": "number",
                    "x-ms-summary": "Tip of Left Nose Altar Out Y"
                  }
                }
              },
              "noseRightAlarOutTip": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for tip of the right nose altar.",
                    "type": "number",
                    "x-ms-summary": "Tip of Right Nose Altar Out X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for tip of the right nose altar.",
                    "type": "number",
                    "x-ms-summary": "Tip of Right Nose Altar Out Y"
                  }
                }
              },
              "upperLipTop": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for top of upper lip.",
                    "type": "number",
                    "x-ms-summary": "Top of Upper Lip X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for top of upper lip.",
                    "type": "number",
                    "x-ms-summary": "Top of Upper Lip Y"
                  }
                }
              },
              "upperLipBottom": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for bottom of upper lip.",
                    "type": "number",
                    "x-ms-summary": "Bottom of Upper Lip X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for bottom of upper lip.",
                    "type": "number",
                    "x-ms-summary": "Bottom of Upper Lip Y"
                  }
                }
              },
              "underLipTop": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for top of under lip.",
                    "type": "number",
                    "x-ms-summary": "Top of Under Lip X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for top of under lip.",
                    "type": "number",
                    "x-ms-summary": "Top of Under Lip Y"
                  }
                }
              },
              "underLipBottom": {
                "type": "object",
                "properties": {
                  "x": {
                    "format": "float",
                    "description": "The x-coordinate for bottom of under lip.",
                    "type": "number",
                    "x-ms-summary": "Bottom of Under Lip X"
                  },
                  "y": {
                    "format": "float",
                    "description": "The y-coordinate for bottom of under lip.",
                    "type": "number",
                    "x-ms-summary": "Bottom of Under Lip Y"
                  }
                }
              }
            },
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Face Landmarks"
          },
          "faceAttributes": {
            "type": "object",
            "properties": {
              "smile": {
                "format": "float",
                "type": "number",
                "x-ms-summary": "Smile",
                "description": "Intensity between [0,1]."
              },
              "headPose": {
                "type": "object",
                "properties": {
                  "pitch": {
                    "format": "float",
                    "description": "Reserved field, always returns 0.",
                    "type": "number",
                    "x-ms-summary": "Head Pose Pitch"
                  },
                  "roll": {
                    "format": "float",
                    "description": "Roll of the head pose.",
                    "type": "number",
                    "x-ms-summary": "Head Pose Roll"
                  },
                  "yaw": {
                    "format": "float",
                    "description": "Yaw of the head pose.",
                    "type": "number",
                    "x-ms-summary": "Head Pose Yaw"
                  }
                },
                "x-ms-visibility": "advanced"
              },
              "gender": {
                "description": "Male for female.",
                "type": "string",
                "x-ms-summary": "Gender"
              },
              "age": {
                "format": "float",
                "description": "Age of person.",
                "type": "number",
                "x-ms-summary": "Age"
              },
              "facialHair": {
                "type": "object",
                "properties": {
                  "moustache": {
                    "format": "float",
                    "description": "Intensity between [0,1].",
                    "type": "number",
                    "x-ms-summary": "Moustache"
                  },
                  "beard": {
                    "format": "float",
                    "description": "Intensity between [0,1].",
                    "type": "number",
                    "x-ms-summary": "Beard"
                  },
                  "sideburns": {
                    "format": "float",
                    "description": "Intensity between [0,1].",
                    "type": "number",
                    "x-ms-summary": "Sideburns"
                  }
                }
              },
              "glasses": {
                "description": "Type of glasses.",
                "type": "string",
                "x-ms-summary": "Glasses"
              }
            }
          }
        }
      }
    },
    "AddPersonFaceResponse": {
      "type": "object",
      "properties": {
        "persistedFaceId": {
          "type": "string",
          "x-ms-summary": "Persisted Face Id"
        }
      }
    },
    "GetPersonGroupResponse": {
      "type": "object",
      "properties": {
        "personGroupId": {
          "type": "string",
          "x-ms-summary": "Person Group Id"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "userData": {
          "type": "string"
        }
      }
    },
    "GetFaceListResponse": {
      "type": "object",
      "properties": {
        "persistedFaces": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "persistedFaceId": {
                "type": "string",
                "x-ms-summary": "Persisted Face Id",
                "description": "Id of the face."
              },
              "userData": {
                "type": "string",
                "x-ms-summary": "User Data",
                "description": "User-provided data attached to each face."
              }
            }
          },
          "x-ms-summary": "Persisted Faces"
        },
        "faceListId": {
          "type": "string",
          "x-ms-summary": "Face List Id",
          "description": "faceListId of the target face list."
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Face list's display name."
        },
        "userData": {
          "type": "string",
          "x-ms-summary": "User Data",
          "description": "User-provided data attached to the face list."
        }
      }
    },
    "GetPersonFaceResponse": {
      "type": "object",
      "properties": {
        "persistedFaceId": {
          "type": "string",
          "x-ms-summary": "Persisted Face Id"
        },
        "userData": {
          "type": "string"
        }
      }
    },
    "CreatePersonResponse": {
      "type": "object",
      "properties": {
        "personId": {
          "type": "string",
          "x-ms-summary": "Person Id"
        }
      }
    },
    "GetPersonResponse": {
      "type": "object",
      "properties": {
        "personId": {
          "type": "string",
          "x-ms-summary": "Person Id"
        },
        "persistedFaceIds": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "persistedFaceId": {
                "type": "string",
                "x-ms-summary": "Persisted Face Id"
              }
            }
          },
          "x-ms-summary": "Persisted Face Ids"
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name"
        },
        "userData": {
          "type": "string",
          "x-ms-summary": "User Data"
        }
      }
    },
    "VerifyResponse": {
      "type": "object",
      "properties": {
        "isIdentical": {
          "type": "boolean",
          "x-ms-summary": "Is Identical",
          "description": "True if the two faces belong to the same person or the face belongs to the person, otherwise false."
        },
        "confidence": {
          "format": "float",
          "type": "number",
          "x-ms-summary": "Confidence",
          "description": "A number indicates the similarity confidence of whether two faces belong to the same person, or whether the face belongs to the person. "
        }
      }
    },
    "IdentifyResponse": {
      "type": "object",
      "properties": {
        "faceId": {
          "type": "string",
          "x-ms-summary": "Face Id",
          "description": "faceId of the query face."
        },
        "candidates": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "personId": {
                "type": "string",
                "x-ms-summary": "Person Id",
                "description": "personId of candidate person."
              },
              "confidence": {
                "format": "float",
                "type": "number",
                "x-ms-summary": "Confidence",
                "description": "A float number between 0.0 and 1.0."
              }
            }
          },
          "x-ms-summary": "Candidates"
        }
      }
    }
  },
  "parameters": {
    "url__in_body": {
      "name": "body",
      "in": "body",
      "required": true,
      "schema": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "description": "Image must be JPEG, PNG, GIF(the first frame), or BMP",
            "type": "string",
            "x-ms-summary": "Image Url"
          }
        }
      }
    },
    "targetFace__in_query": {
      "name": "targetFace",
      "in": "query",
      "description": "A face rectangle to specify the target face to be added to a person, in the format of targetFace=left,top,width,height",
      "required": false,
      "x-ms-summary": "Target Face",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "userData__in_query": {
      "name": "userData",
      "in": "query",
      "description": "User-specified data about the target face to add for any purpose. The maximum length is 1KB.",
      "required": false,
      "x-ms-summary": "User Data",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "personGroupId__in_pathV2": {
      "name": "personGroupId",
      "in": "path",
      "description": "Specifying the person group containing the target person.",
      "required": true,
      "x-ms-summary": "Person Group Id",
      "x-ms-dynamic-values": {
        "operationId": "GetPersonGroupsInternalV2",
        "parameters": {
          "subdomain": {
            "parameter": "subdomain"
          }
        },
        "value-path": "personGroupId",
        "value-title": "name"
      },
      "type": "string"
    },
    "personGroupId__in_path": {
      "name": "personGroupId",
      "in": "path",
      "description": "Specifying the person group containing the target person.",
      "required": true,
      "x-ms-summary": "Person Group Id",
      "x-ms-dynamic-values": {
        "operationId": "GetPersonGroupsInternal",
        "value-path": "personGroupId",
        "value-title": "name"
      },
      "type": "string"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://azure.microsoft.com/services/cognitive-services/face/"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/faceapi"
  },
  "basePath": "/apim/faceapi"
}
