{
  "swagger": "2.0",
  "info": {
    "x-ms-deployment-version": "1.0.0",
    "version": "v1",
    "title": "Power BI",
    "description": "Power BI is a suite of business analytics tools to analyze data and share insights. Connect to get easy access to the data in your Power BI dashboards, reports and datasets.",
    "x-ms-api-annotation": {
      "status": "Production"
    },
    "contact": {
      "name": "Microsoft",
      "url": "https://powerbi.microsoft.com/en-us/support/"
    }
  },
  "x-ms-docs": [
    {
      "url": "https://ms.flow.microsoft.com/en-us/blog/a-fun-guide-to-using-power-bi-with-microsoft-flow/",
      "description": "A fun guide to using Power BI with Microsoft Flow"
    },
    {
      "url": "https://ms.flow.microsoft.com/en-us/blog/using-flow-and-power-bi-to-track-social-listening-through-twitter/",
      "description": "Using Flow and Power BI to track social listening through Twitter"
    },
    {
      "url": "https://ms.flow.microsoft.com/en-us/blog/fotw-weather-in-powerbi/",
      "description": "Show real-time weather data in Power BI"
    }
  ],
  "host": "europe-002.azure-apim.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectionId}/v1.0/myOrg/groups/{groupid}/internalScorecards": {
      "get": {
        "x-ms-visibility": "important",
        "operationId": "GetScorecards",
        "summary": "Get scorecards",
        "description": "Gets a list of Power BI scorecards in the specified workspace.",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListedScorecards"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#get-scorecards"
        }
      },
      "post": {
        "operationId": "CreateScorecard",
        "summary": "Create a scorecard",
        "description": "Creates a scorecard for Power BI goals.",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "name": "Scorecard",
            "in": "body",
            "required": true,
            "x-ms-summary": "Scorecard to create",
            "schema": {
              "$ref": "#/definitions/CreateScorecardRequest"
            }
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreatedScorecard"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#create-a-scorecard"
        }
      }
    },
    "/{connectionId}/v1.0/myOrg/groups/{groupid}/internalScorecards({scorecardId})/goals": {
      "get": {
        "tags": [
          "GetGoals",
          "Goal",
          "GetMultipleGoals"
        ],
        "operationId": "GetMultipleGoals",
        "summary": "Get multiple goals",
        "description": "Get a list of Power BI goals in the specified scorecard.",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalExpandParameter"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchedGoals"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#get-multiple-goals"
        }
      },
      "post": {
        "tags": [
          "CreateGoal",
          "Goal"
        ],
        "summary": "Create a goal",
        "description": "Creates a Power BI goal on the specified scorecard.",
        "operationId": "CreateGoal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "name": "goal",
            "in": "body",
            "x-ms-summary": "Goal",
            "description": "The goal to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateGoalRequest"
            }
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "x-ms-summary": "Created goal",
              "description": "Created goal.",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "x-ms-summary": "Id",
                  "description": "The unique identifier of the goal."
                }
              }
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#create-a-goal"
        }
      }
    },
    "/{connectionId}/v1.0/myOrg/groups/{groupid}/internalScorecards({scorecardId})/goals({goalId})": {
      "get": {
        "tags": [
          "GetGoal",
          "Goal"
        ],
        "summary": "Get a goal",
        "description": "Gets the specified Power BI goal on a scorecard.",
        "operationId": "GetGoal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          },
          {
            "$ref": "#/parameters/GoalExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FetchedGoal"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#get-a-goal"
        }
      },
      "patch": {
        "tags": [
          "UpdateGoal",
          "Goal"
        ],
        "summary": "Update a goal",
        "description": "Updates the Power BI goal's state.",
        "operationId": "UpdateGoal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "name": "Goal",
            "in": "body",
            "description": "New goal properties",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateGoalRequest"
            }
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#update-a-goal"
        }
      }
    },
    "/{connectionId}/internalFlowTriggerGoalChange/v1.0/myOrg/groups/{groupid}/internalScorecards({scorecardId})/goals": {
      "get": {
        "summary": "When someone assigns a new owner to a goal",
        "description": "When someone assigns a new owner to a Power BI goal.",
        "operationId": "GoalsAssignedTrigger",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "name": "owner",
            "type": "string",
            "in": "query",
            "format": "email",
            "x-ms-summary": "Owner",
            "description": "E-mail of an owner. Can be yours. Can be empty when tracking any owner."
          },
          {
            "name": "pollingInterval",
            "type": "number",
            "required": true,
            "default": "14400",
            "minimum": 300,
            "in": "query",
            "x-ms-summary": "Polling interval (sec)",
            "description": "Number of seconds between checks for new data. Minimum is 300."
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalsAssigned"
            }
          },
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalsAssigned"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "important",
        "x-ms-trigger-hint": "Assign some goals of the selected scorecard to owners.",
        "x-ms-trigger": "single",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#when-someone-assigns-a-new-owner-to-a-goal"
        }
      }
    },
    "/{connectionId}/internalFlowTriggerGoalChange/v1.0/myOrg/groups/{groupid}/internalScorecards({scorecardId})/goals({goalId})": {
      "get": {
        "summary": "When a goal changes",
        "description": "When a property of some Power BI goal changes.",
        "operationId": "GoalChangeTrigger",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "name": "pollingInterval",
            "type": "number",
            "required": true,
            "default": "14400",
            "minimum": 300,
            "in": "query",
            "x-ms-summary": "Polling interval (sec)",
            "description": "Number of seconds between checks for new data. Minimum is 300."
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalChanged"
            }
          },
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalChanged"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "important",
        "x-ms-trigger-hint": "Change some property of the goal being tracked.",
        "x-ms-trigger": "single",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#when-a-goal-changes"
        }
      }
    },
    "/{connectionId}/internalFlowTriggerGoalChange/v1.0/myOrg/groups/{groupid}/internalScorecards({scorecardId})/goals({goalId})/GetFlowTriggerStatus": {
      "get": {
        "summary": "When status of a goal changes",
        "description": "When status of some Power BI goal changes.",
        "operationId": "GoalStatusChangeTrigger",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "name": "pollingInterval",
            "type": "number",
            "required": true,
            "default": "14400",
            "minimum": 300,
            "in": "query",
            "x-ms-summary": "Polling interval (sec)",
            "description": "Number of seconds between checks for new data. Minimum is 300."
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalStatusChanged"
            }
          },
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalStatusChanged"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "important",
        "x-ms-trigger-hint": "Change the status of the goal being tracked.",
        "x-ms-trigger": "single",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#when-status-of-a-goal-changes"
        }
      }
    },
    "/{connectionId}/internalFlowTriggerGoalChange/v1.0/myOrg/groups/{groupid}/internalScorecards({scorecardId})/goals({goalId})/GetFlowTriggerValue": {
      "get": {
        "summary": "When current value of a goal changes",
        "description": "When current value of some Power BI goal changes.",
        "operationId": "GoalValueChangeTrigger",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "name": "pollingInterval",
            "type": "number",
            "required": true,
            "default": "14400",
            "minimum": 300,
            "in": "query",
            "x-ms-summary": "Polling interval (sec)",
            "description": "Number of seconds between checks for new data. Minimum is 300."
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalValueChanged"
            }
          },
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalValueChanged"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "important",
        "x-ms-trigger-hint": "Change the current value of the goal being tracked.",
        "x-ms-trigger": "single",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#when-current-value-of-a-goal-changes"
        }
      }
    },
    "/{connectionId}/internalFlowTriggerGoalChange/v1.0/myOrg/groups/{groupid}/internalScorecards({scorecardId})/goals({goalId})/GetRefreshHistory": {
      "get": {
        "summary": "When a data refresh for a goal fails",
        "description": "When a data refresh for a Power BI goal fails.",
        "operationId": "GoalRefreshFailedTrigger",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "name": "trackTargetSource",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Will track the link for the goal's target.",
            "x-ms-summary": "Track target source",
            "default": "Yes",
            "enum": [
              "Yes",
              "No"
            ]
          },
          {
            "name": "trackValueSource",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Will track the link for the goal's value.",
            "x-ms-summary": "Track value source",
            "default": "Yes",
            "enum": [
              "Yes",
              "No"
            ]
          },
          {
            "name": "pollingInterval",
            "type": "number",
            "required": true,
            "default": "14400",
            "minimum": 300,
            "in": "query",
            "x-ms-summary": "Polling interval (sec)",
            "description": "Number of seconds between checks for new data. Minimum is 300."
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalRefreshIssues"
            }
          },
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalRefreshIssues"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "important",
        "x-ms-trigger-hint": "The link between the data and bound goal value or target become broken.",
        "x-ms-trigger": "single",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#when-a-data-refresh-for-a-goal-fails"
        }
      }
    },
    "/{connectionId}/internalFlowTriggerGoalChange/v1.0/myOrg/groups/{groupid}/internalScorecards({scorecardId})/goals({goalId})/goalValues": {
      "get": {
        "summary": "When someone adds or edits a goal check-in",
        "description": "Trigger for some Power BI goal check-in or note changes.",
        "operationId": "GoalValueOrNoteUpsertTrigger",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "name": "pollingInterval",
            "type": "number",
            "required": true,
            "default": "14400",
            "minimum": 300,
            "in": "query",
            "x-ms-summary": "Polling interval (sec)",
            "description": "Number of seconds between checks for new data. Minimum is 300."
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalValueOrNoteUpserted"
            }
          },
          "202": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GoalValueOrNoteUpserted"
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "important",
        "x-ms-trigger-hint": "Add some check-ins or add some notes.",
        "x-ms-trigger": "single",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#when-someone-adds-or-edits-a-goal-check-in"
        }
      }
    },
    "/{connectionId}/metadata/v201606/alerts": {
      "get": {
        "tags": [
          "GetAlerts"
        ],
        "summary": "Get alerts from Power BI",
        "description": "Return a list of alerts for a signed in user.",
        "operationId": "GetAlerts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation was successful.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Alert"
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "security": [
          {
            "AAD": [
              "Dataset.Read.All"
            ]
          }
        ],
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#get-alerts-from-power-bi"
        }
      }
    },
    "/{connectionId}/metadata/v201606/alerts/{alertId}/status": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "When a data driven alert is triggered",
        "description": "Return the details of the specified data driven alert from Power BI when the alert triggered.",
        "operationId": "CheckAlertStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "alertId",
            "in": "path",
            "description": "The alert id to track.",
            "required": true,
            "x-ms-summary": "Alert Id",
            "x-ms-dynamic-values": {
              "operationId": "GetAlerts",
              "value-path": "alertId",
              "value-title": "alertTitle"
            },
            "x-ms-url-encoding": "double",
            "type": "string"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EvaluatedAlert"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/EvaluatedAlert"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "AAD": [
              "Dataset.Read.All"
            ]
          }
        ],
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "Evaluate the alert.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#when-a-data-driven-alert-is-triggered"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/datasets/{datasetid}/executeQueries": {
      "post": {
        "operationId": "ExecuteDatasetQuery",
        "summary": "Run a query against a dataset",
        "description": "Use the Power BI REST API to run a query.",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DatasetIdParameterRefresh"
          },
          {
            "name": "specification",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuerySpecification"
            }
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueryExecutionResults"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#run-a-query-against-a-dataset"
        }
      }
    },
    "/{connectionId}/internalFlowActionOverloadAsJson/v1.0/myorg/groups/{groupid}/datasets/{datasetid}/executeQueries": {
      "post": {
        "operationId": "ExecuteDatasetQueriesJson",
        "summary": "Run a json query against a dataset",
        "description": "Use the Power BI REST API to run a query in json format.",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DatasetIdParameterRefresh"
          },
          {
            "name": "Specification",
            "in": "body",
            "required": true,
            "description": "The json text of the query. Can be multiline text.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#run-a-json-query-against-a-dataset"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/datasets/{datasetid}/tables/{tablename}/rows": {
      "post": {
        "operationId": "AddRows",
        "summary": "Add rows to a dataset",
        "description": "Use Power BI REST API to add rows to a dataset.",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DatasetIdParameter"
          },
          {
            "$ref": "#/parameters/TableIdParameter"
          },
          {
            "name": "Payload",
            "in": "body",
            "x-ms-summary": "Payload to send",
            "schema": {
              "$ref": "#/definitions/Payload"
            }
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#add-rows-to-a-dataset"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups": {
      "get": {
        "x-ms-visibility": "internal",
        "operationId": "ListGroups",
        "description": "Get Groups for Power BI.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "description": "OData filter query for which entities to return. Example: Column eq 'Value' and Column2 ne 2. Invalid OData queries, such as not wrapping string values in quotes will return 501.",
            "required": false,
            "x-ms-summary": "Filter Query",
            "x-ms-visibility": "internal",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Groups"
            }
          }
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/datasets": {
      "get": {
        "x-ms-visibility": "internal",
        "operationId": "ListDatasets",
        "description": "Get datasets for Power BI group.",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/RefreshDatasetsFilter"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Datasets"
            }
          }
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/datasets/{datasetid}/tables": {
      "get": {
        "x-ms-visibility": "internal",
        "operationId": "ListTables",
        "description": "Get tables for Power BI dataset.",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DatasetIdParameter"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Tables"
            }
          }
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/datasets/{datasetid}/tables/{tablename}/columns": {
      "get": {
        "operationId": "GetColumns",
        "description": "Get columns for Power BI dataset table.",
        "x-ms-visibility": "internal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DatasetIdParameter"
          },
          {
            "$ref": "#/parameters/TableIdParameter"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Columns"
            }
          }
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/internalScorecards({scorecardId})/goals({goalId})/goalValues({goalCheckin})/notes": {
      "post": {
        "operationId": "GoalValueCheckinNote",
        "summary": "Add a note to a check-in",
        "description": "Appends a new note to a check-in of a Power BI goal.",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "$ref": "#/parameters/GoalCheckinParameter"
          },
          {
            "name": "note",
            "in": "body",
            "x-ms-summary": "Note",
            "description": "Can be multiline text",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#add-a-note-to-a-check-in"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/internalScorecards({scorecardId})/goals({goalId})/goalValues": {
      "post": {
        "operationId": "GoalValueCheckin",
        "summary": "Create a check-in",
        "description": "Creates a Power BI goal check-in.",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "name": "checkin",
            "in": "body",
            "x-ms-summary": "Check-in",
            "description": "Goal check-in parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoalValueCheckinRequest"
            }
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#create-a-check-in"
        }
      },
      "get": {
        "operationId": "GetGoalCheckins",
        "summary": "Get goal check-ins",
        "description": "Get all check-ins on a Power BI goal.",
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          },
          {
            "name": "$expand",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "Expand goal check-in properties",
            "default": "notes",
            "x-ms-summary": "expand",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "x-ms-summary": "Retrieved",
              "description": "Entire response body.",
              "properties": {
                "value": {
                  "type": "array",
                  "x-ms-summary": "Check-ins",
                  "description": "List of check-ins.",
                  "items": {
                    "type": "object",
                    "x-ms-summary": "Check-in",
                    "description": "Goal check-in.",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "datetime",
                        "x-ms-summary": "Date",
                        "description": "The date that the check-in was made."
                      },
                      "value": {
                        "type": "number",
                        "x-ms-summary": "Value",
                        "description": "The value at the time of check in."
                      },
                      "status": {
                        "type": "string",
                        "x-ms-summary": "Status",
                        "description": "The goal status at the time of check in."
                      },
                      "notes": {
                        "$ref": "#/definitions/GoalNotes"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#get-goal-check-ins"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/internalScorecards({scorecardId})/goals({goalId})/goalValues({goalCheckin})": {
      "patch": {
        "operationId": "UpdateGoalCheckin",
        "summary": "Update a check-in",
        "description": "Updates a Power BI goal check-in.",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "$ref": "#/parameters/GoalCheckinParameter"
          },
          {
            "name": "checkin",
            "in": "body",
            "x-ms-summary": "Goal check-in parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GoalValueCheckinUpdateRequest"
            }
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#update-a-check-in"
        }
      },
      "get": {
        "operationId": "GetGoalCheckin",
        "summary": "Get a goal check-in",
        "description": "Get a check-in on a Power BI goal.",
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupV2IdParameter"
          },
          {
            "$ref": "#/parameters/ScorecardIdParameter"
          },
          {
            "$ref": "#/parameters/GoalIdParameter"
          },
          {
            "$ref": "#/parameters/GoalCheckinParameter"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          },
          {
            "name": "$expand",
            "type": "string",
            "in": "query",
            "required": true,
            "description": "Expand goal check-in properties",
            "default": "notes",
            "x-ms-summary": "expand",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "x-ms-summary": "Check-in",
              "description": "Goal check-in",
              "properties": {
                "timestamp": {
                  "type": "string",
                  "format": "date",
                  "x-ms-summary": "Date",
                  "description": "The date that the check-in was made."
                },
                "value": {
                  "type": "number",
                  "x-ms-summary": "Value",
                  "description": "The value at the time of check in, if set."
                },
                "status": {
                  "type": "string",
                  "x-ms-summary": "Status",
                  "description": "The goal status at the time of check in."
                },
                "notes": {
                  "$ref": "#/definitions/GoalNotes"
                }
              }
            }
          }
        },
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#get-a-goal-check-in"
        }
      }
    },
    "/{connectionId}/hybridtriggers/powerBiButtonClicked": {
      "get": {
        "tags": [
          "PowerBiButtonClicked"
        ],
        "summary": "When a power BI visual button is clicked",
        "description": "For internal use with the visual button hybrid trigger.",
        "x-ms-visibility": "internal",
        "operationId": "PowerBiButtonClicked",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "inputsPowerBiData",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "{}",
            "x-ms-visibility": "internal",
            "x-ms-summary": "Input data from Power BI"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {}
          },
          "default": {
            "description": "Operation Failed",
            "schema": {}
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#when-a-power-bi-visual-button-is-clicked"
        }
      },
      "x-ms-notification-content": {
        "description": "Tokens parsed out of the Power BI data object",
        "schema": {
          "$ref": "#/definitions/DynamicPowerBiButtonClickedTriggerResult"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/powerbihybridtriggeroutput/triggers/PowerBiButtonClicked/PowerBiButtonClickedOutputs": {
      "post": {
        "operationId": "GetPowerBiButtonClickedOutputs",
        "summary": "Get PowerBi Button Clicked hybrid trigger output",
        "description": "Get the schema information for the PowerBi Button Clicked hybrid trigger output.",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "x-ms-summary": "Inputs from Power Bi",
            "description": "The body for parsing the output of the trigger",
            "in": "body",
            "required": true,
            "schema": {
              "x-ms-summary": "inputsPowerBiData",
              "type": "string",
              "default": "{}"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PowerBiButtonClickedOutputs"
            }
          },
          "default": {
            "description": "Operation Failed",
            "schema": {}
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#get-powerbi-button-clicked-hybrid-trigger-output"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/datasets/{datasetid}/refreshes": {
      "post": {
        "operationId": "RefreshDataset",
        "summary": "Refresh a dataset",
        "description": "Use Power BI REST API to refresh a powerbi dataset.",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/DatasetIdParameterRefresh"
          },
          {
            "$ref": "#/parameters/TracingQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#refresh-a-dataset"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/reports/{reportid}/ExportTo": {
      "post": {
        "operationId": "InitiateExportToFileForPbiReports",
        "summary": "Export To File for Power BI Reports",
        "description": "Use Power BI Rest API to inititate export for Power BI reports",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/PbiReportIdParameter"
          },
          {
            "name": "ExportPayloadPowerBIReport",
            "in": "body",
            "x-ms-summary": "Payload to send for Power BI report export",
            "schema": {
              "$ref": "#/definitions/ExportPayloadPowerBIReport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "binary",
              "description": "The content of the file.",
              "type": "string",
              "x-ms-summary": "File Content"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#export-to-file-for-power-bi-reports"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/reports/{reportid}/ExportToPaginatedReports": {
      "post": {
        "operationId": "InitiateExportToFileForPaginatedReports",
        "summary": "Export To File for Paginated Reports",
        "description": "Use Power BI Rest API to inititate export for paginated reports",
        "x-ms-visibility": "important",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/PaginatedReportIdParameter"
          },
          {
            "name": "ExportPayloadPaginatedReport",
            "in": "body",
            "x-ms-summary": "Payload to send for paginated report export",
            "schema": {
              "$ref": "#/definitions/ExportPayloadPaginatedReport"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "binary",
              "description": "The content of the file.",
              "type": "string",
              "x-ms-summary": "File Content"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#export-to-file-for-paginated-reports"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/reports/{reportid}/exports/{exportid}": {
      "get": {
        "summary": "Check Export Status",
        "operationId": "ExportStatus",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ReportIdParameter"
          },
          {
            "$ref": "#/parameters/ExportIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "binary",
              "description": "The content of the file.",
              "type": "string",
              "x-ms-summary": "File Content"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#check-export-status"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/reports/{reportid}/exports/{exportid}": {
      "get": {
        "summary": "Check Export Status for My Workspace",
        "operationId": "MyWSExportStatus",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/MyWSReportIdParameter"
          },
          {
            "$ref": "#/parameters/ExportIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "binary",
              "description": "The content of the file.",
              "type": "string",
              "x-ms-summary": "File Content"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#check-export-status-for-my-workspace"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/reports/{reportid}/exports/{exportid}/file": {
      "get": {
        "summary": "Get Export File",
        "x-ms-visibility": "internal",
        "operationId": "GetExportFile",
        "produces": [
          "application/*",
          "image/*",
          "text/csv",
          "text/xml",
          "multipart/related"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ReportIdParameter"
          },
          {
            "$ref": "#/parameters/ExportIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "binary",
              "description": "The content of the file.",
              "type": "string",
              "x-ms-summary": "File Content"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#get-export-file"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/reports/{reportid}/exports/{exportid}/file": {
      "get": {
        "summary": "Get Export File for MyWorkspace",
        "x-ms-visibility": "internal",
        "operationId": "MyWSGetExportFile",
        "produces": [
          "application/*",
          "image/*",
          "text/csv",
          "text/xml",
          "multipart/related"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/MyWSReportIdParameter"
          },
          {
            "$ref": "#/parameters/ExportIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "format": "binary",
              "description": "The content of the file.",
              "type": "string",
              "x-ms-summary": "File Content"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#get-export-file-for-myworkspace"
        }
      }
    },
    "/{connectionId}/v1.0/myorg/groups/{groupid}/reports": {
      "get": {
        "x-ms-visibility": "internal",
        "summary": "Get Reports in Group",
        "description": "Returns a list of reports from the specified workspace.",
        "operationId": "GetReportsInGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/GroupIdParameter"
          },
          {
            "$ref": "#/parameters/ReportTypeParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Reports"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerbi/#get-reports-in-group"
        }
      }
    }
  },
  "definitions": {
    "QueryExecutionResults": {
      "type": "object",
      "description": "Results of query execution.",
      "properties": {
        "firstTableRows": {
          "type": "array",
          "x-ms-summary": "First table rows",
          "description": "Query results as an array of rows.",
          "items": {
            "type": "object",
            "x-ms-summary": "Row",
            "description": "Query result row.",
            "properties": {}
          }
        }
      }
    },
    "QuerySpecification": {
      "type": "object",
      "x-ms-summary": "Specification",
      "description": "Query specification.",
      "required": [
        "query"
      ],
      "properties": {
        "query": {
          "type": "string",
          "x-ms-summary": "Query text",
          "description": "The text of the query. Can be multiline text."
        },
        "serializerSettings": {
          "type": "object",
          "properties": {
            "includeNulls": {
              "type": "boolean",
              "x-ms-summary": "Nulls included",
              "x-ms-visibility": "advanced",
              "description": "Should null values be included in the results. Default is No.",
              "default": false
            }
          }
        },
        "impersonatedUserName": {
          "type": "string",
          "x-ms-summary": "Impersonate user",
          "x-ms-visibility": "advanced",
          "description": "A user identity in UPN format to run the query as another user."
        }
      }
    },
    "CreateScorecardRequest": {
      "type": "object",
      "x-ms-summary": "Scorecard",
      "description": "Scorecard definition.",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "Scorecard name"
        },
        "description": {
          "type": "string",
          "x-ms-summary": "Description",
          "description": "Scorecard  description"
        }
      }
    },
    "CreatedScorecard": {
      "type": "object",
      "x-ms-summary": "Created scorecard",
      "description": "Created scorecard.",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "Id",
          "description": "The unique identifier of the scorecard."
        }
      }
    },
    "ListedScorecards": {
      "type": "object",
      "x-ms-summary": "Retrieved",
      "description": "Entire response body.",
      "properties": {
        "value": {
          "type": "array",
          "x-ms-summary": "Scorecards",
          "description": "The list of scorecards.",
          "items": {
            "$ref": "#/definitions/ListedScorecard"
          }
        }
      }
    },
    "ListedScorecard": {
      "type": "object",
      "x-ms-summary": "Scorecard",
      "description": "Scorecard.",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "Id",
          "description": "The unique identifier of the scorecard."
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "The name of the scorecard."
        },
        "contact": {
          "type": "string",
          "x-ms-summary": "Contact",
          "description": "Contact information for the scorecard."
        }
      }
    },
    "FetchedGoals": {
      "type": "object",
      "x-ms-summary": "Retrieved",
      "description": "Entire response body.",
      "properties": {
        "value": {
          "type": "array",
          "x-ms-summary": "Goals",
          "description": "The list of the goals.",
          "items": {
            "$ref": "#/definitions/FetchedGoal"
          }
        }
      }
    },
    "CreateGoalRequest": {
      "type": "object",
      "x-ms-summary": "Goal",
      "description": "Goal definition.",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "The name of the goal."
        },
        "owner": {
          "type": "string",
          "format": "email",
          "x-ms-summary": "Owner",
          "description": "The email address of the goal's owner. Example: foo@bar.com"
        },
        "value": {
          "type": "string",
          "x-ms-summary": "Current value",
          "description": "The current value of the goal being tracked."
        },
        "target": {
          "type": "string",
          "x-ms-summary": "Target value",
          "description": "The target value of the goal."
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "The current status the goal.",
          "default": "Not started",
          "enum": [
            "Not started",
            "On track",
            "At risk",
            "Behind",
            "Overdue",
            "Completed"
          ]
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Start date",
          "description": "The start date for the goal. Example: 2021-07-15."
        },
        "completionDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Completion date",
          "description": "The date for the goal to be completed by. Example: 2021-07-29."
        },
        "note": {
          "x-ms-summary": "Note",
          "description": "Note to attach to the initial check-in on goal creation. Can be multiline text",
          "type": "string"
        },
        "parentId": {
          "type": "string",
          "x-ms-summary": "Parent goal id",
          "description": "If this goal is a subgoal, the unique id of its parent goal.",
          "x-ms-dynamic-values": {
            "operationId": "GetMultipleGoals",
            "value-collection": "value",
            "value-path": "id",
            "value-title": "name",
            "parameters": {
              "groupid": {
                "parameter": "groupid"
              },
              "scorecardId": {
                "parameter": "scorecardId"
              }
            }
          }
        }
      }
    },
    "UpdateGoalRequest": {
      "type": "object",
      "x-ms-summary": "Goal",
      "description": "Goal definition.",
      "properties": {
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "If provided, the new name of the goal."
        },
        "owner": {
          "type": "string",
          "format": "email",
          "x-ms-summary": "Owner",
          "description": "If provided, the email address of the new goal owner."
        },
        "value": {
          "type": "number",
          "x-ms-summary": "Current value",
          "description": "If provided, sets the new value of the goal."
        },
        "target": {
          "type": "number",
          "x-ms-summary": "Target value",
          "description": "If provided, sets the new goal target."
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "If provided, sets the new status of the goal.",
          "default": "Leave unchanged",
          "enum": [
            "Leave unchanged",
            "Not started",
            "On track",
            "At risk",
            "Behind",
            "Overdue",
            "Completed"
          ]
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Start date",
          "description": "If provided, the new start date for the goal. Example: 2021-07-15."
        },
        "completionDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Completion date",
          "description": "If provided, the new date for the goal to be completed by. Example: 2021-07-29."
        }
      }
    },
    "FetchedGoal": {
      "type": "object",
      "x-ms-summary": "Goal",
      "description": "Goal information.",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "Id",
          "description": "The unique identifier of the goal."
        },
        "name": {
          "type": "string",
          "x-ms-summary": "Name",
          "description": "The name of the goal."
        },
        "owner": {
          "type": "string",
          "format": "email",
          "x-ms-summary": "Owner",
          "description": "The email address of the goal's owner."
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Start date",
          "description": "The start date for the goal. Example: 2021-07-15."
        },
        "completionDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Completion date",
          "description": "The due date for the goal to be completed by. Example: 2021-07-29."
        },
        "parentId": {
          "type": "string",
          "x-ms-summary": "Parent goal id",
          "description": "If this goal is a subgoal, the unique id of its parent goal."
        },
        "currentValue": {
          "type": "number",
          "x-ms-summary": "Current value",
          "description": "The current value of the goal being tracked."
        },
        "currentValueTimestamp": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Current value timestamp",
          "description": "The timestamp when the current value of the goal was set."
        },
        "targetValue": {
          "type": "number",
          "x-ms-summary": "Target value",
          "description": "The target value of the goal."
        },
        "targetValueTimestamp": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Target value timestamp",
          "description": "The timestamp when the target value of the goal was set."
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "The status of the goal.",
          "enum": [
            "Not started",
            "On track",
            "At risk",
            "Behind",
            "Overdue",
            "Completed"
          ]
        },
        "statusTimestamp": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Status timestamp",
          "description": "The timestamp when the status of the goal was set."
        },
        "cycle": {
          "type": "string",
          "x-ms-summary": "Frequency",
          "description": "Tracking cycle frequency interval shown on this goal's visuals.",
          "enum": [
            "No cycle",
            "Daily",
            "Weekly",
            "Monthly",
            "Quarterly",
            "Yearly"
          ]
        },
        "cyclePeriod": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Tracking cycle date",
          "description": "Date to find out extra properties of tracking cycle."
        }
      }
    },
    "GoalChanged": {
      "type": "object",
      "x-ms-summary": "Changed goal",
      "description": "Changed goal properties.",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "Id",
          "description": "The unique identifier of the goal."
        },
        "oldName": {
          "type": "string",
          "x-ms-summary": "Old name",
          "description": "The name of the goal."
        },
        "oldOwner": {
          "type": "string",
          "format": "email",
          "x-ms-summary": "Old owner",
          "description": "The email address of the goal's owner."
        },
        "oldStartDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Old start date",
          "description": "The start date for the goal. Example: 2021-07-15."
        },
        "oldCompletionDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Old completion date",
          "description": "The due date for the goal to be completed by. Example: 2021-07-29."
        },
        "oldParentId": {
          "type": "string",
          "x-ms-summary": "Old parent goal id",
          "description": "If this goal is a subgoal, the unique id of its parent goal."
        },
        "oldCurrentValue": {
          "type": "number",
          "x-ms-summary": "Old current value",
          "description": "The current value of the goal being tracked."
        },
        "oldTargetValue": {
          "type": "number",
          "x-ms-summary": "Old target value",
          "description": "The target value of the goal."
        },
        "oldStatus": {
          "type": "string",
          "x-ms-summary": "Old status",
          "description": "The status of the goal.",
          "enum": [
            "Not started",
            "On track",
            "At risk",
            "Behind",
            "Overdue",
            "Completed"
          ]
        },
        "oldCycle": {
          "type": "string",
          "x-ms-summary": "Old Frequency",
          "description": "Old tracking cycle frequency interval shown on this goal's visuals.",
          "enum": [
            "No cycle",
            "Daily",
            "Weekly",
            "Monthly",
            "Quarterly",
            "Yearly"
          ]
        },
        "oldCyclePeriod": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Old tracking cycle date",
          "description": "Old date to find out extra properties of tracking cycle."
        },
        "newName": {
          "type": "string",
          "x-ms-summary": "New name",
          "description": "The name of the goal."
        },
        "newOwner": {
          "type": "string",
          "format": "email",
          "x-ms-summary": "New owner",
          "description": "The email address of the goal's owner."
        },
        "newStartDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "New start date",
          "description": "The start date for the goal."
        },
        "newCompletionDate": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "New completion date",
          "description": "The due date for the goal to be completed by."
        },
        "newParentId": {
          "type": "string",
          "x-ms-summary": "New parent goal id",
          "description": "If this goal is a subgoal, the unique id of its parent goal."
        },
        "newCurrentValue": {
          "type": "number",
          "x-ms-summary": "New current value",
          "description": "The current value of the goal being tracked."
        },
        "newTargetValue": {
          "type": "number",
          "x-ms-summary": "New target value",
          "description": "The target value of the goal."
        },
        "newStatus": {
          "type": "string",
          "x-ms-summary": "New status",
          "description": "The status of the goal.",
          "enum": [
            "Not started",
            "On track",
            "At risk",
            "Behind",
            "Overdue",
            "Completed"
          ]
        },
        "newCycle": {
          "type": "string",
          "x-ms-summary": "New Frequency",
          "description": "New tracking cycle interval shown on this goal's visuals.",
          "enum": [
            "No cycle",
            "Daily",
            "Weekly",
            "Monthly",
            "Quarterly",
            "Yearly"
          ]
        },
        "newCyclePeriod": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "New tracking cycle date",
          "description": "New date to find out extra properties of tracking cycle."
        },
        "changeList": {
          "type": "string",
          "x-ms-summary": "List of changes",
          "description": "Comma separated list of changes. Example: 'status,currentValue'."
        }
      }
    },
    "GoalStatusChanged": {
      "type": "object",
      "x-ms-summary": "Changed goal",
      "description": "Changed goal properties.",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "Id",
          "description": "The unique identifier of the goal."
        },
        "oldStatus": {
          "type": "string",
          "x-ms-summary": "Old status",
          "description": "The status of the goal.",
          "enum": [
            "Not started",
            "On track",
            "At risk",
            "Behind",
            "Overdue",
            "Completed"
          ]
        },
        "newStatus": {
          "type": "string",
          "x-ms-summary": "New status",
          "description": "The status of the goal.",
          "enum": [
            "Not started",
            "On track",
            "At risk",
            "Behind",
            "Overdue",
            "Completed"
          ]
        }
      }
    },
    "GoalValueChanged": {
      "type": "object",
      "x-ms-summary": "Changed goal",
      "description": "Changed goal properties.",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "string",
          "x-ms-summary": "Id",
          "description": "The unique identifier of the goal."
        },
        "oldCurrentValue": {
          "type": "number",
          "x-ms-summary": "Old current value",
          "description": "The current value of the goal being tracked."
        },
        "newCurrentValue": {
          "type": "number",
          "x-ms-summary": "New current value",
          "description": "The current value of the goal being tracked."
        }
      }
    },
    "GoalRefreshIssues": {
      "type": "object",
      "x-ms-summary": "Refresh failure",
      "description": "Goal refresh failure issues.",
      "required": [
        "issues"
      ],
      "properties": {
        "issues": {
          "type": "array",
          "x-ms-summary": "Issues",
          "description": "Goal refresh issues.",
          "items": {
            "$ref": "#/definitions/GoalRefreshIssue"
          }
        }
      }
    },
    "GoalRefreshIssue": {
      "type": "object",
      "x-ms-summary": "Issue",
      "description": "Goal refresh issue.",
      "properties": {
        "connectionType": {
          "type": "string",
          "x-ms-summary": "Connection type",
          "description": "The connection type, either Current or Target."
        },
        "timestamp": {
          "type": "string",
          "x-ms-summary": "Timestamp",
          "description": "The timestamp of when the failed refresh happened."
        },
        "message": {
          "type": "string",
          "x-ms-summary": "Error message",
          "description": "Description of the error."
        }
      }
    },
    "GoalsAssigned": {
      "type": "object",
      "x-ms-summary": "Assigned",
      "description": "Assigned goals info.",
      "required": [
        "assignedGoals"
      ],
      "properties": {
        "assignedGoals": {
          "type": "array",
          "x-ms-summary": "Goals",
          "description": "The list of goals that were assigned to the new owner.",
          "items": {
            "type": "object",
            "x-ms-summary": "Goal",
            "description": "Assigned goal info.",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "Id",
                "description": "Unique id of the goal."
              },
              "scorecardId": {
                "type": "string",
                "x-ms-summary": "Scorecard id",
                "description": "The unique identifier of the scorecard."
              },
              "name": {
                "type": "string",
                "x-ms-summary": "Name",
                "description": "The name of the goal."
              },
              "owner": {
                "type": "string",
                "x-ms-summary": "Owner",
                "description": "The new owner that the goal was assigned to."
              },
              "lastModifiedBy": {
                "type": "string",
                "x-ms-summary": "Last modified by",
                "description": "The user who last modified the goal."
              },
              "startDate": {
                "type": "string",
                "format": "date",
                "x-ms-summary": "Start date",
                "description": "The start date for the goal."
              },
              "completionDate": {
                "type": "string",
                "format": "date",
                "x-ms-summary": "Completion date",
                "description": "The date for the goal to be completed by."
              }
            }
          }
        }
      }
    },
    "GoalValueOrNoteUpserted": {
      "type": "object",
      "x-ms-summary": "Updated goal",
      "description": "Added or changed goal check-ins or notes.",
      "required": [
        "values",
        "notes"
      ],
      "properties": {
        "values": {
          "type": "array",
          "x-ms-summary": "Check-ins",
          "description": "Added or updated check-ins.",
          "items": {
            "type": "object",
            "x-ms-summary": "Check-in",
            "description": "Added or changed goal check-in.",
            "properties": {
              "timestamp": {
                "type": "string",
                "format": "date",
                "x-ms-summary": "Date",
                "description": "The date that the check-in was made."
              },
              "value": {
                "type": "number",
                "x-ms-summary": "Value",
                "description": "The value of the goal at the time of check-in."
              },
              "status": {
                "type": "string",
                "x-ms-summary": "Status",
                "description": "The status of the goal at the time of check-in.",
                "default": "Not started",
                "enum": [
                  "Not started",
                  "On track",
                  "At risk",
                  "Behind",
                  "Overdue",
                  "Completed"
                ]
              }
            }
          }
        },
        "notes": {
          "type": "array",
          "x-ms-summary": "Notes",
          "description": "Added or changed notes.",
          "items": {
            "type": "object",
            "x-ms-summary": "Note",
            "description": "Added or changed goal check-in note.",
            "properties": {
              "valueTimestamp": {
                "type": "string",
                "format": "date",
                "x-ms-summary": "Check-in date",
                "description": "The date of the check-in that this note was added to."
              },
              "body": {
                "type": "string",
                "x-ms-summary": "Text",
                "description": "Text of the newly added note."
              },
              "createdTime": {
                "type": "string",
                "format": "datetime",
                "x-ms-summary": "Created time",
                "description": "The date the note was created."
              }
            }
          }
        }
      }
    },
    "GoalValueCheckinRequest": {
      "type": "object",
      "x-ms-summary": "Check-in",
      "description": "Goal check-in definition.",
      "required": [
        "timestamp"
      ],
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date",
          "x-ms-summary": "Date",
          "description": "Check-in date. Example: 2021-07-21"
        },
        "value": {
          "type": "number",
          "x-ms-summary": "Value"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "Status of the goal.",
          "default": "Leave unchanged",
          "enum": [
            "Leave unchanged",
            "Not started",
            "On track",
            "At risk",
            "Behind",
            "Overdue",
            "Completed"
          ]
        },
        "note": {
          "x-ms-summary": "Note",
          "description": "Can be multiline text",
          "type": "string"
        }
      }
    },
    "GoalValueCheckinUpdateRequest": {
      "type": "object",
      "x-ms-summary": "Check-in",
      "description": "Goal check-in definition.",
      "properties": {
        "value": {
          "type": "number",
          "x-ms-summary": "Value"
        },
        "status": {
          "type": "string",
          "x-ms-summary": "Status",
          "description": "Status of the goal.",
          "default": "Leave unchanged",
          "enum": [
            "Leave unchanged",
            "Not started",
            "On track",
            "At risk",
            "Behind",
            "Overdue",
            "Completed"
          ]
        }
      }
    },
    "GoalNotes": {
      "type": "array",
      "x-ms-summary": "Notes",
      "description": "The list of notes.",
      "items": {
        "type": "object",
        "x-ms-summary": "Note",
        "description": "Check-in note info.",
        "properties": {
          "body": {
            "type": "string",
            "x-ms-summary": "Text",
            "description": "The contents of the note."
          },
          "createdTime": {
            "type": "string",
            "format": "datetime",
            "x-ms-summary": "Created time",
            "description": "The date the note was created."
          }
        }
      }
    },
    "EvaluatedAlert": {
      "type": "object",
      "properties": {
        "alertTitle": {
          "type": "string",
          "x-ms-summary": "Alert title",
          "description": "The title of the alert."
        },
        "alertThreshold": {
          "type": "number",
          "x-ms-summary": "Alert threshold",
          "description": "The threshold at which the alert is triggered."
        },
        "isAlertTriggered": {
          "type": "boolean",
          "x-ms-summary": "Is alert triggered",
          "description": "A boolean value (true, false) determining Whether or not the alert was triggered."
        },
        "tileUrl": {
          "type": "string",
          "x-ms-summary": "Tile URL",
          "description": "URL linking to the dashboard tile where the alert is set up."
        },
        "tileValue": {
          "x-ms-summary": "Tile value",
          "description": "The value of the tile."
        }
      }
    },
    "Alert": {
      "type": "object",
      "properties": {
        "alertId": {
          "type": "string",
          "x-ms-summary": "Alert ID",
          "description": "The ID of the alert."
        },
        "alertTitle": {
          "type": "string",
          "x-ms-summary": "Alert title",
          "description": "The title of the alert."
        },
        "groupId": {
          "type": "string",
          "x-ms-summary": "Group ID",
          "description": "The ID of the group."
        }
      }
    },
    "Groups": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "Group ID",
                "description": "The ID of the group."
              },
              "name": {
                "type": "string",
                "x-ms-summary": "Group name",
                "description": "The display name of the group."
              }
            }
          }
        }
      }
    },
    "Datasets": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "x-ms-summary": "Dataset ID",
                "description": "The ID of the dataset."
              },
              "name": {
                "type": "string",
                "x-ms-summary": "Dataset name",
                "description": "The display name of the dataset."
              },
              "addRowsAPIEnabled": {
                "type": "boolean",
                "x-ms-summary": "Add Rows API Enabled",
                "description": "A boolean value (true, false) determining whether or not this dataset supports programmatic adding of rows."
              }
            }
          }
        }
      }
    },
    "Reports": {
      "description": "Odata response wrapper for a Power BI report collection",
      "properties": {
        "odata.context": {
          "type": "string",
          "description": "OData context"
        },
        "value": {
          "type": "array",
          "description": "The report collection",
          "items": {
            "required": [
              "id"
            ],
            "description": "A Power BI report",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "The report id"
              },
              "name": {
                "type": "string",
                "description": "The report name"
              },
              "webUrl": {
                "type": "string",
                "description": "The report web url"
              },
              "embedUrl": {
                "type": "string",
                "description": "The report embed url"
              },
              "datasetId": {
                "type": "string",
                "description": "The dataset id"
              }
            }
          }
        }
      }
    },
    "Tables": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "x-ms-summary": "Table name",
                "description": "The display name of the table."
              }
            }
          }
        }
      }
    },
    "Payload": {
      "type": "object",
      "properties": {},
      "x-ms-dynamic-schema": {
        "operationId": "GetColumns",
        "parameters": {
          "groupid": {
            "parameter": "groupid"
          },
          "datasetid": {
            "parameter": "datasetid"
          },
          "tablename": {
            "parameter": "tablename"
          }
        },
        "value-path": "schema"
      }
    },
    "ExportPayloadPowerBIReport": {
      "type": "object",
      "required": [
        "format"
      ],
      "properties": {
        "format": {
          "type": "string",
          "title": "Export Format",
          "description": "The export format for the Power BI report. The supported formats are: PPTX (PowerPoint), PDF, and PNG",
          "default": "PDF",
          "enum": [
            "PDF",
            "PPTX",
            "PNG"
          ]
        },
        "PowerBIReportExportConfiguration": {
          "type": "object",
          "description": "Power BI report Export to file configuration",
          "properties": {
            "settings": {
              "$ref": "#/definitions/ExportReportSettings",
              "description": "The settings to be applied in this Export to file job"
            },
            "defaultBookmark": {
              "$ref": "#/definitions/PageBookmark",
              "description": "The default bookmark to apply on all pages which don't have a specific bookmark"
            },
            "reportLevelFilters": {
              "type": "array",
              "title": "ReportLevelFilters",
              "description": "List of report level filters to apply. Currently only one filter can be provided",
              "items": {
                "$ref": "#/definitions/ExportFilter"
              }
            },
            "pages": {
              "type": "array",
              "title": "Pages",
              "description": "List of pages to export and their properties",
              "items": {
                "$ref": "#/definitions/ExportReportPage"
              }
            },
            "identities": {
              "type": "array",
              "title": "Identities",
              "description": "List of identities to use for RLS rules",
              "items": {
                "$ref": "#/definitions/EffectiveIdentity"
              }
            }
          }
        }
      }
    },
    "ExportPayloadPaginatedReport": {
      "type": "object",
      "required": [
        "format"
      ],
      "properties": {
        "format": {
          "type": "string",
          "title": "Export Format",
          "description": "The export format for the paginated report. The supported formats are: PPTX (PowerPoint), PDF, XLSX (Excel), DOCX (Word), CSV, XML, MHTML, and Image (BMP, EMF, GIF, JPEG, PNG, or TIFF).",
          "default": "PDF",
          "enum": [
            "PDF",
            "CSV",
            "DOCX",
            "IMAGE",
            "MHTML",
            "PPTX",
            "XLSX",
            "XML"
          ]
        },
        "paginatedReportConfiguration": {
          "description": "paginatedReportConfiguration",
          "type": "object",
          "properties": {
            "identities": {
              "type": "array",
              "title": "Identities",
              "description": "A single identity to use when exporting a report. Required when a report uses a Power BI dataset or an Azure AS datasource.",
              "items": {
                "$ref": "#/definitions/EffectiveIdentity"
              }
            },
            "formatSettings": {
              "type": "object",
              "title": "FormatSettings",
              "description": "Dictionary of format settings. The keys are the device info property names for the requested file format.",
              "additionalProperties": {
                "type": "string",
                "title": "AdditionalProperties",
                "description": "Dictionary of format settings. The keys are the device info property names for the requested file format."
              }
            },
            "parameterValues": {
              "type": "array",
              "title": "ParameterValues",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The report parameter name"
                  },
                  "value": {
                    "type": "string",
                    "description": "The report parameter value"
                  }
                }
              },
              "description": "List of report parameters"
            }
          }
        }
      }
    },
    "ExportReportSettings": {
      "type": "object",
      "description": "Export to file request settings",
      "properties": {
        "locale": {
          "type": "string",
          "title": "Locale",
          "description": "The locale to apply"
        },
        "includeHiddenPages": {
          "type": "boolean",
          "title": "Include Hidden Pages",
          "description": "A flag indicating whether to include hidden pages when exporting the entire report (when passing specific pages this property will be ignored). If not provided, the default behavior is to exclude hidden pages"
        }
      }
    },
    "PageBookmark": {
      "type": "object",
      "description": "The bookmark to apply on a single page. Provide name or state, but not both.",
      "properties": {
        "name": {
          "type": "string",
          "title": "Bookmark Name",
          "description": "The bookmark name"
        },
        "state": {
          "type": "string",
          "title": "Bookmark State",
          "description": "The bookmark state"
        }
      }
    },
    "ExportFilter": {
      "type": "object",
      "description": "A filter to be applied during the export operation",
      "properties": {
        "filter": {
          "type": "string",
          "title": "Filter",
          "description": "The filter to apply"
        }
      }
    },
    "ExportReportPage": {
      "type": "object",
      "description": "A single page configuration for the export request",
      "properties": {
        "pageName": {
          "type": "string",
          "description": "The page name"
        },
        "visualName": {
          "type": "string",
          "description": "(Optional) Visual name to be exported"
        },
        "bookmark": {
          "$ref": "#/definitions/PageBookmark",
          "description": "(Optional) The bookmark to be applied on the page"
        }
      }
    },
    "EffectiveIdentity": {
      "required": [
        "username"
      ],
      "type": "object",
      "description": "Defines the user identity and roles, for more details see this [article](https://docs.microsoft.com/power-bi/developer/embedded-row-level-security)",
      "properties": {
        "username": {
          "type": "string",
          "title": "Username",
          "description": "The effective username reflected by a token for applying RLS rules (For OnPrem model, username can be composed of alpha-numerical characters or any of the following characters  '.', '-', '_', '!', '#', '^', '~', '\\\\', '@', also username cannot contain spaces. For Cloud model, username can be composed of all ASCII characters. username must be up to 256 characters)"
        },
        "datasets": {
          "type": "array",
          "title": "Datasets",
          "description": "An array of datasets for which this identity applies",
          "items": {
            "type": "string",
            "description": "Dataset for which this identity applies",
            "title": "Dataset"
          }
        },
        "roles": {
          "type": "array",
          "title": "Roles",
          "description": "An array of RLS roles reflected by a token when applying RLS rules (identity can contain up to 50 roles, role can be composed of any character besides ',' and must be up to 50 characters)",
          "items": {
            "type": "string",
            "description": "RLS role"
          }
        },
        "customData": {
          "type": "string",
          "title": "CustomData",
          "description": "The value of customdata to be used for applying RLS rules. Only supported for live connections to Azure Analysis Services."
        },
        "identityBlob": {
          "$ref": "#/definitions/IdentityBlob",
          "title": "IdentityBlob",
          "description": "A blob for specifying the identity. Only supported for datasets with Direct Query connection to SQL Azure"
        },
        "reports": {
          "type": "array",
          "title": "Reports",
          "description": "An array of reports for which this identity applies, Only supported for paginated reports",
          "items": {
            "type": "string",
            "description": "Report for which this identity applies, Only supported for paginated reports"
          }
        }
      }
    },
    "IdentityBlob": {
      "required": [
        "value"
      ],
      "type": "object",
      "description": "A blob for specifying the identity. Only supported for datasets with Direct Query connection to SQL Azure",
      "properties": {
        "value": {
          "type": "string",
          "title": "Blob Value",
          "description": "OAuth2 access token for SQL Azure"
        }
      }
    },
    "Columns": {
      "type": "object",
      "properties": {
        "schema": {
          "type": "object",
          "properties": {}
        }
      }
    },
    "DynamicPowerBiButtonClickedTriggerResult": {
      "type": "object",
      "properties": {},
      "x-ms-dynamic-schema": {
        "operationId": "GetPowerBiButtonClickedOutputs",
        "parameters": {
          "body": {
            "parameter": "inputsPowerBiData"
          }
        },
        "value-path": "schema"
      }
    },
    "PowerBiButtonClickedOutputs": {
      "description": "Tokens coming from Power Bi input data",
      "type": "object",
      "properties": {
        "PowerBiInputs": {
          "type": "object",
          "properties": {}
        }
      },
      "x-ms-visibility": "advanced"
    }
  },
  "parameters": {
    "ScorecardIdParameter": {
      "name": "scorecardId",
      "in": "path",
      "description": "The unique identifier of the scorecard.",
      "type": "string",
      "required": true,
      "x-ms-summary": "Scorecard id",
      "x-ms-dynamic-values": {
        "operationId": "GetScorecards",
        "value-collection": "value",
        "value-path": "id",
        "value-title": "name",
        "parameters": {
          "groupid": {
            "parameter": "groupid"
          }
        }
      }
    },
    "GoalIdParameter": {
      "name": "goalId",
      "in": "path",
      "description": "The unique identifier of the goal.",
      "type": "string",
      "required": true,
      "x-ms-summary": "Goal id",
      "x-ms-dynamic-values": {
        "operationId": "GetMultipleGoals",
        "value-collection": "value",
        "value-path": "id",
        "value-title": "name",
        "parameters": {
          "groupid": {
            "parameter": "groupid"
          },
          "scorecardId": {
            "parameter": "scorecardId"
          }
        }
      }
    },
    "GoalCheckinParameter": {
      "name": "goalCheckin",
      "in": "path",
      "description": "Example: 2021-07-21",
      "type": "string",
      "format": "date",
      "required": true,
      "x-ms-summary": "Check-in date"
    },
    "GroupIdParameter": {
      "name": "groupid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier of the workspace.",
      "x-ms-summary": "Workspace",
      "x-ms-dynamic-values": {
        "operationId": "ListGroups",
        "value-collection": "value",
        "value-path": "id",
        "value-title": "name"
      }
    },
    "GroupV2IdParameter": {
      "name": "groupid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier of the workspace.",
      "x-ms-summary": "Workspace",
      "x-ms-dynamic-values": {
        "operationId": "ListGroups",
        "value-collection": "value",
        "value-path": "id",
        "value-title": "name",
        "parameters": {
          "$filter": "type eq 'Workspace'"
        }
      }
    },
    "PaginatedReportIdParameter": {
      "name": "reportid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier of a paginated report.",
      "x-ms-summary": "Report",
      "x-ms-dynamic-values": {
        "operationId": "GetReportsInGroup",
        "value-collection": "value",
        "value-path": "id",
        "value-title": "name",
        "parameters": {
          "groupid": {
            "parameter": "groupid"
          },
          "reportType": "PaginatedReport"
        }
      }
    },
    "PbiReportIdParameter": {
      "name": "reportid",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The unique identifier of a pbi report.",
      "x-ms-summary": "Report",
      "x-ms-dynamic-values": {
        "operationId": "GetReportsInGroup",
        "value-collection": "value",
        "value-path": "id",
        "value-title": "name",
        "parameters": {
          "groupid": {
            "parameter": "groupid"
          },
          "reportType": "PowerBIReport"
        }
      }
    },
    "MyWSReportIdParameter": {
      "name": "reportid",
      "in": "path",
      "required": true,
      "description": "The my workspace report id",
      "type": "string",
      "x-ms-summary": "Report ID"
    },
    "ReportIdParameter": {
      "name": "reportid",
      "in": "path",
      "required": true,
      "description": "The unique identifier of a report.",
      "type": "string",
      "x-ms-summary": "Report ID"
    },
    "ExportIdParameter": {
      "name": "exportid",
      "in": "path",
      "required": true,
      "description": "The export id",
      "type": "string",
      "x-ms-summary": "Export ID"
    },
    "ReportTypeParameter": {
      "name": "reportType",
      "in": "header",
      "x-ms-visibility": "internal",
      "required": false,
      "type": "string",
      "description": "Type of report"
    },
    "RefreshDatasetsFilter": {
      "name": "refreshDatasetsFilter",
      "in": "header",
      "x-ms-visibility": "internal",
      "required": false,
      "type": "boolean",
      "description": "Filter out streaming datasets"
    },
    "DatasetIdParameter": {
      "name": "datasetid",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-summary": "Dataset",
      "description": "The unique identifier of the dataset.",
      "x-ms-dynamic-values": {
        "operationId": "ListDatasets",
        "value-collection": "value",
        "value-path": "id",
        "value-title": "name",
        "parameters": {
          "groupid": {
            "parameter": "groupid"
          }
        }
      }
    },
    "DatasetIdParameterRefresh": {
      "name": "datasetid",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-summary": "Dataset",
      "description": "The unique identifier of the dataset.",
      "x-ms-dynamic-values": {
        "operationId": "ListDatasets",
        "value-collection": "value",
        "value-path": "id",
        "value-title": "name",
        "parameters": {
          "groupid": {
            "parameter": "groupid"
          },
          "refreshDatasetsFilter": true
        }
      }
    },
    "TableIdParameter": {
      "name": "tablename",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-summary": "Table",
      "description": "The name of the table.",
      "x-ms-dynamic-values": {
        "operationId": "ListTables",
        "value-collection": "value",
        "value-path": "name",
        "value-title": "name",
        "parameters": {
          "groupid": {
            "parameter": "groupid"
          },
          "datasetid": {
            "parameter": "datasetid"
          }
        }
      }
    },
    "TracingQueryParameter": {
      "name": "pbi_source",
      "type": "string",
      "in": "query",
      "required": false,
      "description": "Source of the call for tracing",
      "default": "powerAutomate",
      "x-ms-summary": "pbi_source",
      "x-ms-visibility": "internal"
    },
    "GoalExpandParameter": {
      "name": "$expand",
      "type": "string",
      "in": "query",
      "required": true,
      "description": "Expand goal properties",
      "default": "aggregations",
      "x-ms-summary": "expand",
      "x-ms-visibility": "internal"
    }
  },
  "x-ms-capabilities": {
    "testConnection": {
      "operationId": "GetAlerts"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://powerbi.microsoft.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://privacy.microsoft.com/privacystatement"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Business Intelligence;Website"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/powerbi"
  },
  "basePath": "/apim/powerbi"
}