{
  "basePath": "/apim/formrecognizer",
  "consumes": [],
  "definitions": {
    "OperationStatus": {
      "type": "string",
      "description": "Status of the queued operation.",
      "enum": [
        "notStarted",
        "running",
        "succeeded",
        "failed"
      ],
      "x-ms-enum": {
        "name": "OperationStatus",
        "modelAsString": false
      },
      "x-nullable": false
    },
    "LayoutAnalyzeOperationResult": {
      "description": "Status and result of the queued analyze operation.",
      "type": "object",
      "required": [
        "status",
        "createdDateTime",
        "lastUpdatedDateTime"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/OperationStatus"
        },
        "createdDateTime": {
          "description": "Date and time (UTC) the analyze operation was submitted.",
          "type": "string",
          "x-nullable": false
        },
        "lastUpdatedDateTime": {
          "description": "Date and time (UTC) when the status is last updated.",
          "type": "string",
          "x-nullable": false
        },
        "analyzeResult": {
          "$ref": "#/definitions/LayoutAnalyzeResult"
        }
      }
    },
    "InvoiceAnalyzeOperationResult": {
      "description": "Status and result of the queued analyze operation.",
      "type": "object",
      "required": [
        "status",
        "createdDateTime",
        "lastUpdatedDateTime"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/OperationStatus"
        },
        "createdDateTime": {
          "description": "Date and time (UTC) the analyze operation was submitted.",
          "type": "string",
          "x-nullable": false
        },
        "lastUpdatedDateTime": {
          "description": "Date and time (UTC) when the status is last updated.",
          "type": "string",
          "x-nullable": false
        },
        "analyzeResult": {
          "$ref": "#/definitions/InvoiceAnalyzeResult"
        }
      }
    },
    "BusinessCardAnalyzeOperationResult": {
      "description": "Status and result of the queued analyze operation.",
      "type": "object",
      "required": [
        "status",
        "createdDateTime",
        "lastUpdatedDateTime"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/OperationStatus"
        },
        "createdDateTime": {
          "description": "Date and time (UTC) the analyze operation was submitted.",
          "type": "string",
          "x-nullable": false
        },
        "lastUpdatedDateTime": {
          "description": "Date and time (UTC) when the status is last updated.",
          "type": "string",
          "x-nullable": false
        },
        "analyzeResult": {
          "$ref": "#/definitions/BusinessCardAnalyzeResult"
        }
      }
    },
    "ReceiptAnalyzeOperationResult": {
      "description": "Status and result of the queued analyze operation.",
      "type": "object",
      "required": [
        "status",
        "createdDateTime",
        "lastUpdatedDateTime"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/OperationStatus"
        },
        "createdDateTime": {
          "description": "Date and time (UTC) the analyze operation was submitted.",
          "type": "string",
          "x-nullable": false
        },
        "lastUpdatedDateTime": {
          "description": "Date and time (UTC) when the status is last updated.",
          "type": "string",
          "x-nullable": false
        },
        "analyzeResult": {
          "$ref": "#/definitions/ReceiptAnalyzeResult"
        }
      }
    },
    "IdAnalyzeOperationResult": {
      "description": "Status and result of the queued analyze operation.",
      "type": "object",
      "required": [
        "status",
        "createdDateTime",
        "lastUpdatedDateTime"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/OperationStatus"
        },
        "createdDateTime": {
          "description": "Date and time (UTC) the analyze operation was submitted.",
          "type": "string",
          "x-nullable": false
        },
        "lastUpdatedDateTime": {
          "description": "Date and time (UTC) when the status is last updated.",
          "type": "string",
          "x-nullable": false
        },
        "analyzeResult": {
          "$ref": "#/definitions/IdAnalyzeResult"
        }
      }
    },
    "CustomFormsAnalyzeOperationResult": {
      "description": "Status and result of the queued analyze operation.",
      "type": "object",
      "required": [
        "status",
        "createdDateTime",
        "lastUpdatedDateTime"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/OperationStatus"
        },
        "createdDateTime": {
          "description": "Date and time (UTC) the analyze operation was submitted.",
          "type": "string",
          "x-nullable": false
        },
        "lastUpdatedDateTime": {
          "description": "Date and time (UTC) when the status is last updated.",
          "type": "string",
          "x-nullable": false
        },
        "analyzeResult": {
          "$ref": "#/definitions/CustomFormsAnalyzeResult"
        }
      }
    },
    "FormOperationError": {
      "description": "Error reported during an operation.",
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "description": "Error message.",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorInformation"
        }
      }
    },
    "ErrorInformation": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "LayoutAnalyzeResult": {
      "description": "Analyze operation result.",
      "type": "object",
      "required": [
        "version",
        "readResults"
      ],
      "properties": {
        "version": {
          "description": "Version of schema used for this result.",
          "type": "string"
        },
        "readResults": {
          "description": "Text extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReadResult"
          }
        },
        "pageResults": {
          "description": "Page-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageResult"
          }
        },
        "errors": {
          "description": "List of errors reported during the analyze operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOperationError"
          }
        }
      }
    },
    "InvoiceAnalyzeResult": {
      "description": "Analyze operation result.",
      "type": "object",
      "required": [
        "version",
        "readResults"
      ],
      "properties": {
        "version": {
          "description": "Version of schema used for this result.",
          "type": "string"
        },
        "readResults": {
          "description": "Text extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReadResult"
          }
        },
        "pageResults": {
          "description": "Page-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageResult"
          }
        },
        "documentResults": {
          "description": "Document-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceDocumentResult"
          }
        },
        "errors": {
          "description": "List of errors reported during the analyze operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOperationError"
          }
        }
      }
    },
    "BusinessCardAnalyzeResult": {
      "description": "Analyze operation result.",
      "type": "object",
      "required": [
        "version",
        "readResults"
      ],
      "properties": {
        "version": {
          "description": "Version of schema used for this result.",
          "type": "string"
        },
        "readResults": {
          "description": "Text extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReadResult"
          }
        },
        "pageResults": {
          "description": "Page-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageResult"
          }
        },
        "documentResults": {
          "description": "Document-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessCardDocumentResult"
          }
        },
        "errors": {
          "description": "List of errors reported during the analyze operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOperationError"
          }
        }
      }
    },
    "ReceiptAnalyzeResult": {
      "description": "Analyze operation result.",
      "type": "object",
      "required": [
        "version",
        "readResults"
      ],
      "properties": {
        "version": {
          "description": "Version of schema used for this result.",
          "type": "string"
        },
        "readResults": {
          "description": "Text extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReadResult"
          }
        },
        "pageResults": {
          "description": "Page-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageResult"
          }
        },
        "documentResults": {
          "description": "Document-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReceiptDocumentResult"
          }
        },
        "errors": {
          "description": "List of errors reported during the analyze operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOperationError"
          }
        }
      }
    },
    "IdAnalyzeResult": {
      "description": "Analyze operation result.",
      "type": "object",
      "required": [
        "version",
        "readResults"
      ],
      "properties": {
        "version": {
          "description": "Version of schema used for this result.",
          "type": "string"
        },
        "readResults": {
          "description": "Text extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReadResult"
          }
        },
        "pageResults": {
          "description": "Page-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageResult"
          }
        },
        "documentResults": {
          "description": "Document-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdDocumentResult"
          }
        },
        "errors": {
          "description": "List of errors reported during the analyze operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOperationError"
          }
        }
      }
    },
    "CustomFormsAnalyzeResult": {
      "description": "Analyze operation result.",
      "type": "object",
      "required": [
        "version",
        "readResults"
      ],
      "properties": {
        "version": {
          "description": "Version of schema used for this result.",
          "type": "string"
        },
        "readResults": {
          "description": "Text extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReadResult"
          }
        },
        "pageResults": {
          "description": "Page-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageResult"
          }
        },
        "documentResults": {
          "description": "Document-level information extracted from the input.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFormsDocumentResult"
          }
        },
        "errors": {
          "description": "List of errors reported during the analyze operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FormOperationError"
          }
        }
      }
    },
    "ReadResult": {
      "description": "Text extracted from a page in the input document.",
      "type": "object",
      "required": [
        "page",
        "angle",
        "width",
        "height",
        "unit"
      ],
      "properties": {
        "page": {
          "description": "The 1-based page number in the input document.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "x-nullable": false
        },
        "angle": {
          "description": "The general orientation of the text in clockwise direction, measured in degrees between (-180, 180].",
          "type": "number",
          "format": "float",
          "minimum": -180,
          "maximum": 180,
          "exclusiveMinimum": true,
          "x-nullable": false
        },
        "width": {
          "description": "The width of the image/PDF in pixels/inches, respectively.",
          "type": "number",
          "format": "float",
          "minimum": 0,
          "x-nullable": false
        },
        "height": {
          "description": "The height of the image/PDF in pixels/inches, respectively.",
          "type": "number",
          "format": "float",
          "minimum": 0,
          "x-nullable": false
        },
        "unit": {
          "description": "The unit used by the width, height and boundingBox properties. For images, the unit is \"pixel\". For PDF, the unit is \"inch\".",
          "type": "string",
          "enum": [
            "pixel",
            "inch"
          ],
          "x-ms-enum": {
            "name": "LengthUnit",
            "modelAsString": false
          },
          "x-nullable": false
        },
        "lines": {
          "description": "When includeTextDetails is set to true, a list of recognized text lines. The maximum number of lines returned is 300 per page. The lines are sorted top to bottom, left to right, although in certain cases proximity is treated with higher priority. As the sorting order depends on the detected text, it may change across images and OCR version updates. Thus, business logic should be built upon the actual line location instead of order.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextLine"
          }
        }
      }
    },
    "TextLine": {
      "description": "An object representing an extracted text line.",
      "type": "object",
      "required": [
        "text",
        "boundingBox",
        "words"
      ],
      "properties": {
        "text": {
          "description": "The text content of the line.",
          "type": "string"
        },
        "boundingBox": {
          "$ref": "#/definitions/BoundingBox"
        },
        "words": {
          "description": "List of words in the text line.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TextWord"
          }
        }
      }
    },
    "TextWord": {
      "description": "An object representing a word.",
      "type": "object",
      "required": [
        "boundingBox",
        "text",
        "confidence"
      ],
      "properties": {
        "text": {
          "description": "The text content of the word.",
          "type": "string"
        },
        "boundingBox": {
          "$ref": "#/definitions/BoundingBox"
        },
        "confidence": {
          "$ref": "#/definitions/Confidence"
        }
      }
    },
    "BoundingBox": {
      "description": "Quadrangle bounding box, with coordinates specified relative to the top-left of the original image. The eight numbers represent the four points, clockwise from the top-left corner relative to the text orientation. For image, the (x, y) coordinates are measured in pixels. For PDF, the (x, y) coordinates are measured in inches.",
      "type": "array",
      "minItems": 8,
      "maxItems": 8,
      "items": {
        "type": "number",
        "format": "float",
        "x-nullable": false
      }
    },
    "PageResult": {
      "description": "Extracted information from a single page.",
      "type": "object",
      "required": [
        "page"
      ],
      "properties": {
        "page": {
          "description": "Page number.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "x-nullable": false
        },
        "clusterId": {
          "description": "Cluster identifier.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "x-nullable": false
        },
        "keyValuePairs": {
          "description": "List of key-value pairs extracted from the page.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          }
        },
        "tables": {
          "description": "List of data tables extracted from the page.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTable"
          }
        }
      }
    },
    "KeyValuePair": {
      "description": "Information about the extracted key-value pair.",
      "type": "object",
      "required": [
        "key",
        "value",
        "confidence"
      ],
      "properties": {
        "label": {
          "description": "A user defined label for the key/value pair entry.",
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/KeyValueElement"
        },
        "value": {
          "$ref": "#/definitions/KeyValueElement"
        },
        "confidence": {
          "$ref": "#/definitions/Confidence"
        }
      }
    },
    "KeyValueElement": {
      "description": "Information about the extracted key or value in a key-value pair.",
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "description": "The text content of the key or value.",
          "type": "string"
        },
        "boundingBox": {
          "$ref": "#/definitions/BoundingBox"
        },
        "elements": {
          "description": "When includeTextDetails is set to true, a list of references to the text elements constituting this key or value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementReference"
          }
        }
      }
    },
    "ElementReference": {
      "description": "Reference to a line or word.",
      "type": "string"
    },
    "DataTable": {
      "description": "Information about the extracted table contained in a page.",
      "type": "object",
      "required": [
        "rows",
        "columns",
        "cells"
      ],
      "properties": {
        "rows": {
          "description": "Number of rows.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "x-nullable": false
        },
        "columns": {
          "description": "Number of columns.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "x-nullable": false
        },
        "cells": {
          "description": "List of cells contained in the table.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTableCell"
          }
        }
      }
    },
    "DataTableCell": {
      "description": "Information about the extracted cell in a table.",
      "type": "object",
      "required": [
        "rowIndex",
        "columnIndex",
        "text",
        "boundingBox"
      ],
      "properties": {
        "rowIndex": {
          "description": "Row index of the cell.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "x-nullable": false
        },
        "columnIndex": {
          "description": "Column index of the cell.",
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "x-nullable": false
        },
        "rowSpan": {
          "description": "Number of rows spanned by this cell.",
          "format": "int32",
          "type": "integer",
          "minimum": 1,
          "default": 1,
          "x-nullable": false
        },
        "columnSpan": {
          "description": "Number of columns spanned by this cell.",
          "format": "int32",
          "type": "integer",
          "minimum": 1,
          "default": 1,
          "x-nullable": false
        },
        "text": {
          "description": "Text content of the cell.",
          "type": "string"
        },
        "boundingBox": {
          "$ref": "#/definitions/BoundingBox"
        },
        "elements": {
          "description": "When includeTextDetails is set to true, a list of references to the text elements constituting this table cell.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementReference"
          }
        },
        "isHeader": {
          "description": "Return if the current cell is a header cell.",
          "type": "boolean",
          "default": false,
          "x-nullable": false
        },
        "isFooter": {
          "description": "Return if the current cell a footer cell.",
          "type": "boolean",
          "default": false,
          "x-nullable": false
        }
      }
    },
    "InvoiceDocumentResult": {
      "description": "A set of extracted fields corresponding to the input document.",
      "type": "object",
      "required": [
        "docType",
        "pageRange",
        "fields"
      ],
      "properties": {
        "docType": {
          "description": "Document type.",
          "type": "string"
        },
        "pageRange": {
          "description": "First and last page number where the document is found.",
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "x-nullable": false
          }
        },
        "fields": {
          "$ref": "#/definitions/InvoiceFields"
        }
      }
    },
    "BusinessCardDocumentResult": {
      "description": "A set of extracted fields corresponding to the input document.",
      "type": "object",
      "required": [
        "docType",
        "pageRange",
        "fields"
      ],
      "properties": {
        "docType": {
          "description": "Document type.",
          "type": "string"
        },
        "pageRange": {
          "description": "First and last page number where the document is found.",
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "x-nullable": false
          }
        },
        "fields": {
          "$ref": "#/definitions/BusinessCardFields"
        }
      }
    },
    "CustomFormsDocumentResult": {
      "description": "A set of extracted fields corresponding to the input document.",
      "type": "object",
      "required": [
        "docType",
        "pageRange",
        "_fields"
      ],
      "properties": {
        "docType": {
          "description": "Document type.",
          "type": "string"
        },
        "pageRange": {
          "description": "First and last page number where the document is found.",
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "x-nullable": false
          }
        },
        "_fields": {
          "description": "Array of fields with fieldName and fieldValue properties.",
          "title": "Fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFormsFields"
          }
        }
      }
    },
    "ReceiptDocumentResult": {
      "description": "A set of extracted fields corresponding to the input document.",
      "type": "object",
      "required": [
        "docType",
        "pageRange",
        "fields"
      ],
      "properties": {
        "docType": {
          "description": "Document type.",
          "type": "string"
        },
        "pageRange": {
          "description": "First and last page number where the document is found.",
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "x-nullable": false
          }
        },
        "fields": {
          "$ref": "#/definitions/ReceiptFields"
        }
      }
    },
    "IdDocumentResult": {
      "description": "A set of extracted fields corresponding to the input document.",
      "type": "object",
      "required": [
        "docType",
        "pageRange",
        "fields"
      ],
      "properties": {
        "docType": {
          "description": "Document type.",
          "type": "string"
        },
        "pageRange": {
          "description": "First and last page number where the document is found.",
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "x-nullable": false
          }
        },
        "fields": {
          "$ref": "#/definitions/IdFields"
        }
      }
    },
    "CustomFormsFields": {
      "description": "Custom Form fields.",
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string",
          "title": "Field Name"
        },
        "fieldValue": {
          "$ref": "#/definitions/FieldValue"
        }
      }
    },
    "InvoiceFields": {
      "description": "Invoice fields for 2.1.",
      "type": "object",
      "properties": {
        "AmountDue": {
          "type": "object",
          "title": "Amound due field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Amount due (text)",
              "description": "Returns amount due as written on the invoice."
            },
            "valueNumber": {
              "type": "number",
              "title": "Amount due (number)",
              "description": "Formatted as a number. Example: 1234.98."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of amount due",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "BillingAddress": {
          "type": "object",
          "title": "Billing address field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Billing address"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of billing address",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "BillingAddressRecipient": {
          "type": "object",
          "title": "Billing address recipient field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Billing address recipient"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of billing address recipient",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "CustomerAddress": {
          "type": "object",
          "title": "Customer address field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Customer address"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of customer address",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "CustomerAddressRecipient": {
          "type": "object",
          "title": "Customer address recipient field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Customer address recipient"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of customer address recipient",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "CustomerId": {
          "type": "object",
          "title": "Customer ID field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Customer ID"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of customer ID",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "CustomerName": {
          "type": "object",
          "title": "Customer name field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Customer name"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of customer name",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "DueDate": {
          "type": "object",
          "title": "Due date field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Due date (text)",
              "description": "Returns due date as written on the invoice."
            },
            "valueDate": {
              "type": "string",
              "title": "Due date (date)",
              "format": "date",
              "description": "Formatted as a date. Example: 2019-05-31."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of due date",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "InvoiceDate": {
          "type": "object",
          "title": "Invoice date field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Invoice date (text)",
              "description": "Returns invoice date as written on the invoice."
            },
            "valueDate": {
              "type": "string",
              "title": "Invoice date (date)",
              "format": "date",
              "description": "Formatted as a date. Example: 2019-05-31."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of invoice date",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "InvoiceId": {
          "type": "object",
          "title": "Invoice ID field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Invoice ID"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of invoice ID",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "InvoiceTotal": {
          "type": "object",
          "title": "Invoice total field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Invoice total (text)",
              "description": "Returns invoice total as written on the invoice."
            },
            "valueNumber": {
              "type": "number",
              "title": "Invoice total (number)",
              "description": "Formatted as a number. Example: 1234.98."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of invoice total",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "PreviousUnpaidBalance": {
          "type": "object",
          "title": "Previous unpaid balance field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Previous unpaid balance (text)",
              "description": "Returns previous unpaid balance as written on the invoice."
            },
            "valueNumber": {
              "type": "number",
              "title": "Previous unpaid balance (number)",
              "description": "Formatted as a number. Example: 1234.98."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of previous unpaid balance",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "PurchaseOrder": {
          "type": "object",
          "title": "Purchase order field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Purchase order"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of purchase order",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "RemittanceAddress": {
          "type": "object",
          "title": "Remittance address field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Remittance address"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of remittance address",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "RemittanceAddressRecipient": {
          "type": "object",
          "title": "Remittance address recipient field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Remittance address recipient"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of remittance address recipient",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "ServiceAddress": {
          "type": "object",
          "title": "Service address field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Service address"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of service address",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "ServiceAddressRecipient": {
          "type": "object",
          "title": "Service address recipient field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Service address recipient"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of service address recipient",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "ServiceEndDate": {
          "type": "object",
          "title": "Service end date field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Service end date (text)",
              "description": "Returns service end date as written on the invoice."
            },
            "valueDate": {
              "type": "string",
              "title": "Service end date (date)",
              "format": "date",
              "description": "Formatted as a date. Example: 2019-05-31."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of service end date",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "ServiceStartDate": {
          "type": "object",
          "title": "Service start date field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Service start date (text)",
              "description": "Returns service start date as written on the invoice."
            },
            "valueDate": {
              "type": "string",
              "title": "Service start date (date)",
              "format": "date",
              "description": "Formatted as a date. Example: 2019-05-31."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of service start date",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "ShippingAddress": {
          "type": "object",
          "title": "Shipping address field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Shipping address"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of shipping address",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "ShippingAddressRecipient": {
          "type": "object",
          "title": "Shipping address recipient field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Shipping address recipient"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of shipping address recipient",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "SubTotal": {
          "type": "object",
          "title": "Subtotal field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Subtotal (text)",
              "description": "Returns subtotal as written on the invoice."
            },
            "valueNumber": {
              "type": "number",
              "title": "Subtotal (number)",
              "description": "Formatted as a number. Example: 1234.98."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of subtotal",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "TotalTax": {
          "type": "object",
          "title": "Total tax field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Total tax (text)",
              "description": "Returns total tax as written on the invoice."
            },
            "valueNumber": {
              "type": "number",
              "title": "Total tax (number)",
              "description": "Formatted as a number. Example: 1234.98."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of total tax",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "VendorAddress": {
          "type": "object",
          "title": "Vendor address field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Vendor address"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of vendor address",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "VendorAddressRecipient": {
          "type": "object",
          "title": "Vendor address recipient field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Vendor address recipient"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of vendor address recipient",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "VendorName": {
          "type": "object",
          "title": "Vendor name field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Vendor name"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of vendor name",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "Items": {
          "type": "object",
          "title": "Items field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Items",
              "description": "Array of line items",
              "items": {
                "type": "object",
                "title": "Item field",
                "description": "Predicted field object.",
                "properties": {
                  "valueObject": {
                    "type": "object",
                    "title": "Item field value",
                    "description": "Predicted field object.",
                    "properties": {
                      "Amount": {
                        "type": "object",
                        "title": "Amount field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Amount (text)",
                            "description": "Returns amount as written on the invoice."
                          },
                          "valueNumber": {
                            "type": "number",
                            "title": "Amount (number)",
                            "description": "Formatted as a number. Example: 12."
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of amount",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "Description": {
                        "type": "object",
                        "title": "Description field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Description"
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of description",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "Quantity": {
                        "type": "object",
                        "title": "Quantity field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Quantity (text)",
                            "description": "Returns quantity as written on the invoice."
                          },
                          "valueNumber": {
                            "type": "number",
                            "title": "Quantity (number)",
                            "description": "Formatted as a number. Example: 12."
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of quantity",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "UnitPrice": {
                        "type": "object",
                        "title": "Unit price field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Unit price (text)",
                            "description": "Returns unit price as written on the invoice."
                          },
                          "valueNumber": {
                            "type": "number",
                            "title": "Unit price (number)",
                            "description": "Formatted as a number. Example: 12."
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of unit price",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "ProductCode": {
                        "type": "object",
                        "title": "Product code field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Product code"
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of product code",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "Unit": {
                        "type": "object",
                        "title": "Unit field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Unit"
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of unit",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "Date": {
                        "type": "object",
                        "title": "Date field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Date (text)",
                            "description": "Returns date as written on the invoice."
                          },
                          "valueDate": {
                            "type": "string",
                            "title": "Date (date)",
                            "format": "date",
                            "description": "Formatted as a date. Example: 2019-05-31."
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of date",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "Tax": {
                        "type": "object",
                        "title": "Tax field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Tax (text)",
                            "description": "Returns tax as written on the invoice."
                          },
                          "valueNumber": {
                            "type": "number",
                            "title": "Tax (number)",
                            "description": "Formatted as a number. Example: 12."
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of tax",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "BusinessCardFields": {
      "description": "BusinessCard fields for 2.1.",
      "type": "object",
      "properties": {
        "ContactNames": {
          "type": "object",
          "title": "Contact names field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Contact names",
              "description": "Array of contact names",
              "items": {
                "type": "object",
                "title": "Contact name field",
                "description": "Predicted field object.",
                "properties": {
                  "valueObject": {
                    "type": "object",
                    "title": "Contact name field value",
                    "description": "Predicted field object.",
                    "properties": {
                      "FirstName": {
                        "type": "object",
                        "title": "First name field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "First name"
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of first name",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "LastName": {
                        "type": "object",
                        "title": "Last name field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Last name"
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of last name",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "CompanyNames": {
          "type": "object",
          "title": "Company names field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Company names",
              "description": "Array of company names",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Company name"
                  },
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "title": "Confidence of company name",
                    "description": "How confident the model is in its prediction."
                  }
                }
              }
            }
          }
        },
        "Departments": {
          "type": "object",
          "title": "Departments field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Departments",
              "description": "Array of departments",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Department"
                  },
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "title": "Confidence of department",
                    "description": "How confident the model is in its prediction."
                  }
                }
              }
            }
          }
        },
        "JobTitles": {
          "type": "object",
          "title": "Job titles field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Job titles",
              "description": "Array of job titles",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Job title"
                  },
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "title": "Confidence of job title",
                    "description": "How confident the model is in its prediction."
                  }
                }
              }
            }
          }
        },
        "Emails": {
          "type": "object",
          "title": "Emails field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Emails",
              "description": "Array of emails",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Email"
                  },
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "title": "Confidence of email",
                    "description": "How confident the model is in its prediction."
                  }
                }
              }
            }
          }
        },
        "Websites": {
          "type": "object",
          "title": "Websites field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Websites",
              "description": "Array of websites",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Website"
                  },
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "title": "Confidence of website",
                    "description": "How confident the model is in its prediction."
                  }
                }
              }
            }
          }
        },
        "Addresses": {
          "type": "object",
          "title": "Addresses field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Addresses",
              "description": "Array of addresses",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Address"
                  },
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "title": "Confidence of address",
                    "description": "How confident the model is in its prediction."
                  }
                }
              }
            }
          }
        },
        "MobilePhones": {
          "type": "object",
          "title": "Mobile phones field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Mobile phones",
              "description": "Array of mobile phones",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Mobile phone"
                  },
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "title": "Confidence of mobile phone",
                    "description": "How confident the model is in its prediction."
                  }
                }
              }
            }
          }
        },
        "Faxes": {
          "type": "object",
          "title": "Faxes field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Faxes",
              "description": "Array of faxes",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Fax"
                  },
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "title": "Confidence of fax",
                    "description": "How confident the model is in its prediction."
                  }
                }
              }
            }
          }
        },
        "WorkPhones": {
          "type": "object",
          "title": "Work phones field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Work phones",
              "description": "Array of work phones",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Work phone"
                  },
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "title": "Confidence of work phone",
                    "description": "How confident the model is in its prediction."
                  }
                }
              }
            }
          }
        },
        "OtherPhones": {
          "type": "object",
          "title": "Other phones field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Other phones",
              "description": "Array of other phones",
              "items": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "title": "Other phone"
                  },
                  "confidence": {
                    "type": "number",
                    "format": "float",
                    "title": "Confidence of other phone",
                    "description": "How confident the model is in its prediction."
                  }
                }
              }
            }
          }
        }
      }
    },
    "ReceiptFields": {
      "description": "Receiptfields for 2.1.",
      "type": "object",
      "properties": {
        "ReceiptType": {
          "type": "object",
          "title": "Receipt type field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Receipt type"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of receipt type",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "MerchantName": {
          "type": "object",
          "title": "Merchant name field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Merchant name"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of merchant name",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "MerchantPhoneNumber": {
          "type": "object",
          "title": "Merchant phone number field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Merchant phone number"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of merchant phone number",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "MerchantAddress": {
          "type": "object",
          "title": "Merchant address field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Merchant address"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of merchant address",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "TransactionDate": {
          "type": "object",
          "title": "Transaction date field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Transaction date (text)",
              "description": "Returns transaction date as written on the invoice."
            },
            "valueDate": {
              "type": "string",
              "title": "Transaction date (date)",
              "format": "date",
              "description": "Formatted as a date. Example: 2019-05-31."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of transaction date",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "TransactionTime": {
          "type": "object",
          "title": "Transaction time field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Transaction time (text)",
              "description": "Returns transaction time as written on the invoice."
            },
            "valueDate": {
              "type": "string",
              "title": "Transaction time (time)",
              "format": "time",
              "description": "Formatted as a date. Example: 2019-05-31."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of transaction time",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "Total": {
          "type": "object",
          "title": "Total field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Total (text)",
              "description": "Returns total as written on the invoice."
            },
            "valueNumber": {
              "type": "number",
              "title": "Total (number)",
              "description": "Formatted as a number. Example: 1234.98."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of total",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "Subtotal": {
          "type": "object",
          "title": "Subtotal field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Subtotal (text)",
              "description": "Returns subtotal as written on the invoice."
            },
            "valueNumber": {
              "type": "number",
              "title": "Subtotal (number)",
              "description": "Formatted as a number. Example: 1234.98."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of subtotal",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "Tax": {
          "type": "object",
          "title": "Tax field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Tax (text)",
              "description": "Returns tax as written on the invoice."
            },
            "valueNumber": {
              "type": "number",
              "title": "Tax (number)",
              "description": "Formatted as a number. Example: 1234.98."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of tax",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "Tip": {
          "type": "object",
          "title": "Tip field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Tip (text)",
              "description": "Returns tip as written on the invoice."
            },
            "valueNumber": {
              "type": "number",
              "title": "Tip (number)",
              "description": "Formatted as a number. Example: 1234.98."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of tip",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "Items": {
          "type": "object",
          "title": "Items field",
          "description": "Predicted field object.",
          "properties": {
            "valueArray": {
              "type": "array",
              "title": "Items",
              "description": "Array of line items",
              "items": {
                "type": "object",
                "title": "Item field",
                "description": "Predicted field object.",
                "properties": {
                  "valueObject": {
                    "type": "object",
                    "title": "Item field value",
                    "description": "Predicted field object.",
                    "properties": {
                      "Name": {
                        "type": "object",
                        "title": "Name field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Name"
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of name",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "Quantity": {
                        "type": "object",
                        "title": "Quantity field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Quantity (text)",
                            "description": "Returns quantity as written on the invoice."
                          },
                          "valueNumber": {
                            "type": "number",
                            "title": "Quantity (number)",
                            "description": "Formatted as a number. Example: 12."
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of quantity",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "Price": {
                        "type": "object",
                        "title": "Price field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Price (text)",
                            "description": "Returns price as written on the invoice."
                          },
                          "valueNumber": {
                            "type": "number",
                            "title": "Price (number)",
                            "description": "Formatted as a number. Example: 12."
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of price",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      },
                      "TotalPrice": {
                        "type": "object",
                        "title": "Total price field",
                        "description": "Predicted field object.",
                        "properties": {
                          "text": {
                            "type": "string",
                            "title": "Total price (text)",
                            "description": "Returns total price as written on the invoice."
                          },
                          "valueNumber": {
                            "type": "number",
                            "title": "Total price (number)",
                            "description": "Formatted as a number. Example: 12."
                          },
                          "confidence": {
                            "type": "number",
                            "format": "float",
                            "title": "Confidence of total price",
                            "description": "How confident the model is in its prediction."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "IdFields": {
      "description": "ID Document  fields for 2.1.",
      "type": "object",
      "properties": {
        "CountryRegion": {
          "type": "object",
          "title": "Country Region field",
          "description": "Predicted field object.",
          "properties": {
            "valueCountryRegion": {
              "type": "string",
              "title": "Country Region"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of Country Region",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "DateOfExpiration": {
          "type": "object",
          "title": "Date of expiration field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Date of expiration",
              "description": "Returns date of expiration as written on the invoice."
            },
            "valueDate": {
              "type": "string",
              "title": "Date of expiration (date)",
              "format": "date",
              "description": "Formatted as a date. Example: 2019-05-31."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of date of expiration",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "DateOfBirth": {
          "type": "object",
          "title": "Date of birth field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Date of birth (text)",
              "description": "Returns date of birth as written on the invoice."
            },
            "valueDate": {
              "type": "string",
              "title": "Date of birth (date)",
              "format": "date",
              "description": "Formatted as a date. Example: 2019-05-31."
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of date of birth",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "DocumentNumber": {
          "type": "object",
          "title": "Document number field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Document number"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of document number",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "FirstName": {
          "type": "object",
          "title": "First name field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "First name"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of first name",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "LastName": {
          "type": "object",
          "title": "Last name field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Last name"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of last name",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "Nationality": {
          "type": "object",
          "title": "Nationality field",
          "description": "Predicted field object.",
          "properties": {
            "valueCountryRegion": {
              "type": "string",
              "title": "Nationality"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of nationality",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "Sex": {
          "type": "object",
          "title": "Sex field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Sex"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of sex",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "MachineReadableZone": {
          "type": "object",
          "title": "Machine readable zone field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Machine readable zone"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of machine readable zone",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "DocumentType": {
          "type": "object",
          "title": "Document type field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Document type"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of document type",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "Address": {
          "type": "object",
          "title": "Address field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Address"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of address",
              "description": "How confident the model is in its prediction."
            }
          }
        },
        "Region": {
          "type": "object",
          "title": "Region field",
          "description": "Predicted field object.",
          "properties": {
            "text": {
              "type": "string",
              "title": "Region"
            },
            "confidence": {
              "type": "number",
              "format": "float",
              "title": "Confidence of region",
              "description": "How confident the model is in its prediction."
            }
          }
        }
      }
    },
    "FieldValue": {
      "description": "Predicted field value object.",
      "type": "object",
      "title": "Field Value",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/FieldValueType"
        },
        "valueString": {
          "description": "String value.",
          "type": "string"
        },
        "valueDate": {
          "description": "Date value.",
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        },
        "valueTime": {
          "description": "Time value.",
          "type": "string",
          "format": "date-time",
          "x-nullable": false
        },
        "valuePhoneNumber": {
          "description": "Phone number value.",
          "type": "string"
        },
        "valueNumber": {
          "description": "Floating point value.",
          "type": "number",
          "x-nullable": false
        },
        "valueInteger": {
          "description": "Integer value.",
          "type": "integer",
          "x-nullable": false
        },
        "text": {
          "type": "string"
        },
        "boundingBox": {
          "$ref": "#/definitions/BoundingBox"
        },
        "confidence": {
          "$ref": "#/definitions/Confidence"
        },
        "elements": {
          "description": "When includeTextDetails is set to true, a list of references to the text elements constituting this field.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ElementReference"
          }
        },
        "page": {
          "description": "The 1-based page number in the input document.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "x-nullable": false
        }
      }
    },
    "FieldValueType": {
      "type": "string",
      "description": "Semantic data type of the field value.",
      "enum": [
        "string",
        "date",
        "time",
        "phoneNumber",
        "number",
        "integer",
        "array",
        "object"
      ],
      "x-ms-enum": {
        "name": "FieldValueType",
        "modelAsString": false
      },
      "x-nullable": false
    },
    "Confidence": {
      "description": "Confidence value.",
      "type": "number",
      "format": "float",
      "minimum": 0,
      "maximum": 1,
      "x-nullable": false
    },
    "ApiVersion_V30": {
      "description": "API version.",
      "type": "string",
      "enum": [
        "2022-08-31"
      ],
      "x-ms-enum": {
        "name": "ApiVersion",
        "modelAsString": true
      }
    },
    "AnalyzeResultOperation_V30": {
      "description": "Status and result of the analyze operation.",
      "type": "object",
      "required": [
        "status",
        "createdDateTime",
        "lastUpdatedDateTime"
      ],
      "properties": {
        "status": {
          "description": "Operation status.",
          "type": "string",
          "enum": [
            "notStarted",
            "running",
            "failed",
            "succeeded"
          ],
          "x-ms-enum": {
            "name": "AnalyzeResultOperationStatus",
            "modelAsString": false
          }
        },
        "createdDateTime": {
          "description": "Date and time (UTC) when the analyze operation was submitted.",
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedDateTime": {
          "description": "Date and time (UTC) when the status was last updated.",
          "type": "string",
          "format": "date-time"
        },
        "error": {
          "$ref": "#/definitions/Error_V30"
        },
        "analyzeResult": {
          "$ref": "#/definitions/AnalyzeResult_V30"
        }
      }
    },
    "AnalyzeResult_V30": {
      "description": "Document analysis result.",
      "type": "object",
      "required": [
        "apiVersion",
        "modelId",
        "stringIndexType",
        "content",
        "pages"
      ],
      "properties": {
        "apiVersion": {
          "$ref": "#/definitions/ApiVersion_V30"
        },
        "modelId": {
          "$ref": "#/definitions/ModelId_V30"
        },
        "stringIndexType": {
          "$ref": "#/definitions/StringIndexType_V30"
        },
        "content": {
          "description": "Concatenate string representation of all textual and visual elements in reading order.",
          "type": "string"
        },
        "pages": {
          "description": "Analyzed pages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentPage_V30"
          }
        },
        "paragraphs": {
          "description": "Extracted paragraphs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentParagraph_V30"
          }
        },
        "tables": {
          "description": "Extracted tables.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentTable_V30"
          }
        },
        "keyValuePairs": {
          "description": "Extracted key-value pairs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentKeyValuePair_V30"
          }
        },
        "entities": {
          "description": "Extracted entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentEntity_V30"
          }
        },
        "styles": {
          "description": "Extracted font styles.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentStyle_V30"
          }
        },
        "languages": {
          "description": "Detected languages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentLanguage_V30"
          }
        },
        "documents": {
          "description": "Extracted documents.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document_V30"
          }
        }
      }
    },
    "DocumentPage_V30": {
      "description": "Content and layout elements extracted from a page from the input.",
      "type": "object",
      "required": [
        "pageNumber",
        "spans"
      ],
      "properties": {
        "kind": {
          "description": "Kind of document page.",
          "type": "string",
          "enum": [
            "document",
            "sheet",
            "slide",
            "image"
          ],
          "x-ms-enum": {
            "name": "DocumentPageKind",
            "modelAsString": true
          }
        },
        "pageNumber": {
          "description": "1-based page number in the input document.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "angle": {
          "description": "The general orientation of the content in clockwise direction, measured in degrees between (-180, 180].",
          "type": "number",
          "minimum": -180,
          "maximum": 180,
          "exclusiveMinimum": true
        },
        "width": {
          "description": "The width of the image/PDF in pixels/inches, respectively.",
          "type": "number",
          "minimum": 0
        },
        "height": {
          "description": "The height of the image/PDF in pixels/inches, respectively.",
          "type": "number",
          "minimum": 0
        },
        "unit": {
          "description": "The unit used by the width, height, and polygon properties. For images, the unit is \"pixel\". For PDF, the unit is \"inch\".",
          "type": "string",
          "enum": [
            "pixel",
            "inch"
          ],
          "x-ms-enum": {
            "name": "LengthUnit",
            "modelAsString": true
          }
        },
        "spans": {
          "description": "Location of the page in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        },
        "words": {
          "description": "Extracted words from the page.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentWord_V30"
          }
        },
        "selectionMarks": {
          "description": "Extracted selection marks from the page.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSelectionMark_V30"
          }
        },
        "images": {
          "description": "Extracted images from the page.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentImage_V30"
          }
        },
        "lines": {
          "description": "Extracted lines from the page, potentially containing both textual and visual elements.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentLine_V30"
          }
        }
      }
    },
    "DocumentWord_V30": {
      "description": "A word object consisting of a contiguous sequence of characters.  For non-space delimited languages, such as Chinese, Japanese, and Korean, each character is represented as its own word.",
      "type": "object",
      "required": [
        "content",
        "span",
        "confidence"
      ],
      "properties": {
        "content": {
          "description": "Text content of the word.",
          "type": "string"
        },
        "polygon": {
          "$ref": "#/definitions/BoundingPolygon_V30"
        },
        "span": {
          "$ref": "#/definitions/DocumentSpan_V30"
        },
        "confidence": {
          "$ref": "#/definitions/Confidence_V30"
        }
      }
    },
    "DocumentSelectionMark_V30": {
      "description": "A selection mark object representing check boxes, radio buttons, and other elements indicating a selection.",
      "type": "object",
      "required": [
        "state",
        "span",
        "confidence"
      ],
      "properties": {
        "state": {
          "$ref": "#/definitions/DocumentSelectionMarkState_V30"
        },
        "polygon": {
          "$ref": "#/definitions/BoundingPolygon_V30"
        },
        "span": {
          "$ref": "#/definitions/DocumentSpan_V30"
        },
        "confidence": {
          "$ref": "#/definitions/Confidence_V30"
        }
      }
    },
    "DocumentImage_V30": {
      "description": "An image object detected in the page.",
      "type": "object",
      "required": [
        "span",
        "pageRef",
        "confidence"
      ],
      "properties": {
        "polygon": {
          "$ref": "#/definitions/BoundingPolygon_V30"
        },
        "span": {
          "$ref": "#/definitions/DocumentSpan_V30"
        },
        "pageRef": {
          "description": "0-based index of the global pages array that containing the content of the image.",
          "type": "integer",
          "minimum": 0
        },
        "confidence": {
          "$ref": "#/definitions/Confidence_V30"
        }
      }
    },
    "DocumentSelectionMarkState_V30": {
      "description": "State of the selection mark.",
      "type": "string",
      "enum": [
        "selected",
        "unselected"
      ],
      "x-ms-enum": {
        "name": "SelectionMarkState",
        "modelAsString": true
      }
    },
    "DocumentStyle_V30": {
      "description": "An object representing observed text styles.",
      "type": "object",
      "required": [
        "spans",
        "confidence"
      ],
      "properties": {
        "isHandwritten": {
          "description": "Is content handwritten.",
          "type": "boolean"
        },
        "spans": {
          "description": "Location of the text elements in the concatenated content the style applies to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        },
        "confidence": {
          "$ref": "#/definitions/Confidence_V30"
        }
      }
    },
    "DocumentLanguage_V30": {
      "description": "An object representing the detected language for a given text span.",
      "type": "object",
      "required": [
        "locale",
        "spans",
        "confidence"
      ],
      "properties": {
        "locale": {
          "description": "Detected language.  Value may an ISO 639-1 language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"zh-Hans\").",
          "type": "string"
        },
        "spans": {
          "description": "Location of the text elements in the concatenated content the language applies to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        },
        "confidence": {
          "$ref": "#/definitions/Confidence_V30"
        }
      }
    },
    "DocumentLine_V30": {
      "description": "A content line object consisting of an adjacent sequence of content elements, such as words and selection marks.",
      "type": "object",
      "required": [
        "content",
        "spans"
      ],
      "properties": {
        "content": {
          "description": "Concatenated content of the contained elements in reading order.",
          "type": "string"
        },
        "polygon": {
          "$ref": "#/definitions/BoundingPolygon_V30"
        },
        "spans": {
          "description": "Location of the line in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        }
      }
    },
    "DocumentParagraph_V30": {
      "description": "A paragraph object consisting with contiguous lines generally with common alignment and spacing.",
      "type": "object",
      "required": [
        "content",
        "spans"
      ],
      "properties": {
        "role": {
          "description": "Semantic role of the paragraph.",
          "type": "string",
          "enum": [
            "pageHeader",
            "pageFooter",
            "pageNumber",
            "title",
            "sectionHeading",
            "footnote"
          ],
          "x-ms-enum": {
            "name": "ParagraphRole",
            "modelAsString": true
          }
        },
        "content": {
          "description": "Concatenated content of the paragraph in reading order.",
          "type": "string"
        },
        "boundingRegions": {
          "description": "Bounding regions covering the paragraph.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundingRegion_V30"
          }
        },
        "spans": {
          "description": "Location of the paragraph in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        }
      }
    },
    "DocumentTable_V30": {
      "description": "A table object consisting table cells arranged in a rectangular layout.",
      "type": "object",
      "required": [
        "rowCount",
        "columnCount",
        "cells",
        "spans"
      ],
      "properties": {
        "rowCount": {
          "description": "Number of rows in the table.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "columnCount": {
          "description": "Number of columns in the table.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "cells": {
          "description": "Cells contained within the table.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentTableCell_V30"
          }
        },
        "caption": {
          "$ref": "#/definitions/DocumentCaption_V30"
        },
        "footnotes": {
          "description": "Footnotes associated with the table.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentFootnote_V30"
          }
        },
        "boundingRegions": {
          "description": "Bounding regions covering the table.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundingRegion_V30"
          }
        },
        "spans": {
          "description": "Location of the table in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        }
      }
    },
    "DocumentTableCell_V30": {
      "description": "An object representing the location and content of a table cell.",
      "type": "object",
      "required": [
        "rowIndex",
        "columnIndex",
        "content",
        "spans"
      ],
      "properties": {
        "kind": {
          "description": "Table cell kind.",
          "type": "string",
          "enum": [
            "content",
            "rowHeader",
            "columnHeader",
            "stubHead",
            "description"
          ],
          "default": "content",
          "x-ms-enum": {
            "name": "DocumentTableCellKind",
            "modelAsString": true
          }
        },
        "rowIndex": {
          "description": "Row index of the cell.",
          "type": "integer",
          "format": "int32"
        },
        "columnIndex": {
          "description": "Column index of the cell.",
          "type": "integer",
          "format": "int32"
        },
        "rowSpan": {
          "description": "Number of rows spanned by this cell.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 1
        },
        "columnSpan": {
          "description": "Number of columns spanned by this cell.",
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 1
        },
        "content": {
          "description": "Concatenated content of the table cell in reading order.",
          "type": "string"
        },
        "boundingRegions": {
          "description": "Bounding regions covering the table cell.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundingRegion_V30"
          }
        },
        "spans": {
          "description": "Location of the table cell in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        }
      }
    },
    "DocumentCaption_V30": {
      "description": "An object representing the location and content of a table caption.",
      "type": "object",
      "required": [
        "content",
        "spans"
      ],
      "properties": {
        "content": {
          "description": "Table caption content.",
          "type": "string"
        },
        "boundingRegions": {
          "description": "Bounding regions covering the table caption.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundingRegion_V30"
          }
        },
        "spans": {
          "description": "Location of the table caption in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        }
      }
    },
    "DocumentFootnote_V30": {
      "description": "An object representing the location and content of a table footnote.",
      "type": "object",
      "required": [
        "content",
        "spans"
      ],
      "properties": {
        "content": {
          "description": "Table footnote content.",
          "type": "string"
        },
        "boundingRegions": {
          "description": "Bounding regions covering the table footnote.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundingRegion_V30"
          }
        },
        "spans": {
          "description": "Location of the table footnote in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        }
      }
    },
    "DocumentKeyValuePair_V30": {
      "description": "An object representing a form field with distinct field label (key) and field value (may be empty).",
      "type": "object",
      "required": [
        "key",
        "confidence"
      ],
      "properties": {
        "key": {
          "$ref": "#/definitions/DocumentKeyValueElement_V30"
        },
        "value": {
          "$ref": "#/definitions/DocumentKeyValueElement_V30"
        },
        "confidence": {
          "$ref": "#/definitions/Confidence_V30"
        }
      }
    },
    "DocumentKeyValueElement_V30": {
      "description": "An object representing the field key or value in a key-value pair.",
      "type": "object",
      "required": [
        "content",
        "spans"
      ],
      "properties": {
        "content": {
          "description": "Concatenated content of the key-value element in reading order.",
          "type": "string"
        },
        "boundingRegions": {
          "description": "Bounding regions covering the key-value element.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundingRegion_V30"
          }
        },
        "spans": {
          "description": "Location of the key-value element in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        }
      }
    },
    "DocumentEntity_V30": {
      "description": "An object representing various categories of entities.",
      "type": "object",
      "required": [
        "category",
        "content",
        "spans",
        "confidence"
      ],
      "properties": {
        "category": {
          "description": "Entity type.",
          "type": "string"
        },
        "subCategory": {
          "description": "Entity sub type.",
          "type": "string"
        },
        "content": {
          "description": "Entity content.",
          "type": "string"
        },
        "boundingRegions": {
          "description": "Bounding regions covering the entity.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundingRegion_V30"
          }
        },
        "spans": {
          "description": "Location of the entity in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        },
        "confidence": {
          "$ref": "#/definitions/Confidence_V30"
        }
      }
    },
    "Document_V30": {
      "description": "An object describing the location and semantic content of a document.",
      "type": "object",
      "required": [
        "docType",
        "spans",
        "confidence"
      ],
      "properties": {
        "docType": {
          "$ref": "#/definitions/DocType_V30"
        },
        "boundingRegions": {
          "description": "Bounding regions covering the document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundingRegion_V30"
          }
        },
        "spans": {
          "description": "Location of the document in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        },
        "fields": {
          "description": "Dictionary of named field values.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/DocumentField_V30"
          }
        },
        "_fields": {
          "description": "Array of fields with fieldName and fieldValue properties.",
          "title": "Fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentFieldNameValue_V30"
          }
        },
        "confidence": {
          "$ref": "#/definitions/Confidence_V30"
        }
      }
    },
    "BoundingPolygon_V30": {
      "description": "Bounding polygon, with coordinates specified relative to the top-left of the page. The numbers represent the x, y values of the polygon vertices, clockwise from the left (-180 degrees inclusive) relative to the element orientation.",
      "type": "array",
      "items": {
        "type": "number",
        "minimum": 0
      }
    },
    "BoundingRegion_V30": {
      "description": "Bounding polygon on a specific page of the input.",
      "type": "object",
      "required": [
        "pageNumber",
        "polygon"
      ],
      "properties": {
        "pageNumber": {
          "description": "1-based page number of page containing the bounding region.",
          "type": "integer",
          "format": "int32",
          "minimum": 1
        },
        "polygon": {
          "$ref": "#/definitions/BoundingPolygon_V30"
        }
      }
    },
    "DocumentFieldType_V30": {
      "description": "Semantic data type of the field value.",
      "enum": [
        "string",
        "date",
        "time",
        "phoneNumber",
        "number",
        "integer",
        "selectionMark",
        "countryRegion",
        "currency",
        "signature",
        "array",
        "object",
        "address",
        "boolean"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "DocumentFieldType"
      }
    },
    "DocumentFieldNameValue_V30": {
      "description": "Document field object with field name and its value.",
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string",
          "title": "Field Name"
        },
        "fieldValue": {
          "$ref": "#/definitions/DocumentField_V30"
        }
      }
    },
    "DocumentField_V30": {
      "description": "An object representing the content and location of a field value.",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "$ref": "#/definitions/DocumentFieldType_V30"
        },
        "valueString": {
          "description": "String value.",
          "type": "string"
        },
        "valueDate": {
          "description": "Date value in YYYY-MM-DD format (ISO 8601).",
          "type": "string",
          "format": "date"
        },
        "valueTime": {
          "description": "Time value in hh:mm:ss format (ISO 8601).",
          "type": "string",
          "format": "time"
        },
        "valuePhoneNumber": {
          "description": "Phone number value in E.164 format (ex. +19876543210).",
          "type": "string"
        },
        "valueNumber": {
          "description": "Floating point value.",
          "type": "number"
        },
        "valueInteger": {
          "description": "Integer value.",
          "type": "integer",
          "format": "int64"
        },
        "valueSelectionMark": {
          "$ref": "#/definitions/DocumentSelectionMarkState_V30"
        },
        "valueSignature": {
          "description": "Presence of signature.",
          "type": "string",
          "enum": [
            "signed",
            "unsigned"
          ],
          "x-ms-enum": {
            "name": "DocumentSignatureType",
            "modelAsString": true
          }
        },
        "valueCountryRegion": {
          "description": "3-letter country code value (ISO 3166-1 alpha-3).",
          "type": "string"
        },
        "valueCurrency": {
          "$ref": "#/definitions/CurrencyValue_V30"
        },
        "valueAddress": {
          "$ref": "#/definitions/AddressValue_V30"
        },
        "valueBoolean": {
          "description": "Boolean value.",
          "type": "boolean"
        },
        "content": {
          "description": "Field content.",
          "type": "string"
        },
        "boundingRegions": {
          "description": "Bounding regions covering the field.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BoundingRegion_V30"
          }
        },
        "spans": {
          "description": "Location of the field in the reading order concatenated content.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentSpan_V30"
          }
        },
        "confidence": {
          "$ref": "#/definitions/Confidence_V30"
        }
      }
    },
    "Confidence_V30": {
      "description": "Prediction confidence.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "DocType_V30": {
      "description": "Document type name.",
      "type": "string",
      "minLength": 2,
      "maxLength": 64
    },
    "DocumentSpan_V30": {
      "description": "Contiguous region of the concatenated content property, specified as an offset and length.",
      "type": "object",
      "required": [
        "offset",
        "length"
      ],
      "properties": {
        "offset": {
          "description": "Zero-based index of the content represented by the span.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "length": {
          "description": "Number of characters in the content represented by the span.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        }
      }
    },
    "StringIndexType_V30": {
      "description": "Method used to compute string offset and length.",
      "type": "string",
      "enum": [
        "textElements",
        "unicodeCodePoint",
        "utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true
      },
      "default": "textElements"
    },
    "ModelId_V30": {
      "description": "Unique model name.",
      "type": "string",
      "pattern": "[a-zA-Z0-9][a-zA-Z0-9._~-]{1,63}"
    },
    "ErrorResponse_V30": {
      "description": "Error response object.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Error_V30"
        }
      },
      "required": [
        "error"
      ],
      "type": "object"
    },
    "Error_V30": {
      "description": "Error info.",
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        },
        "target": {
          "description": "Target of the error.",
          "type": "string"
        },
        "details": {
          "description": "List of detailed errors.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InnerError_V30"
          }
        },
        "innererror": {
          "$ref": "#/definitions/InnerError_V30"
        }
      }
    },
    "InnerError_V30": {
      "description": "Detailed error.",
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        }
      }
    },
    "CurrencyValue_V30": {
      "description": "Currency field value.",
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "description": "Currency amount.",
          "type": "number",
          "format": "double"
        },
        "currencySymbol": {
          "description": "Currency symbol label, if any.",
          "type": "string"
        }
      }
    },
    "AddressValue_V30": {
      "description": "Address field value.",
      "type": "object",
      "properties": {
        "houseNumber": {
          "description": "House or building number.",
          "type": "string"
        },
        "poBox": {
          "description": "Post office box number.",
          "type": "string"
        },
        "road": {
          "description": "Street name.",
          "type": "string"
        },
        "city": {
          "description": "Name of city, town, village, etc.",
          "type": "string"
        },
        "state": {
          "description": "First-level administrative division.",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code used for mail sorting.",
          "type": "string"
        },
        "countryRegion": {
          "description": "Country or region.",
          "type": "string"
        },
        "streetAddress": {
          "description": "Street-level address, excluding city, state, countryRegion, and postalCode.",
          "type": "string"
        }
      }
    }
  },
  "host": "europe-002.azure-apim.net",
  "info": {
    "description": "Extracts text (printed and handwritten OCR) and additional information (tables, checkbox, fields / key value pairs) from PDF or image documents and forms into structured data based on pre-trained models (layout, invoice, receipt, id, business card) or custom model created by a set of representative training forms using AI powered document understanding.",
    "title": "Form Recognizer",
    "version": "v2.1",
    "x-ms-api-annotation": {
      "status": "Production"
    },
    "contact": {
      "name": "Microsoft",
      "url": "https://aka.ms/formrecognizer",
      "email": "formrecog_contact@microsoft.com"
    }
  },
  "parameters": {},
  "paths": {
    "/{connectionId}/v2.1/layout/analyze": {
      "post": {
        "description": "Extract text and layout information from a given document.",
        "operationId": "AnalyzeLayoutAsync",
        "summary": "Analyze Layout",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "pages",
            "in": "query",
            "description": "The page selection for multi-page PDF and TIFF documents, to extract Invoice information from individual pages and a range of pages (like page 2, and pages 5-7) by entering the page numbers and ranges separated by commas (e.g. '2, 5-7'). If not set, all pages will  be processed.",
            "type": "string",
            "x-ms-summary": "Pages",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "language",
            "in": "query",
            "description": "The BCP-47 language code of the text in the document.",
            "type": "string",
            "enum": [
              "af",
              "ast",
              "bi",
              "br",
              "ca",
              "ceb",
              "ch",
              "co",
              "crh",
              "cs",
              "csb",
              "da",
              "de",
              "en",
              "es",
              "et",
              "eu",
              "fi",
              "fil",
              "fj",
              "fr",
              "fur",
              "fy",
              "ga",
              "gd",
              "gil",
              "gl",
              "gv",
              "hni",
              "hsb",
              "ht",
              "hu",
              "ia",
              "id",
              "it",
              "iu",
              "ja",
              "jv",
              "kaa",
              "kac",
              "kea",
              "kha",
              "kl",
              "ko",
              "ku",
              "kw",
              "lb",
              "ms",
              "mww",
              "nap",
              "nl",
              "no",
              "oc",
              "pl",
              "pt",
              "quc",
              "rm",
              "sco",
              "sl",
              "sq",
              "sv",
              "sw",
              "tet",
              "tr",
              "tt",
              "uz",
              "vo",
              "wae",
              "yua",
              "za",
              "zh-Hans",
              "zh-Hant",
              "zu"
            ],
            "x-ms-summary": "Language",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "readingOrder",
            "in": "query",
            "description": "Optional parameter to specify which reading order algorithm should be applied when ordering the extract text elements. Can be either 'basic' or 'natural'. Will default to basic if not specified.",
            "type": "string",
            "enum": [
              "basic",
              "natural"
            ],
            "x-ms-summary": "Reading Order",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "inputFileContent",
            "required": false,
            "schema": {
              "format": "binary",
              "type": "string"
            },
            "description": "A PDF document or image (JPG or PNG) file to analyze.",
            "x-ms-summary": "Document/Image File Content",
            "x-ms-visibility": "important"
          },
          {
            "in": "header",
            "name": "inputFileUrl",
            "required": false,
            "type": "string",
            "description": "Url path for input file. Alternative to Document/Image File Content.",
            "x-ms-summary": "Document/Image URL",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/pdf",
          "image/jpeg",
          "image/png",
          "image/tiff"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/LayoutAnalyzeOperationResult"
            }
          },
          "202": {
            "description": "The service has accepted the request and will start processing soon.  The client can query the operation status and result using the URL specified in the 'Operation-Location' response header.  The URL expires in 48 hours.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "description": "URL containing the resultId used to track the progress and obtain the result of the analyze operation. This URL expires in 48 hours."
              },
              "Location": {
                "type": "string",
                "description": "URL containing the resultId used to track the progress and obtain the result of the analyze operation. This URL expires in 48 hours."
              }
            }
          },
          "400": {
            "description": "Bad request error. Detailed error code and message are specified in the JSON response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Invalid input."
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type error. 'Content-Type' does not match the POST content.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Unsupported media type."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "Unspecified",
                  "message": "Internal server error."
                }
              }
            }
          },
          "503": {
            "description": "Transient fault while querying Microsoft Azure storage services.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "StorageException",
                  "message": "Transient fault occurred while querying Microsoft Azure storage services. Please try again later."
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#analyze-layout"
        }
      }
    },
    "/{connectionId}/v2.1/layout/analyzeResults/{resultId}": {
      "get": {
        "operationId": "GetAnalyzeLayoutResult",
        "x-ms-visibility": "internal",
        "description": "Track the progress and obtain the result of the analyze layout operation.",
        "summary": "Get Analyze Layout Result",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "resultId",
            "in": "path",
            "description": "Analyze operation result identifier.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/LayoutAnalyzeOperationResult"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#get-analyze-layout-result"
        }
      }
    },
    "/{connectionId}/v2.1/custom/models/{modelId}/analyze": {
      "post": {
        "description": "Extract key-value pairs, tables, and semantic values from a given document.",
        "operationId": "AnalyzeWithCustomForm",
        "summary": "Analyze Custom Form",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Format - uuid. Model identifier.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Model Identifier",
            "x-ms-visibility": "important"
          },
          {
            "name": "includeTextDetails",
            "in": "query",
            "default": true,
            "description": "Include text lines and element references in the result.  Default: True (just for FR Connector).",
            "type": "boolean",
            "x-ms-summary": "Include Text Details",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "pages",
            "in": "query",
            "description": "The page selection for multi-page PDF and TIFF documents, to extract Invoice information from individual pages and a range of pages (like page 2, and pages 5-7) by entering the page numbers and ranges separated by commas (e.g. '2, 5-7'). If not set, all pages will  be processed.",
            "type": "string",
            "x-ms-summary": "Pages",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "inputFileContent",
            "required": false,
            "schema": {
              "format": "binary",
              "type": "string"
            },
            "description": "A PDF document or image (JPG or PNG) file to analyze.",
            "x-ms-summary": "Document/Image File Content",
            "x-ms-visibility": "important"
          },
          {
            "in": "header",
            "name": "inputFileUrl",
            "required": false,
            "type": "string",
            "description": "Url path for input file. Alternative to Document/Image File Content.",
            "x-ms-summary": "Document/Image URL",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/pdf",
          "image/jpeg",
          "image/png",
          "image/tiff"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/CustomFormsAnalyzeOperationResult"
            }
          },
          "202": {
            "description": "The service has accepted the request and will start processing soon.  The client can query the operation status and result using the URL specified in the 'Operation-Location' response header.  The URL expires in 48 hours.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "description": "URL containing the resultId used to track the progress and obtain the result of the analyze operation."
              }
            },
            "schema": {
              "$ref": "#/definitions/CustomFormsAnalyzeOperationResult"
            }
          },
          "400": {
            "description": "Bad request error."
          },
          "404": {
            "description": "Model not found."
          },
          "415": {
            "description": "Unsupported media type error. 'Content-Type' does not match the POST content."
          },
          "500": {
            "description": "Internal server error."
          },
          "503": {
            "description": "Transient fault."
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#analyze-custom-form"
        }
      }
    },
    "/{connectionId}/v2.1/custom/models/{modelId}/analyzeResults/{resultId}": {
      "get": {
        "description": "Obtain current status and the result of the analyze form operation.",
        "operationId": "GetAnalyzeFormResult",
        "x-ms-visibility": "internal",
        "summary": "Get Analyze Custom Form Result",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Format - uuid. Model identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "resultId",
            "in": "path",
            "description": "Format - uuid. Analyze operation result identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/CustomFormsAnalyzeOperationResult"
            },
            "examples": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Invalid or expired result identifier."
          },
          "500": {
            "description": "Internal server error."
          },
          "503": {
            "description": "Transient fault."
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#get-analyze-custom-form-result"
        }
      }
    },
    "/{connectionId}/v2.1/prebuilt/invoice/analyze": {
      "post": {
        "description": "Extract field text and semantic values from a given invoice document.",
        "operationId": "AnalyzeInvoice",
        "summary": "Analyze Invoice",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "includeTextDetails",
            "in": "query",
            "default": true,
            "description": "Include text lines and element references in the result.  Default: True (just for FR Connector).",
            "type": "boolean",
            "x-ms-summary": "Include Text Details",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "pages",
            "in": "query",
            "description": "The page selection for multi-page PDF and TIFF documents, to extract Invoice information from individual pages and a range of pages (like page 2, and pages 5-7) by entering the page numbers and ranges separated by commas (e.g. '2, 5-7'). If not set, all pages will  be processed.",
            "type": "string",
            "x-ms-summary": "Pages",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale of the invoice. Supported locale includes: en-US.",
            "type": "string",
            "enum": [
              "en-US"
            ],
            "x-ms-summary": "Locale",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "inputFileContent",
            "required": false,
            "schema": {
              "format": "binary",
              "type": "string"
            },
            "description": "A PDF document or image (JPG or PNG) file to analyze.",
            "x-ms-summary": "Document/Image File Content",
            "x-ms-visibility": "important"
          },
          {
            "in": "header",
            "name": "inputFileUrl",
            "required": false,
            "type": "string",
            "description": "Url path for input file. Alternative to Document/Image File Content.",
            "x-ms-summary": "Document/Image URL",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/pdf",
          "image/jpeg",
          "image/png",
          "image/tiff"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/InvoiceAnalyzeOperationResult"
            }
          },
          "202": {
            "description": "The service has accepted the request and will start processing soon.  The client can query the operation status and result using the URL specified in the 'Operation-Location' response header.  The URL expires in 48 hours.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "description": "URL containing the resultId used to track the progress and obtain the result of the analyze operation. This URL expires in 48 hours."
              },
              "Location": {
                "type": "string",
                "description": "URL containing the resultId used to track the progress and obtain the result of the analyze operation. This URL expires in 48 hours."
              }
            }
          },
          "400": {
            "description": "Bad request error. Detailed error code and message are specified in the JSON response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Invalid input."
                }
              }
            }
          },
          "404": {
            "description": "Invalid or expired result identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "415": {
            "description": "Unsupported media type error. 'Content-Type' does not match the POST content.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Unsupported media type."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "Unspecified",
                  "message": "Internal server error."
                }
              }
            }
          },
          "503": {
            "description": "Transient fault while querying Microsoft Azure storage services.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "StorageException",
                  "message": "Transient fault occurred while querying Microsoft Azure storage services. Please try again later."
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#analyze-invoice"
        }
      }
    },
    "/{connectionId}/v2.1/prebuilt/invoice/analyzeResults/{resultId}": {
      "get": {
        "operationId": "GetAnalyzeInvoiceResult",
        "x-ms-visibility": "internal",
        "description": "Track the progress and obtain the result of the analyze invoice operation.",
        "summary": "Get Analyze Invoice Result",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "resultId",
            "in": "path",
            "description": "Analyze operation result identifier.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/InvoiceAnalyzeOperationResult"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#get-analyze-invoice-result"
        }
      }
    },
    "/{connectionId}/v2.1/prebuilt/businessCard/analyze": {
      "post": {
        "description": "Extract field text and semantic values from a given business card document.",
        "operationId": "AnalyzeBusinessCardAsync",
        "summary": "Analyze Business Card",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "includeTextDetails",
            "in": "query",
            "default": true,
            "description": "Include text lines and element references in the result.  Default: True (just for FR Connector).",
            "type": "boolean",
            "x-ms-summary": "Include Text Details",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "pages",
            "in": "query",
            "description": "The page selection for multi-page PDF and TIFF documents, to extract Invoice information from individual pages and a range of pages (like page 2, and pages 5-7) by entering the page numbers and ranges separated by commas (e.g. '2, 5-7'). If not set, all pages will  be processed.",
            "type": "string",
            "x-ms-summary": "Pages",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale of the invoice. Supported locale includes: en-US.",
            "type": "string",
            "enum": [
              "en-AU",
              "en-CA",
              "en-GB",
              "en-IN",
              "en-US"
            ],
            "x-ms-summary": "Locale",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "inputFileContent",
            "required": false,
            "schema": {
              "format": "binary",
              "type": "string"
            },
            "description": "A PDF document or image (JPG or PNG) file to analyze.",
            "x-ms-summary": "Document/Image File Content",
            "x-ms-visibility": "important"
          },
          {
            "in": "header",
            "name": "inputFileUrl",
            "required": false,
            "type": "string",
            "description": "Url path for input file. Alternative to Document/Image File Content.",
            "x-ms-summary": "Document/Image URL",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/pdf",
          "image/jpeg",
          "image/png",
          "image/tiff"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/BusinessCardAnalyzeOperationResult"
            }
          },
          "202": {
            "description": "The service has accepted the request and will start processing soon.  The client can query the operation status and result using the URL specified in the 'Operation-Location' response header.  The URL expires in 48 hours.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "description": "URL containing the resultId used to track the progress and obtain the result of the analyze operation. This URL expires in 48 hours."
              }
            }
          },
          "400": {
            "description": "Bad request error. Detailed error code and message are specified in the JSON response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Invalid input."
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type error. 'Content-Type' does not match the POST content.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Unsupported media type."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "Unspecified",
                  "message": "Internal server error."
                }
              }
            }
          },
          "503": {
            "description": "Transient fault while querying Microsoft Azure storage services.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "StorageException",
                  "message": "Transient fault occurred while querying Microsoft Azure storage services. Please try again later."
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#analyze-business-card"
        }
      }
    },
    "/{connectionId}/v2.1/prebuilt/businessCard/analyzeResults/{resultId}": {
      "get": {
        "description": "Query the status and retrieve the result of an Analyze Business Card operation.",
        "x-ms-visibility": "internal",
        "operationId": "GetAnalyzeBusinessCardResult",
        "summary": "Get Analyze Business Card Result",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "resultId",
            "in": "path",
            "description": "Format - uuid. Analyze operation result identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/BusinessCardAnalyzeOperationResult"
            }
          },
          "404": {
            "description": "Invalid or expired result identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Operation ID is invalid or expired."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "Unspecified",
                  "message": "Internal server error."
                }
              }
            }
          },
          "503": {
            "description": "Transient fault while querying Microsoft Azure storage services.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "StorageException",
                  "message": "Transient fault occurred while querying Microsoft Azure storage services. Please try again later."
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#get-analyze-business-card-result"
        }
      }
    },
    "/{connectionId}/v2.1/prebuilt/receipt/analyze": {
      "post": {
        "description": "Extract field text and semantic values from a given receipt document.",
        "operationId": "AnalyzeReceiptAsync",
        "summary": "Analyze Receipt",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "includeTextDetails",
            "in": "query",
            "default": true,
            "description": "Include text lines and element references in the result.  Default: True (just for FR Connector).",
            "type": "boolean",
            "x-ms-summary": "Include Text Details",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "pages",
            "in": "query",
            "description": "The page selection for multi-page PDF and TIFF documents, to extract Invoice information from individual pages and a range of pages (like page 2, and pages 5-7) by entering the page numbers and ranges separated by commas (e.g. '2, 5-7'). If not set, all pages will  be processed.",
            "type": "string",
            "x-ms-summary": "Pages",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale of the invoice. Supported locale includes: en-US.",
            "type": "string",
            "enum": [
              "en-AU",
              "en-CA",
              "en-GB",
              "en-IN",
              "en-US"
            ],
            "x-ms-summary": "Locale",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "inputFileContent",
            "required": false,
            "schema": {
              "format": "binary",
              "type": "string"
            },
            "description": "A PDF document or image (JPG or PNG) file to analyze.",
            "x-ms-summary": "Document/Image File Content",
            "x-ms-visibility": "important"
          },
          {
            "in": "header",
            "name": "inputFileUrl",
            "required": false,
            "type": "string",
            "description": "Url path for input file. Alternative to Document/Image File Content.",
            "x-ms-summary": "Document/Image URL",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/pdf",
          "image/jpeg",
          "image/png",
          "image/tiff"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/ReceiptAnalyzeOperationResult"
            }
          },
          "202": {
            "description": "The service has accepted the request and will start processing soon.  The client can query the operation status and result using the URL specified in the 'Operation-Location' response header.  The URL expires in 48 hours.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "description": "URL containing the resultId used to track the progress and obtain the result of the analyze operation. This URL expires in 48 hours."
              }
            }
          },
          "400": {
            "description": "Bad request error. Detailed error code and message are specified in the JSON response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Invalid input."
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type error. 'Content-Type' does not match the POST content.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Unsupported media type."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "Unspecified",
                  "message": "Internal server error."
                }
              }
            }
          },
          "503": {
            "description": "Transient fault while querying Microsoft Azure storage services.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "StorageException",
                  "message": "Transient fault occurred while querying Microsoft Azure storage services. Please try again later."
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#analyze-receipt"
        }
      }
    },
    "/{connectionId}/v2.1/prebuilt/receipt/analyzeResults/{resultId}": {
      "get": {
        "description": "Query the status and retrieve the result of an Analyze Receipt operation.",
        "x-ms-visibility": "internal",
        "operationId": "GetAnalyzeReceiptResult",
        "summary": "Get Analyze Receipt Result",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "resultId",
            "in": "path",
            "description": "Format - uuid. Analyze operation result identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/ReceiptAnalyzeOperationResult"
            }
          },
          "404": {
            "description": "Invalid or expired result identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Operation ID is invalid or expired."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "Unspecified",
                  "message": "Internal server error."
                }
              }
            }
          },
          "503": {
            "description": "Transient fault while querying Microsoft Azure storage services.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "StorageException",
                  "message": "Transient fault occurred while querying Microsoft Azure storage services. Please try again later."
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#get-analyze-receipt-result"
        }
      }
    },
    "/{connectionId}/v2.1/prebuilt/idDocument/analyze": {
      "post": {
        "description": "Extract field text and semantic values from a given ID document.",
        "operationId": "AnalyzeIdDocumentAsync",
        "summary": "Analyze ID Document",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "includeTextDetails",
            "in": "query",
            "default": true,
            "description": "Include text lines and element references in the result.  Default: True (just for FR Connector).",
            "type": "boolean",
            "x-ms-summary": "Include Text Details",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "pages",
            "in": "query",
            "description": "The page selection for multi-page PDF and TIFF documents, to extract Invoice information from individual pages and a range of pages (like page 2, and pages 5-7) by entering the page numbers and ranges separated by commas (e.g. '2, 5-7'). If not set, all pages will  be processed.",
            "type": "string",
            "x-ms-summary": "Pages",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "inputFileContent",
            "required": false,
            "schema": {
              "format": "binary",
              "type": "string"
            },
            "description": "A PDF document or image (JPG or PNG) file to analyze.",
            "x-ms-summary": "Document/Image File Content",
            "x-ms-visibility": "important"
          },
          {
            "in": "header",
            "name": "inputFileUrl",
            "required": false,
            "type": "string",
            "description": "Url path for input file. Alternative to Document/Image File Content.",
            "x-ms-summary": "Document/Image URL",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/pdf",
          "image/jpeg",
          "image/png",
          "image/tiff"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/IdAnalyzeOperationResult"
            }
          },
          "202": {
            "description": "The service has accepted the request and will start processing soon.  The client can query the operation status and result using the URL specified in the 'Operation-Location' response header.  The URL expires in 48 hours.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "description": "URL containing the resultId used to track the progress and obtain the result of the analyze operation. This URL expires in 48 hours."
              }
            }
          },
          "400": {
            "description": "Bad request error. Detailed error code and message are specified in the JSON response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Invalid input."
                }
              }
            }
          },
          "415": {
            "description": "Unsupported media type error. 'Content-Type' does not match the POST content.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Unsupported media type."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "Unspecified",
                  "message": "Internal server error."
                }
              }
            }
          },
          "503": {
            "description": "Transient fault while querying Microsoft Azure storage services.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "StorageException",
                  "message": "Transient fault occurred while querying Microsoft Azure storage services. Please try again later."
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#analyze-id-document"
        }
      }
    },
    "/{connectionId}/v2.1/prebuilt/idDocument/analyzeResults/{resultId}": {
      "get": {
        "description": "Query the status and retrieve the result of an ID Document Analyze ID Document operation.",
        "x-ms-visibility": "internal",
        "operationId": "GetAnalyzeIdDocumentResult",
        "summary": "Get Analyze ID Document Result",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "resultId",
            "in": "path",
            "description": "Format - uuid. Analyze operation result identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/IdAnalyzeOperationResult"
            }
          },
          "404": {
            "description": "Invalid or expired result identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "BadArgument",
                  "message": "Operation ID is invalid or expired."
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "Unspecified",
                  "message": "Internal server error."
                }
              }
            }
          },
          "503": {
            "description": "Transient fault while querying Microsoft Azure storage services.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "examples": {
              "application/json": {
                "error": {
                  "code": "StorageException",
                  "message": "Transient fault occurred while querying Microsoft Azure storage services. Please try again later."
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#get-analyze-id-document-result"
        }
      }
    },
    "/{connectionId}/documentModels/{modelId}:analyze": {
      "post": {
        "description": "Extract key-value pairs, tables, and semantic values from a given document (v3.0 API).",
        "operationId": "AnalyzeDocumentV30",
        "summary": "Analyze Document for Prebuilt or Custom models (v3.0 API)",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Form Recognizer API version.",
            "required": true,
            "type": "string",
            "default": "2022-08-31",
            "x-ms-summary": "Form Recognizer API Version",
            "x-ms-visibility": "internal"
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Prebuilt modelIds: prebuilt-read, prebuilt-layout, prebuilt-document, prebuilt-businessCard, prebuilt-idDocument, prebuilt-invoice, prebuilt-receipt, prebuilt-tax.us.w2, prebuilt-vaccinationCard, prebuilt-healthInsuranceCard.us. Custom modelId format - [a-zA-Z0-9][a-zA-Z0-9._~-]{1,63}. Unique model name.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Model Identifier",
            "x-ms-visibility": "important"
          },
          {
            "name": "pages",
            "in": "query",
            "description": "The page selection for multi-page PDF and TIFF documents, to extract Invoice information from individual pages and a range of pages (like page 2, and pages 5-7) by entering the page numbers and ranges separated by commas (e.g. '2, 5-7'). If not set, all pages will be processed.",
            "type": "string",
            "x-ms-summary": "Pages",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale hint for text recognition and document analysis.  Value may contain only the language code (ex. \"en\", \"fr\") or BCP 47 language tag (ex. \"en-US\").",
            "type": "string",
            "x-ms-summary": "Locale",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "stringIndexType",
            "in": "query",
            "description": "Method used to compute string offset and length. Supported options: textElements, unicodeCodePoint, utf16CodeUnit.",
            "type": "string",
            "enum": [
              "textElements",
              "unicodeCodePoint",
              "utf16CodeUnit"
            ],
            "x-ms-summary": "String Index Type",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "inputFileContent",
            "required": false,
            "schema": {
              "format": "binary",
              "type": "string"
            },
            "description": "A PDF document or image (JPG, PNG, BMP, TIFF) file to analyze.",
            "x-ms-summary": "Document/Image File Content",
            "x-ms-visibility": "important"
          },
          {
            "in": "header",
            "name": "inputFileUrl",
            "required": false,
            "type": "string",
            "description": "Url path for input file. Alternative to Document/Image File Content.",
            "x-ms-summary": "Document/Image URL",
            "x-ms-visibility": "important"
          }
        ],
        "consumes": [
          "application/json",
          "application/octet-stream",
          "application/pdf",
          "image/jpeg",
          "image/png",
          "image/tiff",
          "image/bmp",
          "text/html",
          "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.openxmlformats-officedocument.presentationml.presentation"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/AnalyzeResultOperation_V30"
            }
          },
          "202": {
            "description": "The service has accepted the request and will start processing soon.  The client can query the operation status and result using the URL specified in the 'Operation-Location' response header.  The URL expires in 24 hours.",
            "headers": {
              "Operation-Location": {
                "type": "string",
                "description": "URL containing the resultId used to track the progress and obtain the result of the analyze operation."
              }
            },
            "schema": {
              "$ref": "#/definitions/AnalyzeResultOperation_V30"
            }
          },
          "400": {
            "description": "Bad request error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_V30"
            }
          },
          "404": {
            "description": "Model not found.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_V30"
            }
          },
          "415": {
            "description": "Unsupported media type error. 'Content-Type' does not match the POST content.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_V30"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_V30"
            }
          },
          "503": {
            "description": "Transient fault.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_V30"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#analyze-document-for-prebuilt-or-custom-models-(v3.0-api)"
        }
      }
    },
    "/{connectionId}/documentModels/{modelId}/analyzeResults/{resultId}": {
      "get": {
        "description": "Obtain current status and the result of the analyze document operation (v3.0 API).",
        "operationId": "GetAnalyzeDocumentResultV30",
        "x-ms-visibility": "internal",
        "summary": "Get Analyze Document Results for Prebuilt or Custom models (v3.0 API)",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Form Recognizer API version.",
            "type": "string",
            "required": true,
            "default": "2022-08-31",
            "x-ms-summary": "Form Recognizer API Version",
            "x-ms-visibility": "internal"
          },
          {
            "name": "modelId",
            "in": "path",
            "description": "Prebuilt modelIds: prebuilt-read, prebuilt-layout, prebuilt-document, prebuilt-businessCard, prebuilt-idDocument, prebuilt-invoice, prebuilt-receipt, prebuilt-tax.us.w2, prebuilt-vaccinationCard, prebuilt-healthInsuranceCard.us. Custom modelId: uuid Model identifier.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Model Identifier",
            "x-ms-visibility": "important"
          },
          {
            "name": "resultId",
            "in": "path",
            "description": "Format - uuid. Analyze operation result identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "JSON fields in the response body.",
            "schema": {
              "$ref": "#/definitions/AnalyzeResultOperation_V30"
            },
            "examples": {
              "application/json": {}
            }
          },
          "404": {
            "description": "Invalid or expired result identifier.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_V30"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_V30"
            }
          },
          "503": {
            "description": "Transient fault.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse_V30"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/formrecognizer/#get-analyze-document-results-for-prebuilt-or-custom-models-(v3.0-api)"
        }
      }
    }
  },
  "produces": [],
  "responses": {},
  "schemes": [
    "https"
  ],
  "security": [
    {
      "apiKeyHeader": []
    },
    {
      "apiKeyQuery": []
    }
  ],
  "securityDefinitions": {
    "apiKeyHeader": {
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key",
      "type": "apiKey"
    },
    "apiKeyQuery": {
      "in": "query",
      "name": "subscription-key",
      "type": "apiKey"
    }
  },
  "swagger": "2.0",
  "tags": [],
  "x-servers": [
    {
      "url": "https://cognitiveusw2prod.cognitiveservices.azure.com"
    },
    {
      "url": "https://cognitiveusw2prod-westus2-01.regional.azure-api.net"
    },
    {
      "url": "https://westus2.api.cognitive.microsoft.com"
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://aka.ms/formrecognizer"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://aka.ms/form-recognizer/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "AI;Business Intelligence"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/formrecognizer"
  }
}
