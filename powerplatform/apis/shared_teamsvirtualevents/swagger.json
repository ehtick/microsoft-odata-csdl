{
  "swagger": "2.0",
  "info": {
    "version": "1.0.4",
    "title": "Microsoft Teams Virtual Events",
    "description": "Microsoft Teams Virtual Events allows you to access Virtual Event data and be notified of changes.",
    "x-ms-api-annotation": {
      "status": "Preview"
    },
    "contact": {
      "name": "J. Markham",
      "email": "jmarkham@microsoft.com"
    }
  },
  "host": "europe-002.azure-apim.net",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{connectionId}/beta/solutions/virtualEvents/webinars/{eventId}": {
      "get": {
        "summary": "Get a Virtual Event",
        "description": "Gets a Virtual Event",
        "operationId": "GetVirtualEvent",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/eventId__in_path"
          }
        ],
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/Event"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#get-a-virtual-event"
        }
      }
    },
    "/{connectionId}/beta/solutions/virtualEvents/webinars/{eventId}/sessions/{sessionId}": {
      "get": {
        "summary": "Get a Virtual Event Session",
        "description": "Gets a Virtual Event Session",
        "operationId": "GetVirtualEventSession",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/eventId__in_path"
          },
          {
            "$ref": "#/parameters/sessionId__in_path"
          }
        ],
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/EventSession"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#get-a-virtual-event-session"
        }
      }
    },
    "/{connectionId}/beta/solutions/virtualEvents/webinars/{eventId}/registration/registrants/{registrationId}": {
      "get": {
        "summary": "Get a Virtual Event Session Registration",
        "description": "Gets a Virtual Event Session Registration",
        "operationId": "GetVirtualEventSessionRegistration",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/eventId__in_path"
          },
          {
            "$ref": "#/parameters/registrationId__in_path"
          }
        ],
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/EventSessionRegistration"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#get-a-virtual-event-session-registration"
        }
      }
    },
    "/{connectionId}/beta/solutions/virtualEvents/webinars/{eventId}/sessions/{sessionId}/attendanceReports": {
      "get": {
        "summary": "Get a Virtual Event Session Attendance Report ID",
        "description": "Gets a Virtual Event Session Attendance ID",
        "operationId": "GetVirtualEventSessionAttendanceReport",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/eventId__in_path"
          },
          {
            "$ref": "#/parameters/sessionId__in_path"
          }
        ],
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/EventSessionAttendanceReportResponse"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#get-a-virtual-event-session-attendance-report-id"
        }
      }
    },
    "/{connectionId}/beta/solutions/virtualEvents/webinars/{eventId}/sessions/{sessionId}/attendanceReports/{reportId}/attendanceRecords": {
      "get": {
        "summary": "Get Virtual Event Session Attendance Report Records by ID",
        "description": "Gets a Virtual Event Session Attendance Records by ID",
        "operationId": "GetVirtualEventSessionAttendanceReportRecords",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/eventId__in_path"
          },
          {
            "$ref": "#/parameters/sessionId__in_path"
          },
          {
            "$ref": "#/parameters/reportId__in_path"
          }
        ],
        "x-ms-visibility": "important",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/EventSessionAttendanceRecords"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#get-virtual-event-session-attendance-report-records-by-id"
        }
      }
    },
    "/{connectionId}/simulate/trigger/": {
      "get": {
        "summary": "Simulates a trigger response",
        "description": "Simulate a trigger response",
        "operationId": "SimulateTrigger",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OnVirtualEventTriggerResponseItem"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#simulates-a-trigger-response"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "x-ms-visibility": "internal"
    },
    "/{connectionId}/testsubscription/webinar/{eventId}/session/{sessionId}": {
      "post": {
        "tags": [
          "Teams Virtual Events"
        ],
        "summary": "When a change occurs to a Teams Virtual Event webinar, session or attendee",
        "description": "Triggers a flow when a Virtual Event change occurs.",
        "operationId": "TestSubscription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/eventId__in_path"
          },
          {
            "$ref": "#/parameters/sessionId__in_path"
          },
          {
            "name": "sublist",
            "in": "query",
            "description": "The subscription list",
            "required": false,
            "x-ms-summary": "The list of subscriptions, comma separated",
            "type": "string"
          },
          {
            "name": "subend",
            "in": "query",
            "description": "The subscription end datetime",
            "required": false,
            "x-ms-summary": "The end date time ",
            "type": "string"
          },
          {
            "name": "uri",
            "in": "query",
            "description": "The notificaton URL, needed for re-subscription",
            "required": false,
            "x-ms-summary": "The notification URL",
            "type": "string"
          },
          {
            "name": "clientSubscription",
            "required": false,
            "in": "body",
            "description": "Client subscription body",
            "x-ms-summary": "The subscription",
            "schema": {
              "$ref": "#/definitions/ClientSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OnVirtualEventTriggerResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#when-a-change-occurs-to-a-teams-virtual-event-webinar%2c-session-or-attendee"
        }
      },
      "x-ms-notification-content": {
        "description": "Details for Webhook",
        "schema": {
          "$ref": "#/definitions/OnVirtualEventTriggerResponse"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/trigger/teamsve/webinar/{eventId}/session/{sessionId}": {
      "post": {
        "tags": [
          "Teams Virtual Events"
        ],
        "summary": "When a change occurs to a Teams Virtual Event webinar, session or attendee",
        "description": "Triggers a flow when a Virtual Event change occurs.",
        "operationId": "TriggerForVirtualEventChange",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/eventId__in_path"
          },
          {
            "$ref": "#/parameters/sessionId__in_path"
          },
          {
            "name": "sublist",
            "in": "query",
            "description": "The subscription list",
            "required": false,
            "x-ms-summary": "The list of subscriptions, comma separated",
            "type": "string"
          },
          {
            "name": "subend",
            "in": "query",
            "description": "The subscription end datetime",
            "required": false,
            "x-ms-summary": "The end date time ",
            "type": "string"
          },
          {
            "name": "uri",
            "in": "query",
            "description": "The notificaton URL, needed for re-subscription",
            "required": false,
            "x-ms-summary": "The notification URL",
            "type": "string"
          },
          {
            "name": "clientSubscription",
            "required": false,
            "in": "body",
            "description": "Client subscription body",
            "x-ms-summary": "The subscription",
            "schema": {
              "$ref": "#/definitions/ClientSubscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OnVirtualEventTriggerResponse"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-trigger": "batch",
        "x-ms-no-generic-test": true,
        "x-ms-visibility": "important",
        "x-ms-trigger-hint": "To see it work now, change a virtual event, session or register an attendee.",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#when-a-change-occurs-to-a-teams-virtual-event-webinar%2c-session-or-attendee"
        }
      },
      "x-ms-notification-content": {
        "description": "Details for Webhook",
        "schema": {
          "$ref": "#/definitions/OnVirtualEventTriggerResponse"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/pollended/webinar/{eventId}/session/{sessionId}": {
      "get": {
        "summary": "Check to see if the session has ended",
        "description": "Check to see if the session has ended.",
        "x-ms-visibility": "internal",
        "operationId": "PollEventEnded",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/eventId__in_path"
          },
          {
            "$ref": "#/parameters/sessionId__in_path"
          }
        ],
        "responses": {
          "201": {
            "description": "Polling Initiated"
          },
          "default": {
            "description": "Operation Failed",
            "schema": {}
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#check-to-see-if-the-session-has-ended"
        }
      }
    },
    "/{connectionId}/pollattendancereportready/webinar/{eventId}/session/{sessionId}": {
      "get": {
        "summary": "Check to see if the attendance report is ready",
        "description": "Check if attendance report is ready.",
        "x-ms-visibility": "important",
        "operationId": "PollAttendanceReportReady",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/eventId__in_path"
          },
          {
            "$ref": "#/parameters/sessionId__in_path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Attendance Report Ready Response",
            "schema": {
              "$ref": "#/definitions/AttendanceReportReadyResponse"
            }
          },
          "default": {
            "description": "Operation Failed",
            "schema": {}
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#check-to-see-if-the-attendance-report-is-ready"
        }
      }
    },
    "/{connectionId}/beta/subscriptions/{subscriptionIds}": {
      "delete": {
        "summary": "Delete WebHook Subscription",
        "x-ms-summary": "Delete WebHook Subscription",
        "description": "Delete WebHook Subscription",
        "operationId": "DeleteWebHookSubscription",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subscriptionIds",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "x-ms-visibility": "internal",
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#delete-webhook-subscription"
        }
      },
      "patch": {
        "summary": "Update subscription",
        "x-ms-summary": "Renew WebHook Subscription",
        "description": "Renew a Microsoft Graph webhook subscription by updating its expiration time.",
        "operationId": "RenewWebHookSubscription",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subscriptionIds",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "expirationDateTime": {
                  "type": "string",
                  "description": "Specify the date and time, in UTC format, of when the Microsoft Graph webhook subscription expires. The maximum expiration time for security alerts is 43200 minutes (under 30 days).",
                  "title": "Expiration date time",
                  "x-ms-visibility": "important"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "x-ms-visibility": "internal",
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#update-subscription"
        }
      }
    },
    "/whr": {
      "post": {
        "summary": "Proxy endpoint to validate subscriptions and forward notifications",
        "description": "Proxy endpoint that receives notifications from the GraphAPI and validates subscriptions.",
        "operationId": "TeamsVEWebhookResponse",
        "parameters": [],
        "responses": {
          "default": {
            "description": "OK"
          }
        },
        "deprecated": false,
        "security": [],
        "x-ms-visibility": "internal",
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/teamsvirtualevents/#proxy-endpoint-to-validate-subscriptions-and-forward-notifications"
        }
      }
    }
  },
  "definitions": {
    "BooleanString": {
      "type": "string",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum-values": [
        {
          "displayName": "True",
          "value": "true"
        },
        {
          "displayName": "False",
          "value": "false"
        }
      ]
    },
    "NullableBooleanString": {
      "type": "string",
      "x-nullable": "true",
      "enum": [
        "true",
        "false"
      ],
      "x-ms-enum-values": [
        {
          "displayName": "True",
          "value": "true"
        },
        {
          "displayName": "False",
          "value": "false"
        }
      ]
    },
    "ChangeType": {
      "type": "string",
      "enum": [
        "created",
        "changed",
        "deleted"
      ],
      "x-ms-enum-values": [
        {
          "displayName": "Created",
          "value": "created"
        },
        {
          "displayName": "Changed",
          "value": "changed"
        },
        {
          "displayName": "Deleted",
          "value": "deleted"
        }
      ]
    },
    "SubscriptionRequestItem": {
      "type": "object",
      "properties": {
        "changeType": {
          "$ref": "#/definitions/ChangeType"
        },
        "notificationUrl": {
          "type": "string"
        },
        "lifecycleNotificationUrl": {
          "type": "string"
        },
        "resource": {
          "type": "string",
          "format": "string"
        },
        "expirationDateTime": {
          "type": "string"
        },
        "clientState": {
          "type": "string"
        }
      }
    },
    "SubscriptionRequest": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SubscriptionRequestItem"
      }
    },
    "SubscriptionRequestResponseBody": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "applicationId": {
          "type": "string"
        },
        "changeType": {
          "$ref": "#/definitions/ChangeType"
        },
        "clientState": {
          "type": "string"
        },
        "notificationUrl": {
          "type": "string"
        },
        "expirationDateTime": {
          "type": "string"
        },
        "creatorId": {
          "type": "string"
        },
        "latestSupportedTlsVersion": {
          "type": "string"
        },
        "notificationContentType": {
          "type": "string"
        },
        "notificationQueryOptions": {
          "type": "string"
        },
        "lifecycleNotificationUrl": {
          "type": "string"
        },
        "encryptionCertificate": {
          "type": "string"
        },
        "encryptionCertificateId": {
          "type": "string"
        },
        "notificationUrlAppId": {
          "type": "string"
        }
      }
    },
    "SubscriptionResponseHeaders": {
      "type": "object",
      "properties": {
        "Location": {
          "type": "string"
        },
        "Cache-Control": {
          "type": "string"
        },
        "OData-Version": {
          "type": "string"
        },
        "Content-Type": {
          "type": "string"
        }
      }
    },
    "SubscriptionRequestResponseItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "headers": {
          "type": "object",
          "$ref": "#/definitions/SubscriptionResponseHeaders"
        },
        "body": {
          "type": "object",
          "$ref": "#/definitions/SubscriptionRequestResponseBody"
        }
      }
    },
    "SubscriptionRequestResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubscriptionRequestResponseItem"
          }
        },
        "notificationType": {
          "type": "string"
        },
        "renewInterval": {
          "type": "string"
        }
      }
    },
    "AttendanceReportReadyResponse": {
      "type": "object",
      "properties": {
        "attendanceReportReady": {
          "type": "boolean"
        },
        "attendanceReportId": {
          "type": "string"
        }
      }
    },
    "ClientSubscription": {
      "description": "Describes the subscription information for webhook.",
      "required": [
        "NotificationURL"
      ],
      "type": "object",
      "properties": {
        "NotificationURL": {
          "description": "Callback url to the flow engine. Expected as part of the request and provided by Flow.",
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-notification-url": true
        }
      }
    },
    "VirtualEventNotification": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string"
        },
        "clientState": {
          "type": "string"
        },
        "changeType": {
          "$ref": "#/definitions/ChangeType"
        },
        "tenantId": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "subscriptionExpirationDateTime": {
          "type": "string"
        },
        "resourceData": {
          "type": "object",
          "properties": {
            "@odata.id": {
              "type": "string"
            },
            "@odata.type": {
              "type": "string"
            },
            "id": {
              "type": "string"
            }
          }
        }
      }
    },
    "EventDateTime": {
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string",
          "description": "yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)"
        },
        "timeZone": {
          "type": "string",
          "description": "The timezone (windows format"
        }
      }
    },
    "EventUser": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "id": {
          "type": "string",
          "description": "ID of the user",
          "x-ms-summary": "Id",
          "x-ms-visibility": "important"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the user.",
          "x-ms-summary": "Id",
          "x-ms-visibility": "important"
        },
        "tenantId": {
          "type": "string",
          "description": "TenantID where the user is.",
          "x-ms-summary": "Id",
          "x-ms-visibility": "important"
        }
      }
    },
    "EventStatus": {
      "type": "string",
      "description": "The status of the event",
      "enum": [
        "published",
        "draft",
        "ended",
        "canceled"
      ],
      "x-ms-enum-values": [
        {
          "displayName": "Published",
          "value": "published"
        },
        {
          "displayName": "Draft",
          "value": "draft"
        },
        {
          "displayName": "Ended",
          "value": "ended"
        },
        {
          "displayName": "Canceled",
          "value": "canceled"
        }
      ]
    },
    "EventAudience": {
      "type": "string",
      "description": "Audience for the Event",
      "enum": [
        "everyone",
        "organization"
      ],
      "x-ms-enum-values": [
        {
          "displayName": "Everyone",
          "value": "everyone"
        },
        {
          "displayName": "Organization",
          "value": "organization"
        }
      ]
    },
    "EventIdentity": {
      "type": "object",
      "description": "Event Identity (user, presenter, attendee)",
      "properties": {
        "application": {
          "type": "string",
          "description": "The application that created identity. May be null",
          "x-nullable": "true"
        },
        "device": {
          "type": "string",
          "description": "The device the identifywas created on. May be NULL",
          "x-nullable": "true"
        },
        "user": {
          "$ref": "#/definitions/EventUser"
        }
      }
    },
    "EventAutoAdmittedUsersRole": {
      "type": "string",
      "enum": [
        "everyoneInCompany",
        "everyone"
      ]
    },
    "EventAttendeeRole": {
      "type": "string",
      "enum": [
        "attendee",
        "presenter",
        "producer",
        "co-organizer"
      ],
      "x-ms-enum-values": [
        {
          "displayName": "Attendee",
          "value": "attendee"
        },
        {
          "displayName": "Presenter",
          "value": "presenter"
        },
        {
          "displayName": "Producer",
          "value": "producer"
        },
        {
          "displayName": "Co-Organizer",
          "value": "co-organizer"
        }
      ]
    },
    "EventSessionAttendanceInterval": {
      "type": "object",
      "properties": {
        "joinDateTime": {
          "type": "string"
        },
        "leaveDateTime": {
          "type": "string"
        },
        "durationInSeconds": {
          "type": "number"
        }
      }
    },
    "EventSessionAttendanceReportResponse": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "totalParticipantCount": {
          "type": "number"
        },
        "meetingStartDateTime": {
          "type": "string"
        },
        "meetingEndDateTime": {
          "type": "string"
        }
      }
    },
    "EventSessionAttendanceRecord": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "totalAttendanceInSeconds": {
          "type": "number"
        },
        "role": {
          "$ref": "#/definitions/EventAttendeeRole"
        },
        "registrantId": {
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/EventIdentity"
        },
        "attendanceIntervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventSessionAttendanceInterval"
          }
        }
      }
    },
    "EventSessionAttendanceRecords": {
      "type": "object",
      "properties": {
        "@odata.context": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventSessionAttendanceRecord"
          }
        }
      }
    },
    "EventCoOrganizers": {
      "description": "The co-organizers for an event.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/EventUser"
      },
      "x-nullable": "true"
    },
    "EventSessionCapability": {
      "type": "object",
      "properties": {
        "allowAnonymousUsersToDialOut": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "autoAdmittedUsers": {
          "$ref": "#/definitions/EventAutoAdmittedUsersRole"
        },
        "allowAnonymousUsersToStartMeeting": {
          "$ref": "#/definitions/NullableBooleanString"
        }
      }
    },
    "EventBroadcastMeetingAudience": {
      "type": "string",
      "enum": [
        "roleIsAttendee",
        "organization",
        "everyone"
      ]
    },
    "EventBroadcastMeetingCaptionSettings": {
      "type": "object",
      "properties": {
        "isCaptionEnabled": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "spokenLanguage": {
          "type": "string",
          "x-nullable": "true"
        },
        "translationLanguages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EventSessionBroadcastMeetingSettings": {
      "type": "object",
      "properties": {
        "allowedAudience": {
          "$ref": "#/definitions/EventBroadcastMeetingAudience"
        },
        "isRecordingEnabled": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "isVideoOnDemandEnabled": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "isQuestionAndAnswerEnabled": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "isAttendeeReportEnabled": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "captions": {
          "$ref": "#/definitions/EventBroadcastMeetingCaptionSettings"
        }
      }
    },
    "EventSessionAttendee": {
      "description": "Attendee for an Event Session",
      "type": "object",
      "properties": {
        "upn": {
          "type": "string",
          "description": "UPN for the attendee"
        },
        "role": {
          "description": "Role of the attendee",
          "$ref": "#/definitions/EventAttendeeRole"
        },
        "identity": {
          "$ref": "#/definitions/EventIdentity"
        }
      }
    },
    "EventSessionMeetingLobbyBypassScope": {
      "type": "string",
      "enum": [
        "organizer",
        "organization",
        "organizationAndFederated",
        "everyone",
        "invited",
        "organizationExcludingGuests"
      ]
    },
    "EventSessionMeetingLobbyBypassOptions": {
      "type": "object",
      "properties": {
        "scope": {
          "$ref": "#/definitions/EventSessionMeetingLobbyBypassScope"
        },
        "isDialInBypassEnabled": {
          "$ref": "#/definitions/NullableBooleanString"
        }
      }
    },
    "EventSessionMeetingAudioConferencing": {
      "type": "object",
      "properties": {
        "conferenceId": {
          "type": "string",
          "x-nullable": "true"
        },
        "tollNumber": {
          "type": "string",
          "x-nullable": "true"
        },
        "tollNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tollFreeNumber": {
          "type": "string",
          "x-nullable": "true"
        },
        "tollFreeNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dialinUrl": {
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "EventSessionMeetingWatermarkProtectionValues": {
      "type": "object",
      "properties": {
        "isEnabledForContentSharing": {
          "$ref": "#/definitions/BooleanString"
        },
        "isEnabledForVideo": {
          "$ref": "#/definitions/BooleanString"
        }
      }
    },
    "EventSessionMeetingParticipants": {
      "type": "object",
      "properties": {
        "organizer": {
          "$ref": "#/definitions/EventSessionAttendee"
        },
        "attendees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventSessionAttendee"
          }
        }
      }
    },
    "EventSessionMeetingJoinSettings": {
      "type": "object",
      "properties": {
        "isPasscodeRequired": {
          "$ref": "#/definitions/BooleanString"
        },
        "joinMeetingId": {
          "type": "string",
          "x-nullable": "true"
        },
        "passcode": {
          "type": "string",
          "x-nullable": "true"
        }
      }
    },
    "EventSessionMeetingChatInfo": {
      "type": "object",
      "properties": {
        "threadId": {
          "type": "string",
          "x-nullable": "true"
        },
        "messageId": {
          "type": "string",
          "x-nullable": "true"
        },
        "replyChainMessageId": {
          "type": "string",
          "x-nullable": "true"
        }
      }
    },
    "EventRegistrationAnswer": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "x-nullable": "true"
        },
        "value": {
          "type": "string",
          "x-nullable": "true"
        },
        "booleanValue": {
          "type": "boolean"
        },
        "multiChoiceValues": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-nullable": "true"
        }
      }
    },
    "EventSession": {
      "description": "Session for a Virtual Event",
      "type": "object",
      "properties": {
        "@odata-context": {
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "id": {
          "description": "Id of the session",
          "type": "string"
        },
        "subject": {
          "description": "Subject/Description of the session",
          "type": "string"
        },
        "creationDateTime": {
          "description": "Creation datetime for the session",
          "$ref": "#/definitions/EventDateTime",
          "x-nullable": "true"
        },
        "startDateTime": {
          "description": "Start datetime for the session",
          "$ref": "#/definitions/EventDateTime"
        },
        "endDateTime": {
          "description": "End datetime for the session",
          "$ref": "#/definitions/EventDateTime"
        },
        "joinUrl": {
          "type": "string",
          "x-nullable": true
        },
        "joinWebUrl": {
          "type": "string",
          "x-nullable": true
        },
        "isBroadcast": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "isEntryExitAnnounced": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "allowedPresenters": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "allowMeetingChat": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "allowTeamworkReactions": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "allowAttendeeToEnableMic": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "allowAttendeeToEnableCamera": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "recordAutomatically": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "anonymizeIdentityForRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventAttendeeRole"
          }
        },
        "capabilities": {
          "$ref": "#/definitions/EventSessionCapability"
        },
        "videoTeleconferenceId": {
          "type": "string",
          "x-nullable": "true"
        },
        "externalId": {
          "type": "string",
          "x-nullable": "true"
        },
        "allowParticipantsToChangeName": {
          "$ref": "#/definitions/NullableBooleanString"
        },
        "broadcastSettings": {
          "$ref": "#/definitions/EventSessionBroadcastMeetingSettings"
        },
        "lobbyBypassSettings": {
          "$ref": "#/definitions/EventSessionMeetingLobbyBypassOptions"
        },
        "audioConferencing": {
          "$ref": "#/definitions/EventSessionMeetingAudioConferencing"
        },
        "joinInformation": {
          "type": "object"
        },
        "watermarkProtection": {
          "$ref": "#/definitions/EventSessionMeetingWatermarkProtectionValues"
        },
        "participants": {
          "type": "object",
          "properties": {
            "organizer": {
              "$ref": "#/definitions/EventIdentity"
            },
            "attendees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventSessionAttendee"
              }
            }
          }
        },
        "producers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventIdentity"
          }
        },
        "contributors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventIdentity"
          }
        },
        "joinMeetingIdSettings": {
          "$ref": "#/definitions/EventSessionMeetingJoinSettings"
        },
        "chatInfo": {
          "$ref": "#/definitions/EventSessionMeetingChatInfo"
        }
      }
    },
    "EventSessionRegistrationStatus": {
      "type": "string",
      "enum": [
        "registered",
        "canceled",
        "processing"
      ]
    },
    "EventSessionRegistration": {
      "type": "object",
      "description": "Attendee registration data",
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/EventSessionRegistrationStatus"
        },
        "registrationDateTime": {
          "$ref": "#/definitions/EventDateTime",
          "x-nullable": "true"
        },
        "cancelationDateTime": {
          "$ref": "#/definitions/EventDateTime",
          "x-nullable": "true"
        },
        "registrationQuestionAnswers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventRegistrationAnswer"
          },
          "x-nullable": "true"
        }
      }
    },
    "Event": {
      "type": "object",
      "description": "Virtual Event",
      "properties": {
        "@odata.context": {
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "id": {
          "type": "string",
          "description": "Id of the Virtual Event"
        },
        "status": {
          "type": "object",
          "description": "The status of the event",
          "$ref": "#/definitions/EventStatus"
        },
        "displayName": {
          "type": "string",
          "description": "The name of the event."
        },
        "description": {
          "type": "string",
          "description": "The description of the event"
        },
        "audience": {
          "description": "The audience for the event.",
          "$ref": "#/definitions/EventAudience"
        },
        "startDateTime": {
          "description": "The start time of the event",
          "$ref": "#/definitions/EventDateTime"
        },
        "endDateTime": {
          "description": "The end time of the event",
          "$ref": "#/definitions/EventDateTime"
        },
        "createdBy": {
          "description": "Who the event was created by",
          "$ref": "#/definitions/EventIdentity"
        },
        "organizers": {
          "description": "The co-organizer for the event",
          "x-nullable": "true",
          "$ref": "#/definitions/EventCoOrganizers"
        }
      }
    },
    "OnVirtualEventTriggerResourceItem": {
      "type": "object",
      "properties": {
        "@odata.id": {
          "type": "string"
        },
        "@odata.type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "OnVirtualEventTriggerResponseItem": {
      "type": "object",
      "properties": {
        "subscriptionId": {
          "type": "string"
        },
        "clientState": {
          "type": "string"
        },
        "changeType": {
          "type": "string",
          "enum": [
            "created",
            "updated",
            "deleted"
          ]
        },
        "tenantId": {
          "type": "string"
        },
        "subscriptionExiprationDateTime": {
          "type": "string"
        },
        "resourceData": {
          "type": "object",
          "$ref": "#/definitions/OnVirtualEventTriggerResourceItem"
        }
      }
    },
    "OnVirtualEventTriggerResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnVirtualEventTriggerResponseItem"
          }
        }
      }
    }
  },
  "parameters": {
    "eventId__in_path": {
      "name": "eventId",
      "in": "path",
      "required": true,
      "x-ms-summary": "Virtual Event",
      "x-ms-test-value": "c01c8110-4b1a-47f8-860e-c675dc79dcb0@72f988bf-86f1-41af-91ab-2d7cd011db47",
      "description": "Get Virtual Event by ID",
      "type": "string",
      "x-ms-url-encoding": "single"
    },
    "sessionId__in_path": {
      "name": "sessionId",
      "in": "path",
      "required": true,
      "x-ms-summary": "Virtual Event Session",
      "x-ms-test-value": "72f988bf-86f1-41af-91ab-2d7cd011db47",
      "description": "Get Virtual Event Session by ID",
      "type": "string",
      "x-ms-url-encoding": "single"
    },
    "registrationId__in_path": {
      "name": "registrationId",
      "in": "path",
      "required": true,
      "x-ms-summary": "Virtual Event Attendee Registration",
      "x-ms-test-value": "72f988bf-86f1-41af-91ab-2d7cd011db47",
      "description": "Get Virtual Event Attendee Registration by ID",
      "type": "string",
      "x-ms-url-encoding": "single"
    },
    "reportId__in_path": {
      "name": "reportId",
      "in": "path",
      "required": true,
      "x-ms-summary": "Virtual Event Attendance Report Id",
      "x-ms-test-value": "72f988bf-86f1-41af-91ab-2d7cd011db47",
      "description": "Virtual Event Attendance Report ID",
      "type": "string",
      "x-ms-url-encoding": "single"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://products.office.com/microsoft-teams/group-chat-software"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://documents.marketo.com/legal/privacy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Social Media"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/teamsvirtualevents"
  },
  "basePath": "/apim/teamsvirtualevents"
}
