{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Trello",
    "description": "Trello gives you perspective over all your projects, at work and at home.  It is an easy, free, flexible, and visual way to manage your projects and organize anything.  Connect to Trello to manage your boards, lists and cards.",
    "x-ms-api-annotation": {
      "status": "Production"
    },
    "contact": {
      "name": "Microsoft"
    }
  },
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/trello",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectionId}/trigger/boards/{board_id}/cards": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "When a new card is added to a board",
        "description": "Triggers a flow when a new card is added to a board.",
        "operationId": "OnNewCardInBoard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique id of the board.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Card"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, add a card to the selected Trello board.",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "OnNewCardInBoard",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#when-a-new-card-is-added-to-a-board-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/trigger/lists/{list_id}/cards": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "When a new card is added to a list",
        "description": "Triggers a flow when a new card is added to a list.",
        "operationId": "OnNewCardInList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The unique id of the board.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id of the list in the specified board.",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-dynamic-values": {
              "operationId": "ListListsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Card"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, add a card to the selected Trello list.",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "OnNewCardInList",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#when-a-new-card-is-added-to-a-list-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v2/trigger/boards/{board_id}/actions": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "When a new card is added to a board (V2)",
        "description": "Triggers a flow when a new card is added to a board.",
        "operationId": "OnNewCardInBoardV2",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique id of the board.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CardInAction"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, add a card to the selected Trello board.",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "OnNewCardInBoard",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#when-a-new-card-is-added-to-a-board-(v2)"
        }
      }
    },
    "/{connectionId}/v2/trigger/lists/{list_id}/actions": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "When a new card is added to a list (V2)",
        "description": "Triggers a flow when a new card is added to a list.",
        "operationId": "OnNewCardInListV2",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The unique id of the board.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id of the list in the specified board.",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-dynamic-values": {
              "operationId": "ListListsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CardInAction"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, add a card to the selected Trello list.",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "OnNewCardInList",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#when-a-new-card-is-added-to-a-list-(v2)"
        }
      }
    },
    "/{connectionId}/v3/trigger/boards/{board_id}/actions": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "When a new card is added to a board (V3)",
        "description": "Triggers a flow when a new card is added to a board.",
        "operationId": "OnNewCardInBoardV3",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique board id.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CardInAction"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, add a card to the selected Trello board.",
        "x-ms-notification": {
          "operationId": "CreateOnBoardChangesSubscription"
        },
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "OnNewCardInBoard",
          "revision": 3
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#when-a-new-card-is-added-to-a-board-(v3)"
        }
      }
    },
    "/{connectionId}/v3/trigger/lists/{list_id}/actions": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "When a new card is added to a list (V3)",
        "description": "Triggers a flow when a new card is added to a list.",
        "operationId": "OnNewCardInListV3",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The unique id of the board.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id of the list in the specified board.",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-dynamic-values": {
              "operationId": "ListListsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CardInAction"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, add a card to the selected Trello list.",
        "x-ms-notification": {
          "operationId": "CreateOnListChangesSubscription"
        },
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "OnNewCardInList",
          "revision": 3
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#when-a-new-card-is-added-to-a-list-(v3)"
        }
      }
    },
    "/{connectionId}/OnBoardChangesSubscription/{board_id}": {
      "post": {
        "tags": [
          "BoardChangesSubscription"
        ],
        "summary": "Create a webhook subscription for the trigger when a board is changed",
        "description": "Create a webhook subscription for the trigger when a board is changed.",
        "operationId": "CreateOnBoardChangesSubscription",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subscription",
            "in": "body",
            "description": "The subscription.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientSubscription"
            },
            "x-ms-summary": "The subscription"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique board id.",
            "required": true,
            "x-ms-summary": "Board Id",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Subscription Created",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#create-a-webhook-subscription-for-the-trigger-when-a-board-is-changed"
        }
      },
      "x-ms-notification-content": {
        "description": "Poke notification",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/OnListChangesSubscription/{list_id}": {
      "post": {
        "tags": [
          "ListChangesSubscription"
        ],
        "summary": "Create a webhook subscription for the trigger when a list is changed",
        "description": "Create a webhook subscription for the trigger when a list is changed.",
        "operationId": "CreateOnListChangesSubscription",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "subscription",
            "in": "body",
            "description": "The subscription.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientSubscription"
            },
            "x-ms-summary": "The subscription"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The unique id of the board.",
            "required": true,
            "x-ms-summary": "Board Id",
            "type": "string"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id of the list in the specified board.",
            "required": true,
            "x-ms-summary": "List Id",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Subscription Created",
            "schema": {
              "$ref": "#/definitions/SubscriptionResponse"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#create-a-webhook-subscription-for-the-trigger-when-a-list-is-changed"
        }
      },
      "x-ms-notification-content": {
        "description": "Poke notification",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/OnChangesSubscription/{id}": {
      "delete": {
        "tags": [
          "ChangesSubscription"
        ],
        "summary": "Delete subscription",
        "description": "This operation deletes a subscription.",
        "operationId": "DeleteOnChangesSubscription",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of subscription to be deleted.",
            "required": true,
            "x-ms-summary": "Id of subscription to be deleted",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#delete-subscription"
        }
      },
      "patch": {
        "tags": [
          "ChangesSubscription"
        ],
        "summary": "Update webhook",
        "description": "Update webhook with renew interval.",
        "operationId": "RenewOnChangesSubscription",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Id of subscription to be renewed.",
            "required": true,
            "x-ms-summary": "Id of subscription to be renewed",
            "type": "string"
          },
          {
            "name": "subscription",
            "in": "body",
            "description": "The subscription.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientSubscription"
            },
            "x-ms-summary": "The subscription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Subscription Created"
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#update-webhook"
        }
      }
    },
    "/{connectionId}/boards/{board_id}/cards": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "List the cards in a board",
        "description": "List the cards matching the query parameters in a specific board.",
        "operationId": "ListCards",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique id of the board.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "actions",
            "in": "query",
            "description": "The list the actions to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Actions",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "attachments",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to show attachments.",
            "required": false,
            "x-ms-summary": "Attachments",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "attachment_fields",
            "in": "query",
            "description": "List the attachment fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Attachment Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "stickers",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to show stickers.",
            "required": false,
            "x-ms-summary": "Stickers",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "members",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to show members.",
            "required": false,
            "x-ms-summary": "Members",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "memeber_fields",
            "in": "query",
            "description": "List the member fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Member Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "checkItemStates",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return the card states.",
            "required": false,
            "x-ms-summary": "Check Card States",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "checklists",
            "in": "query",
            "description": "Specify the checklists to return.",
            "required": false,
            "x-ms-summary": "Checklists",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "none"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The max number of results to return, between 1 and 1000.",
            "required": false,
            "x-ms-summary": "Limit",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "since",
            "in": "query",
            "description": "Fetch all cards after this date.",
            "required": false,
            "x-ms-summary": "Since",
            "x-ms-visibility": "advanced",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Fetch all cards before this date.",
            "required": false,
            "x-ms-summary": "Before",
            "x-ms-visibility": "advanced",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "An option on how to filter the response. The allowed values are 'all', 'closed', 'none', 'open' or 'visible'.",
            "required": false,
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "closed",
              "none",
              "open",
              "visible"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List the card fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Card"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#list-the-cards-in-a-board"
        }
      }
    },
    "/{connectionId}/simple/boards/{board_id}/cards": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "A simple version of the list cards",
        "description": "A simple version of the list cards API method used by dynamic values.",
        "operationId": "ListCardsSimple",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "Board Id.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Card"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#a-simple-version-of-the-list-cards"
        }
      }
    },
    "/{connectionId}/cards/{card_id}": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "Get a card by id",
        "description": "Get a specific card by its unique id.",
        "operationId": "GetCard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The id of the board to fetch cards in.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "card_id",
            "in": "path",
            "description": "The id of the card to fetch.",
            "required": true,
            "x-ms-summary": "Card Id",
            "x-ms-dynamic-values": {
              "operationId": "ListCardsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "actions",
            "in": "query",
            "description": "List the actions to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Actions",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "actions_entities",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return action entities.",
            "required": false,
            "x-ms-summary": "Actions Entities",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "actions_display",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return action displays.",
            "required": false,
            "x-ms-summary": "Actions Display",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "actions_limit",
            "in": "query",
            "description": "Max number of actions to return.",
            "required": false,
            "x-ms-summary": "Actions Limit",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "action_fields",
            "in": "query",
            "description": "List of action fields to return for each action. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Action Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "action_memberCreator_fields",
            "in": "query",
            "description": "List of action member creator fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Member Creator Action Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "attachments",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return attachments.",
            "required": false,
            "x-ms-summary": "Attachments",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "attachment_fields",
            "in": "query",
            "description": "List of attachment fields to return for each attachment. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Attachments Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "members",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return members.",
            "required": false,
            "x-ms-summary": "Members",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "member_fields",
            "in": "query",
            "description": "List of member fields to return for each member. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Member Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "membersVoted",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return voted members.",
            "required": false,
            "x-ms-summary": "Voted Members",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "memberVoted_fields",
            "in": "query",
            "description": "List of voted member fields to return for each voted member. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Voted Member Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "checkItemStates",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return card states.",
            "required": false,
            "x-ms-summary": "Check Item States",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "checkItemState_fields",
            "in": "query",
            "description": "List of state fields to return for each of the card item state. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Item State Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "checklists",
            "in": "query",
            "description": "Specify the checklists to return for each card.",
            "required": false,
            "x-ms-summary": "Checklists",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "none"
            ]
          },
          {
            "name": "checklist_fields",
            "in": "query",
            "description": "List of checklist fields to return for each checklist. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Checklist Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "board",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return the board which the card belongs to.",
            "required": false,
            "x-ms-summary": "Board",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "board_fields",
            "in": "query",
            "description": "List the board fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Board Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "list",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return the list which the card belongs to.",
            "required": false,
            "x-ms-summary": "List",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "list_fields",
            "in": "query",
            "description": "List the list fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "List Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "stickers",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return the stickers.",
            "required": false,
            "x-ms-summary": "Stickers",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "sticker_fields",
            "in": "query",
            "description": "List the sticker fields to return for each sticker. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Sticker Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List the card fields to return.",
            "required": false,
            "x-ms-summary": "Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CardWithChecklists"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#get-a-card-by-id"
        }
      },
      "put": {
        "tags": [
          "Trello"
        ],
        "summary": "Update a card",
        "description": "Update an existing card with new parameters.",
        "operationId": "UpdateCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The id of the board to fetch cards from.",
            "required": true,
            "x-ms-summary": "Board id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "card_id",
            "in": "path",
            "description": "The id of the card to update.",
            "required": true,
            "x-ms-summary": "Card id",
            "x-ms-dynamic-values": {
              "operationId": "ListCardsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "updateCard",
            "in": "body",
            "description": "Updated card values.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCard"
            },
            "x-ms-summary": "Updated card"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "advanced",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "UpdateCard",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#update-a-card-%5bdeprecated%5d"
        }
      },
      "delete": {
        "tags": [
          "Trello"
        ],
        "summary": "Delete a card",
        "description": "Delete an existing card from the account.",
        "operationId": "DeleteCard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The id of the board to fetch cards from.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "card_id",
            "in": "path",
            "description": "The id of the card to delete.",
            "required": true,
            "x-ms-summary": "Card Id",
            "x-ms-dynamic-values": {
              "operationId": "ListCardsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#delete-a-card"
        }
      }
    },
    "/{connectionId}/v2/cards/{card_id}": {
      "put": {
        "tags": [
          "Trello"
        ],
        "summary": "Update a card",
        "description": "Update an existing card with new parameters.",
        "operationId": "UpdateCard_V2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The id of the board to fetch cards from.",
            "required": true,
            "x-ms-summary": "Board id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "card_id",
            "in": "path",
            "description": "The id of the card to update.",
            "required": true,
            "x-ms-summary": "Card id",
            "x-ms-dynamic-values": {
              "operationId": "ListCardsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "updateCard",
            "in": "body",
            "description": "Updated card values.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCard_V2"
            },
            "x-ms-summary": "Updated card"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "UpdateCard",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#update-a-card"
        }
      }
    },
    "/{connectionId}/cards": {
      "post": {
        "tags": [
          "Trello"
        ],
        "summary": "Create a card",
        "description": "Creates a new card with the parameters provided.",
        "operationId": "CreateCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The id of the board to create the card in.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "newCard",
            "in": "body",
            "description": "New card to add to the trello board.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCard"
            },
            "x-ms-summary": "New card"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "advanced",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "CreateCard",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#create-a-card-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v2/cards": {
      "post": {
        "tags": [
          "Trello"
        ],
        "summary": "Create a card",
        "description": "Creates a new card with the parameters provided.",
        "operationId": "CreateCard_V2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The id of the board to create the card in.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "newCard",
            "in": "body",
            "description": "New card to add to the trello board.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCard_V2"
            },
            "x-ms-summary": "New card"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "CreateCard",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#create-a-card"
        }
      }
    },
    "/{connectionId}/member/me/boards": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "List boards",
        "description": "List the boards matching the specified query parameters.",
        "operationId": "ListBoards",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "List filters to apply to board results. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List the board fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "actions",
            "in": "query",
            "description": "List the action fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Actions",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "actions_entities",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return action entities.",
            "required": false,
            "x-ms-summary": "Action Entities",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "actions_limit",
            "in": "query",
            "description": "The max number of actions to return.",
            "required": false,
            "x-ms-summary": "Action Limit",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "actions_format",
            "in": "query",
            "description": "Specify the format of the actions to return. The valid options are 'count', 'list', 'minimal'.",
            "required": false,
            "x-ms-summary": "Actions Format",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "count",
              "list",
              "minimal"
            ]
          },
          {
            "name": "actions_since",
            "in": "query",
            "description": "Return actions after the specified date.",
            "required": false,
            "x-ms-summary": "Actions Since",
            "x-ms-visibility": "advanced",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "action_fields",
            "in": "query",
            "description": "List the fields of the action to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Action Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "memberships",
            "in": "query",
            "description": "Specify membership information to return.",
            "required": false,
            "x-ms-summary": "Memberships",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "organization",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return organization information.",
            "required": false,
            "x-ms-summary": "Organization",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "organization_fields",
            "in": "query",
            "description": "List the organization fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Organization Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "lists",
            "in": "query",
            "description": "Specify whether to return lists which belong to the board.",
            "required": false,
            "x-ms-summary": "Lists",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Board"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#list-boards"
        }
      }
    },
    "/{connectionId}/simple/member/me/boards": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "A simple version of the list boards",
        "description": "A simple version of the list boards API call with no parameters to be used by dynamic values.",
        "operationId": "ListBoardsSimple",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Board"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#a-simple-version-of-the-list-boards"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/boards/{board_id}": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "Get a board by Id",
        "description": "Get a specific board by its unique identifier.",
        "operationId": "GetBoard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique Id of the board to get.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "actions",
            "in": "query",
            "description": "List the actions to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Actions",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "action_entities",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return action entities.",
            "required": false,
            "x-ms-summary": "Action Entities",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "actions_display",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return actions display.",
            "required": false,
            "x-ms-summary": "Actions Display",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "actions_format",
            "in": "query",
            "description": "Specify the format of the actions to return. Valid options are 'count', 'list', 'minimal'.",
            "required": false,
            "x-ms-summary": "Actions Format",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "count",
              "list",
              "minimal"
            ]
          },
          {
            "name": "actions_since",
            "in": "query",
            "description": "Only return the actions after this date.",
            "required": false,
            "x-ms-summary": "Actions Since",
            "x-ms-visibility": "advanced",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "actions_limit",
            "in": "query",
            "description": "Max number of actions to return.",
            "required": false,
            "x-ms-summary": "Actions Limit",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "action_fields",
            "in": "query",
            "description": "List the fields to return with each field. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Action Field",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "action_member",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return action members.",
            "required": false,
            "x-ms-summary": "Action Member",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "action_member_fields",
            "in": "query",
            "description": "List the member fields to return with each action member. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Action Member Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "action_memberCreator",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return action member creator.",
            "required": false,
            "x-ms-summary": "Action Member Creator",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "action_memberCreator_fields",
            "in": "query",
            "description": "List the action member creator fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Action Member Creator Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "cards",
            "in": "query",
            "description": "Specify the cards to return. Valid options are 'all', 'closed', 'none', 'open', or 'visible'.",
            "required": false,
            "x-ms-summary": "Cards",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "closed",
              "none",
              "open",
              "visible"
            ]
          },
          {
            "name": "card_fields",
            "in": "query",
            "description": "List the fields to return for each card. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Card Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "card_attachments",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return attachments on cards.",
            "required": false,
            "x-ms-summary": "Card Attachments",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "card_attachment_fields",
            "in": "query",
            "description": "List the attachment fields to return for each attachment. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Card Attachment Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "card_checklists",
            "in": "query",
            "description": "Specify the checklists to return for each card.",
            "required": false,
            "x-ms-summary": "Card Checklists",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "none"
            ]
          },
          {
            "name": "card_stickers",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return card stickers.",
            "required": false,
            "x-ms-summary": "Card Stickers",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "boardStars",
            "in": "query",
            "description": "Specify the board stars to return.",
            "required": false,
            "x-ms-summary": "Board Stars",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "mine",
              "none"
            ]
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Specify the labels to return.",
            "required": false,
            "x-ms-summary": "Labels",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "none"
            ]
          },
          {
            "name": "label_fields",
            "in": "query",
            "description": "List the label fields to return for each label. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Label Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "labels_limit",
            "in": "query",
            "description": "Max number of labels to return.",
            "required": false,
            "x-ms-summary": "Label Limits",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "lists",
            "in": "query",
            "description": "Specify the lists to return.",
            "required": false,
            "x-ms-summary": "Lists",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "closed",
              "none",
              "open"
            ]
          },
          {
            "name": "list_fields",
            "in": "query",
            "description": "List the list fields to return for each list. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "List Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "memberships",
            "in": "query",
            "description": "List the memberships to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Memberships",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "memberships_member",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return membership members.",
            "required": false,
            "x-ms-summary": "Memberships Member",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "memberships_member_fields",
            "in": "query",
            "description": "List the member fields to return for each membership member. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Memberships Member Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "members",
            "in": "query",
            "description": "List the members to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Members",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "admins",
              "all",
              "none",
              "normal",
              "owners"
            ]
          },
          {
            "name": "member_fields",
            "in": "query",
            "description": "List the member fields to return for each member. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Member Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "membersInvited",
            "in": "query",
            "description": "Specify the invited members to return.",
            "required": false,
            "x-ms-summary": "Invited Members",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "admin",
              "all",
              "none",
              "normal",
              "owners"
            ]
          },
          {
            "name": "membersInvited_fields",
            "in": "query",
            "description": "List the fields to return for each. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Invited Member Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "checklists",
            "in": "query",
            "description": "Specify the checklists to return.",
            "required": false,
            "x-ms-summary": "Checklists",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "none"
            ]
          },
          {
            "name": "checklist_fields",
            "in": "query",
            "description": "List the checklist fields to return for each checklist. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Checklist Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "organization",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return the organization information.",
            "required": false,
            "x-ms-summary": "Organization",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "organization_fields",
            "in": "query",
            "description": "List the organization fields to return for each organization. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Organization Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "organization_memberships",
            "in": "query",
            "description": "List the organization memberships to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Organization Memberships",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "myPerfs",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return my perfs.",
            "required": false,
            "x-ms-summary": "My perfs",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List the fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BoardWithChecklists"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#get-a-board-by-id"
        }
      },
      "put": {
        "tags": [
          "Trello"
        ],
        "summary": "Update a board",
        "description": "Update an existing board.",
        "operationId": "UpdateBoard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique identifier of the board to update.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "board",
            "in": "body",
            "description": "The board features to update.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateBoard"
            },
            "x-ms-summary": "The board features to update."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#update-a-board"
        }
      }
    },
    "/{connectionId}/boards/{board_id}/lists": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "List the card lists in a board",
        "description": "List the card lists and the cards within the list in a specific board.",
        "operationId": "ListLists",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique id of the board to fetch lists.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "cards",
            "in": "query",
            "description": "Specify the cards to return.",
            "required": false,
            "x-ms-summary": "Cards",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "closed",
              "open",
              "none",
              "visible"
            ]
          },
          {
            "name": "card_fields",
            "in": "query",
            "description": "List the card fields to return from. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Card Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specify the filter property for lists. Valid options are 'all, 'closed', 'none', or 'open'.",
            "required": false,
            "x-ms-summary": "Filter",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "closed",
              "none",
              "open"
            ]
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List the fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/List"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#list-the-card-lists-in-a-board"
        }
      }
    },
    "/{connectionId}/simple/boards/{board_id}/lists": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "A simple version of list lists",
        "description": "A simple version of list lists to be used by dynamic values.",
        "operationId": "ListListsSimple",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "Unique Id of the board to fetch lists.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/List"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#a-simple-version-of-list-lists"
        }
      }
    },
    "/{connectionId}/lists/{list_id}": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "Get list by Id",
        "description": "Get an existing list and the cards in the list by the unique identifier of the list.",
        "operationId": "GetList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The unique Id of the board to fetch the lists from.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique Id of the list to fetch.",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-dynamic-values": {
              "operationId": "ListListsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "cards",
            "in": "query",
            "description": "Specify the cards to return.",
            "required": false,
            "x-ms-summary": "Cards",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "all",
              "closed",
              "none",
              "open"
            ]
          },
          {
            "name": "card_fields",
            "in": "query",
            "description": "List the card fields to return for each card. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Card Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "board",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to return board information.",
            "required": false,
            "x-ms-summary": "Board",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "board_fields",
            "in": "query",
            "description": "List the board fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Board Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List the list fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "List Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/List"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#get-list-by-id"
        }
      },
      "put": {
        "tags": [
          "Trello"
        ],
        "summary": "Update a list",
        "description": "Update an existing list.",
        "operationId": "UpdateList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The unique id of the board the list is on.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "list_id",
            "in": "path",
            "description": "The unique id of the list to update.",
            "required": true,
            "x-ms-summary": "List Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "ListListsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The new list name.",
            "required": false,
            "x-ms-summary": "List Name",
            "x-ms-visibility": "important",
            "type": "string"
          },
          {
            "name": "closed",
            "in": "query",
            "description": "A string (true, false) determining whether or not to close the list.",
            "required": false,
            "x-ms-summary": "Closed",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "true",
              "false"
            ]
          },
          {
            "name": "idBoard",
            "in": "query",
            "description": "The unique id of the board to move the list to.",
            "required": false,
            "x-ms-summary": "Board to move to",
            "x-ms-visibility": "advanced",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "pos",
            "in": "query",
            "description": "The list position (top, bottom, or number).",
            "required": false,
            "x-ms-summary": "List Position",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "top",
              "bottom"
            ]
          },
          {
            "name": "subscribed",
            "in": "query",
            "description": "A boolean value (true, false) determining whether or not to subscribe to the list.",
            "required": false,
            "x-ms-summary": "Subscribed",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "true",
              "false"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateListResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#update-a-list"
        }
      }
    },
    "/{connectionId}/members/me": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "Get your User Profile info",
        "description": "Get information about your User Profile",
        "operationId": "GetUserProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "List the fields to return. Specify 'all' or a comma seperated list of valid values.",
            "required": false,
            "x-ms-summary": "Fields",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#get-your-user-profile-info"
        }
      }
    },
    "/{connectionId}/members/me/organizations": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "List teams you are a member of",
        "description": "The list of teams or organizations the account is a member of.",
        "operationId": "ListTeams",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#list-teams-you-are-a-member-of"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/organizations/{teamId}/members": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "List members of a team",
        "description": "List the members in a specific team.",
        "operationId": "ListTeamMembers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "teamId",
            "in": "path",
            "description": "The unique Id of the team.",
            "required": true,
            "x-ms-summary": "Team Id",
            "x-ms-dynamic-values": {
              "operationId": "ListTeams",
              "parameters": {},
              "value-path": "id",
              "value-title": "displayName"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Member"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#list-members-of-a-team"
        }
      }
    },
    "/{connectionId}/boards/{board_id}/members": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "List members of a board",
        "description": "List the members of a specific board.",
        "operationId": "ListBoardMembers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique Id of the board.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Member"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#list-members-of-a-board"
        }
      }
    },
    "/{connectionId}/boards/{board_id}/labels": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "List labels of a board",
        "description": "List the labels of a specific board.",
        "operationId": "ListBoardLabels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique Id of the board.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of labels to return.",
            "required": false,
            "x-ms-summary": "Limit",
            "x-ms-visibility": "internal",
            "type": "integer",
            "format": "int32",
            "default": 1000
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoardLabel"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#list-labels-of-a-board"
        }
      }
    },
    "/{connectionId}/boards/{board_id}/organization": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "Get the team for a board",
        "description": "Get the team details for a specific board.",
        "operationId": "GetTeamForBoard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique Id of the board to fetch team.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#get-the-team-for-a-board"
        }
      }
    },
    "/{connectionId}/cards/{card_id}/members": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "List members for a card",
        "description": "List the members for a specific card.",
        "operationId": "ListCardMembers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The unique id of the board to look for cards on.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "card_id",
            "in": "path",
            "description": "The unique id of the card.",
            "required": true,
            "x-ms-summary": "Card Id",
            "x-ms-dynamic-values": {
              "operationId": "ListCardsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Member"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#list-members-for-a-card"
        }
      }
    },
    "/{connectionId}/cards/{card_id}/actions": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "List comments for a card",
        "description": "List the comments for a specific card.",
        "operationId": "ListCardComments",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The unique id of the board to look for comments on.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "card_id",
            "in": "path",
            "description": "The unique id of the card.",
            "required": true,
            "x-ms-summary": "Card Id",
            "x-ms-dynamic-values": {
              "operationId": "ListCardsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#list-comments-for-a-card"
        }
      }
    },
    "/{connectionId}/cards/{card_id}/actions/comments": {
      "post": {
        "tags": [
          "Trello"
        ],
        "summary": "Add a comment to a card",
        "description": "Add a comment to a specific card.",
        "operationId": "AddCommentToCard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The unique id of the board to add a comment to.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "card_id",
            "in": "path",
            "description": "The unique id of the card.",
            "required": true,
            "x-ms-summary": "Card Id",
            "x-ms-dynamic-values": {
              "operationId": "ListCardsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "comment",
            "in": "body",
            "description": "The comment to add as a string, with a length from 1 to 16384.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentPost"
            },
            "x-ms-summary": "Comment"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#add-a-comment-to-a-card"
        }
      }
    },
    "/{connectionId}/cards/{cardId}/idMembers": {
      "post": {
        "tags": [
          "Trello"
        ],
        "summary": "Add member to a card",
        "description": "Add a member to a specific card.",
        "operationId": "AddMemberToCard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "query",
            "description": "The unique id of the board the card is on.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "cardId",
            "in": "path",
            "description": "The unique identifier of the card to add a member to.",
            "required": true,
            "x-ms-summary": "Card Id",
            "x-ms-dynamic-values": {
              "operationId": "ListCardsSimple",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          },
          {
            "name": "memberId",
            "in": "query",
            "description": "The member id or username to add to the card.",
            "required": true,
            "x-ms-summary": "Member Id or Username",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardMembers",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "fullName"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Member"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#add-member-to-a-card"
        }
      }
    },
    "/{connectionId}/boards": {
      "post": {
        "tags": [
          "Trello"
        ],
        "summary": "Create a board",
        "description": "Create a new board with the specified fields.",
        "operationId": "CreateBoard",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board",
            "in": "body",
            "description": "The board to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBoard"
            },
            "x-ms-summary": "The board to create"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#create-a-board"
        }
      }
    },
    "/{connectionId}/lists": {
      "post": {
        "tags": [
          "Trello"
        ],
        "summary": "Create a list",
        "description": "Create a new list.",
        "operationId": "CreateList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "list",
            "in": "body",
            "description": "The list to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateList"
            },
            "x-ms-summary": "The list to create."
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateListResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#create-a-list"
        }
      }
    },
    "/{connectionId}/webhooks": {
      "post": {
        "tags": [
          "Trello"
        ],
        "summary": "Create a webhook",
        "description": "Create a new webhook to receive update notifications from Trello Models.",
        "operationId": "CreateWebhook",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "callbackURL",
            "in": "query",
            "description": "Webhook Callback URL to receive Notifications",
            "required": true,
            "x-ms-summary": "Webhook Callback URL",
            "type": "string"
          },
          {
            "name": "idModel",
            "in": "query",
            "description": "Id of Data Model to be observed",
            "required": true,
            "x-ms-summary": "Data Model Id",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "A brief description of the Webhook",
            "required": false,
            "x-ms-summary": "Webhook Description",
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "description": "A boolean value dictating whether the webhook is active or not.",
            "required": false,
            "x-ms-summary": "Webhook Status",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#create-a-webhook"
        }
      }
    },
    "/{connectionId}/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "Trello"
        ],
        "summary": "Get a webhook by id",
        "description": "Get a webhook by its unique id.",
        "operationId": "GetWebhook",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The id of the webhook to fetch.",
            "required": true,
            "x-ms-summary": "Webhook Id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#get-a-webhook-by-id"
        }
      },
      "put": {
        "tags": [
          "Trello"
        ],
        "summary": "Update a webhook",
        "description": "Update an existing webhook with new parameters.",
        "operationId": "UpdateWebhook",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The id of the webhook to update.",
            "required": true,
            "x-ms-summary": "Webhook Id",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "A brief description of the Webhook",
            "required": false,
            "x-ms-summary": "Webhook Description",
            "type": "string"
          },
          {
            "name": "callbackURL",
            "in": "query",
            "description": "Webhook Callback URL to receive Notifications",
            "required": false,
            "x-ms-summary": "Webhook Callback URL",
            "type": "string"
          },
          {
            "name": "idModel",
            "in": "query",
            "description": "Id of Data Model to be observed",
            "required": false,
            "x-ms-summary": "Data Model Id",
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "description": "A boolean value dictating whether the webhook is active or not.",
            "required": false,
            "x-ms-summary": "Webhook Status",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#update-a-webhook"
        }
      },
      "delete": {
        "tags": [
          "Trello"
        ],
        "summary": "Delete a webhook",
        "description": "Delete an existing webhook.",
        "operationId": "DeleteWebhook",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "webhook_id",
            "in": "path",
            "description": "The id of the webhook to be deleted.",
            "required": true,
            "x-ms-summary": "Webhook Id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Preview"
        },
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#delete-a-webhook"
        }
      }
    },
    "/{connectionId}/boards/{board_id}/closed": {
      "put": {
        "tags": [
          "Trello"
        ],
        "summary": "Close a board",
        "description": "Set a specific board to closed.",
        "operationId": "CloseBoard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "board_id",
            "in": "path",
            "description": "The unique id of the board to close.",
            "required": true,
            "x-ms-summary": "Board Id",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardsSimple",
              "parameters": {},
              "value-path": "id",
              "value-title": "name"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error. Unknown error occurred"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#close-a-board"
        }
      }
    },
    "/ChangesFromSubscriptionReceive": {
      "head": {
        "tags": [
          "SubscriptionPayload"
        ],
        "summary": "Receive changes from webhook (HEAD)",
        "description": "This operation validates the subscription request (HEAD).",
        "operationId": "ReceiveChangesFromSubscriptionHead",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "Callback state.",
            "required": true,
            "x-ms-summary": "Callback state",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "security": [],
        "x-ms-visibility": "internal"
      },
      "post": {
        "tags": [
          "SubscriptionPayload"
        ],
        "summary": "Receive changes from webhook",
        "description": "This operation validates the subscription request.",
        "operationId": "ReceiveChangesFromSubscription",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [],
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "Callback state.",
            "required": true,
            "x-ms-summary": "Callback state",
            "type": "string"
          },
          {
            "name": "subscriptionPayload",
            "in": "body",
            "description": "Subscription payload.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubscriptionPayload"
            },
            "x-ms-summary": "Subscription payload"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "security": [],
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/trello/#receive-changes-from-webhook"
        }
      }
    }
  },
  "definitions": {
    "Card": {
      "description": "A Trello Card Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique id of the card.",
          "type": "string",
          "x-ms-summary": "Card Id",
          "x-ms-visibility": "advanced"
        },
        "checkItemStates": {
          "description": "The check item states in the card.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckItemState"
          },
          "x-ms-summary": "Check Item States",
          "x-ms-visibility": "advanced"
        },
        "closed": {
          "description": "A boolean value (true, false) determining whether or not the card is closed.",
          "type": "boolean",
          "x-ms-summary": "Card closed"
        },
        "dateLastActivity": {
          "format": "date-time",
          "description": "The datetime of last activity on the card.",
          "type": "string",
          "x-ms-summary": "Last Activity Date",
          "x-ms-visibility": "advanced"
        },
        "desc": {
          "description": "The description of the card.",
          "type": "string",
          "x-ms-summary": "Card Description"
        },
        "idBoard": {
          "description": "The unique Id of the board which the card belongs to.",
          "type": "string",
          "x-ms-summary": "Board Id",
          "x-ms-visibility": "advanced"
        },
        "idList": {
          "description": "The unique Id of the list which the card belongs to.",
          "type": "string",
          "x-ms-summary": "List Id",
          "x-ms-visibility": "advanced"
        },
        "idMembersVoted": {
          "description": "The unique Ids of the voting members.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Voted Member Ids",
          "x-ms-visibility": "advanced"
        },
        "idShort": {
          "format": "int32",
          "description": "The short Id of the card.",
          "type": "integer",
          "x-ms-summary": "Card Short Id",
          "x-ms-visibility": "advanced"
        },
        "idAttachmentCover": {
          "description": "The unique Id of the attachment cover.",
          "type": "string",
          "x-ms-summary": "Attachment Cover Id",
          "x-ms-visibility": "advanced"
        },
        "manualCoverAttachment": {
          "description": "A boolean value (true, false) determining whether or not the card has a manual cover attachment.",
          "type": "boolean",
          "x-ms-summary": "Is Manual Cover Attachment",
          "x-ms-visibility": "advanced"
        },
        "idLabels": {
          "description": "A list of label Ids on the card.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Label Ids",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "description": "The name of the card.",
          "type": "string",
          "x-ms-summary": "Card Name"
        },
        "pos": {
          "format": "double",
          "description": "The position of the card.",
          "type": "number",
          "x-ms-summary": "Card Position",
          "x-ms-visibility": "advanced"
        },
        "shortLink": {
          "description": "A short link to the card.",
          "type": "string",
          "x-ms-summary": "Card Short Link",
          "x-ms-visibility": "advanced"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "due": {
          "format": "date-time",
          "description": "The due date of the card.",
          "type": "string",
          "x-ms-summary": "Card Due Date"
        },
        "shortUrl": {
          "description": "The short url link to the card.",
          "type": "string",
          "x-ms-summary": "Card Short Url"
        },
        "subscribed": {
          "description": "A boolean value (true, false) determining whether or not the card is subscribed to.",
          "type": "boolean",
          "x-ms-summary": "Is Subscribed",
          "x-ms-visibility": "advanced"
        },
        "url": {
          "description": "The full url to the card.",
          "type": "string",
          "x-ms-summary": "Card Full Url",
          "x-ms-visibility": "advanced"
        },
        "checklists": {
          "description": "The set of board checklists.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checklist"
          },
          "x-ms-summary": "Checklists",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CardWithChecklists": {
      "description": "A Trello Card Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique id of the card.",
          "type": "string",
          "x-ms-summary": "Card Id",
          "x-ms-visibility": "advanced"
        },
        "checkItemStates": {
          "description": "The check item states in the card.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckItemState"
          },
          "x-ms-summary": "Check Item States",
          "x-ms-visibility": "advanced"
        },
        "closed": {
          "description": "A boolean value (true, false) determining whether or not the card is closed.",
          "type": "boolean",
          "x-ms-summary": "Card closed"
        },
        "dateLastActivity": {
          "format": "date-time",
          "description": "The datetime of last activity on the card.",
          "type": "string",
          "x-ms-summary": "Last Activity Date",
          "x-ms-visibility": "advanced"
        },
        "desc": {
          "description": "The description of the card.",
          "type": "string",
          "x-ms-summary": "Card Description"
        },
        "idBoard": {
          "description": "The unique Id of the board which the card belongs to.",
          "type": "string",
          "x-ms-summary": "Board Id",
          "x-ms-visibility": "advanced"
        },
        "idList": {
          "description": "The unique Id of the list which the card belongs to.",
          "type": "string",
          "x-ms-summary": "List Id",
          "x-ms-visibility": "advanced"
        },
        "idMembersVoted": {
          "description": "The unique Ids of the voting members.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Voted Member Ids",
          "x-ms-visibility": "advanced"
        },
        "idShort": {
          "format": "int32",
          "description": "The short Id of the card.",
          "type": "integer",
          "x-ms-summary": "Card Short Id",
          "x-ms-visibility": "advanced"
        },
        "idAttachmentCover": {
          "description": "The unique Id of the attachment cover.",
          "type": "string",
          "x-ms-summary": "Attachment Cover Id",
          "x-ms-visibility": "advanced"
        },
        "manualCoverAttachment": {
          "description": "A boolean value (true, false) determining whether or not the card has a manual cover attachment.",
          "type": "boolean",
          "x-ms-summary": "Is Manual Cover Attachment",
          "x-ms-visibility": "advanced"
        },
        "idLabels": {
          "description": "A list of label Ids on the card.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Label Ids",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "description": "The name of the card.",
          "type": "string",
          "x-ms-summary": "Card Name"
        },
        "pos": {
          "format": "double",
          "description": "The position of the card.",
          "type": "number",
          "x-ms-summary": "Card Position",
          "x-ms-visibility": "advanced"
        },
        "shortLink": {
          "description": "A short link to the card.",
          "type": "string",
          "x-ms-summary": "Card Short Link",
          "x-ms-visibility": "advanced"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "due": {
          "format": "date-time",
          "description": "The due date of the card.",
          "type": "string",
          "x-ms-summary": "Card Due Date"
        },
        "shortUrl": {
          "description": "The short url link to the card.",
          "type": "string",
          "x-ms-summary": "Card Short Url"
        },
        "subscribed": {
          "description": "A boolean value (true, false) determining whether or not the card is subscribed to.",
          "type": "boolean",
          "x-ms-summary": "Is Subscribed",
          "x-ms-visibility": "advanced"
        },
        "url": {
          "description": "The full url to the card.",
          "type": "string",
          "x-ms-summary": "Card Full Url",
          "x-ms-visibility": "advanced"
        },
        "checklists": {
          "description": "The set of card checklists.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checklist"
          },
          "x-ms-summary": "Checklists",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CardInAction": {
      "description": "A Trello Card Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique id of the card.",
          "type": "string",
          "x-ms-summary": "Card Id",
          "x-ms-visibility": "advanced"
        },
        "idShort": {
          "format": "int32",
          "description": "The short Id of the card.",
          "type": "integer",
          "x-ms-summary": "Card Short Id",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "description": "The name of the card.",
          "type": "string",
          "x-ms-summary": "Card Name"
        },
        "shortLink": {
          "description": "A short link to the card.",
          "type": "string",
          "x-ms-summary": "Card Short Link",
          "x-ms-visibility": "advanced"
        },
        "due": {
          "format": "date-time",
          "description": "The due date of the card.",
          "type": "string",
          "x-ms-summary": "Card Due Date"
        }
      }
    },
    "CheckItemState": {
      "description": "A Trello Item State Object",
      "type": "object",
      "properties": {
        "idCheckItem": {
          "description": "ID of the check item.",
          "type": "string",
          "x-ms-summary": "Check item Id"
        },
        "state": {
          "description": "State of the check item.",
          "type": "string",
          "x-ms-summary": "Check item State"
        }
      }
    },
    "Badges": {
      "description": "A Trello Badges Object",
      "type": "object",
      "properties": {
        "Votes": {
          "format": "int32",
          "description": "The number of votes on the card badges.",
          "type": "integer",
          "x-ms-summary": "Votes",
          "x-ms-visibility": "advanced"
        },
        "ViewingMemberVoted": {
          "description": "A boolean value (true, false) determining whether or not viewing members voted on the badge.",
          "type": "boolean",
          "x-ms-summary": "Viewing Member Voted",
          "x-ms-visibility": "advanced"
        },
        "Subscribed": {
          "description": "A boolean value (true, false) determining whether or not the account is subscribed to the card badges.",
          "type": "boolean",
          "x-ms-summary": "Subscribed To Badge",
          "x-ms-visibility": "advanced"
        },
        "Fogbugz": {
          "description": "The fogbugz of the badges.",
          "type": "string",
          "x-ms-summary": "Fogbugz",
          "x-ms-visibility": "advanced"
        },
        "CheckItems": {
          "format": "int32",
          "description": "The number of check items in the badge.",
          "type": "integer",
          "x-ms-summary": "Check Items",
          "x-ms-visibility": "advanced"
        },
        "CheckItemsChecked": {
          "format": "int32",
          "description": "The number of checked check items in the badge.",
          "type": "integer",
          "x-ms-summary": "Checked Check Items",
          "x-ms-visibility": "advanced"
        },
        "Comments": {
          "format": "int32",
          "description": "The comments on the badge.",
          "type": "integer",
          "x-ms-summary": "Comments",
          "x-ms-visibility": "advanced"
        },
        "Attachments": {
          "format": "int32",
          "description": "The attachments on the badge.",
          "type": "integer",
          "x-ms-summary": "Attachments",
          "x-ms-visibility": "advanced"
        },
        "Description": {
          "description": "The description of the badge.",
          "type": "boolean",
          "x-ms-summary": "Description",
          "x-ms-visibility": "advanced"
        },
        "Due": {
          "format": "date-time",
          "description": "The due date of the badge.",
          "type": "string",
          "x-ms-summary": "Due Date",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "UpdateCard": {
      "description": "Model for updating a card in Trello.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The updated name of the new card.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "desc": {
          "description": "The updated description of the new card.",
          "type": "string",
          "x-ms-summary": "Description"
        },
        "closed": {
          "description": "A boolean value (true, false) determining whether or not the card is closed.",
          "type": "boolean",
          "x-ms-summary": "Is Closed",
          "x-ms-visibility": "advanced"
        },
        "idAttachmentCover": {
          "description": "The id of the attachment to attach to the card.",
          "type": "string",
          "x-ms-summary": "Cover attachment Ids",
          "x-ms-visibility": "advanced"
        },
        "idBoard": {
          "description": "The id of the board to attach the card to.",
          "type": "string",
          "x-ms-summary": "Board Id",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListBoardsSimple",
            "parameters": {},
            "value-path": "id",
            "value-title": "name"
          }
        },
        "idList": {
          "description": "The id of the list to attach the card to.",
          "type": "string",
          "x-ms-summary": "List Id",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListListsSimple",
            "parameters": {
              "board_id": {
                "parameter": "idBoard"
              }
            },
            "value-path": "id",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListListsSimple",
            "parameters": {
              "board_id": {
                "parameterReference": "updateCard/idBoard"
              }
            },
            "itemValuePath": "id",
            "itemTitlePath": "name"
          }
        },
        "pos": {
          "description": "The position of the card on the page. Specify top, bottom, or a positive number. Note this is used in relation to existing card locations so the resulting location may not match the exact value provided.",
          "type": "string",
          "x-ms-summary": "Position",
          "x-ms-visibility": "advanced"
        },
        "due": {
          "description": "The due date of the card.",
          "type": "string",
          "x-ms-summary": "Due Date",
          "x-ms-visibility": "advanced"
        },
        "subscribed": {
          "description": "A boolean value (true, false) determining whether or not to subscribe to the card.",
          "type": "boolean",
          "x-ms-summary": "Subscribed To Card",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "UpdateCard_V2": {
      "description": "Model for updating a card in Trello.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The updated name of the new card.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "desc": {
          "description": "The updated description of the new card.",
          "type": "string",
          "x-ms-summary": "Description"
        },
        "closed": {
          "description": "A boolean value (true, false) determining whether or not the card is closed.",
          "type": "boolean",
          "x-ms-summary": "Is Closed",
          "x-ms-visibility": "advanced"
        },
        "idMembersArray": {
          "description": "An array of member Ids to attach to the card.",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardMembers",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "fullName"
            }
          },
          "x-ms-summary": "Member Ids",
          "x-ms-visibility": "advanced"
        },
        "idAttachmentCover": {
          "description": "The id of the attachment to attach to the card.",
          "type": "string",
          "x-ms-summary": "Cover attachment Ids",
          "x-ms-visibility": "advanced"
        },
        "idBoard": {
          "description": "The id of the board to attach the card to.",
          "type": "string",
          "x-ms-summary": "Board Id",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListBoardsSimple",
            "parameters": {},
            "value-path": "id",
            "value-title": "name"
          }
        },
        "idList": {
          "description": "The id of the list to attach the card to.",
          "type": "string",
          "x-ms-summary": "List Id",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListListsSimple",
            "parameters": {
              "board_id": {
                "parameter": "idBoard"
              }
            },
            "value-path": "id",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListListsSimple",
            "parameters": {
              "board_id": {
                "parameterReference": "updateCard/idBoard"
              }
            },
            "itemValuePath": "id",
            "itemTitlePath": "name"
          }
        },
        "pos": {
          "description": "The position of the card on the page. Specify top, bottom, or a positive number. Note this is used in relation to existing card locations so the resulting location may not match the exact value provided.",
          "type": "string",
          "x-ms-summary": "Position",
          "x-ms-visibility": "advanced"
        },
        "due": {
          "description": "The due date of the card.",
          "type": "string",
          "x-ms-summary": "Due Date",
          "x-ms-visibility": "advanced"
        },
        "subscribed": {
          "description": "A boolean value (true, false) determining whether or not to subscribe to the card.",
          "type": "boolean",
          "x-ms-summary": "Subscribed To Card",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CreateCard": {
      "description": "Model for creating a new card in Trello.",
      "required": [
        "idList",
        "name"
      ],
      "type": "object",
      "properties": {
        "idList": {
          "description": "The id of the list that the card should be added to.",
          "type": "string",
          "x-ms-summary": "Parent List Id",
          "x-ms-dynamic-values": {
            "operationId": "ListListsSimple",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-path": "id",
            "value-title": "name"
          }
        },
        "name": {
          "description": "The name of the new card.",
          "type": "string",
          "x-ms-summary": "Card Name"
        },
        "desc": {
          "description": "The description of the new card.",
          "type": "string",
          "x-ms-summary": "Card Description"
        },
        "pos": {
          "description": "The position of the card. Specify top, bottom, or a positive number. Note this is used in relation to existing card locations so the resulting location may not match the exact value provided.",
          "enum": [
            "top",
            "bottom"
          ],
          "type": "string",
          "x-ms-summary": "Card Position",
          "x-ms-visibility": "advanced"
        },
        "idMembers": {
          "description": "A comma seperated list of member Ids to attach to the card.",
          "type": "string",
          "x-ms-summary": "Member Id",
          "x-ms-visibility": "advanced"
        },
        "idLabels": {
          "description": "A comma-separated list of labels Ids to attach to the card.",
          "type": "string",
          "x-ms-summary": "Label Id",
          "x-ms-visibility": "advanced"
        },
        "urlSource": {
          "description": "Source url of the card. Has to be a URL starting with http:// or https:// or null.",
          "default": "null",
          "type": "string",
          "x-ms-summary": "Source Url",
          "x-ms-visibility": "advanced"
        },
        "fileSource": {
          "description": "Source file of the card.",
          "type": "string",
          "x-ms-summary": "Source File",
          "x-ms-visibility": "advanced"
        },
        "idCardSource": {
          "description": "The Id of the card to copy into a new card.",
          "type": "string",
          "x-ms-summary": "Source Card Id",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCardsSimple",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-path": "id",
            "value-title": "name"
          }
        },
        "keepFromSource": {
          "description": "Properties of the card to copy over from the source.",
          "type": "string",
          "x-ms-summary": "Properties From Source Card",
          "x-ms-visibility": "advanced"
        },
        "due": {
          "description": "The due date of the card.",
          "type": "string",
          "x-ms-summary": "Due Date",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CreateCard_V2": {
      "description": "Model for creating a new card in Trello.",
      "required": [
        "idList",
        "name"
      ],
      "type": "object",
      "properties": {
        "idList": {
          "description": "The id of the list that the card should be added to.",
          "type": "string",
          "x-ms-summary": "Parent List Id",
          "x-ms-dynamic-values": {
            "operationId": "ListListsSimple",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-path": "id",
            "value-title": "name"
          }
        },
        "name": {
          "description": "The name of the new card.",
          "type": "string",
          "x-ms-summary": "Card Name"
        },
        "desc": {
          "description": "The description of the new card.",
          "type": "string",
          "x-ms-summary": "Card Description"
        },
        "pos": {
          "description": "The position of the card. Specify top, bottom, or a positive number. Note this is used in relation to existing card locations so the resulting location may not match the exact value provided.",
          "enum": [
            "top",
            "bottom"
          ],
          "type": "string",
          "x-ms-summary": "Card Position",
          "x-ms-visibility": "advanced"
        },
        "idMembersArray": {
          "description": "An array of member Ids to attach to the card.",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardMembers",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "fullName"
            }
          },
          "x-ms-summary": "Member Ids",
          "x-ms-visibility": "advanced"
        },
        "idLabelsArray": {
          "description": "An array of label Ids to attach to the card.",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "ListBoardLabels",
              "parameters": {
                "board_id": {
                  "parameter": "board_id"
                }
              },
              "value-path": "id",
              "value-title": "color"
            }
          },
          "x-ms-summary": "Label Ids",
          "x-ms-visibility": "advanced"
        },
        "urlSource": {
          "description": "Source url of the card. Has to be a URL starting with http:// or https:// or null.",
          "default": "null",
          "type": "string",
          "x-ms-summary": "Source Url",
          "x-ms-visibility": "advanced"
        },
        "fileSource": {
          "description": "Source file of the card.",
          "type": "string",
          "x-ms-summary": "Source File",
          "x-ms-visibility": "advanced"
        },
        "idCardSource": {
          "description": "The Id of the card to copy into a new card.",
          "type": "string",
          "x-ms-summary": "Source Card Id",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListCardsSimple",
            "parameters": {
              "board_id": {
                "parameter": "board_id"
              }
            },
            "value-path": "id",
            "value-title": "name"
          }
        },
        "keepFromSource": {
          "description": "Properties of the card to copy over from the source.",
          "type": "string",
          "x-ms-summary": "Properties From Source Card",
          "x-ms-visibility": "advanced"
        },
        "due": {
          "description": "The due date of the card.",
          "type": "string",
          "x-ms-summary": "Due Date",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Board": {
      "description": "A Trello Board Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique Id of the board.",
          "type": "string",
          "x-ms-summary": "Board Id",
          "x-ms-visibility": "advanced"
        },
        "closed": {
          "description": "A boolean value (true, false) determining whether or not the board is closed.",
          "type": "boolean",
          "x-ms-summary": "Is Closed",
          "x-ms-visibility": "advanced"
        },
        "dateLastActivity": {
          "format": "date-time",
          "description": "Date of the last activity on the board.",
          "type": "string",
          "x-ms-summary": "Last Activity Date",
          "x-ms-visibility": "advanced"
        },
        "dateLastView": {
          "format": "date-time",
          "description": "Date of the last time the board is viewed.",
          "type": "string",
          "x-ms-summary": "Last Viewed Date",
          "x-ms-visibility": "advanced"
        },
        "desc": {
          "description": "The description of the board.",
          "type": "string",
          "x-ms-summary": "Board Description"
        },
        "idOrganization": {
          "description": "The id of the organization.",
          "type": "string",
          "x-ms-summary": "Organization Id",
          "x-ms-visibility": "advanced"
        },
        "invitations": {
          "description": "The list of invitations on the board.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Invitations",
          "x-ms-visibility": "advanced"
        },
        "invited": {
          "description": "A boolean value (true, false) determining whether or not the account is invited to the board.",
          "type": "boolean",
          "x-ms-summary": "Invited",
          "x-ms-visibility": "advanced"
        },
        "labelNames": {
          "$ref": "#/definitions/Label"
        },
        "memberships": {
          "description": "The set of board memberships.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Membership"
          },
          "x-ms-summary": "Board Memberships",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "description": "The name of the board.",
          "type": "string",
          "x-ms-summary": "Board Name"
        },
        "pinned": {
          "description": "A boolean value (true, false) determining whether or not the board is pinned.",
          "type": "boolean",
          "x-ms-summary": "Is Board Pinned",
          "x-ms-visibility": "advanced"
        },
        "powerUps": {
          "description": "The set of power ups on the board.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Powerups",
          "x-ms-visibility": "advanced"
        },
        "perfs": {
          "$ref": "#/definitions/Perfs"
        },
        "shortLink": {
          "description": "The short link of the board.",
          "type": "string",
          "x-ms-summary": "Board Short Link",
          "x-ms-visibility": "advanced"
        },
        "shortUrl": {
          "description": "The short url to the board.",
          "type": "string",
          "x-ms-summary": "Board Short Url"
        },
        "starred": {
          "description": "A value determining whether or not the board is starred.",
          "type": "boolean",
          "x-ms-summary": "Is Starred",
          "x-ms-visibility": "advanced"
        },
        "subscribed": {
          "description": "A value determining whether or not the account is subscribed to the board.",
          "type": "boolean",
          "x-ms-summary": "Subscribed To Board",
          "x-ms-visibility": "advanced"
        },
        "url": {
          "description": "The full url of the board.",
          "type": "string",
          "x-ms-summary": "Board Url",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "BoardWithChecklists": {
      "description": "A Trello Board Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique Id of the board.",
          "type": "string",
          "x-ms-summary": "Board Id",
          "x-ms-visibility": "advanced"
        },
        "closed": {
          "description": "A boolean value (true, false) determining whether or not the board is closed.",
          "type": "boolean",
          "x-ms-summary": "Is Closed",
          "x-ms-visibility": "advanced"
        },
        "dateLastActivity": {
          "format": "date-time",
          "description": "Date of the last activity on the board.",
          "type": "string",
          "x-ms-summary": "Last Activity Date",
          "x-ms-visibility": "advanced"
        },
        "dateLastView": {
          "format": "date-time",
          "description": "Date of the last time the board is viewed.",
          "type": "string",
          "x-ms-summary": "Last Viewed Date",
          "x-ms-visibility": "advanced"
        },
        "desc": {
          "description": "The description of the board.",
          "type": "string",
          "x-ms-summary": "Board Description"
        },
        "idOrganization": {
          "description": "The id of the organization.",
          "type": "string",
          "x-ms-summary": "Organization Id",
          "x-ms-visibility": "advanced"
        },
        "invitations": {
          "description": "The list of invitations on the board.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Invitations",
          "x-ms-visibility": "advanced"
        },
        "invited": {
          "description": "A boolean value (true, false) determining whether or not the account is invited to the board.",
          "type": "boolean",
          "x-ms-summary": "Invited",
          "x-ms-visibility": "advanced"
        },
        "labelNames": {
          "$ref": "#/definitions/Label"
        },
        "memberships": {
          "description": "The set of board memberships.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Membership"
          },
          "x-ms-summary": "Board Memberships",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "description": "The name of the board.",
          "type": "string",
          "x-ms-summary": "Board Name"
        },
        "pinned": {
          "description": "A boolean value (true, false) determining whether or not the board is pinned.",
          "type": "boolean",
          "x-ms-summary": "Is Board Pinned",
          "x-ms-visibility": "advanced"
        },
        "powerUps": {
          "description": "The set of power ups on the board.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Powerups",
          "x-ms-visibility": "advanced"
        },
        "perfs": {
          "$ref": "#/definitions/Perfs"
        },
        "shortLink": {
          "description": "The short link of the board.",
          "type": "string",
          "x-ms-summary": "Board Short Link",
          "x-ms-visibility": "advanced"
        },
        "shortUrl": {
          "description": "The short url to the board.",
          "type": "string",
          "x-ms-summary": "Board Short Url"
        },
        "starred": {
          "description": "A value determining whether or not the board is starred.",
          "type": "boolean",
          "x-ms-summary": "Is Starred",
          "x-ms-visibility": "advanced"
        },
        "subscribed": {
          "description": "A value determining whether or not the account is subscribed to the board.",
          "type": "boolean",
          "x-ms-summary": "Subscribed To Board",
          "x-ms-visibility": "advanced"
        },
        "url": {
          "description": "The full url of the board.",
          "type": "string",
          "x-ms-summary": "Board Url",
          "x-ms-visibility": "advanced"
        },
        "checklists": {
          "description": "The set of board checklists.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checklist"
          },
          "x-ms-summary": "Checklists",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Label": {
      "description": "A Trello Label Object",
      "type": "object",
      "properties": {
        "green": {
          "description": "The value of the green label.",
          "type": "string",
          "x-ms-summary": "Green Label",
          "x-ms-visibility": "advanced"
        },
        "yellow": {
          "description": "The value of the yellow label.",
          "type": "string",
          "x-ms-summary": "Yellow Label",
          "x-ms-visibility": "advanced"
        },
        "orange": {
          "description": "The value of the orange label.",
          "type": "string",
          "x-ms-summary": "Orange Label",
          "x-ms-visibility": "advanced"
        },
        "red": {
          "description": "The value of the red label.",
          "type": "string",
          "x-ms-summary": "Red Label",
          "x-ms-visibility": "advanced"
        },
        "purple": {
          "description": "The value of the purple label.",
          "type": "string",
          "x-ms-summary": "Purple Label",
          "x-ms-visibility": "advanced"
        },
        "blue": {
          "description": "The value of the blue label.",
          "type": "string",
          "x-ms-summary": "Blue Label",
          "x-ms-visibility": "advanced"
        },
        "sky": {
          "description": "The value of the sky blue label.",
          "type": "string",
          "x-ms-summary": "Sky Blue Label",
          "x-ms-visibility": "advanced"
        },
        "lime": {
          "description": "The value of the lime green label.",
          "type": "string",
          "x-ms-summary": "Lime Green Label",
          "x-ms-visibility": "advanced"
        },
        "pink": {
          "description": "The value of the pink label.",
          "type": "string",
          "x-ms-summary": "Pink Label",
          "x-ms-visibility": "advanced"
        },
        "black": {
          "description": "The value of the black label.",
          "type": "string",
          "x-ms-summary": "Black Label",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Membership": {
      "description": "A Trello Membership Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique Id of the membership.",
          "type": "string",
          "x-ms-summary": "Membership Id",
          "x-ms-visibility": "advanced"
        },
        "idMember": {
          "description": "The unique Id of the member.",
          "type": "string",
          "x-ms-summary": "Member Id",
          "x-ms-visibility": "advanced"
        },
        "memberType": {
          "description": "The type of member.",
          "type": "string",
          "x-ms-summary": "Member type",
          "x-ms-visibility": "advanced"
        },
        "unconfirmed": {
          "description": "A boolean value (true, false) determining whether or not the membership is unconfirmed.",
          "type": "boolean",
          "x-ms-summary": "Unconfirmed Membership",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Perfs": {
      "description": "A Trello Perfs Object",
      "type": "object",
      "properties": {
        "permissionLevel": {
          "description": "The permission level of the object.",
          "type": "string",
          "x-ms-summary": "Permission Level",
          "x-ms-visibility": "advanced"
        },
        "voting": {
          "description": "Who can vote on the object.",
          "type": "string",
          "x-ms-summary": "Voting Permission",
          "x-ms-visibility": "advanced"
        },
        "comments": {
          "description": "Who can comment on the object.",
          "type": "string",
          "x-ms-summary": "Commenting Permission",
          "x-ms-visibility": "advanced"
        },
        "invitations": {
          "description": "Who can invite people to the object.",
          "type": "string",
          "x-ms-summary": "Invitation Permission",
          "x-ms-visibility": "advanced"
        },
        "selfJoin": {
          "description": "A boolean value (true, false) determining whether or not the object can self join.",
          "type": "boolean",
          "x-ms-summary": "Self Join Permission",
          "x-ms-visibility": "advanced"
        },
        "cardCovers": {
          "description": "A boolean value (true, false) determining whether or not the object has access to card covers.",
          "type": "boolean",
          "x-ms-summary": "Can Access Card Covers",
          "x-ms-visibility": "advanced"
        },
        "calendarFeedEnabled": {
          "description": "A boolean value (true, false) determining whether or not the calendar feed enabled.",
          "type": "boolean",
          "x-ms-summary": "Is Calendar Feed Enabled",
          "x-ms-visibility": "advanced"
        },
        "background": {
          "description": "The background of the object.",
          "type": "string",
          "x-ms-summary": "Object Background",
          "x-ms-visibility": "advanced"
        },
        "backgroundColor": {
          "description": "The background color of the object, in hex notation.",
          "type": "string",
          "x-ms-summary": "Object Background Color",
          "x-ms-visibility": "advanced"
        },
        "backgroundImage": {
          "description": "The background image of the object.",
          "type": "string",
          "x-ms-summary": "Object Background Image",
          "x-ms-visibility": "advanced"
        },
        "backgroundImageScaled": {
          "description": "The scaled version of the background image.",
          "type": "string",
          "x-ms-summary": "Scaled Background Image",
          "x-ms-visibility": "advanced"
        },
        "backgroundTile": {
          "description": "The background tile of the object.",
          "type": "boolean",
          "x-ms-summary": "Object Background Tile",
          "x-ms-visibility": "advanced"
        },
        "backgroundBrightness": {
          "description": "The brightness of the object background.",
          "type": "string",
          "x-ms-summary": "Background Brightness",
          "x-ms-visibility": "advanced"
        },
        "canBePublic": {
          "description": "A boolean value (true, false) determining whether or not the object can be public.",
          "type": "boolean",
          "x-ms-summary": "Can Object be Public",
          "x-ms-visibility": "advanced"
        },
        "canBeOrg": {
          "description": "A boolean value (true, false) determining whether or not the object can be part of the organization",
          "type": "boolean",
          "x-ms-summary": "Can be Part of Organization",
          "x-ms-visibility": "advanced"
        },
        "canBePrivate": {
          "description": "A boolean value (true, false) determining whether or not the object can be private.",
          "type": "boolean",
          "x-ms-summary": "Can Object be Private",
          "x-ms-visibility": "advanced"
        },
        "canInvite": {
          "description": "A boolean value (true, false) determining whether or not the object can have invititations.",
          "type": "boolean",
          "x-ms-summary": "Can Invite",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "UpdateBoard": {
      "description": "A Trello Board Object used to create a board",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the board.",
          "type": "string",
          "x-ms-summary": "Board Name",
          "x-ms-visibility": "important"
        },
        "defaultLists": {
          "description": "A string (true, false) determining whether or not to create default lists.",
          "enum": [
            "true",
            "false"
          ],
          "type": "string",
          "x-ms-summary": "Create Default Lists",
          "x-ms-visibility": "advanced"
        },
        "desc": {
          "description": "The description of the board.",
          "type": "string",
          "x-ms-summary": "Board Description",
          "x-ms-visibility": "important"
        },
        "idOrganization": {
          "description": "The id of the team.",
          "type": "string",
          "x-ms-summary": "Team Id",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListTeams",
            "parameters": {},
            "value-path": "id",
            "value-title": "displayName"
          }
        },
        "prefs_permissionLevel": {
          "description": "The permission level of the board.",
          "enum": [
            "org",
            "private",
            "public"
          ],
          "type": "string",
          "x-ms-summary": "Permission Level",
          "x-ms-visibility": "advanced"
        },
        "prefs_comments": {
          "description": "The comment preferences on the board. Valid options are 'disabled', 'members', 'observers', 'org' or 'public'.",
          "enum": [
            "disabled",
            "members",
            "observers",
            "org",
            "public"
          ],
          "type": "string",
          "x-ms-summary": "Comment Preferences",
          "x-ms-visibility": "advanced"
        },
        "prefs_invitations": {
          "description": "The invitation preferences of the board. Valid options are 'admins' or 'members'.",
          "enum": [
            "admins",
            "members"
          ],
          "type": "string",
          "x-ms-summary": "Invitation Preferences",
          "x-ms-visibility": "advanced"
        },
        "prefs_cardCovers": {
          "description": "A string (true, false) determining whether or not to use card covers.",
          "enum": [
            "true",
            "false"
          ],
          "type": "string",
          "x-ms-summary": "Use Card Covers",
          "x-ms-visibility": "advanced"
        },
        "prefs_background": {
          "description": "The background color of the board.",
          "enum": [
            "blue",
            "orange",
            "green",
            "red",
            "purple",
            "pink",
            "lime",
            "sky",
            "grey"
          ],
          "type": "string",
          "x-ms-summary": "Background Color",
          "x-ms-visibility": "advanced"
        },
        "prefs_voting": {
          "description": "The voting power-up preferences of the board.",
          "enum": [
            "disabled",
            "members",
            "observers",
            "org",
            "public"
          ],
          "type": "string",
          "x-ms-summary": "Voting Power-up Preferences",
          "x-ms-visibility": "advanced"
        },
        "prefs_cardAging": {
          "description": "The card aging power-up preferences of the board.",
          "enum": [
            "disabled",
            "pirate",
            "regular"
          ],
          "type": "string",
          "x-ms-summary": "Card Aging Power-up Preferences",
          "x-ms-visibility": "advanced"
        },
        "enable_calendar": {
          "description": "A string (true, false) determining whether or not to enable calendar power-up",
          "enum": [
            "true",
            "false"
          ],
          "type": "string",
          "x-ms-summary": "Enable Calendar Power-up",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "List": {
      "description": "A Trello List Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique Id of the list.",
          "type": "string",
          "x-ms-summary": "List Id",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "description": "The name of the list.",
          "type": "string",
          "x-ms-summary": "List Name"
        },
        "closed": {
          "description": "A boolean value (true, false) determining whether or not the list is closed.",
          "type": "boolean",
          "x-ms-summary": "Is Closed",
          "x-ms-visibility": "advanced"
        },
        "idBoard": {
          "description": "The unique Id of the board which the list belongs to.",
          "type": "string",
          "x-ms-summary": "Board Id",
          "x-ms-visibility": "advanced"
        },
        "pos": {
          "format": "double",
          "description": "The position of the list.",
          "type": "number",
          "x-ms-summary": "List Position",
          "x-ms-visibility": "advanced"
        },
        "subscribed": {
          "description": "A boolean value (true, false) determining whether or not to the account is subscribed to the list.",
          "type": "boolean",
          "x-ms-summary": "Is List Subscribed To",
          "x-ms-visibility": "advanced"
        },
        "cards": {
          "description": "The cards inside the list.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Card"
          },
          "x-ms-summary": "Cards In List",
          "x-ms-visibility": "advanced"
        },
        "board": {
          "$ref": "#/definitions/Board"
        }
      }
    },
    "CreateListResponse": {
      "description": "A Trello List Object",
      "required": [
        "name",
        "idBoard"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique Id of the list.",
          "type": "string",
          "x-ms-summary": "List Id",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "description": "The name of the list.",
          "type": "string",
          "x-ms-summary": "List Name",
          "x-ms-visibility": "important"
        },
        "idBoard": {
          "description": "The unique Id of the board the list belongs to.",
          "type": "string",
          "x-ms-summary": "Board Id",
          "x-ms-visibility": "important",
          "x-ms-dynamic-values": {
            "operationId": "ListBoardsSimple",
            "parameters": {},
            "value-path": "id",
            "value-title": "name"
          }
        },
        "pos": {
          "format": "double",
          "description": "The position of the list.",
          "type": "number",
          "x-ms-summary": "List Position",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Team": {
      "description": "A Trello Team",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique ID of the team.",
          "type": "string",
          "x-ms-summary": "Team Id",
          "x-ms-visibility": "advanced"
        },
        "desc": {
          "description": "The description of the team.",
          "type": "string",
          "x-ms-summary": "Team Description"
        },
        "displayName": {
          "description": "The display name of the team.",
          "type": "string",
          "x-ms-summary": "Team Display Name"
        },
        "idBoards": {
          "description": "The boards assigned to this team.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-ms-summary": "Board Ids",
          "x-ms-visibility": "advanced"
        },
        "billableMemberCount": {
          "format": "int32",
          "description": "The number of members in this team.",
          "type": "integer",
          "x-ms-summary": "Member Count",
          "x-ms-visibility": "advanced"
        },
        "memberships": {
          "description": "The memberships for this team.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Membership"
          },
          "x-ms-summary": "Memberships",
          "x-ms-visibility": "advanced"
        },
        "WebSite": {
          "description": "The team website.",
          "type": "string",
          "x-ms-summary": "Website",
          "x-ms-visibility": "advanced"
        },
        "prefs": {
          "$ref": "#/definitions/TeamPreferences"
        }
      }
    },
    "TeamPreferences": {
      "description": "A Trello Team Preference Object",
      "type": "object",
      "properties": {
        "permissionLevel": {
          "description": "The permission level of the team.",
          "type": "string",
          "x-ms-summary": "Permission Level",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Member": {
      "description": "A Trello Member Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique Id of the member.",
          "type": "string",
          "x-ms-summary": "Member Id",
          "x-ms-visibility": "advanced"
        },
        "fullName": {
          "description": "The full name of the member.",
          "type": "string",
          "x-ms-summary": "Full Name",
          "x-ms-visibility": "advanced"
        },
        "username": {
          "description": "The username of the member.",
          "type": "string",
          "x-ms-summary": "Username",
          "x-ms-visibility": "advanced"
        },
        "initials": {
          "description": "The initials of the member.",
          "type": "string",
          "x-ms-summary": "Initials",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Webhook": {
      "description": "A Trello Webhook Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique Id of the webhook.",
          "type": "string",
          "x-ms-summary": "WebhookId",
          "x-ms-visibility": "advanced"
        },
        "description": {
          "description": "Brief Description of the webhook",
          "type": "string",
          "x-ms-summary": "Description",
          "x-ms-visibility": "advanced"
        },
        "idModel": {
          "description": "ID of the model to be monitored (i.e. card,board, etc.)",
          "type": "string",
          "x-ms-summary": "Trello Model Id",
          "x-ms-visibility": "advanced"
        },
        "callbackURL": {
          "description": "The callbackURL to receive webhook notifications",
          "type": "string",
          "x-ms-summary": "callback URL",
          "x-ms-visibility": "advanced"
        },
        "active": {
          "description": "Determines whether the webhook is active and sending POST requests.",
          "type": "boolean",
          "x-ms-summary": "Webhook Status",
          "x-ms-visibility": "advanced"
        },
        "consecutiveFailures": {
          "description": "The number of consecutive Failures in posting webhook notifications.",
          "type": "number",
          "x-ms-summary": "Number of Consecutive Failures",
          "x-ms-visibility": "advanced"
        },
        "firstConsecutiveFailDate": {
          "description": "The date of First Consecutive Failure.",
          "type": "string",
          "x-ms-summary": "First Consecutive Failure Date",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "BoardLabel": {
      "description": "A Trello Label Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The Label Id",
          "type": "string",
          "x-ms-summary": "Label Id"
        },
        "name": {
          "description": "The Label name.",
          "type": "string",
          "x-ms-summary": "Label name"
        },
        "color": {
          "description": "The Label color.",
          "type": "string",
          "x-ms-summary": "Label color"
        }
      }
    },
    "Comment": {
      "description": "The model for getting a comment",
      "type": "object",
      "properties": {
        "memberCreator": {
          "$ref": "#/definitions/Member"
        },
        "text": {
          "description": "The text of the comment.",
          "type": "string",
          "x-ms-summary": "Comment Text",
          "x-ms-visibility": "important"
        },
        "date": {
          "format": "date-time",
          "description": "The datetime the comment was left.",
          "type": "string",
          "x-ms-summary": "Datetime Created",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CommentPost": {
      "description": "The model for posting a comment",
      "type": "object",
      "properties": {
        "text": {
          "description": "The text of the comment.",
          "type": "string",
          "x-ms-summary": "Comment Text",
          "x-ms-visibility": "important"
        }
      }
    },
    "CreateBoard": {
      "description": "A Trello Board Object used to create a board",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the board.",
          "type": "string",
          "x-ms-summary": "Board Name",
          "x-ms-visibility": "important"
        },
        "defaultLists": {
          "description": "A string (true, false) determining whether or not to create default lists.",
          "enum": [
            "true",
            "false"
          ],
          "type": "string",
          "x-ms-summary": "Create Default Lists",
          "x-ms-visibility": "advanced"
        },
        "desc": {
          "description": "The description of the board.",
          "type": "string",
          "x-ms-summary": "Board Description",
          "x-ms-visibility": "important"
        },
        "idOrganization": {
          "description": "The id of the team.",
          "type": "string",
          "x-ms-summary": "Team Id",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListTeams",
            "parameters": {},
            "value-path": "id",
            "value-title": "displayName"
          }
        },
        "prefs_permissionLevel": {
          "description": "The permission level of the board. Valid options are 'org', 'private', or 'public'.",
          "enum": [
            "org",
            "private",
            "public"
          ],
          "type": "string",
          "x-ms-summary": "Permission Level",
          "x-ms-visibility": "advanced"
        },
        "prefs_comments": {
          "description": "The comment preferences of the board.",
          "enum": [
            "disabled",
            "members",
            "observers",
            "org",
            "public"
          ],
          "type": "string",
          "x-ms-summary": "Comment Preferences",
          "x-ms-visibility": "advanced"
        },
        "prefs_invitations": {
          "description": "The invitation preferences of the board.",
          "enum": [
            "admins",
            "members"
          ],
          "type": "string",
          "x-ms-summary": "Invitation Preferences",
          "x-ms-visibility": "advanced"
        },
        "prefs_cardCovers": {
          "description": "A string (true, false) determining whether or not to use card covers.",
          "enum": [
            "true",
            "false"
          ],
          "type": "string",
          "x-ms-summary": "Use Card Covers",
          "x-ms-visibility": "advanced"
        },
        "prefs_background": {
          "description": "The background color of the board.",
          "enum": [
            "blue",
            "orange",
            "green",
            "red",
            "purple",
            "pink",
            "lime",
            "sky",
            "grey"
          ],
          "type": "string",
          "x-ms-summary": "Background Color",
          "x-ms-visibility": "advanced"
        },
        "prefs_voting": {
          "description": "The voting power-up preferences of the board.",
          "enum": [
            "disabled",
            "members",
            "observers",
            "org",
            "public"
          ],
          "type": "string",
          "x-ms-summary": "Voting Power-up Preferences",
          "x-ms-visibility": "advanced"
        },
        "prefs_cardAging": {
          "description": "The card aging power-up preferences of the board.",
          "enum": [
            "disabled",
            "pirate",
            "regular"
          ],
          "type": "string",
          "x-ms-summary": "Card Aging Power-up Preferences",
          "x-ms-visibility": "advanced"
        },
        "enable_calendar": {
          "description": "A string (true, false) determining whether or not to enable calendar power-up.",
          "enum": [
            "true",
            "false"
          ],
          "type": "string",
          "x-ms-summary": "Enable Calendar Power-up",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CreateList": {
      "description": "A Trello List Object",
      "required": [
        "name",
        "idBoard"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the list.",
          "type": "string",
          "x-ms-summary": "List Name",
          "x-ms-visibility": "important"
        },
        "idBoard": {
          "description": "The unique Id of the board to create the list in.",
          "type": "string",
          "x-ms-summary": "Board Id",
          "x-ms-visibility": "important",
          "x-ms-dynamic-values": {
            "operationId": "ListBoardsSimple",
            "parameters": {},
            "value-path": "id",
            "value-title": "name"
          }
        },
        "pos": {
          "description": "The position of the list. Specify top, bottom, or a positive number.",
          "enum": [
            "top",
            "bottom"
          ],
          "type": "string",
          "x-ms-summary": "List Position",
          "x-ms-visibility": "advanced"
        },
        "idListSource": {
          "description": "The id of the list to copy into the new list.",
          "type": "string",
          "x-ms-summary": "List Source",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "ListListsSimple",
            "parameters": {
              "board_id": {
                "parameter": "idBoard"
              }
            },
            "value-path": "id",
            "value-title": "name"
          },
          "x-ms-dynamic-list": {
            "operationId": "ListListsSimple",
            "parameters": {
              "board_id": {
                "parameterReference": "list/idBoard"
              }
            },
            "itemValuePath": "id",
            "itemTitlePath": "name"
          }
        }
      }
    },
    "Checklist": {
      "description": "A Trello Checklist Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique Id of the checklist.",
          "type": "string",
          "x-ms-summary": "Checklist Id",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "description": "The name of the checklist.",
          "type": "string",
          "x-ms-summary": "Checklist name",
          "x-ms-visibility": "advanced"
        },
        "pos": {
          "description": "The position of the checklist.",
          "type": "integer",
          "x-ms-summary": "Checklist position",
          "x-ms-visibility": "advanced"
        },
        "idBoard": {
          "description": "The unique Id of the board.",
          "type": "string",
          "x-ms-summary": "Board Id",
          "x-ms-visibility": "advanced"
        },
        "idCard": {
          "description": "The unique Id of the card.",
          "type": "string",
          "x-ms-summary": "Card Id",
          "x-ms-visibility": "advanced"
        },
        "checkItems": {
          "description": "The list of the checklist items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checkitem"
          },
          "x-ms-summary": "Checkitems",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Checkitem": {
      "description": "A Trello Checkitem Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique Id of the checkitem.",
          "type": "string",
          "x-ms-summary": "Checkitem Id",
          "x-ms-visibility": "advanced"
        },
        "name": {
          "description": "The name of them checkitem.",
          "type": "string",
          "x-ms-summary": "Checkitem name",
          "x-ms-visibility": "advanced"
        },
        "nameData": {
          "description": "The nameData of them checkitem.",
          "type": "object",
          "x-ms-summary": "Checkitem nameData",
          "x-ms-visibility": "advanced"
        },
        "pos": {
          "description": "The position of the checkitem.",
          "type": "number",
          "format": "double",
          "x-ms-summary": "Checkitem position",
          "x-ms-visibility": "advanced"
        },
        "state": {
          "description": "The state of the checkitem.",
          "type": "string",
          "x-ms-summary": "Checkitem state",
          "x-ms-visibility": "advanced"
        },
        "due": {
          "description": "The due date of the checkitem.",
          "type": "string",
          "x-ms-summary": "Checkitem due date",
          "x-ms-visibility": "advanced"
        },
        "idMember": {
          "description": "The unique Id of the member.",
          "type": "string",
          "x-ms-summary": "Member Id",
          "x-ms-visibility": "advanced"
        },
        "idChecklist": {
          "description": "The unique Id of the checklist.",
          "type": "string",
          "x-ms-summary": "Checklist Id",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ClientSubscription": {
      "description": "Describes the subscription information for webhook.",
      "required": [
        "NotificationURL"
      ],
      "type": "object",
      "properties": {
        "NotificationURL": {
          "description": "Callback url to the flow engine. Expected as part of the request and provided by Flow.",
          "type": "string",
          "x-ms-visibility": "internal",
          "x-ms-notification-url": true
        }
      }
    },
    "SubscriptionResponse": {
      "description": "Model for Approval webhook Subscription",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the subscription",
          "type": "string"
        },
        "NotificationURL": {
          "description": "Notification Url",
          "type": "string"
        },
        "resource": {
          "description": "Resource of the subscription request",
          "type": "string"
        },
        "notificationType": {
          "description": "Notification Type",
          "type": "string"
        }
      }
    },
    "SubscriptionPayload": {
      "description": "Model for webhook request",
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "webhook action",
          "required": [
            "type"
          ],
          "type": "object",
          "properties": {
            "type": {
              "description": "webhook action type",
              "type": "string"
            }
          }
        }
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://trello.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.atlassian.com/legal/privacy-policy"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/trello"
  }
}
