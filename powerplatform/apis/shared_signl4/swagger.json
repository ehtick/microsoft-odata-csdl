{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Derdack SIGNL4",
    "description": "Derdack SIGNL4 is a mobile notification app to reliably notify operations teams on duty and boost their productivity.",
    "contact": {
      "url": "https://www.signl4.com/feedback-we-love-hear-from-you/",
      "email": "info@signl4.com"
    },
    "license": {
      "name": "Derdack GmbH",
      "url": "https://www.signl4.com"
    },
    "x-ms-api-annotation": {
      "status": "Production"
    }
  },
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/signl4",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectionId}/alerts/acknowledgeAll": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Confirm all",
        "description": "This method confirms all unhandled alerts your team currently has.",
        "operationId": "AlertsAcknowledgeAllPost",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Required information could not be found in the request/claims.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          },
          "404": {
            "description": "Required entities could not be found in the database.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/signl4/#confirm-all"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/alerts": {
      "post": {
        "tags": [
          "Alerts"
        ],
        "summary": "Trigger Alert",
        "description": "Triggers a new alert for your team. All team members on duty will receive alert notifications.",
        "operationId": "AlertsPost",
        "consumes": [
          "application/json",
          "text/json",
          "application/json-patch+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "alertInfo",
            "in": "body",
            "description": "Alert to raise.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RaiseAlertInfo"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AlertInfo"
            }
          },
          "400": {
            "description": "Required information could not be found in the request/claims.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          },
          "404": {
            "description": "Required entities could not be found in the database.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/signl4/#trigger-alert"
        }
      }
    },
    "/{connectionId}/alerts/report": {
      "get": {
        "tags": [
          "Alerts"
        ],
        "summary": "Get Alert Report",
        "description": "Returns information about the occurred alert volume in different time periods as well as information about the response behavior (amount of confirmed and unhandled alerts) of your team members.",
        "operationId": "GetAlertsReport",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AlertReport"
            },
            "examples": {
              "application/json": {
                "last24Hours": {
                  "acknowledged": 12,
                  "unhandled": 1
                },
                "subscriptionId": "9cba4502-95b9-4052-8993-ec06905e21dc",
                "teamCurrentDuty": {
                  "acknowledged": 34,
                  "start": "2017-11-07T11:49:21.3310808Z",
                  "unhandled": 5
                },
                "teamId": "f15614df-a363-49a4-91d8-9d9ba18a8bbe",
                "userId": "35c4e883-cc74-483e-9339-b4bd25d6c972"
              }
            }
          },
          "400": {
            "description": "Required information could not be found in the request/claims.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          },
          "404": {
            "description": "Required entities could not be found in the database.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/signl4/#get-alert-report"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all Users",
        "description": "Returns a list of user objects with details such as their email address. Only users who are part of your team will be returned.",
        "operationId": "GetAllUsers",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "User could be successfully identified.",
            "schema": {
              "$ref": "#/definitions/GetAllUsers_Response"
            },
            "examples": {
              "application/json": [
                {
                  "id": "21EF8D73-1DEC-47C6-934B-E500B952848B",
                  "mail": "nelly@signl4.com",
                  "name": "Nelly",
                  "subscriptionId": "09E0E817-F0E0-4453-B9C7-BF21E70F903F"
                },
                {
                  "id": "88167B9E-BC60-451E-98C7-19AA8025FB5C",
                  "mail": "frieda@signl4.com",
                  "name": "Frieda",
                  "subscriptionId": "09E0E817-F0E0-4453-B9C7-BF21E70F903F"
                }
              ]
            }
          },
          "400": {
            "description": "Required authentification info could not be found in the request/claims.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          },
          "403": {
            "description": "You're not allowed to request the users with their information."
          },
          "404": {
            "description": "Required entities could not be found in the database.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/signl4/#get-all-users"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by id",
        "description": "Returns a user's details such as name, email address, etc.",
        "operationId": "GetUserById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Identifier of the user to get. Use 'Me' to get information about the currently logged in user. Can also be an email address of a user in the team or the unique id of an according user object.",
            "required": true,
            "x-ms-test-value": "Me",
            "x-ms-summary": "User Id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User could be successfully identified.",
            "schema": {
              "$ref": "#/definitions/UserInfo"
            },
            "examples": {
              "application/json": {
                "id": "21ef8d73-1dec-47c6-934b-e500b952848b",
                "mail": "nelly@signl4.com",
                "name": "Nelly",
                "subscriptionId": "09e0e817-f0e0-4453-b9c7-bf21e70f903f"
              }
            }
          },
          "400": {
            "description": "Required authentication info could not be found in the request/claims.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          },
          "403": {
            "description": "You're not allowed to request that user's information."
          },
          "404": {
            "description": "Required entities could not be found in the database.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/signl4/#get-user-by-id"
        }
      }
    },
    "/{connectionId}/users/{userId}/punchIn": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Punch user in",
        "description": "Using this operation, the specified user will be punched in to duty.",
        "operationId": "PunchInUserById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Identifier of the user to punch in. Use 'Me' to get information about the currently logged in user. Can also be an email address of a user in the team or the unique id of an according user object.",
            "required": true,
            "x-ms-test-value": "Me",
            "x-ms-summary": "User Id",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserDutyInfo"
            },
            "examples": {
              "application/json": {
                "lastChange": "2017-09-22T05:30:00",
                "onDuty": true,
                "overdue": false
              }
            }
          },
          "400": {
            "description": "Required information could not be found in the request/claims.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          },
          "403": {
            "description": "The user tried to change the punch in a different user.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          },
          "404": {
            "description": "Required entities could not be found in the database.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/signl4/#punch-user-in"
        }
      }
    },
    "/{connectionId}/users/{userId}/punchOut": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Punch user out",
        "description": "Using this operation, the specified user will be punched out from duty.",
        "operationId": "PunchOutUserById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Identifier of the user to punch out. Use 'Me' to get information about the currently logged in user. Can also be an email address of a user in the team or the unique id of an according user object.",
            "required": true,
            "x-ms-test-value": "Me",
            "x-ms-summary": "User Id",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "The user was punched out successfully.",
            "schema": {
              "$ref": "#/definitions/UserDutyInfo"
            },
            "examples": {
              "application/json": {
                "lastChange": "2017-09-22T05:30:00",
                "onDuty": true,
                "overdue": false
              }
            }
          },
          "400": {
            "description": "Required authentication information could not be found in the request/claims.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          },
          "403": {
            "description": "The requesting user tried to punch out someone else, which is not allowed.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          },
          "404": {
            "description": "The desired user was not found by passed id.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          },
          "409": {
            "description": "The desired user was not punched out because it would violate the minumum on-duty members setting from the team.",
            "schema": {
              "$ref": "#/definitions/ErrorResponseContent"
            }
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/signl4/#punch-user-out"
        }
      }
    }
  },
  "definitions": {
    "UserInfo": {
      "description": "Basic information about a user.",
      "type": "object",
      "properties": {
        "id": {
          "description": "ID of the user.",
          "type": "string",
          "x-ms-summary": "User Id",
          "x-ms-visibility": "advanced"
        },
        "mail": {
          "description": "The user's mail address.",
          "type": "string",
          "x-ms-summary": "Email"
        },
        "name": {
          "description": "Name of the user.",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "subscriptionId": {
          "description": "ID of the subscription the user belongs to.",
          "type": "string",
          "x-ms-summary": "Subscription Id",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ErrorResponseContent": {
      "required": [
        "message",
        "code"
      ],
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "requestId": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "required": [
              "message"
            ],
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "details": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "RaiseAlertInfo": {
      "required": [
        "title",
        "text",
        "severity",
        "flags"
      ],
      "type": "object",
      "example": {
        "title": "Temperature alert",
        "text": "Temperature decreased by 10F within the last 4 minutes.",
        "parameters": [
          {
            "name": "temperatureNew",
            "value": "21F"
          },
          {
            "name": "temperatureOld",
            "value": "31F"
          },
          {
            "name": "deviceId",
            "value": "X90-cutting-A"
          }
        ]
      },
      "properties": {
        "externalId": {
          "type": "string",
          "description": "A unique id in your system for referencing this alert. You may use this field to match alerts that you have triggered with that id, e.g. when querying for an updated status of the alert later on.",
          "x-ms-summary": "External id",
          "x-ms-visibility": "important"
        },
        "category": {
          "type": "string",
          "description": "Name of a system or device category in your SIGNL4 team to which this alert should belong.",
          "x-ms-summary": "Alert category",
          "x-ms-visibility": "important"
        },
        "severity": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "description": "Severity of this alert in SIGNL4. This field is reserved for later use.",
          "x-ms-summary": "Alert severity",
          "x-ms-visibility": "internal",
          "default": 0
        },
        "attachments": {
          "type": "array",
          "description": "Collection of attachments such as images that belong to this alert.",
          "x-ms-visibility": "advanced",
          "items": {
            "required": [
              "name",
              "contentType",
              "content"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique id of this attachment in SIGNL4.",
                "x-ms-summary": "Unique id of this attachment in SIGNL4",
                "x-ms-visibility": "advanced"
              },
              "encoding": {
                "format": "int32",
                "enum": [
                  0,
                  1
                ],
                "type": "integer",
                "description": "Indicates if the content is Base64 encoded (1) or not (0).",
                "x-ms-summary": "Attachment encoding",
                "x-ms-visibility": "advanced",
                "default": 0
              },
              "name": {
                "type": "string",
                "description": "Name of this attachment, e.g. an original image file name.",
                "x-ms-summary": "Attachment name",
                "x-ms-visibility": "advanced"
              },
              "contentType": {
                "type": "string",
                "description": "MIME content type of this attachment such as image/jpg (with encoding 1) or text/plain (e.g. with encoding 0).",
                "x-ms-summary": "Attachment MIME type",
                "x-ms-visibility": "advanced"
              },
              "content": {
                "type": "string",
                "description": "Data of this attachment, such as a Base64 string representing a jpg image.",
                "x-ms-summary": "Attachment data",
                "x-ms-visibility": "advanced"
              }
            }
          }
        },
        "parameters": {
          "type": "array",
          "description": "A collection of of key/value pairs with additional device or system parameters that belong to this alert.",
          "x-ms-visibility": "advanced",
          "items": {
            "required": [
              "name",
              "value"
            ],
            "type": "object",
            "description": "An object that represents a system or device parameter that belongs to this alert.",
            "x-ms-visibility": "advanced",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of this parameter, e.g. temperature.",
                "x-ms-summary": "Parameter name",
                "x-ms-visibility": "advanced"
              },
              "type": {
                "format": "int32",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  11,
                  12,
                  13,
                  14,
                  15,
                  16,
                  17,
                  100
                ],
                "type": "integer",
                "description": "Type of this parameter. This field is reserved for later use and should always match 0 when setting it.",
                "x-ms-summary": "Parameter type",
                "x-ms-visibility": "advanced",
                "default": 0
              },
              "value": {
                "type": "string",
                "description": "The value of the parameter, e.g. 56F.",
                "x-ms-summary": "Parameter value",
                "x-ms-visibility": "advanced"
              }
            }
          }
        },
        "title": {
          "type": "string",
          "description": "Title or subject of this alert, e.g. 'Temperature alert'.",
          "x-ms-summary": "Alert title",
          "x-ms-visibility": "important"
        },
        "text": {
          "type": "string",
          "description": "Textual alert details, e.g. 'Temperature decreased by 10F within the last 4 minutes'.",
          "x-ms-summary": "Alert details",
          "x-ms-visibility": "important"
        },
        "flags": {
          "format": "int32",
          "type": "integer",
          "description": "Internal property reserved for later use.",
          "x-ms-summary": "Reserved property",
          "x-ms-visibility": "internal",
          "default": 0
        }
      }
    },
    "AlertInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique id of the alert in SIGNL4.",
          "x-ms-summary": "Alert id",
          "x-ms-visibility": "important"
        },
        "externalId": {
          "type": "string",
          "description": "A unique id in your system for referencing this alert. You may use this field to match alerts that you have triggered with that id, e.g. when querying for an updated status of the alert later on.",
          "x-ms-summary": "External id",
          "x-ms-visibility": "advanced"
        },
        "subscriptionId": {
          "type": "string",
          "description": "Unique id of your SIGNL4 subscription.",
          "x-ms-summary": "Subscription id",
          "x-ms-visibility": "advanced"
        },
        "teamId": {
          "type": "string",
          "description": "Unique id of your SIGNL4 team.",
          "x-ms-summary": "Team id",
          "x-ms-visibility": "advanced"
        },
        "categoryId": {
          "type": "string",
          "description": "Unique id of a system or device category in your SIGNL4 team to which this alert belongs.",
          "x-ms-summary": "Category id",
          "x-ms-visibility": "advanced"
        },
        "category": {
          "type": "string",
          "description": "Name of a system or device category in your SIGNL4 team to which this alert belongs.",
          "x-ms-summary": "System or device category",
          "x-ms-visibility": "advanced"
        },
        "severity": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "description": "Severity of this alert in SIGNL4. This field is reserved for later use.",
          "x-ms-summary": "Alert severity",
          "x-ms-visibility": "advanced"
        },
        "eventSourceId": {
          "type": "string",
          "description": "Unique id of the API or source through which this alert was triggered for your SIGNL4 team.",
          "x-ms-summary": "Unique id of the API or source through which this alert was triggered for your SIGNL4 team",
          "x-ms-visibility": "advanced"
        },
        "eventSourceType": {
          "format": "int32",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer",
          "description": "Type of the API or source through which this alert was triggered for your SIGNL4 team.",
          "x-ms-summary": "Type of the API or source through which this alert was triggered for your SIGNL4 team",
          "x-ms-visibility": "advanced"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string",
          "description": "Time at which this alert was last modified in SIGNL4.",
          "x-ms-summary": "Time at which this alert was last modified in SIGNL4",
          "x-ms-visibility": "advanced"
        },
        "attachments": {
          "type": "array",
          "description": "Collection of attachmanets such as images that belong to this alert.",
          "x-ms-summary": "Collection of attachmanets such as images that belong to this alert",
          "x-ms-visibility": "advanced",
          "items": {
            "required": [
              "name",
              "contentType",
              "content"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique id of this attachments in SIGNL4.",
                "x-ms-summary": "Unique id of this attachments in SIGNL4",
                "x-ms-visibility": "advanced"
              },
              "encoding": {
                "format": "int32",
                "enum": [
                  0,
                  1
                ],
                "type": "integer",
                "description": "Indicates if the content is Base64 or encoded (1) or not (0).",
                "x-ms-summary": "Indicates if the content is Base64 or encoded (1) or not (0)",
                "x-ms-visibility": "advanced"
              },
              "name": {
                "type": "string",
                "description": "Name of this attachment, e.g. an original image file name.",
                "x-ms-summary": "Attachment name",
                "x-ms-visibility": "advanced"
              },
              "contentType": {
                "type": "string",
                "description": "MIME content type of this attachment such as image/jpg.",
                "x-ms-summary": "MIME content type",
                "x-ms-visibility": "advanced"
              },
              "content": {
                "type": "string",
                "description": "The content of this attachment.",
                "x-ms-summary": "Attachment content",
                "x-ms-visibility": "advanced"
              }
            }
          }
        },
        "annotations": {
          "type": "array",
          "description": "A collection of annotations users have left on this alert.",
          "x-ms-summary": "A collection of annotations users have left on this alert",
          "x-ms-visibility": "advanced",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "format": "int32",
                "type": "integer",
                "description": "Type of this annotation. This field is reserved for later use.",
                "x-ms-summary": "Annotation type",
                "x-ms-visibility": "advanced"
              },
              "text": {
                "type": "string",
                "description": "The annotation that was left by a user.",
                "x-ms-summary": "User annotation",
                "x-ms-visibility": "advanced"
              },
              "userId": {
                "type": "string",
                "description": "Unique id of the SIGNL4 user who has left the annotation.",
                "x-ms-summary": "Unique id of the SIGNL4 user who has left the annotation",
                "x-ms-visibility": "advanced"
              }
            }
          }
        },
        "parameters": {
          "type": "array",
          "description": "A collection of of key/value pairs with additional device or system parameters that belong to this alert.",
          "x-ms-summary": "A collection of of key/value pairs with additional device or system parameters that belong to this alert",
          "x-ms-visibility": "advanced",
          "items": {
            "required": [
              "name",
              "value"
            ],
            "type": "object",
            "description": "An object that represents a system or device parameter that belongs to this alert.",
            "x-ms-summary": "An object that represents a system or device parameter that belongs to this alert",
            "x-ms-visibility": "advanced",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of this parameter, e.g. temperature.",
                "x-ms-summary": "Parameter name",
                "x-ms-visibility": "advanced"
              },
              "type": {
                "format": "int32",
                "enum": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8,
                  9,
                  10,
                  11,
                  12,
                  13,
                  14,
                  15,
                  16,
                  17,
                  100
                ],
                "type": "integer",
                "description": "Type of this parameter. This field is reserved for later use and should always match 0 when setting it.",
                "x-ms-summary": "Parameter type",
                "x-ms-visibility": "advanced"
              },
              "value": {
                "type": "string",
                "description": "The value of the parameter, e.g. 56F.",
                "x-ms-summary": "Parameter value",
                "x-ms-visibility": "advanced"
              }
            }
          }
        },
        "history": {
          "type": "object",
          "description": "A collection that holds timeline entries which form an audit trial of this alert.",
          "x-ms-summary": "A collection that holds timeline entries which form an audit trial of this alert",
          "x-ms-visibility": "advanced",
          "properties": {
            "acknowledged": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this alert was confirmed.",
              "x-ms-summary": "Time at which this alert was confirmed",
              "x-ms-visibility": "advanced"
            },
            "acknowledgedBy": {
              "type": "string",
              "description": "Name of the team member who has confirmed the alert.",
              "x-ms-summary": "Name of the team member who has confirmed the alert",
              "x-ms-visibility": "advanced"
            },
            "closed": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this alert was closed.",
              "x-ms-summary": "Time at which this alert was closed",
              "x-ms-visibility": "advanced"
            },
            "closedBy": {
              "type": "string",
              "description": "Name of the team member who has closed the alert.",
              "x-ms-summary": "Name of the team member who has closed the alert",
              "x-ms-visibility": "advanced"
            },
            "created": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this alert was created in SIGNL4.",
              "x-ms-summary": "Time at which this alert was created in SIGNL4",
              "x-ms-visibility": "advanced"
            }
          }
        },
        "status": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            4,
            8,
            16,
            32
          ],
          "type": "integer",
          "description": "Status of the alert in SIGNL4. 1 represents an unhandled alert while 2 represents a confirmed alert. All other values are reserved for later use and should never be a value of an instance of this object.",
          "x-ms-summary": "Alert status",
          "x-ms-visibility": "advanced"
        },
        "title": {
          "type": "string",
          "description": "Title or subject of this alert.",
          "x-ms-summary": "Alter title",
          "x-ms-visibility": "important"
        },
        "text": {
          "type": "string",
          "description": "Textual alert details.",
          "x-ms-summary": "Textual alert details",
          "x-ms-visibility": "important"
        },
        "flags": {
          "format": "int32",
          "type": "integer",
          "description": "Internal property reserved for later use.",
          "x-ms-summary": "Internal property reserved for later use",
          "x-ms-visibility": "internal"
        }
      }
    },
    "AlertReport": {
      "required": [
        "last24Hours"
      ],
      "type": "object",
      "description": "An object holding information about the occurred alert volume in different time periods as well as information about the response behaviour (amount of confirmed and unhandled alerts) of your team members.",
      "x-ms-summary": "An object holding information about the occurred alert volume in different time periods",
      "x-ms-visibility": "important",
      "properties": {
        "last24Hours": {
          "required": [
            "acknowledged",
            "unhandled"
          ],
          "type": "object",
          "description": "An object holding information about the occurred alert volume in the last 24h.",
          "x-ms-summary": "An object holding information about the occurred alert volume in the last 24h",
          "x-ms-visibility": "important",
          "properties": {
            "acknowledged": {
              "format": "int32",
              "type": "integer",
              "description": "Amount of alerts that occurred in the last 24h and your team has confirmed within that time.",
              "x-ms-summary": "Amount of alerts that occurred in the last 24h and your team has confirmed within that time",
              "x-ms-visibility": "important"
            },
            "end": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this time period has ended or will end.",
              "x-ms-summary": "Time at which this time period has ended or will end",
              "x-ms-visibility": "important"
            },
            "lastModified": {
              "format": "date-time",
              "type": "string",
              "description": "Last time this metric changed.",
              "x-ms-summary": "Last time this metric changed",
              "x-ms-visibility": "advanced"
            },
            "start": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this time period has started or will start.",
              "x-ms-summary": "Time at which this time period has started or will start",
              "x-ms-visibility": "important"
            },
            "unhandled": {
              "format": "int32",
              "type": "integer",
              "description": "Amount of alerts that occurred in the last 24h and your team has not confirmed within that time.",
              "x-ms-summary": "Amount of alerts that occurred in the last 24h and your team has not confirmed within that time",
              "x-ms-visibility": "important"
            }
          }
        },
        "subscriptionId": {
          "type": "string",
          "description": "Unique id of your SIGNL4 subscription.",
          "x-ms-summary": "Unique id of your SIGNL4 subscription",
          "x-ms-visibility": "advanced"
        },
        "teamCurrentDuty": {
          "required": [
            "acknowledged",
            "unhandled"
          ],
          "type": "object",
          "description": "An object holding information about the occurred alert volume and your teams response behavior in its current duty period. Will be empty if your team has switched off the SIGNL4 duty assistant.",
          "x-ms-summary": "An object holding information about the occurred alert volume and your teams response behavior in its current duty period. Will be empty if your team has switched off the SIGNL4 duty assistant",
          "x-ms-visibility": "important",
          "properties": {
            "acknowledged": {
              "format": "int32",
              "type": "integer",
              "description": "Amount of alerts that occurred in the current duty period and your team has confirmed within that time.",
              "x-ms-summary": "Amount of alerts that occurred in the current duty period and your team has confirmed within that time",
              "x-ms-visibility": "important"
            },
            "end": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this duty period has ended or will end.",
              "x-ms-summary": "Time at which this duty period has ended or will end",
              "x-ms-visibility": "important"
            },
            "lastModified": {
              "format": "date-time",
              "type": "string",
              "description": "Last time this metric changed.",
              "x-ms-summary": "Last time this metric changed",
              "x-ms-visibility": "advanced"
            },
            "start": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this duty period has started or will start.",
              "x-ms-summary": "Time at which this duty period has started or will start",
              "x-ms-visibility": "important"
            },
            "unhandled": {
              "format": "int32",
              "type": "integer",
              "description": "Amount of alerts that occurred in the current duty period and your team has not confirmed within that time.",
              "x-ms-summary": "Amount of alerts that occurred in the current duty period and your team has not confirmed within that time",
              "x-ms-visibility": "important"
            }
          }
        },
        "teamId": {
          "type": "string",
          "description": "Unique id of the SIGNL4 team for which this alert report was created/requested. Will be empty if your team has switched off the SIGNL4 duty assistant.",
          "x-ms-summary": "Unique id of the SIGNL4 team for which this alert report was created/requested. Will be empty if your team has switched off the SIGNL4 duty assistant",
          "x-ms-visibility": "advanced"
        },
        "teamLastDuty": {
          "required": [
            "acknowledged",
            "unhandled"
          ],
          "type": "object",
          "description": "An object holding information about the occurred alert volume and your teams response behavior in its previous duty period. Will be empty if your team has switched off the SIGNL4 duty assistant.",
          "x-ms-summary": "An object holding information about the occurred alert volume and your teams response behavior in its previous duty period. Will be empty if your team has switched off the SIGNL4 duty assistant",
          "x-ms-visibility": "important",
          "properties": {
            "acknowledged": {
              "format": "int32",
              "type": "integer",
              "description": "Amount of alerts that occurred in the previous duty period and your team has confirmed within that time.",
              "x-ms-summary": "Amount of alerts that occurred in the previous duty period and your team has confirmed within that time",
              "x-ms-visibility": "important"
            },
            "end": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this duty period has ended or will end.",
              "x-ms-summary": "Time at which this duty period has ended or will end",
              "x-ms-visibility": "important"
            },
            "lastModified": {
              "format": "date-time",
              "type": "string",
              "description": "Last time this metric changed.",
              "x-ms-summary": "Last time this metric changed",
              "x-ms-visibility": "advanced"
            },
            "start": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this duty period has started or will start.",
              "x-ms-summary": "Time at which this duty period has started or will start",
              "x-ms-visibility": "important"
            },
            "unhandled": {
              "format": "int32",
              "type": "integer",
              "description": "Amount of alerts that occurred in the previous duty period and your team has not confirmed within that time.",
              "x-ms-summary": "Amount of alerts that occurred in the previous duty period and your team has not confirmed within that time",
              "x-ms-visibility": "important"
            }
          }
        },
        "userId": {
          "type": "string",
          "description": "Unique id of the SIGNL4 user for which this alert report was created/requested. Will be empty if your team has switched on the SIGNL4 duty assistant.",
          "x-ms-summary": "Unique id of the SIGNL4 user for which this alert report was created/requested. Will be empty if your team has switched on the SIGNL4 duty assistant",
          "x-ms-visibility": "important"
        },
        "userLastDutyChange": {
          "required": [
            "acknowledged",
            "unhandled"
          ],
          "type": "object",
          "description": "An object holding information about the occurred alert volume and the users response behavior since the duty status of the user changed last time. Will be empty if your team has switched on the SIGNL4 duty assistant.",
          "x-ms-summary": "An object holding information about the occurred alert volume and the users response behavior since the duty status of the user changed last time. Will be empty if your team has switched on the SIGNL4 duty assistant",
          "x-ms-visibility": "important",
          "properties": {
            "acknowledged": {
              "format": "int32",
              "type": "integer",
              "description": "Amount of alerts that occurred since the users duty status changed last time and she has confirmed within that time.",
              "x-ms-summary": "Amount of alerts that occurred since the users duty status changed last time and she has confirmed within that time",
              "x-ms-visibility": "important"
            },
            "end": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this period has ended or will end.",
              "x-ms-summary": "Time at which this period has ended or will end",
              "x-ms-visibility": "important"
            },
            "lastModified": {
              "format": "date-time",
              "type": "string"
            },
            "start": {
              "format": "date-time",
              "type": "string",
              "description": "Time at which this period has started or will start.",
              "x-ms-summary": "Time at which this period has started or will start",
              "x-ms-visibility": "important"
            },
            "unhandled": {
              "format": "int32",
              "type": "integer",
              "description": "Amount of alerts that occurred since the users duty status changed last time and she has not confirmed within that time.",
              "x-ms-summary": "Amount of alerts that occurred since the users duty status changed last time and she has not confirmed within that time",
              "x-ms-visibility": "important"
            }
          }
        }
      }
    },
    "UserDutyInfo": {
      "description": "Information about a user's duty status.",
      "type": "object",
      "properties": {
        "lastChange": {
          "format": "date-time",
          "description": "The date-time in UTC format. ex. yyyy-MM-ddTHH:mm:ss.fffZ (UTC format)",
          "type": "string",
          "x-ms-summary": "Punch In Date-Time"
        },
        "onDuty": {
          "description": "True if the user is on duty.",
          "type": "boolean",
          "x-ms-summary": "On Duty"
        },
        "overdue": {
          "description": "True if the user is currently overdue, e.g. because nobody else has replaced that user in time.",
          "type": "boolean",
          "x-ms-summary": "Overdue"
        }
      }
    },
    "GetAllUsers_Response": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UserInfo"
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "oauth2_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://connect.signl4.com/identity/connect/authorize",
      "tokenUrl": "https://connect.signl4.com/identity/connect/token"
    }
  },
  "security": [
    {}
  ],
  "tags": [],
  "x-ms-capabilities": {
    "testConnection": {
      "operationId": "GetUserById",
      "parameters": {
        "userId": "Me",
        "type": "string"
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://www.signl4.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.signl4.com/privacy-policy/"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/signl4"
  }
}
