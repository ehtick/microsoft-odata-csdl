{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Azure Cosmos DB",
    "description": "Azure Cosmos DB is a globally distributed multi-model database service designed to enable you to elastically and independently scale throughput and storage across any number of geographical regions with a comprehensive SLA.",
    "x-ms-api-annotation": {
      "status": "Production"
    }
  },
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/documentdb",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectionId}/v2/dbs/{databaseId}/colls/{collectionId}/query": {
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Query documents V2",
        "description": "Query documents V2.",
        "operationId": "QueryDocumentsV2",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "databaseId",
            "in": "path",
            "description": "The name of the database.",
            "required": true,
            "x-ms-summary": "Database ID",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetDatabases",
              "parameters": {},
              "value-collection": "Databases",
              "value-path": "id",
              "value-title": "id"
            },
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The name of the collection.",
            "required": true,
            "x-ms-summary": "Collection ID",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetCollections",
              "parameters": {
                "databaseId": {
                  "parameter": "databaseId"
                }
              },
              "value-collection": "DocumentCollections",
              "value-path": "id",
              "value-title": "id"
            },
            "type": "string"
          },
          {
            "name": "query",
            "in": "body",
            "description": "SQL Syntax Query over documents.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DocumentsQuery"
            },
            "x-ms-summary": "SQL Syntax Query over documents."
          },
          {
            "name": "partitionKey",
            "in": "query",
            "description": "Partition key value.",
            "required": false,
            "x-ms-summary": "Partition key value",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "A token to fetch additional results from the operation.",
            "required": false,
            "x-ms-summary": "Continuation Token",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/QueryDocumentsResponse"
            },
            "headers": {
              "x-ms-request-charge": {
                "description": "x-ms-request-charge",
                "type": "number",
                "format": "double"
              },
              "x-ms-continuation": {
                "description": "x-ms-continuation",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "advanced",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "QueryDocuments",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#query-documents-v2-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v3/dbs/{databaseId}/colls/{collectionId}/query": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Query documents V3",
        "description": "Query documents V3.",
        "operationId": "QueryDocumentsV3",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "databaseId",
            "in": "path",
            "description": "The name of the database.",
            "required": true,
            "x-ms-summary": "Database ID",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetDatabases",
              "parameters": {},
              "value-collection": "Databases",
              "value-path": "id",
              "value-title": "id"
            },
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The name of the collection.",
            "required": true,
            "x-ms-summary": "Collection ID",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetCollections",
              "parameters": {
                "databaseId": {
                  "parameter": "databaseId"
                }
              },
              "value-collection": "DocumentCollections",
              "value-path": "id",
              "value-title": "id"
            },
            "type": "string"
          },
          {
            "name": "queryText",
            "in": "query",
            "description": "SQL query.",
            "required": true,
            "x-ms-summary": "SQL Syntax Query",
            "x-ms-visibility": "important",
            "type": "string"
          },
          {
            "name": "partitionKey",
            "in": "query",
            "description": "If empty, all partitions will be used to search for documents.",
            "required": false,
            "x-ms-summary": "Partition key value",
            "x-ms-visibility": "important",
            "type": "string"
          },
          {
            "name": "maxItemCount",
            "in": "query",
            "description": "An integer indicating the maximum number of items to be returned per page.",
            "required": false,
            "x-ms-summary": "Max Item Count",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "A token to fetch additional results.",
            "required": false,
            "x-ms-summary": "Continuation Token",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "enableCrossPartition",
            "in": "query",
            "description": "Indicates whether user are enabled to send more than one request to execute the query.",
            "required": false,
            "x-ms-summary": "Enable Cross Partition",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "name": "consistencyLevel",
            "in": "query",
            "description": "Consistency level required for the feed (query/read feed) operation.",
            "required": false,
            "x-ms-summary": "Consistency Level",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "Strong",
              "BoundedStaleness",
              "Session",
              "Eventual",
              "ConsistentPrefix"
            ]
          },
          {
            "name": "sessionToken",
            "in": "query",
            "description": "The session token for use with session consistency.",
            "required": false,
            "x-ms-summary": "Session Token",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentsCollection"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "advanced",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "QueryDocuments",
          "revision": 3
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#query-documents-v3-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v4/dbs/{databaseId}/colls/{containerId}/query": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Query documents V4",
        "description": "Query documents V4.",
        "operationId": "QueryDocumentsV4",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "databaseId",
            "in": "path",
            "description": "The name of the database.",
            "required": true,
            "x-ms-summary": "Database ID",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetDatabases",
              "parameters": {},
              "value-collection": "Databases",
              "value-path": "id",
              "value-title": "id"
            },
            "type": "string"
          },
          {
            "name": "containerId",
            "in": "path",
            "description": "The name of the container.",
            "required": true,
            "x-ms-summary": "Container ID",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetCollections",
              "parameters": {
                "databaseId": {
                  "parameter": "databaseId"
                }
              },
              "value-collection": "DocumentCollections",
              "value-path": "id",
              "value-title": "id"
            },
            "type": "string"
          },
          {
            "name": "queryText",
            "in": "query",
            "description": "SQL query. If empty, will return all documents.",
            "required": false,
            "x-ms-summary": "SQL Syntax Query",
            "x-ms-visibility": "important",
            "type": "string"
          },
          {
            "name": "partitionKey",
            "in": "query",
            "description": "If empty, all partitions will be used to search for documents.",
            "required": false,
            "x-ms-summary": "Partition key value",
            "x-ms-visibility": "important",
            "type": "string"
          },
          {
            "name": "maxItemCount",
            "in": "query",
            "description": "An integer indicating the maximum number of items to be returned per page.",
            "required": false,
            "x-ms-summary": "Max Item Count",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "A token to fetch additional results.",
            "required": false,
            "x-ms-summary": "Continuation Token",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "consistencyLevel",
            "in": "query",
            "description": "Consistency level required for the feed (query/read feed) operation.",
            "required": false,
            "x-ms-summary": "Consistency Level",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "Strong",
              "BoundedStaleness",
              "Session",
              "Eventual",
              "ConsistentPrefix"
            ]
          },
          {
            "name": "sessionToken",
            "in": "query",
            "description": "The session token for use with session consistency.",
            "required": false,
            "x-ms-summary": "Session Token",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentsCollection"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "advanced",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "QueryDocuments",
          "revision": 4
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#query-documents-v4-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v5/cosmosdb/{cosmosDbAccountName}/dbs/{databaseId}/colls/{containerId}/query": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Query documents V5",
        "description": "Query documents (V5).",
        "operationId": "QueryDocuments_V5",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "cosmosDbAccountName",
            "in": "path",
            "description": "The Azure Cosmos DB account name (without documents.azure.com).",
            "required": true,
            "x-ms-summary": "Azure Cosmos DB account name",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetCosmosDbAccounts",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "type": "string"
          },
          {
            "name": "databaseId",
            "in": "path",
            "description": "The name of the database.",
            "required": true,
            "x-ms-summary": "Database ID",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetDatabases_V2",
              "parameters": {
                "cosmosDbAccountName": {
                  "parameter": "cosmosDbAccountName"
                }
              },
              "value-collection": "Databases",
              "value-path": "id",
              "value-title": "id"
            },
            "type": "string"
          },
          {
            "name": "containerId",
            "in": "path",
            "description": "The name of the container.",
            "required": true,
            "x-ms-summary": "Container ID",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetCollections_V2",
              "parameters": {
                "cosmosDbAccountName": {
                  "parameter": "cosmosDbAccountName"
                },
                "databaseId": {
                  "parameter": "databaseId"
                }
              },
              "value-collection": "DocumentCollections",
              "value-path": "id",
              "value-title": "id"
            },
            "type": "string"
          },
          {
            "name": "queryText",
            "in": "query",
            "description": "SQL query. If empty, will return all documents.",
            "required": false,
            "x-ms-summary": "SQL Syntax Query",
            "x-ms-visibility": "important",
            "type": "string"
          },
          {
            "name": "partitionKey",
            "in": "query",
            "description": "Value must be provided according to its type (\"string\", 42, 0.5). If empty, all partitions will be used to search for documents.",
            "required": false,
            "x-ms-summary": "Partition key value",
            "x-ms-visibility": "important",
            "type": "string"
          },
          {
            "name": "maxItemCount",
            "in": "query",
            "description": "An integer indicating the maximum number of items to be returned per page.",
            "required": false,
            "x-ms-summary": "Max Item Count",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "A token to fetch additional results.",
            "required": false,
            "x-ms-summary": "Continuation Token",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "consistencyLevel",
            "in": "query",
            "description": "Consistency level required for the feed (query/read feed) operation.",
            "required": false,
            "x-ms-summary": "Consistency Level",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "Strong",
              "BoundedStaleness",
              "Session",
              "Eventual",
              "ConsistentPrefix"
            ]
          },
          {
            "name": "sessionToken",
            "in": "query",
            "description": "The session token for use with session consistency.",
            "required": false,
            "x-ms-summary": "Session Token",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentsCollection"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "QueryDocuments",
          "revision": 5
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#query-documents-v5"
        }
      }
    },
    "/{connectionId}/v2/dbs/{databaseId}/colls/{collectionId}/docs": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Get all documents V2",
        "description": "Get all documents V2.",
        "operationId": "GetDocumentsV2",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "databaseId",
            "in": "path",
            "description": "The name of the database.",
            "required": true,
            "x-ms-summary": "Database ID",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetDatabases",
              "parameters": {},
              "value-collection": "Databases",
              "value-path": "id",
              "value-title": "id"
            },
            "type": "string"
          },
          {
            "name": "collectionId",
            "in": "path",
            "description": "The name of the collection.",
            "required": true,
            "x-ms-summary": "Collection ID",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetCollections",
              "parameters": {
                "databaseId": {
                  "parameter": "databaseId"
                }
              },
              "value-collection": "DocumentCollections",
              "value-path": "id",
              "value-title": "id"
            },
            "type": "string"
          },
          {
            "name": "partitionKey",
            "in": "query",
            "description": "If empty, all partitions will be used to search for documents.",
            "required": false,
            "x-ms-summary": "Partition key value",
            "x-ms-visibility": "important",
            "type": "string"
          },
          {
            "name": "maxItemCount",
            "in": "query",
            "description": "An integer indicating the maximum number of items to be returned per page.",
            "required": false,
            "x-ms-summary": "Max Item Count",
            "x-ms-visibility": "advanced",
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "A token to fetch additional results.",
            "required": false,
            "x-ms-summary": "Continuation Token",
            "x-ms-visibility": "advanced",
            "type": "string"
          },
          {
            "name": "consistencyLevel",
            "in": "query",
            "description": "Consistency level required for the feed (query/read feed) operation.",
            "required": false,
            "x-ms-summary": "Consistency Level",
            "x-ms-visibility": "advanced",
            "type": "string",
            "enum": [
              "Strong",
              "BoundedStaleness",
              "Session",
              "Eventual",
              "ConsistentPrefix"
            ]
          },
          {
            "name": "sessionToken",
            "in": "query",
            "description": "The session token for use with session consistency.",
            "required": false,
            "x-ms-summary": "Session Token",
            "x-ms-visibility": "advanced",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DocumentsCollection"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": true,
        "x-ms-visibility": "advanced",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "GetDocuments",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-all-documents-v2-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/testConnection": {
      "get": {
        "summary": "Test connection",
        "description": "Tests connection of the resource.",
        "operationId": "TestConnection",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getAccountResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#test-connection"
        }
      }
    },
    "/{connectionId}/cosmosdbaccounts": {
      "get": {
        "summary": "Get Cosmos DB accounts",
        "description": "This operation list the user's Azure Cosmos DB accounts.",
        "operationId": "GetCosmosDbAccounts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/CosmosDbAccountList"
            }
          },
          "default": {
            "description": "Operation Failed."
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetCosmosDbAccounts",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-cosmos-db-accounts"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      }
    },
    "/{connectionId}/dbs": {
      "get": {
        "summary": "Get all databases",
        "description": "Get all databases.",
        "operationId": "GetDatabases",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getDatabasesResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetDatabases",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-all-databases-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v2/cosmosdb/{cosmosDbAccountName}/dbs": {
      "get": {
        "summary": "Get all databases (V2)",
        "description": "Get all databases (V2).",
        "operationId": "GetDatabases_V2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getDatabasesResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetDatabases",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-all-databases-(v2)"
        }
      }
    },
    "/{connectionId}/dbs/{databaseId}": {
      "get": {
        "summary": "Get a database",
        "description": "Get a database.",
        "operationId": "GetDatabase",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/databaseId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getDatabaseResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetDatabase",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-a-database-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v2/cosmosdb/{cosmosDbAccountName}/dbs/{databaseId}": {
      "get": {
        "summary": "Get a database (V2)",
        "description": "Get a database (V2).",
        "operationId": "GetDatabase_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getDatabaseResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetDatabase",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-a-database-(v2)"
        }
      }
    },
    "/{connectionId}/dbs/{databaseId}/colls": {
      "get": {
        "summary": "Get all collections",
        "description": "Get all collections.",
        "operationId": "GetCollections",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/databaseId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCollectionsResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetCollections",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-all-collections-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v2/cosmosdb/{cosmosDbAccountName}/dbs/{databaseId}/colls": {
      "get": {
        "summary": "Get all collections (V2)",
        "description": "Get all collections (V2).",
        "operationId": "GetCollections_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCollectionsResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetCollections",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-all-collections-(v2)"
        }
      }
    },
    "/{connectionId}/dbs/{databaseId}/colls/{collectionId}": {
      "get": {
        "summary": "Get a collection",
        "description": "Get a collection.",
        "operationId": "GetCollection",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCollectionResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetCollection",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-a-collection-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v2/cosmosdb/{cosmosDbAccountName}/dbs/{databaseId}/colls/{collectionId}": {
      "get": {
        "summary": "Get a collection (V2)",
        "description": "Get a collection (V2).",
        "operationId": "GetCollection_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getCollectionResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetCollection",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-a-collection-(v2)"
        }
      }
    },
    "/{connectionId}/dbs/{databaseId}/colls/{collectionId}/docs": {
      "get": {
        "summary": "Get all documents",
        "description": "Get all documents.",
        "operationId": "GetDocuments",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getDocumentsResponse"
            },
            "headers": {
              "x-ms-continuation": {
                "type": "string",
                "description": "A token returned from the operation if there are more results to be read."
              },
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetDocuments",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-all-documents-%5bdeprecated%5d"
        }
      },
      "post": {
        "summary": "Create or update document",
        "description": "Create or update document. When creating a document in DocumentDB, the body must include an id property.",
        "operationId": "CreateDocument",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/msDocumentDbIsUpsert"
          },
          {
            "$ref": "#/parameters/msDocumentDbPreTriggerInclude"
          },
          {
            "$ref": "#/parameters/msDocumentDbPostTriggerInclude"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The document to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postDocumentsRequest"
            },
            "x-ms-summary": "Document"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/postDocumentsResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Entity Too Large"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "CreateDocument",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#create-or-update-document-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v2/cosmosdb/{cosmosDbAccountName}/dbs/{databaseId}/colls/{collectionId}/docs": {
      "get": {
        "summary": "Get all documents (V3)",
        "description": "Get all documents (V3).",
        "operationId": "GetDocuments_V3",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getDocumentsResponse"
            },
            "headers": {
              "x-ms-continuation": {
                "type": "string",
                "description": "A token returned from the operation if there are more results to be read."
              },
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetDocuments",
          "revision": 3
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-all-documents-(v3)"
        }
      },
      "post": {
        "summary": "Create or update document (V3)",
        "description": "Create or update document. When creating a document in DocumentDB, the body must include an id property.",
        "operationId": "CreateDocument_V3",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/msDocumentDbIsUpsert"
          },
          {
            "$ref": "#/parameters/msDocumentDbPreTriggerInclude"
          },
          {
            "$ref": "#/parameters/msDocumentDbPostTriggerInclude"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The document to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postDocumentsRequest"
            },
            "x-ms-summary": "Document"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/postDocumentsResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Entity Too Large"
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "CreateDocument",
          "revision": 3
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#create-or-update-document-(v3)"
        }
      }
    },
    "/{connectionId}/v3/dbs/{databaseId}/colls/{collectionId}/docs": {
      "post": {
        "summary": "Create or update document (V2)",
        "description": "Create or update document. When creating a document in DocumentDB, the body must include an id property.",
        "operationId": "CreateDocumentV2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/msDocumentDbIsUpsert"
          },
          {
            "$ref": "#/parameters/msDocumentDbPreTriggerInclude"
          },
          {
            "$ref": "#/parameters/msDocumentDbPostTriggerInclude"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The document to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postDocumentsRequest"
            },
            "x-ms-summary": "Document"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/postDocumentsResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "Forbidden"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Entity Too Large"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "CreateDocument",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#create-or-update-document-(v2)-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/dbs/{databaseId}/colls/{collectionId}/query": {
      "post": {
        "summary": "Query documents",
        "description": "Query documents.",
        "operationId": "QueryDocuments",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "name": "x-ms-documentdb-query-enablecrosspartition",
            "in": "header",
            "description": "If the collection is partitioned, this must be set to True to allow execution across multiple partitions.",
            "required": false,
            "x-ms-summary": "Enable Cross Partition",
            "x-ms-visibility": "advanced",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "name": "body",
            "in": "body",
            "description": "SQL Syntax Query over documents.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/queryRequest"
            },
            "x-ms-summary": "Query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/queryResponse"
            },
            "headers": {
              "x-ms-continuation": {
                "type": "string"
              },
              "x-ms-request-charge": {
                "type": "number"
              },
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "QueryDocuments",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#query-documents-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/dbs/{databaseId}/colls/{collectionId}/docs/{documentId}": {
      "get": {
        "summary": "Get a document",
        "description": "Get a document.",
        "operationId": "GetDocument",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The identifier for the document.",
            "required": true,
            "x-ms-summary": "Document ID",
            "type": "string"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getDocumentResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetDocument",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-a-document-%5bdeprecated%5d"
        }
      },
      "put": {
        "summary": "Replace a document",
        "description": "Replace a document.",
        "operationId": "ReplaceDocument",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/msDocumentDbPreTriggerInclude"
          },
          {
            "$ref": "#/parameters/msDocumentDbPostTriggerInclude"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The identifier of the document.",
            "required": true,
            "x-ms-summary": "Document ID",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The document to replace with.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putDocumentRequest"
            },
            "x-ms-summary": "Document"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/putDocumentResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Entity Too Large"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "ReplaceDocument",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#replace-a-document-%5bdeprecated%5d"
        }
      },
      "delete": {
        "summary": "Delete a document",
        "description": "Delete a document.",
        "operationId": "DeleteDocument",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/msDocumentDbPreTriggerInclude"
          },
          {
            "$ref": "#/parameters/msDocumentDbPostTriggerInclude"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The identifier of the document.",
            "required": true,
            "x-ms-summary": "Document ID",
            "type": "string"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DeleteDocument",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#delete-a-document-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v2/cosmosdb/{cosmosDbAccountName}/dbs/{databaseId}/colls/{collectionId}/docs/{documentId}": {
      "get": {
        "summary": "Get a document (V2)",
        "description": "Get a document (V2).",
        "operationId": "GetDocument_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The identifier for the document.",
            "required": true,
            "x-ms-summary": "Document ID",
            "type": "string"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getDocumentResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "304": {
            "description": "Not Modified"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetDocument",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-a-document-(v2)"
        }
      },
      "put": {
        "summary": "Replace a document (V2)",
        "description": "Replace a document (V2).",
        "operationId": "ReplaceDocument_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/msDocumentDbPreTriggerInclude"
          },
          {
            "$ref": "#/parameters/msDocumentDbPostTriggerInclude"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The identifier of the document.",
            "required": true,
            "x-ms-summary": "Document ID",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The document to replace with.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/putDocumentRequest"
            },
            "x-ms-summary": "Document"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/putDocumentResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "413": {
            "description": "Entity Too Large"
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "ReplaceDocument",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#replace-a-document-(v2)"
        }
      },
      "delete": {
        "summary": "Delete a document (V2)",
        "description": "Delete a document (V2).",
        "operationId": "DeleteDocument_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "$ref": "#/parameters/msMaxItemCount"
          },
          {
            "$ref": "#/parameters/msContinuation"
          },
          {
            "$ref": "#/parameters/msConsistencyLevel"
          },
          {
            "$ref": "#/parameters/msSessionToken"
          },
          {
            "$ref": "#/parameters/msActivityId"
          },
          {
            "$ref": "#/parameters/msDocumentDbPreTriggerInclude"
          },
          {
            "$ref": "#/parameters/msDocumentDbPostTriggerInclude"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "The identifier of the document.",
            "required": true,
            "x-ms-summary": "Document ID",
            "type": "string"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DeleteDocument",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#delete-a-document-(v2)"
        }
      }
    },
    "/{connectionId}/dbs/{databaseId}/colls/{collectionId}/sprocs": {
      "get": {
        "summary": "Get stored procedures",
        "description": "Get stored procedures in the specified collection.",
        "operationId": "GetStoredProcedures",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getStoredProceduresResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetStoredProcedures",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-stored-procedures-%5bdeprecated%5d"
        }
      },
      "post": {
        "summary": "Create stored procedure",
        "description": "Create stored procedure.",
        "operationId": "CreateStoredProcedure",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The stored procedure to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "description": "Function that defines the stored procedure, e.g. 'function(params){ ... }' ",
                  "type": "string",
                  "x-ms-summary": "Function definition"
                },
                "id": {
                  "description": "New id of the stored procedure.",
                  "type": "string",
                  "x-ms-summary": "id"
                }
              }
            },
            "x-ms-summary": "Stored procedure body definition"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/createStoredProcedureResponse"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "CreateStoredProcedure",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#create-stored-procedure-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v2/cosmosdb/{cosmosDbAccountName}/dbs/{databaseId}/colls/{collectionId}/sprocs": {
      "get": {
        "summary": "Get stored procedures (V2)",
        "description": "Get stored procedures in the specified collection (V2).",
        "operationId": "GetStoredProcedures_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/getStoredProceduresResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "GetStoredProcedures",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#get-stored-procedures-(v2)"
        }
      },
      "post": {
        "summary": "Create stored procedure (V2)",
        "description": "Create stored procedure (V2).",
        "operationId": "CreateStoredProcedure_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The stored procedure to create.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "description": "Function that defines the stored procedure, e.g. 'function(params){ ... }' ",
                  "type": "string",
                  "x-ms-summary": "Function definition"
                },
                "id": {
                  "description": "New id of the stored procedure.",
                  "type": "string",
                  "x-ms-summary": "id"
                }
              }
            },
            "x-ms-summary": "Stored procedure body definition"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/createStoredProcedureResponse"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "CreateStoredProcedure",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#create-stored-procedure-(v2)"
        }
      }
    },
    "/{connectionId}/dbs/{databaseId}/colls/{collectionId}/sprocs/{sprocId}": {
      "put": {
        "summary": "Replace stored procedure",
        "description": "Replace stored procedure.",
        "operationId": "ReplaceStoredProcedure",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "name": "sprocId",
            "in": "path",
            "description": "The name of the stored procedure.",
            "required": true,
            "x-ms-summary": "Sproc ID",
            "x-ms-dynamic-values": {
              "operationId": "GetStoredProcedures",
              "value-collection": "StoredProcedures",
              "value-path": "id",
              "value-title": "id",
              "parameters": {
                "databaseId": {
                  "parameter": "databaseId"
                },
                "collectionId": {
                  "parameter": "collectionId"
                }
              }
            },
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The stored procedure to replace with.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "description": "Function that defines the stored procedure, e.g. 'function(params){ ... }' ",
                  "type": "string",
                  "x-ms-summary": "Function definition"
                },
                "id": {
                  "description": "Id of the existing stored procedure.",
                  "type": "string",
                  "x-ms-summary": "id"
                }
              }
            },
            "x-ms-summary": "Stored procedure body definition"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/createStoredProcedureResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "ReplaceStoredProcedure",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#replace-stored-procedure-%5bdeprecated%5d"
        }
      },
      "post": {
        "summary": "Execute stored procedure",
        "description": "Execute stored procedure in specified collection.",
        "operationId": "ExecuteStoredProcedure",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "name": "sprocId",
            "in": "path",
            "description": "The name of the stored procedure.",
            "required": true,
            "x-ms-summary": "Sproc ID",
            "x-ms-dynamic-values": {
              "operationId": "GetStoredProcedures",
              "value-collection": "StoredProcedures",
              "value-path": "id",
              "value-title": "id",
              "parameters": {
                "databaseId": {
                  "parameter": "databaseId"
                },
                "collectionId": {
                  "parameter": "collectionId"
                }
              }
            },
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Specify valid JSON for the parameters of the stored procedure, e.g. [\"param1\", \"param2\"].",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Parameters for the stored procedure"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ObjectWithoutType"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "ExecuteStoredProcedure",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#execute-stored-procedure-%5bdeprecated%5d"
        }
      },
      "delete": {
        "summary": "Delete stored procedure",
        "description": "Delete stored procedure.",
        "operationId": "DeleteStoredProcedure",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/databaseId"
          },
          {
            "$ref": "#/parameters/collectionId"
          },
          {
            "name": "sprocId",
            "in": "path",
            "description": "The name of the stored procedure.",
            "required": true,
            "x-ms-summary": "Sproc ID",
            "x-ms-dynamic-values": {
              "operationId": "GetStoredProcedures",
              "value-collection": "StoredProcedures",
              "value-path": "id",
              "value-title": "id",
              "parameters": {
                "databaseId": {
                  "parameter": "databaseId"
                },
                "collectionId": {
                  "parameter": "collectionId"
                }
              }
            },
            "type": "string"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DeleteStoredProcedure",
          "revision": 1
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#delete-stored-procedure-%5bdeprecated%5d"
        }
      }
    },
    "/{connectionId}/v2/cosmosdb/{cosmosDbAccountName}/dbs/{databaseId}/colls/{collectionId}/sprocs/{sprocId}": {
      "put": {
        "summary": "Replace stored procedure (V2)",
        "description": "Replace stored procedure (V2).",
        "operationId": "ReplaceStoredProcedure_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          },
          {
            "name": "sprocId",
            "in": "path",
            "description": "The name of the stored procedure.",
            "required": true,
            "x-ms-summary": "Sproc ID",
            "x-ms-dynamic-values": {
              "operationId": "GetStoredProcedures_V2",
              "value-collection": "StoredProcedures",
              "value-path": "id",
              "value-title": "id",
              "parameters": {
                "cosmosDbAccountName": {
                  "parameter": "cosmosDbAccountName"
                },
                "databaseId": {
                  "parameter": "databaseId"
                },
                "collectionId": {
                  "parameter": "collectionId"
                }
              }
            },
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The stored procedure to replace with.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "body": {
                  "description": "Function that defines the stored procedure, e.g. 'function(params){ ... }' ",
                  "type": "string",
                  "x-ms-summary": "Function definition"
                },
                "id": {
                  "description": "Id of the existing stored procedure.",
                  "type": "string",
                  "x-ms-summary": "id"
                }
              }
            },
            "x-ms-summary": "Stored procedure body definition"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/createStoredProcedureResponse"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "ReplaceStoredProcedure",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#replace-stored-procedure-(v2)"
        }
      },
      "post": {
        "summary": "Execute stored procedure (V2)",
        "description": "Execute stored procedure in specified collection (V2).",
        "operationId": "ExecuteStoredProcedure_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          },
          {
            "$ref": "#/parameters/msDocumentDbRawPartitionKey"
          },
          {
            "$ref": "#/parameters/msDocumentDbPartitionKey"
          },
          {
            "name": "sprocId",
            "in": "path",
            "description": "The name of the stored procedure.",
            "required": true,
            "x-ms-summary": "Sproc ID",
            "x-ms-dynamic-values": {
              "operationId": "GetStoredProcedures_V2",
              "value-collection": "StoredProcedures",
              "value-path": "id",
              "value-title": "id",
              "parameters": {
                "cosmosDbAccountName": {
                  "parameter": "cosmosDbAccountName"
                },
                "databaseId": {
                  "parameter": "databaseId"
                },
                "collectionId": {
                  "parameter": "collectionId"
                }
              }
            },
            "type": "string"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Specify valid JSON for the parameters of the stored procedure, e.g. [\"param1\", \"param2\"].",
            "required": false,
            "schema": {
              "type": "string"
            },
            "x-ms-summary": "Parameters for the stored procedure"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ObjectWithoutType"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "ExecuteStoredProcedure",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#execute-stored-procedure-(v2)"
        }
      },
      "delete": {
        "summary": "Delete stored procedure (V2)",
        "description": "Delete stored procedure (V2).",
        "operationId": "DeleteStoredProcedure_V2",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/cosmosDbAccountName"
          },
          {
            "$ref": "#/parameters/databaseId_V2"
          },
          {
            "$ref": "#/parameters/collectionDatabaseId_V2"
          },
          {
            "name": "sprocId",
            "in": "path",
            "description": "The name of the stored procedure.",
            "required": true,
            "x-ms-summary": "Sproc ID",
            "x-ms-dynamic-values": {
              "operationId": "GetStoredProcedures_V2",
              "value-collection": "StoredProcedures",
              "value-path": "id",
              "value-title": "id",
              "parameters": {
                "cosmosDbAccountName": {
                  "parameter": "cosmosDbAccountName"
                },
                "databaseId": {
                  "parameter": "databaseId"
                },
                "collectionId": {
                  "parameter": "collectionId"
                }
              }
            },
            "type": "string"
          },
          {
            "$ref": "#/parameters/msApiVersion"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            },
            "headers": {
              "x-ms-activity-id": {
                "x-ms-summary": "Activity ID",
                "description": "Azure Cosmos DB service activity ID.",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DeleteStoredProcedure",
          "revision": 2
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/documentdb/#delete-stored-procedure-(v2)"
        }
      }
    }
  },
  "definitions": {
    "DocumentsQuery": {
      "description": "Documents query parameters",
      "type": "object",
      "properties": {
        "QueryText": {
          "description": "SQL Syntax Query over documents",
          "type": "string"
        }
      }
    },
    "QueryDocumentsResponse": {
      "description": "Array of documents that match the requested query and the related metadata.",
      "type": "object",
      "properties": {
        "Documents": {
          "description": "Array of documents that match the request.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectWithoutType"
          },
          "x-ms-summary": "Documents"
        },
        "_count": {
          "format": "int32",
          "description": "Number of documents.",
          "type": "integer",
          "x-ms-summary": "Number of Documents"
        },
        "ActivityId": {
          "description": "Azure Cosmos DB service activity ID.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Activity ID"
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "DocumentsCollection": {
      "description": "Array of documents that match the requested query and the related metadata.",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ObjectWithoutType"
          },
          "x-ms-summary": "Documents"
        },
        "ContinuationToken": {
          "type": "string",
          "x-ms-summary": "Continuation Token"
        },
        "Count": {
          "format": "int32",
          "type": "integer",
          "x-ms-summary": "Number of Documents"
        },
        "RequestCharge": {
          "format": "double",
          "type": "number",
          "x-ms-summary": "Request Charge"
        },
        "SessionToken": {
          "type": "string",
          "x-ms-summary": "Session Token"
        },
        "ActivityId": {
          "type": "string",
          "x-ms-summary": "Activity Id"
        }
      }
    },
    "getAccountResponse": {
      "type": "object",
      "properties": {
        "_self": {
          "type": "string"
        },
        "_rid": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "getDatabasesResponse": {
      "type": "object",
      "properties": {
        "_rid": {
          "type": "string"
        },
        "Databases": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "_rid": {
                "type": "string"
              },
              "_self": {
                "type": "string"
              },
              "_etag": {
                "type": "string"
              },
              "_colls": {
                "type": "string"
              },
              "_users": {
                "type": "string"
              },
              "_ts": {
                "format": "int32",
                "type": "integer"
              }
            }
          }
        },
        "_count": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "getDatabaseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "_rid": {
          "type": "string"
        },
        "_self": {
          "type": "string"
        },
        "_etag": {
          "type": "string"
        },
        "_colls": {
          "type": "string"
        },
        "_users": {
          "type": "string"
        },
        "_ts": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "getCollectionsResponse": {
      "type": "object",
      "properties": {
        "_rid": {
          "type": "string"
        },
        "DocumentCollections": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "indexingPolicy": {
                "type": "object",
                "properties": {
                  "indexingMode": {
                    "type": "string"
                  },
                  "automatic": {
                    "type": "string"
                  },
                  "includedPaths": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "indexes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "kind": {
                                "type": "string"
                              },
                              "dataType": {
                                "type": "string"
                              },
                              "precision": {
                                "format": "int32",
                                "type": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "excludedPaths": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "_rid": {
                "type": "string"
              },
              "_ts": {
                "format": "int32",
                "type": "integer"
              },
              "_self": {
                "type": "string"
              },
              "_etag": {
                "type": "string"
              },
              "_docs": {
                "type": "string"
              },
              "_sprocs": {
                "type": "string"
              },
              "_triggers": {
                "type": "string"
              },
              "_udfs": {
                "type": "string"
              },
              "_conflicts": {
                "type": "string"
              }
            }
          }
        },
        "_count": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "getCollectionResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "indexingPolicy": {
            "type": "object",
            "properties": {
              "indexingMode": {
                "type": "string"
              },
              "automatic": {
                "type": "string"
              },
              "includedPaths": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string"
                    },
                    "indexes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "kind": {
                            "type": "string"
                          },
                          "dataType": {
                            "type": "string"
                          },
                          "precision": {
                            "format": "int32",
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "excludedPaths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "_rid": {
            "type": "string"
          },
          "_ts": {
            "format": "int32",
            "type": "integer"
          },
          "_self": {
            "type": "string"
          },
          "_etag": {
            "type": "string"
          },
          "_docs": {
            "type": "string"
          },
          "_sprocs": {
            "type": "string"
          },
          "_triggers": {
            "type": "string"
          },
          "_udfs": {
            "type": "string"
          },
          "_conflicts": {
            "type": "string"
          }
        }
      }
    },
    "postDocumentsRequest": {
      "type": "object",
      "properties": {}
    },
    "postDocumentsResponse": {
      "type": "object",
      "properties": {
        "_rid": {
          "type": "string"
        },
        "_ts": {
          "format": "int32",
          "type": "integer"
        },
        "_self": {
          "type": "string"
        },
        "_etag": {
          "type": "string"
        },
        "_attachments": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "putDocumentRequest": {
      "type": "object",
      "properties": {}
    },
    "putDocumentResponse": {
      "type": "object",
      "properties": {
        "_rid": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "getDocumentsResponse": {
      "type": "object",
      "properties": {
        "_rid": {
          "type": "string"
        },
        "Documents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          }
        }
      }
    },
    "getDocumentResponse": {
      "type": "object",
      "properties": {}
    },
    "queryRequest": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string"
        }
      }
    },
    "queryResponse": {
      "type": "object",
      "properties": {
        "_rid": {
          "type": "string"
        },
        "_count": {
          "type": "number"
        },
        "Documents": {
          "type": "array",
          "items": {}
        }
      }
    },
    "getStoredProceduresResponse": {
      "type": "object",
      "properties": {
        "_count": {
          "format": "int32",
          "description": "_count",
          "type": "integer",
          "x-ms-summary": "_count",
          "x-ms-visibility": "advanced"
        },
        "_rid": {
          "description": "_rid",
          "type": "string",
          "x-ms-summary": "_rid",
          "x-ms-visibility": "advanced"
        },
        "StoredProcedures": {
          "description": "StoredProcedures",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_etag": {
                "description": "_etag",
                "type": "string",
                "x-ms-summary": "_etag",
                "x-ms-visibility": "advanced"
              },
              "_rid": {
                "description": "_rid",
                "type": "string",
                "x-ms-summary": "_rid",
                "x-ms-visibility": "advanced"
              },
              "_self": {
                "description": "_self",
                "type": "string",
                "x-ms-summary": "_self",
                "x-ms-visibility": "advanced"
              },
              "_ts": {
                "format": "int32",
                "description": "_ts",
                "type": "integer",
                "x-ms-summary": "_ts",
                "x-ms-visibility": "advanced"
              },
              "body": {
                "description": "body",
                "type": "string",
                "x-ms-summary": "body",
                "x-ms-visibility": "advanced"
              },
              "id": {
                "description": "id",
                "type": "string",
                "x-ms-summary": "id",
                "x-ms-visibility": "advanced"
              }
            }
          },
          "x-ms-summary": "StoredProcedures",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "createStoredProcedureResponse": {
      "type": "object",
      "properties": {
        "_etag": {
          "description": "_etag",
          "type": "string",
          "x-ms-summary": "_etag",
          "x-ms-visibility": "advanced"
        },
        "_rid": {
          "description": "_rid",
          "type": "string",
          "x-ms-summary": "_rid",
          "x-ms-visibility": "advanced"
        },
        "_self": {
          "description": "_self",
          "type": "string",
          "x-ms-summary": "_self",
          "x-ms-visibility": "advanced"
        },
        "_ts": {
          "format": "int32",
          "description": "_ts",
          "type": "integer",
          "x-ms-summary": "_ts",
          "x-ms-visibility": "advanced"
        },
        "body": {
          "description": "body",
          "type": "string",
          "x-ms-summary": "body",
          "x-ms-visibility": "advanced"
        },
        "id": {
          "description": "id",
          "type": "string",
          "x-ms-summary": "id",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "CosmosDbAccountList": {
      "description": "List of Azure Cosmos DB account names",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Azure Cosmos DB account names",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CosmosDbAccount"
          }
        }
      }
    },
    "CosmosDbAccount": {
      "description": "Azure Cosmos DB account",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the Azure Cosmos DB account.",
          "type": "string",
          "x-ms-summary": "Azure Cosmos DB account name"
        },
        "DisplayName": {
          "description": "The display name of the Azure Cosmos DB account.",
          "type": "string",
          "x-ms-summary": "Azure Cosmos DB account display name"
        }
      }
    },
    "ObjectWithoutType": {}
  },
  "x-ms-capabilities": {
    "testConnection": {
      "operationId": "TestConnection",
      "parameters": {}
    }
  },
  "parameters": {
    "msApiVersion": {
      "name": "x-ms-version",
      "in": "header",
      "description": "API version.",
      "required": false,
      "x-ms-summary": "API version",
      "x-ms-visibility": "advanced",
      "type": "string",
      "enum": [
        "2017-05-03",
        "2018-12-31"
      ]
    },
    "cosmosDbAccountName": {
      "name": "cosmosDbAccountName",
      "in": "path",
      "description": "The Azure Cosmos DB account name (without documents.azure.com).",
      "required": true,
      "x-ms-summary": "Azure Cosmos DB account name",
      "x-ms-dynamic-values": {
        "operationId": "GetCosmosDbAccounts",
        "parameters": {},
        "value-collection": "value",
        "value-path": "Name",
        "value-title": "DisplayName"
      },
      "type": "string"
    },
    "databaseId_V2": {
      "name": "databaseId",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "x-ms-summary": "Database ID",
      "x-ms-dynamic-values": {
        "operationId": "GetDatabases_V2",
        "value-collection": "Databases",
        "value-path": "id",
        "value-title": "id",
        "parameters": {
          "cosmosDbAccountName": {
            "parameter": "cosmosDbAccountName"
          }
        }
      },
      "type": "string"
    },
    "collectionDatabaseId_V2": {
      "name": "collectionId",
      "in": "path",
      "description": "The name of the collection.",
      "required": true,
      "x-ms-summary": "Collection ID",
      "x-ms-dynamic-values": {
        "operationId": "GetCollections_V2",
        "value-collection": "DocumentCollections",
        "value-path": "id",
        "value-title": "id",
        "parameters": {
          "cosmosDbAccountName": {
            "parameter": "cosmosDbAccountName"
          },
          "databaseId": {
            "parameter": "databaseId"
          }
        }
      },
      "type": "string"
    },
    "databaseId": {
      "name": "databaseId",
      "in": "path",
      "description": "The name of the database.",
      "required": true,
      "x-ms-summary": "Database ID",
      "x-ms-dynamic-values": {
        "operationId": "GetDatabases",
        "value-collection": "Databases",
        "value-path": "id",
        "value-title": "id"
      },
      "type": "string"
    },
    "collectionId": {
      "name": "collectionId",
      "in": "path",
      "description": "The name of the collection.",
      "required": true,
      "x-ms-summary": "Collection ID",
      "x-ms-dynamic-values": {
        "operationId": "GetCollections",
        "value-collection": "DocumentCollections",
        "value-path": "id",
        "value-title": "id",
        "parameters": {
          "databaseId": {
            "parameter": "databaseId"
          }
        }
      },
      "type": "string"
    },
    "msDocumentDbRawPartitionKey": {
      "name": "x-ms-documentdb-raw-partitionkey",
      "in": "header",
      "description": "The partition key value for the requested document or attachment operation.",
      "required": false,
      "x-ms-summary": "Partition key value",
      "type": "string"
    },
    "msDocumentDbPartitionKey": {
      "name": "x-ms-documentdb-partitionkey",
      "in": "header",
      "description": "The partition key value for the requested document or attachment operation.",
      "required": false,
      "x-ms-visibility": "internal",
      "x-ms-summary": "Partition key value",
      "type": "string"
    },
    "msMaxItemCount": {
      "name": "x-ms-max-item-count",
      "in": "header",
      "description": "An integer indicating the maximum number of items to be returned per page.",
      "required": false,
      "x-ms-summary": "Max Item Count",
      "x-ms-visibility": "advanced",
      "type": "number"
    },
    "msContinuation": {
      "name": "x-ms-continuation",
      "in": "header",
      "description": "A string token returned for queries and read-feed operations if there are more results to be read.",
      "required": false,
      "x-ms-summary": "Continuation Token",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "msConsistencyLevel": {
      "name": "x-ms-consistency-level",
      "in": "header",
      "description": "This is the consistency level override. The valid values are: Strong, Bounded, Session, or Eventual (in order of strongest to weakest).",
      "required": false,
      "x-ms-summary": "Consistency Level",
      "x-ms-visibility": "advanced",
      "type": "string",
      "enum": [
        "Strong",
        "Bounded",
        "Session",
        "Eventual"
      ]
    },
    "msSessionToken": {
      "name": "x-ms-session-token",
      "in": "header",
      "description": "A string token used with session level consistency.",
      "required": false,
      "x-ms-summary": "Session Token",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "msActivityId": {
      "name": "x-ms-activity-id",
      "in": "header",
      "description": "A client supplied identifier for the operation, which will be echoed in the server response.",
      "required": false,
      "x-ms-summary": "Activity id",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "msDocumentDbPreTriggerInclude": {
      "name": "x-ms-documentdb-pre-trigger-include",
      "in": "header",
      "description": "Comma-separated list of trigger names to run before the document operation is executed.",
      "required": false,
      "x-ms-summary": "Pre-Trigger",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "msDocumentDbPostTriggerInclude": {
      "name": "x-ms-documentdb-post-trigger-include",
      "in": "header",
      "description": "Comma-separated list of trigger names to run after the document operation is executed.",
      "required": false,
      "x-ms-summary": "Post-Trigger",
      "x-ms-visibility": "advanced",
      "type": "string"
    },
    "msDocumentDbIsUpsert": {
      "name": "x-ms-documentdb-is-upsert",
      "in": "header",
      "description": "If set to true, the document will be replaced if it exists else created.",
      "required": false,
      "x-ms-summary": "IsUpsert",
      "type": "boolean"
    }
  },
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/documentdb"
  }
}
