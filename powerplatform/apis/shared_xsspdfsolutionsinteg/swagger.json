{
  "swagger": "2.0",
  "info": {
    "title": "XSS PDF Solutions Integrations",
    "description": "Offers a complete set of PDF tools including merging, compression, conversion, extraction, and other document processing features to streamline workflow automation.",
    "version": "1.0",
    "contact": {
      "name": "XSS PDF Solutions Integrations",
      "url": "https://login.cross-service-solutions.com",
      "email": "contact@cross-service-solutions.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://login.cross-service-solutions.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://cross-service-solutions.com/terms-and-conditions"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files;Productivity"
    }
  ],
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/xsspdfsolutionsinteg",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectionId}/27/": {
      "post": {
        "summary": "Ask PDF With AI",
        "description": "Get information about the PDF content using AI based on the provided user question.",
        "operationId": "27",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "file",
            "x-ms-summary": "File",
            "in": "formData",
            "description": "The PDF file to be analyzed by AI.",
            "required": true,
            "type": "file",
            "x-ms-visibility": "important"
          },
          {
            "name": "questtext",
            "x-ms-summary": "Question",
            "in": "formData",
            "description": "The question related to the content of the PDF.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the AI-generated response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The AI-generated response based on the PDF content.",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The AI response related to the user's question about the PDF."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the AI's response.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A detailed answer to the question based on the PDF content."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xsspdfsolutionsinteg/#ask-pdf-with-ai"
        }
      }
    },
    "/{connectionId}/29/": {
      "post": {
        "summary": "Compress PDF",
        "description": "Compress a PDF based on the provided configuration.",
        "operationId": "29",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "file",
            "x-ms-summary": "File",
            "in": "formData",
            "description": "The PDF file to compress.",
            "required": true,
            "type": "file",
            "x-ms-visibility": "important"
          },
          {
            "name": "dpi",
            "x-ms-summary": "DPI",
            "in": "formData",
            "description": "Dots per inch from 72 to 300. Smaller value reduces size of PDF File but also quality.",
            "required": true,
            "type": "integer",
            "default": 144,
            "minimum": 72,
            "maximum": 300,
            "x-ms-visibility": "important"
          },
          {
            "name": "imageQuality",
            "x-ms-summary": "Image Quality",
            "in": "formData",
            "description": "Values in % from 0 to 100. Smaller value reduces size of PDF File but also the quality.",
            "required": true,
            "type": "integer",
            "default": 75,
            "minimum": 0,
            "maximum": 100,
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the compression result.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the compression request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the compression process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the compression process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The output file details (if completed).",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "A html download message related to the compression result."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the convert to PDF result.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A message related to the convert to PDF result."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xsspdfsolutionsinteg/#compress-pdf"
        }
      }
    },
    "/{connectionId}/30/": {
      "post": {
        "summary": "Merge Multiple PDFs",
        "description": "Merge multiple PDF files into a single document.",
        "operationId": "30",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "file1",
            "x-ms-summary": "File1",
            "in": "formData",
            "description": "The PDF file to merge. Can upload multiple files",
            "required": true,
            "type": "file",
            "x-ms-visibility": "important"
          },
          {
            "name": "file2",
            "x-ms-summary": "File2",
            "in": "formData",
            "description": "The PDF file to merge. Can upload multiple files",
            "required": true,
            "type": "file",
            "x-ms-visibility": "important"
          },
          {
            "name": "file3",
            "x-ms-summary": "File3",
            "in": "formData",
            "description": "The PDF file to merge. Can upload multiple files",
            "required": false,
            "type": "file",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "file4",
            "x-ms-summary": "File4",
            "in": "formData",
            "description": "The PDF file to merge. Can upload multiple files",
            "required": false,
            "type": "file",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "file5",
            "x-ms-summary": "File5",
            "in": "formData",
            "description": "The PDF file to merge. Can upload multiple files",
            "required": false,
            "type": "file",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "file6",
            "x-ms-summary": "File6",
            "in": "formData",
            "description": "The PDF file to merge. Can upload multiple files",
            "required": false,
            "type": "file",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "file7",
            "x-ms-summary": "File7",
            "in": "formData",
            "description": "The PDF file to merge. Can upload multiple files",
            "required": false,
            "type": "file",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "file8",
            "x-ms-summary": "File8",
            "in": "formData",
            "description": "The PDF file to merge. Can upload multiple files",
            "required": false,
            "type": "file",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "file9",
            "x-ms-summary": "File9",
            "in": "formData",
            "description": "The PDF file to merge. Can upload multiple files",
            "required": false,
            "type": "file",
            "x-ms-visibility": "advanced"
          },
          {
            "name": "file10",
            "x-ms-summary": "File10",
            "in": "formData",
            "description": "The PDF file to merge. Can upload multiple files",
            "required": false,
            "type": "file",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the merge result.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the merge request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the merge process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the merge process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The output file details (if completed).",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "A html download message related to the merge result."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the merged PDF result.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A message related to the merged PDF result."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the merged PDF file."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the merged PDF file."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xsspdfsolutionsinteg/#merge-multiple-pdfs"
        }
      }
    },
    "/{connectionId}/31/": {
      "post": {
        "summary": "Convert to PDF",
        "description": "Convert various file types (e.g., JPG, JPEG, PNG, DOCX) to PDF.",
        "operationId": "31",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "file",
            "x-ms-summary": "File",
            "in": "formData",
            "description": "The file to convert to PDF.",
            "required": true,
            "type": "file",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing result.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The output file details (if completed).",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "A html download message related to the convert to PDF result."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the convert to PDF result.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A message related to the convert to PDF result."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xsspdfsolutionsinteg/#convert-to-pdf"
        }
      }
    },
    "/{connectionId}/32/": {
      "post": {
        "summary": "Protect PDF",
        "description": "Protect a PDF with a password based on the provided configuration.",
        "operationId": "32",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "file",
            "x-ms-summary": "File",
            "in": "formData",
            "description": "The file to be protected with a password.",
            "required": true,
            "type": "file",
            "x-ms-visibility": "important"
          },
          {
            "name": "userPass",
            "x-ms-summary": "Password",
            "in": "formData",
            "description": "The password to lock the PDF.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing result.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The output file details (if completed).",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "A HTML download message related to the protected PDF result."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the protected PDF result.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A message related to the protected PDF result."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the protected file."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xsspdfsolutionsinteg/#protect-pdf"
        }
      }
    },
    "/{connectionId}/33/": {
      "post": {
        "summary": "Unlock PDF",
        "description": "Unlock a PDF that is protected with a password based on the provided configuration.",
        "operationId": "33",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "file",
            "x-ms-summary": "File",
            "in": "formData",
            "description": "The locked PDF file to be unlocked.",
            "required": true,
            "type": "file",
            "x-ms-visibility": "important"
          },
          {
            "name": "password",
            "x-ms-summary": "Password",
            "in": "formData",
            "description": "The password to unlock the protected PDF.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing result.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The output file details (if completed).",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "A HTML download message related to the unlocked PDF result."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the unlocked PDF result.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A message related to the unlocked PDF result."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the unlocked file."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xsspdfsolutionsinteg/#unlock-pdf"
        }
      }
    },
    "/{connectionId}/40/": {
      "post": {
        "summary": "Remove Metadata from PDF",
        "description": "Remove all metadata from a PDF file to ensure privacy and reduce file size.",
        "operationId": "40",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "file",
            "x-ms-summary": "File",
            "in": "formData",
            "description": "The PDF file from which metadata will be removed.",
            "required": true,
            "type": "file",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing result.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The output file details (if completed).",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "A HTML download message related to the metadata removal result."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the metadata removal result.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A message related to the metadata removal result."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file with removed metadata."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xsspdfsolutionsinteg/#remove-metadata-from-pdf"
        }
      }
    },
    "/{connectionId}/41/": {
      "post": {
        "summary": "Flatten PDF",
        "description": "Flatten a PDF to merge all annotations, forms, and comments into the document, making it static.",
        "operationId": "41",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "file",
            "x-ms-summary": "File",
            "in": "formData",
            "description": "The PDF file to be flattened.",
            "required": true,
            "type": "file",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing result.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The output file details (if completed).",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "A HTML download message related to the flattened PDF result."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the flattened PDF result.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A message related to the flattened PDF result."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the flattened file."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xsspdfsolutionsinteg/#flatten-pdf"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "x-ms-openai-manifest": {
    "humanName": "XSS PDF Solutions Integrations",
    "modelDescription": "Offers a complete set of PDF tools in Power Automate, including merging, compression, conversion, extraction, and other document processing features to streamline workflow automation.",
    "contactEmail": "contact@cross-service-solutions.com",
    "legalUrl": "https://cross-service-solutions.com/terms-and-conditions"
  },
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/xsspdfsolutionsinteg"
  }
}
