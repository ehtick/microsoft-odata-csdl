{
  "swagger": "2.0",
  "info": {
    "title": "Power Platform for Admins V2",
    "description": "Unified connector for all administrative capabilities in Microsoft Power Platform",
    "contact": {
      "name": "Microsoft Support",
      "url": "https://admin.powerplatform.microsoft.com/support",
      "email": "support@microsoft.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    },
    "version": "2022-03-01-preview"
  },
  "host": "europe-002.azure-apim.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectionId}/analytics/advisorRecommendations": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get recommendations",
        "description": "Gets the list of recommendations for the tenant.",
        "operationId": "GetRecommendations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for the next page of recommendations",
            "type": "string",
            "x-ms-visibility": "internal",
            "x-ms-summary": "Skip Token"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdvisorRecommendationIEnumerableResponseWithContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "x-ms-summary": "Get recommendations",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-recommendations"
        }
      }
    },
    "/{connectionId}/analytics/advisorRecommendations/{scenario}/resources": {
      "get": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Get recommendation resources",
        "description": "Gets the list of resources for a recommendation for the tenant.",
        "operationId": "GetRecommendationResources",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "scenario",
            "description": "The recommendation name",
            "required": true,
            "type": "string",
            "enum": [
              "OrphanedApps",
              "UnusedApps",
              "HighValueNonSolutionApps",
              "SharedWithEveryoneApps"
            ],
            "x-ms-summary": "Recommendation Name",
            "x-ms-enum": [
              {
                "value": "OrphanedApps",
                "description": "Apps without a valid owner",
                "name": "Orphaned apps"
              },
              {
                "value": "UnusedApps",
                "description": "Apps not used in recent past",
                "name": "Unused apps"
              },
              {
                "value": "HighValueNonSolutionApps",
                "description": "Apps which are highly used but not part of a solution",
                "name": "High value non-solution apps"
              },
              {
                "value": "SharedWithEveryoneApps",
                "description": "Apps which are shared with everyone in the tenant",
                "name": "Apps shared with everyone"
              }
            ]
          },
          {
            "in": "query",
            "name": "$skipToken",
            "description": "Skip token for the next page of resources",
            "type": "string",
            "x-ms-visibility": "internal",
            "x-ms-summary": "Skip Token"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdvisorRecommendationResourceIEnumerableResponseWithContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          }
        },
        "x-ms-summary": "Get recommendation resources",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-recommendation-resources"
        }
      }
    },
    "/{connectionId}/analytics/actions/{actionName}": {
      "post": {
        "tags": [
          "Recommendations"
        ],
        "summary": "Execute recommendation action",
        "description": "Execute a recommended action on a set of recommendation resource(s).",
        "operationId": "ExecuteRecommendationAction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "actionName",
            "description": "The name of the action to execute",
            "required": true,
            "type": "string",
            "enum": [
              "DeleteApp",
              "AssignAppOwner",
              "QuarantineApp",
              "AssignAppToCoOwner"
            ],
            "x-ms-summary": "Action Name",
            "x-ms-enum": [
              {
                "value": "DeleteApp",
                "description": "Delete an existing app",
                "name": "Delete app"
              },
              {
                "value": "AssignAppOwner",
                "description": "Assign a new owner to the app",
                "name": "Assign new app owner"
              },
              {
                "value": "QuarantineApp",
                "description": "Quarantine an existing app",
                "name": "Qurantine app"
              },
              {
                "value": "AssignAppToCoOwner",
                "description": "Promote co-owner of the app as an owner",
                "name": "Assign app to co-owner"
              }
            ]
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request body for the action to execute",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AdvisorActionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdvisorActionResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Too Many Requests"
          }
        },
        "x-ms-summary": "Execute recommendation action",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#execute-recommendation-action"
        }
      }
    },
    "/{connectionId}/appmanagement/applicationPackages": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get list of Application Packages that are available for a tenant",
        "description": "Get list of available application packages for a tenant",
        "operationId": "GetTenantApplicationPackage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TenantApplicationPackageContinuationResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-list-of-application-packages-that-are-available-for-a-tenant"
        }
      }
    },
    "/{connectionId}/appmanagement/environments/{environmentId}/applicationPackages": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "List Application Packages that are available for install in a target environment",
        "description": "Get list of Application Packages that are relevant in the context of a target environment. Client can filter the Application Packages based on Install State (NotInstalled, Installed, All) and any other response parameters utilizing standard OData capabilities",
        "operationId": "GetEnvironmentApplicationPackage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "Environment Id (not to be confused with Org id)",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "query",
            "name": "appInstallState",
            "description": "Application Package Install State",
            "type": "string",
            "enum": [
              "All",
              "Installed",
              "NotInstalled"
            ],
            "x-ms-summary": "App Install State"
          },
          {
            "in": "query",
            "name": "lcid",
            "description": "Application Package Supported Language Id",
            "type": "string",
            "x-ms-summary": "Lcid"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApplicationPackageContinuationResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#list-application-packages-that-are-available-for-install-in-a-target-environment"
        }
      }
    },
    "/{connectionId}/appmanagement/environments/{environmentId}/applicationPackages/{uniqueName}/install": {
      "post": {
        "tags": [
          "Applications"
        ],
        "summary": "Trigger application package install into a target environment",
        "description": "Trigger installation of an application package based on the package unique name to be installed in a target environment. Client can also include custom payload when requesting installation of an application package.",
        "operationId": "InstallApplicationPackage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "Environment Id (not to be confused with Org id)",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "path",
            "name": "uniqueName",
            "description": "Package Unique Name",
            "required": true,
            "type": "string",
            "x-ms-summary": "Unique Name"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Payload to be sent during installation of the Package",
            "schema": {
              "$ref": "#/definitions/TpsInstallRequestPayload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InstancePackage"
            }
          },
          "202": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#trigger-application-package-install-into-a-target-environment"
        }
      }
    },
    "/{connectionId}/appmanagement/environments/{environmentId}/operations/{operationId}": {
      "get": {
        "tags": [
          "Applications"
        ],
        "summary": "Get the polling status for a previously triggered installation",
        "description": "Get the polling status to check on the progress of a previously triggered installation based on the operation ID",
        "operationId": "GetApplicationPackageInstallStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "Environment Id (not to be confused with Org id)",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "path",
            "name": "operationId",
            "description": "Operation ID",
            "required": true,
            "type": "string",
            "format": "uuid",
            "x-ms-summary": "Operation Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/InstancePackageOperationPollingResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-the-polling-status-for-a-previously-triggered-installation"
        }
      }
    },
    "/{connectionId}/governance/crossTenantConnectionReports": {
      "get": {
        "tags": [
          "CrossTenantConnectionReports"
        ],
        "summary": "List cross-tenant connection reports for a tenant",
        "description": "Ability to List cross-tenant connection reports for a tenant.",
        "operationId": "ListCrossTenantConnectionReports",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrossTenantConnectionReportsResponseWithOdataContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#list-cross-tenant-connection-reports-for-a-tenant"
        }
      },
      "post": {
        "tags": [
          "CrossTenantConnectionReports"
        ],
        "summary": "Generate cross-tenant connection report or return an existing report",
        "description": "Ability to Generate cross-tenant connection report or return an existing report.",
        "operationId": "CreateCrossTenantConnectionReport",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrossTenantConnectionReport"
            }
          },
          "202": {
            "description": "Accepted",
            "schema": {
              "$ref": "#/definitions/CrossTenantConnectionReport"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#generate-cross-tenant-connection-report-or-return-an-existing-report"
        }
      }
    },
    "/{connectionId}/governance/crossTenantConnectionReports/{reportId}": {
      "get": {
        "tags": [
          "CrossTenantConnectionReports"
        ],
        "summary": "Get a cross-tenant connection report by report ID for a tenant",
        "description": "Ability to Get a cross-tenant connection report by report ID for a tenant.",
        "operationId": "GetCrossTenantConnectionReport",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "reportId",
            "description": "The report ID.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Report Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CrossTenantConnectionReport"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-a-cross-tenant-connection-report-by-report-id-for-a-tenant"
        }
      }
    },
    "/{connectionId}/powerpages/environments/{environmentId}/websites": {
      "get": {
        "tags": [
          "GatewayApiV1"
        ],
        "summary": "List Power Pages websites",
        "description": "Get a list of all the websites in your environment",
        "operationId": "GetWebsites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The Environment Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "query",
            "name": "skip",
            "description": "The Skip",
            "type": "string",
            "x-ms-summary": "Skip"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ODataListWebsitesDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#list-power-pages-websites"
        }
      },
      "post": {
        "tags": [
          "GatewayApiV1"
        ],
        "summary": "Create a Power Pages website",
        "description": "Trigger the creation of a new website",
        "operationId": "CreateWebsite",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The Environment Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewWebsiteRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Operation-Location": {
                "description": "Location of a website",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#create-a-power-pages-website"
        }
      }
    },
    "/{connectionId}/powerpages/environments/{environmentId}/websites/{id}": {
      "get": {
        "tags": [
          "GatewayApiV1"
        ],
        "summary": "Get the Power Pages website details by specifying its unique identifier (ID)",
        "description": "Get website details from Website id",
        "operationId": "GetWebsiteById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The Environment Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebsiteDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-the-power-pages-website-details-by-specifying-its-unique-identifier-(id)"
        }
      },
      "delete": {
        "tags": [
          "GatewayApiV1"
        ],
        "summary": "Delete a Power Pages website",
        "description": "Trigger the deletion of a website by specifying the website ID",
        "operationId": "DeleteWebsite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "header",
            "name": "Operation-Location",
            "description": "The Operation- Location",
            "required": true,
            "type": "string",
            "x-ms-summary": "Operation- Location"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The Environment Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "headers": {
              "Operation-Location": {
                "description": "Location of a website",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#delete-a-power-pages-website"
        }
      }
    },
    "/{connectionId}/powerpages/environments/{environmentId}/websites/{id}/restart": {
      "post": {
        "tags": [
          "GatewayApiV1"
        ],
        "summary": "Restart a Power Pages website",
        "description": "Restart the website for the given site id",
        "operationId": "RestartWebsite",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The Environment Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#restart-a-power-pages-website"
        }
      }
    },
    "/{connectionId}/powerpages/environments/{environmentId}/websites/{id}/setPortalDataModelVersion": {
      "post": {
        "tags": [
          "GatewayApiV1"
        ],
        "summary": "Stamp data model version for website",
        "description": "Stamp data model version for website",
        "operationId": "SetPortalDataModelVersion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The Environment Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id",
            "required": true,
            "type": "string",
            "x-ms-summary": "Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PortalDataModelDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#stamp-data-model-version-for-website"
        }
      }
    },
    "/{connectionId}/licensing/billingPolicies": {
      "get": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Get the list of billing policies for the tenant",
        "description": "Ability to Get the list of billing policies for the tenant.",
        "operationId": "ListBillingPolicies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top limit of results",
            "type": "string",
            "x-ms-summary": "$top"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModelResponseWithOdataContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-the-list-of-billing-policies-for-the-tenant"
        }
      },
      "post": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Creates the billing policy at tenant level",
        "description": "Ability to Creates the billing policy at tenant level.",
        "operationId": "CreateBillingPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The billing policy",
            "schema": {
              "$ref": "#/definitions/BillingPolicyPostRequestModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#creates-the-billing-policy-at-tenant-level"
        }
      }
    },
    "/{connectionId}/licensing/billingPolicies/{billingPolicyId}": {
      "get": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Get the billing policy at tenant level by policy ID",
        "description": "Ability to Get the billing policy at tenant level by policy ID.",
        "operationId": "GetBillingPolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Billing Policy Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-the-billing-policy-at-tenant-level-by-policy-id"
        }
      },
      "delete": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Delete billing policy",
        "description": "Ability to Delete billing policy.",
        "operationId": "DeleteBillingPolicy",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Billing Policy Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#delete-billing-policy"
        }
      },
      "put": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Updates the billing policy at tenant level",
        "description": "Ability to Updates the billing policy at tenant level.",
        "operationId": "UpdateBillingPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Billing Policy Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The billing policy",
            "schema": {
              "$ref": "#/definitions/BillingPolicyPutRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#updates-the-billing-policy-at-tenant-level"
        }
      }
    },
    "/{connectionId}/licensing/billingPolicies/{billingPolicyId}/environments": {
      "get": {
        "tags": [
          "BillingPolicyEnvironment"
        ],
        "summary": "Get the list of environments linked to the billing policy",
        "description": "Ability to Get the list of environments linked to the billing policy.",
        "operationId": "ListBillingPolicyEnvironments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Billing Policy Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyEnvironmentResponseModelV1ResponseWithOdataContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-the-list-of-environments-linked-to-the-billing-policy"
        }
      }
    },
    "/{connectionId}/licensing/billingPolicies/{billingPolicyId}/environments/{environmentId}": {
      "get": {
        "tags": [
          "BillingPolicyEnvironment"
        ],
        "summary": "Get the environment linked to the billing policy",
        "description": "Ability to Get the environment linked to the billing policy.",
        "operationId": "GetBillingPolicyEnvironment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Billing Policy Id"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyEnvironmentResponseModelV1"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-the-environment-linked-to-the-billing-policy"
        }
      }
    },
    "/{connectionId}/licensing/environments/{environmentId}/allocations": {
      "get": {
        "tags": [
          "CurrencyAllocation"
        ],
        "summary": "Get currency allocations for the environment",
        "description": "Ability to Get currency allocations for the environment.",
        "operationId": "GetCurrencyAllocationByEnvironment",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AllocationsByEnvironmentResponseModelV1"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-currency-allocations-for-the-environment"
        }
      },
      "patch": {
        "tags": [
          "CurrencyAllocation"
        ],
        "summary": "Allocate and deallocate the currencies for the environment",
        "description": "Ability to Allocate and deallocate the currencies for the environment.",
        "operationId": "PatchCurrencyAllocationByEnvironment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Environment currency allocation",
            "schema": {
              "$ref": "#/definitions/AllocationsByEnvironmentPatchRequestModelV1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AllocationsByEnvironmentResponseModelV1"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#allocate-and-deallocate-the-currencies-for-the-environment"
        }
      }
    },
    "/{connectionId}/licensing/billingPolicies/{billingPolicyId}/refreshProvisioningStatus": {
      "post": {
        "tags": [
          "BillingPolicy"
        ],
        "summary": "Refresh the billing policy provisioning status",
        "description": "Ability to Refresh the billing policy provisioning status.",
        "operationId": "RefreshProvisioningStatus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Billing Policy Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#refresh-the-billing-policy-provisioning-status"
        }
      }
    },
    "/{connectionId}/licensing/billingPolicies/{billingPolicyId}/environments/add": {
      "post": {
        "tags": [
          "BillingPolicyEnvironment"
        ],
        "summary": "Link billing policy ID with environments",
        "description": "Ability to Link billing policy ID with environments.",
        "operationId": "AddBillingPolicyEnvironment",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Billing Policy Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Model to represents the list of environments to be linked",
            "schema": {
              "$ref": "#/definitions/BillingPolicyEnvironmentAddRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#link-billing-policy-id-with-environments"
        }
      }
    },
    "/{connectionId}/licensing/billingPolicies/{billingPolicyId}/environments/remove": {
      "post": {
        "tags": [
          "BillingPolicyEnvironment"
        ],
        "summary": "Unlink billing policy ID from environments",
        "description": "Ability to Unlink billing policy ID from environments.",
        "operationId": "RemoveBillingPolicyEnvironment",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "billingPolicyId",
            "description": "The billing policy ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Billing Policy Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Model to represents the list of environments to be unlinked",
            "schema": {
              "$ref": "#/definitions/BillingPolicyEnvironmentRemoveRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#unlink-billing-policy-id-from-environments"
        }
      }
    },
    "/{connectionId}/licensing/environments/{environmentId}/billingPolicy": {
      "get": {
        "tags": [
          "EnvironmentBillingPolicy"
        ],
        "summary": "Get the linked billing policy details for an environment",
        "description": "Ability to Get the linked billing policy details for an environment.",
        "operationId": "GetEnvironmentBillingPolicy",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "environmentId",
            "description": "The environment ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Environment Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BillingPolicyResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-the-linked-billing-policy-details-for-an-environment"
        }
      }
    },
    "/{connectionId}/licensing/isvContracts": {
      "get": {
        "tags": [
          "ISVContract"
        ],
        "summary": "Get the list of ISV contracts for the tenant",
        "description": "Get the list of ISV contracts for the tenant.",
        "operationId": "ListISVContracts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Top limit of results",
            "type": "string",
            "x-ms-summary": "$top"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IsvContractResponseModelResponseWithOdataContinuation"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-the-list-of-isv-contracts-for-the-tenant"
        }
      },
      "post": {
        "tags": [
          "ISVContract"
        ],
        "summary": "Create an ISV contract",
        "description": "Create an ISV contract.",
        "operationId": "CreateISVContract",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The ISV contract",
            "schema": {
              "$ref": "#/definitions/IsvContractPostRequestModel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IsvContractResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#create-an-isv-contract"
        }
      }
    },
    "/{connectionId}/licensing/isvContracts/{isvContractId}": {
      "get": {
        "tags": [
          "ISVContract"
        ],
        "summary": "Get an ISV contract by its identifier (ID)",
        "description": "Get an ISV contract by its identifier (ID).",
        "operationId": "GetISVContract",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "isvContractId",
            "description": "The ISV contract ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Isv Contract Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IsvContractResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#get-an-isv-contract-by-its-identifier-(id)"
        }
      },
      "delete": {
        "tags": [
          "ISVContract"
        ],
        "summary": "Delete an ISV contract",
        "description": "Delete an ISV contract.",
        "operationId": "DeleteISVContract",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "isvContractId",
            "description": "The ISV contract ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Isv Contract Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#delete-an-isv-contract"
        }
      },
      "put": {
        "tags": [
          "ISVContract"
        ],
        "summary": "Update an ISV contract",
        "description": "Update an ISV contract.",
        "operationId": "UpdateISVContract",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "isvContractId",
            "description": "The ISV contract ID",
            "required": true,
            "type": "string",
            "x-ms-summary": "Isv Contract Id"
          },
          {
            "in": "query",
            "name": "api-version",
            "description": "The API version",
            "required": true,
            "type": "string",
            "default": "2022-03-01-preview",
            "x-ms-summary": "Api-version",
            "x-ms-visibility": "advanced"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The ISV contract",
            "schema": {
              "$ref": "#/definitions/IsvContractPutRequestModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IsvContractResponseModel"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/powerplatformadminv2/#update-an-isv-contract"
        }
      }
    }
  },
  "definitions": {
    "AdvisorActionRequest": {
      "description": "The request with details to carry out an action on resource(s)",
      "required": [
        "scenario",
        "actionParameters"
      ],
      "type": "object",
      "properties": {
        "scenario": {
          "$ref": "#/definitions/AdvisorRecommendationScenario"
        },
        "actionParameters": {
          "description": "The collection of parameters to carry out the action for a resource",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "x-ms-summary": "Parameters"
        }
      }
    },
    "AdvisorActionResponse": {
      "description": "The response for action performed on resources",
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvisorActionResult"
          }
        }
      }
    },
    "AdvisorActionResult": {
      "description": "The result of an action performed on a resource",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The unique ID of the resource for which the action was performed",
          "type": "string",
          "x-ms-summary": "Resource ID"
        },
        "statusCode": {
          "format": "int32",
          "description": "The status code of the action request for the given resource",
          "type": "integer",
          "x-ms-summary": "Status Code"
        },
        "actionFinalResult": {
          "description": "Final status of the action request",
          "type": "string",
          "x-ms-summary": "Action Result"
        },
        "errorCode": {
          "description": "The error code associated with any error encountered during the action execution",
          "type": "string",
          "x-ms-summary": "Error Code"
        },
        "error": {
          "description": "The error message associated with any error encountered during the action execution",
          "type": "string",
          "x-ms-summary": "Error Message"
        }
      }
    },
    "AdvisorActionType": {
      "description": "Available action types which can be taken on a resource",
      "enum": [
        "DeleteApp",
        "AssignAppOwner",
        "QuarantineApp",
        "AssignAppToCoOwner"
      ],
      "type": "string",
      "example": "DeleteApp",
      "x-ms-summary": "Action Name",
      "x-ms-enum": [
        {
          "value": "DeleteApp",
          "description": "Delete an existing app",
          "name": "Delete app"
        },
        {
          "value": "AssignAppOwner",
          "description": "Assign a new owner to the app",
          "name": "Assign new app owner"
        },
        {
          "value": "QuarantineApp",
          "description": "Quarantine an existing app",
          "name": "Qurantine app"
        },
        {
          "value": "AssignAppToCoOwner",
          "description": "Promote co-owner of the app as an owner",
          "name": "Assign app to co-owner"
        }
      ]
    },
    "AdvisorRecommendation": {
      "description": "Information for a recommendation",
      "type": "object",
      "properties": {
        "scenario": {
          "$ref": "#/definitions/AdvisorRecommendationScenario"
        },
        "details": {
          "$ref": "#/definitions/AdvisorRecommendationDetails"
        }
      }
    },
    "AdvisorRecommendationDetails": {
      "description": "Details for a recommendation",
      "type": "object",
      "properties": {
        "resourceCount": {
          "format": "int32",
          "description": "The number of resources",
          "type": "integer",
          "x-ms-summary": "Resource count"
        },
        "lastRefreshedTimestamp": {
          "format": "date-time",
          "description": "Time when the recommendation was refreshed",
          "type": "string",
          "x-ms-summary": "Last refresh timestamp"
        },
        "expectedNextRefreshTimestamp": {
          "format": "date-time",
          "description": "Time when the recommendation will be refreshed again",
          "type": "string",
          "x-ms-summary": "Expected next refresh timestamp"
        }
      }
    },
    "AdvisorRecommendationIEnumerableResponseWithContinuation": {
      "description": "Paged list of recommendations",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of recommendations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvisorRecommendation"
          }
        },
        "nextLink": {
          "description": "Link to get the next page of recommendations",
          "type": "string",
          "x-ms-summary": "Next link"
        }
      }
    },
    "AdvisorRecommendationResource": {
      "description": "Details of a resource included in a recommendation",
      "type": "object",
      "properties": {
        "resourceName": {
          "description": "The resource display name",
          "type": "string",
          "x-ms-summary": "Resource display name"
        },
        "resourceId": {
          "description": "The resource unique ID",
          "type": "string",
          "x-ms-summary": "Resource ID"
        },
        "resourceOwnerId": {
          "description": "The resource owner object ID",
          "type": "string",
          "x-ms-summary": "Owner ID"
        },
        "resourceOwner": {
          "description": "The resource owner display name",
          "type": "string",
          "x-ms-summary": "Owner name"
        },
        "resourceType": {
          "description": "The type of resource",
          "type": "string",
          "x-ms-summary": "Resource type"
        },
        "resourceSubType": {
          "description": "The sub type of the resource",
          "type": "string",
          "x-ms-summary": "Resource sub type"
        },
        "resourceDescription": {
          "description": "The resource description",
          "type": "string",
          "x-ms-summary": "Resource description"
        },
        "resourceUsage": {
          "format": "double",
          "description": "Number of unique users who used the resource in last 30 days",
          "type": "number",
          "x-ms-summary": "Resource usage"
        },
        "environmentName": {
          "description": "The environment display name",
          "type": "string",
          "x-ms-summary": "Environment name"
        },
        "environmentId": {
          "description": "The environment unique ID",
          "type": "string",
          "x-ms-summary": "Environment ID"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "description": "Time when the resource was last modified",
          "type": "string",
          "x-ms-summary": "Last modfified date"
        },
        "lastAccessedDate": {
          "format": "date-time",
          "description": "Time when the resource was last used",
          "type": "string",
          "x-ms-summary": "Last used date"
        },
        "resourceActionStatus": {
          "description": "Current status of any action taken since the last refresh time",
          "type": "string",
          "x-ms-summary": "Action Status"
        }
      }
    },
    "AdvisorRecommendationResourceIEnumerableResponseWithContinuation": {
      "description": "Paged list of recommendation resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of recommendation resources",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvisorRecommendationResource"
          }
        },
        "nextLink": {
          "description": "Link to get the next page of resources",
          "type": "string",
          "x-ms-summary": "Next link"
        }
      }
    },
    "AdvisorRecommendationScenario": {
      "description": "The recommendation name",
      "enum": [
        "OrphanedApps",
        "UnusedApps",
        "HighValueNonSolutionApps",
        "SharedWithEveryoneApps"
      ],
      "type": "string",
      "example": "OrphanedApps",
      "x-ms-summary": "Recommendation Name",
      "x-ms-enum": [
        {
          "value": "OrphanedApps",
          "description": "Apps without a valid owner",
          "name": "Orphaned apps"
        },
        {
          "value": "UnusedApps",
          "description": "Apps not used in recent past",
          "name": "Unused apps"
        },
        {
          "value": "HighValueNonSolutionApps",
          "description": "Apps which are highly used but not part of a solution",
          "name": "High value non-solution apps"
        },
        {
          "value": "SharedWithEveryoneApps",
          "description": "Apps which are shared with everyone in the tenant",
          "name": "Apps shared with everyone"
        }
      ]
    },
    "ApplicationInstallState": {
      "description": "Application Install State for ApplicationPackages",
      "enum": [
        "All",
        "Installed",
        "NotInstalled"
      ],
      "type": "string"
    },
    "ApplicationPackage": {
      "required": [
        "id",
        "uniqueName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "AvailablePackage Id or InstancePackage PackageId, both maps to ApplicationPackageId",
          "type": "string"
        },
        "uniqueName": {
          "description": "AvailablePackage UniqueName or InstancePackage PackageUniqueName",
          "type": "string"
        },
        "version": {
          "description": "AvailablePackage Version or InstancePackage PackageVersion",
          "type": "string"
        },
        "localizedDescription": {
          "description": "LocalizedDescription for the application package",
          "maxLength": 1000,
          "type": "string"
        },
        "localizedName": {
          "description": "Localized name of application package",
          "type": "string"
        },
        "applicationId": {
          "format": "uuid",
          "description": "Application ID",
          "type": "string"
        },
        "applicationName": {
          "description": "Application Name",
          "type": "string"
        },
        "applicationDescription": {
          "description": "Application Description",
          "type": "string"
        },
        "singlePageApplicationUrl": {
          "description": "Single Page Application URL associated with the application",
          "type": "string"
        },
        "publisherName": {
          "description": "Publisher name",
          "type": "string"
        },
        "publisherId": {
          "format": "uuid",
          "description": "Publisher ID",
          "type": "string"
        },
        "learnMoreUrl": {
          "description": "Learn more URL for the application",
          "type": "string"
        },
        "platformMinVersion": {
          "description": "AvailablePackage CrmMinVersion",
          "type": "string"
        },
        "platformMaxVersion": {
          "description": "AvailablePackage CrmMaxVersion",
          "type": "string"
        },
        "customHandleUpgrade": {
          "description": "AvailablePackage CustomUpgrade",
          "type": "boolean"
        },
        "instancePackageId": {
          "format": "uuid",
          "description": "InstancePackage Id, used only for retry of package installation ie, Reinstall.",
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/InstancePackageState"
        },
        "catalogVisibility": {
          "$ref": "#/definitions/CatalogVisibility"
        },
        "applicationVisibility": {
          "$ref": "#/definitions/ApplicationVisibility"
        },
        "lastError": {
          "$ref": "#/definitions/ErrorDetails"
        },
        "startDateUtc": {
          "format": "date-time",
          "description": "Start date for applicationPackage",
          "type": "string"
        },
        "endDateUtc": {
          "format": "date-time",
          "description": "End date for applicationPackage",
          "type": "string"
        },
        "supportedCountries": {
          "description": "List of supported countries for the application",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApplicationPackageContinuationResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPackage"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "ApplicationVisibility": {
      "description": "Application Visibility",
      "enum": [
        "None",
        "CrmAdminCenter",
        "BapAdminCenter",
        "OneAdminCenter",
        "All"
      ],
      "type": "string"
    },
    "CatalogVisibility": {
      "description": "CatalogVisibility for application",
      "enum": [
        "None",
        "AdminCenter",
        "Teams",
        "All"
      ],
      "type": "string"
    },
    "ErrorDetails": {
      "type": "object",
      "properties": {
        "errorName": {
          "description": "Error Name",
          "type": "string"
        },
        "errorCode": {
          "format": "int32",
          "description": "ErrorCode from CDS",
          "type": "integer"
        },
        "message": {
          "description": "Error message",
          "type": "string"
        },
        "type": {
          "description": "Error Type",
          "type": "string"
        },
        "statusCode": {
          "format": "int32",
          "description": "Status code for error",
          "type": "integer"
        },
        "source": {
          "description": "Source of the error",
          "type": "string"
        }
      }
    },
    "InstancePackage": {
      "type": "object",
      "properties": {
        "id": {
          "format": "uuid",
          "description": "InstancePackage ID",
          "type": "string"
        },
        "packageId": {
          "format": "uuid",
          "description": "Package ID",
          "type": "string"
        },
        "applicationId": {
          "format": "uuid",
          "description": "ApplicationID associated with the instance package",
          "type": "string"
        },
        "applicationName": {
          "description": "Application name associated with the instance package",
          "type": "string"
        },
        "applicationDescription": {
          "description": "Application description associated with the instance package",
          "type": "string"
        },
        "singlePageApplicationUrl": {
          "description": "Single Page Application URL",
          "type": "string"
        },
        "publisherName": {
          "description": "Publisher name for the application",
          "type": "string"
        },
        "publisherId": {
          "format": "uuid",
          "description": "Publisher ID",
          "type": "string"
        },
        "packageUniqueName": {
          "description": "Package Unique Name",
          "type": "string"
        },
        "packageVersion": {
          "description": "Package Version",
          "type": "string"
        },
        "localizedDescription": {
          "description": "Localized description of application",
          "type": "string"
        },
        "localizedName": {
          "description": "Localized name of application",
          "type": "string"
        },
        "learnMoreUrl": {
          "description": "Learn more url for the application",
          "type": "string"
        },
        "termsOfServiceBlobUris": {
          "description": "TOS for the application",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "applicationVisibility": {
          "$ref": "#/definitions/ApplicationVisibility"
        },
        "lastOperation": {
          "$ref": "#/definitions/InstancePackageOperation"
        },
        "customHandleUpgrade": {
          "description": "Custom handle upgrade flag for the application",
          "type": "boolean"
        }
      }
    },
    "InstancePackageOperation": {
      "type": "object",
      "properties": {
        "state": {
          "$ref": "#/definitions/InstancePackageState"
        },
        "createdOn": {
          "format": "date-time",
          "description": "DateTime for creation of the instance package operation",
          "type": "string"
        },
        "modifiedOn": {
          "format": "date-time",
          "description": "DateTime for modification of the instance package operation",
          "type": "string"
        },
        "errorDetails": {
          "$ref": "#/definitions/ErrorDetails"
        },
        "statusMessage": {
          "description": "Status Message",
          "type": "string"
        },
        "instancePackageId": {
          "format": "uuid",
          "description": "InstancePackage ID",
          "type": "string"
        },
        "operationId": {
          "format": "uuid",
          "description": "OperationID for the operation triggered on the instance package",
          "type": "string"
        }
      }
    },
    "InstancePackageOperationPollingResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/InstancePackageOperationStatus"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "lastActionDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ErrorDetails"
        },
        "statusMessage": {
          "type": "string"
        },
        "operationId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "InstancePackageOperationStatus": {
      "enum": [
        "NotStarted",
        "Running",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "type": "string"
    },
    "InstancePackageState": {
      "description": "State of instance package",
      "enum": [
        "None",
        "Installed",
        "Uninstalled",
        "InstallRequested",
        "UninstallRequested",
        "InstallFailed",
        "UninstallFailed",
        "Installing",
        "Uninstalling",
        "InstallScheduled",
        "InstallRetrying",
        "TemplateInstalled"
      ],
      "type": "string"
    },
    "TenantApplicationPackage": {
      "type": "object",
      "properties": {
        "uniqueName": {
          "description": "Uniquename of TenantApplicationPackage",
          "type": "string"
        },
        "localizedDescription": {
          "description": "Localized description of tenant application Package",
          "type": "string"
        },
        "localizedName": {
          "description": "Localized Name",
          "type": "string"
        },
        "applicationId": {
          "format": "uuid",
          "description": "Application ID",
          "type": "string"
        },
        "applicationName": {
          "description": "Application Name",
          "type": "string"
        },
        "applicationDescription": {
          "description": "Application Description",
          "type": "string"
        },
        "publisherName": {
          "description": "Publisher Name",
          "type": "string"
        },
        "publisherId": {
          "format": "uuid",
          "description": "Publisher ID",
          "type": "string"
        },
        "learnMoreUrl": {
          "description": "Learn more URL",
          "type": "string"
        },
        "catalogVisibility": {
          "$ref": "#/definitions/CatalogVisibility"
        },
        "applicationVisibility": {
          "$ref": "#/definitions/ApplicationVisibility"
        },
        "lastError": {
          "$ref": "#/definitions/ErrorDetails"
        }
      }
    },
    "TenantApplicationPackageContinuationResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenantApplicationPackage"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "TpsInstallRequestPayload": {
      "description": "Payload to be sent during installation of the Package",
      "type": "object",
      "properties": {
        "payloadValue": {
          "type": "string"
        }
      }
    },
    "CrossTenantConnection": {
      "required": [
        "tenantId",
        "connectionType"
      ],
      "type": "object",
      "properties": {
        "tenantId": {
          "format": "uuid",
          "description": "The Azure AD tenant ID to or from which the cross-tenant connection occurred.",
          "type": "string"
        },
        "connectionType": {
          "description": "The direction of the cross-tenant connection.",
          "enum": [
            "Inbound",
            "Outbound"
          ],
          "type": "string"
        }
      }
    },
    "CrossTenantConnectionReport": {
      "required": [
        "tenantId",
        "reportId",
        "requestDate",
        "status",
        "startDate",
        "endDate"
      ],
      "type": "object",
      "properties": {
        "tenantId": {
          "format": "uuid",
          "description": "The Azure AD tenant ID for which the report was generated.",
          "type": "string"
        },
        "reportId": {
          "format": "uuid",
          "description": "The report ID.",
          "type": "string"
        },
        "requestDate": {
          "format": "date-time",
          "description": "The date when the cross-tenant connection report was requested.",
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "description": "The start of the report date window.",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "description": "The end of the report date window.",
          "type": "string"
        },
        "status": {
          "enum": [
            "Received",
            "InProgress",
            "Completed",
            "Failed"
          ],
          "type": "string"
        },
        "connections": {
          "description": "The page of cross-tenant connections occurring within the report date window.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CrossTenantConnection"
          }
        },
        "@odata.nextLink": {
          "description": "The URI of the next page of the report containing additional cross-tenant connections.",
          "type": "string"
        }
      }
    },
    "CrossTenantConnectionReportsResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The cross-tenant connection reports for the tenant.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CrossTenantConnectionReport"
          }
        },
        "@odata.nextLink": {
          "description": "The URI of the next page of the list response.",
          "type": "string"
        }
      }
    },
    "SharedConnector": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "isCustomApi": {
          "type": "boolean"
        },
        "iconUri": {
          "type": "string"
        },
        "tier": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "externalDocumentUri": {
          "type": "string"
        },
        "externalDocumentDescription": {
          "type": "boolean"
        }
      }
    },
    "SharedConnectorsResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharedConnector"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "ExemptedResource": {
      "type": "object",
      "properties": {
        "environments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExemptedResourceInfo"
          }
        }
      }
    },
    "ExemptedResourceInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "NotificationInfo": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalContacts": {
          "type": "boolean"
        }
      }
    },
    "TeamsEnvironmentInactivityJobPolicy": {
      "type": "object",
      "properties": {
        "jobSettings": {
          "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyJobSetting"
        },
        "tenantId": {
          "type": "string"
        },
        "policyId": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "exemptedResources": {
          "$ref": "#/definitions/ExemptedResource"
        }
      }
    },
    "TeamsEnvironmentInactivityJobPolicyResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamsEnvironmentInactivityJobPolicy"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "TeamsEnvironmentInactivityPolicyConfiguration": {
      "type": "object",
      "properties": {
        "durations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyNotificationDurations"
          }
        },
        "inactivityDaysBeforeDisablingDefault": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TeamsEnvironmentInactivityPolicyJobSetting": {
      "type": "object",
      "properties": {
        "allowedSku": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "minEnforcementDate": {
          "format": "date-time",
          "type": "string"
        },
        "firstDisableNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "secondDisableNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "disableNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "firstDeleteNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "secondDeleteNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "deleteNotificationDuration": {
          "format": "date-span",
          "type": "string"
        },
        "notificationInfo": {
          "$ref": "#/definitions/NotificationInfo"
        }
      }
    },
    "TeamsEnvironmentInactivityPolicyNotificationDurations": {
      "type": "object",
      "properties": {
        "firstDisableNotificationDuration": {
          "format": "int32",
          "type": "integer"
        },
        "secondDisableNotificationDuration": {
          "format": "int32",
          "type": "integer"
        },
        "disableNotificationDuration": {
          "format": "int32",
          "type": "integer"
        },
        "firstDeleteNotificationDuration": {
          "format": "int32",
          "type": "integer"
        },
        "secondDeleteNotificationDuration": {
          "format": "int32",
          "type": "integer"
        },
        "deleteNotificationDuration": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TeamsEnvironmentInactivityPolicyWebResponse": {
      "type": "object",
      "properties": {
        "isDefault": {
          "type": "boolean"
        },
        "policyId": {
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "disableDaysBeforeDeletion": {
          "format": "int32",
          "type": "integer"
        },
        "inactivityDaysBeforeDisabling": {
          "format": "int32",
          "type": "integer"
        },
        "exemptedResources": {
          "$ref": "#/definitions/ExemptedResource"
        },
        "notificationRecipientRoles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TeamsEnvironmentInactivityPolicyWebResponseResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyWebResponse"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "TenantPolicyWebAPIConfiguration": {
      "type": "object",
      "properties": {
        "teamsEnvironmentInactivity": {
          "$ref": "#/definitions/TeamsEnvironmentInactivityPolicyConfiguration"
        }
      }
    },
    "TenantPolicyWebAPIConfigurationResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TenantPolicyWebAPIConfiguration"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "NewWebsiteRequest": {
      "required": [
        "name",
        "dataverseOrganizationId",
        "templateName",
        "selectedBaseLanguage",
        "subdomain"
      ],
      "type": "object",
      "properties": {
        "dataverseOrganizationId": {
          "format": "uuid",
          "description": "Dataverse organization's unique identifier (ID)",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "name": {
          "description": "Name of the website",
          "type": "string"
        },
        "templateName": {
          "description": "Website template name",
          "enum": [
            "DefaultPortalTemplate",
            "PowerPortals_ProgramRegistration",
            "PowerPortals_BookMeeting"
          ],
          "type": "string"
        },
        "selectedBaseLanguage": {
          "format": "int32",
          "description": "Language unique identifier (ID) of the website - https://go.microsoft.com/fwlink/?linkid=2208135",
          "type": "integer"
        },
        "subdomain": {
          "description": "Subdomain for the website URL",
          "type": "string"
        },
        "websiteRecordId": {
          "description": "Dataverse record unique identifier (ID) of the website",
          "type": "string"
        }
      }
    },
    "ODataWebsiteDto": {
      "type": "object",
      "properties": {
        "@odata.metadata": {
          "$ref": "#/definitions/WebsiteDto"
        }
      }
    },
    "ODataListWebsitesDto": {
      "type": "object",
      "properties": {
        "@odata.metadata": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WebsiteDto"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "code": {
              "description": "Error code",
              "type": "string"
            },
            "message": {
              "description": "Error message",
              "type": "string"
            },
            "target": {
              "description": "Target parameter",
              "type": "string"
            },
            "details": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "description": "Error code",
                    "type": "string"
                  },
                  "message": {
                    "description": "Error message",
                    "type": "string"
                  },
                  "target": {
                    "description": "Target parameter",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "WebsiteDto": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Website unique identifier (ID)",
          "type": "string"
        },
        "name": {
          "description": "Website name",
          "type": "string"
        },
        "createdOn": {
          "description": "Website creation time in the ISO 8601 UTC format",
          "type": "string"
        },
        "templateName": {
          "description": "Website template name",
          "enum": [
            "DefaultPortalTemplate",
            "PowerPortals_ProgramRegistration",
            "PowerPortals_BookMeeting"
          ],
          "type": "string"
        },
        "websiteUrl": {
          "description": "Website URL",
          "type": "string"
        },
        "tenantId": {
          "description": "Tenant unique identifier (ID) of the website",
          "type": "string"
        },
        "dataverseInstanceUrl": {
          "description": "Organization URL of the website",
          "type": "string"
        },
        "environmentName": {
          "description": "Environment name of the website",
          "type": "string"
        },
        "environmentId": {
          "description": "Environment unique identifier (ID) of the website",
          "type": "string"
        },
        "dataverseOrganizationId": {
          "description": "Organization unique identifier (ID) of the website",
          "type": "string"
        },
        "selectedBaseLanguage": {
          "format": "int32",
          "description": "Language unique identifier (ID) of the website - https://go.microsoft.com/fwlink/?linkid=2208135",
          "type": "integer"
        },
        "customHostNames": {
          "description": "Custom hostnames added for the website",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "websiteRecordId": {
          "description": "Dataverse record unique identifier (ID) of the website",
          "type": "string"
        },
        "subdomain": {
          "description": "Subdomain of website",
          "type": "string"
        },
        "packageInstallStatus": {
          "description": "Package installation status of the website",
          "enum": [
            "None",
            "Installed",
            "Uninstalled",
            "InstallRequested",
            "UninstallRequested",
            "InstallFailed",
            "UninstallFailed",
            "Installing",
            "Uninstalling",
            "InstallScheduled",
            "InstallRetrying",
            "TemplateInstalled"
          ],
          "type": "string"
        },
        "type": {
          "description": "Application type of the website",
          "enum": [
            "Trial",
            "Production"
          ],
          "type": "string"
        },
        "trialExpiringInDays": {
          "format": "int32",
          "description": "Time (in days) to expiration of the website",
          "type": "integer"
        },
        "suspendedWebsiteDeletingInDays": {
          "format": "int32",
          "description": "Time (in days) to website deletion, if suspended",
          "type": "integer"
        },
        "packageVersion": {
          "description": "Package version of the website",
          "type": "string"
        },
        "isEarlyUpgradeEnabled": {
          "description": "Website eligibility for early upgrade",
          "type": "boolean"
        },
        "isCustomErrorEnabled": {
          "description": "Custom error enablement for Website",
          "type": "boolean"
        },
        "applicationUserAadAppId": {
          "description": "Azure Active Directory (AAD) object unique identifier (ID)",
          "type": "string"
        },
        "ownerId": {
          "description": "User unique identifier (ID) of the website owner",
          "type": "string"
        },
        "status": {
          "description": "Website status",
          "enum": [
            "OperationComplete",
            "OperationInProgress",
            "OperationNotStarted",
            "OperationFailed"
          ],
          "type": "string"
        },
        "siteVisibility": {
          "description": "Website visibility status",
          "enum": [
            "public",
            "private"
          ],
          "type": "string"
        }
      }
    },
    "PortalDataModelDto": {
      "required": [
        "dataModelVersionValue"
      ],
      "type": "object",
      "properties": {
        "dataModelVersionValue": {
          "description": "value of data model version for IsNewDataModel",
          "type": "boolean"
        }
      }
    },
    "AllocationsByEnvironmentPatchRequestModelV1": {
      "type": "object",
      "properties": {
        "currencyAllocations": {
          "description": "Specify the request body with environment ID and currency details",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyAllocationRequestModelV1"
          }
        }
      }
    },
    "AllocationsByEnvironmentResponseModelV1": {
      "description": "The response body includes environment ID and allocated currencies",
      "type": "object",
      "properties": {
        "environmentId": {
          "description": "The environment ID for which the currency has been allocated",
          "type": "string",
          "example": "00000000-0000-0000-0000-000000000000"
        },
        "currencyAllocations": {
          "description": "The collection of currencies with allocation count",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyAllocationResponseModelV1"
          }
        }
      }
    },
    "CurrencyAllocationRequestModelV1": {
      "type": "object",
      "properties": {
        "currencyType": {
          "$ref": "#/definitions/ExternalCurrencyType"
        },
        "allocated": {
          "format": "int32",
          "description": "Specify the currency count",
          "type": "integer",
          "example": 10
        }
      }
    },
    "CurrencyAllocationResponseModelV1": {
      "type": "object",
      "properties": {
        "currencyType": {
          "$ref": "#/definitions/ExternalCurrencyType"
        },
        "allocated": {
          "format": "int32",
          "description": "The allocated count of currency type",
          "type": "integer",
          "example": 10
        }
      }
    },
    "ExternalCurrencyType": {
      "description": "Available currency type which can be allocated to environment",
      "enum": [
        "AppPass",
        "AI",
        "PortalLogins",
        "PortalViews",
        "PerFlowPlan",
        "VAConversations",
        "AppPassForTeams",
        "PAUnattendedRPA",
        "PowerAutomatePerProcess"
      ],
      "type": "string",
      "example": "PowerAutomatePerProcess"
    },
    "BillingPolicyConditionsModel": {
      "description": "The ISV Contract API filter conditions.",
      "type": "object",
      "properties": {
        "apiFilter": {
          "$ref": "#/definitions/BillingPolicyConditionsApiFilterModel"
        }
      },
      "example": {
        "apiFilter": {
          "allowOtherPremiumConnectors": true,
          "requiredApis": [
            {
              "name": "connector1"
            },
            {
              "name": "connector2"
            }
          ]
        }
      }
    },
    "BillingPolicyConditionsApiFilterModel": {
      "description": "The Power Platform connector filter.",
      "type": "object",
      "properties": {
        "allowOtherPremiumConnectors": {
          "description": "A flag indicating whether metered usage that involves premium connectors may be attributed.",
          "type": "boolean"
        },
        "requiredApis": {
          "description": "A list of connectors, at least one of which which must be involved in the metered usage to be attributed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingPolicyConditionsApiModel"
          }
        }
      }
    },
    "BillingPolicyConditionsApiModel": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of an API connector.",
          "type": "string"
        }
      }
    },
    "BillingInstrumentModel": {
      "description": "The ISV billing instrument information.",
      "type": "object",
      "properties": {
        "subscriptionId": {
          "format": "uuid",
          "description": "The tenant subscription Id.",
          "type": "string",
          "example": {
            "subscriptionId": "00000000-0000-0000-0000-000000000000"
          }
        },
        "resourceGroup": {
          "description": "The resource group within the tenant subscription.",
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "BillingPolicyEnvironmentAddRequestModel": {
      "type": "object",
      "properties": {
        "environmentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BillingPolicyEnvironmentRemoveRequestModel": {
      "type": "object",
      "properties": {
        "environmentIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BillingPolicyEnvironmentResponseModelV1": {
      "type": "object",
      "properties": {
        "billingPolicyId": {
          "type": "string"
        },
        "environmentId": {
          "type": "string"
        }
      }
    },
    "BillingPolicyEnvironmentResponseModelV1ResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingPolicyEnvironmentResponseModelV1"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "BillingPolicyPostRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "billingInstrument": {
          "$ref": "#/definitions/BillingInstrumentModel"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        }
      }
    },
    "BillingPolicyPutRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        }
      }
    },
    "BillingPolicyResponseModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        },
        "location": {
          "type": "string"
        },
        "billingInstrument": {
          "$ref": "#/definitions/BillingInstrumentModel"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/Principal"
        },
        "lastModifiedOn": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/Principal"
        }
      }
    },
    "BillingPolicyResponseModelResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingPolicyResponseModel"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "BillingPolicyStatus": {
      "description": "The desired ISV contract status.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string"
    },
    "ConsumerIdentityModel": {
      "description": "The consumer identity for ISV contract.",
      "type": "object",
      "properties": {
        "tenantId": {
          "format": "uuid",
          "description": "The ID of the customer tenant.",
          "type": "string",
          "example": {
            "tenantId": "00000000-0000-0000-0000-000000000000"
          }
        }
      }
    },
    "IsvContractPostRequestModel": {
      "description": "The ISV contract model for update operations.",
      "required": [
        "name",
        "geo",
        "status",
        "consumer",
        "conditions",
        "powerAutomatePolicy",
        "billingInstrument"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 64,
          "minLength": 10,
          "pattern": "/^[a-zA-Z\\d]+$/",
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        },
        "geo": {
          "description": "Specify the desired resource location for creation of Azure Power Platform account for billing. Once set, this property cannot be updated. Power Platform Environments using this ISV Contract for pay-as-you-go billing must be in the same location.",
          "type": "string",
          "items": {
            "example": [
              "asia",
              "australia",
              "canada",
              "europe",
              "france",
              "germany",
              "india",
              "japan",
              "korea",
              "norway",
              "southafrica",
              "southamerica",
              "switzerland",
              "unitedarabemirates",
              "unitedkingdom",
              "unitedstates"
            ]
          },
          "example": "unitedstates"
        },
        "consumer": {
          "$ref": "#/definitions/ConsumerIdentityModel"
        },
        "conditions": {
          "$ref": "#/definitions/BillingPolicyConditionsModel"
        },
        "billingInstrument": {
          "$ref": "#/definitions/BillingInstrumentModel"
        },
        "powerAutomatePolicy": {
          "$ref": "#/definitions/PowerAutomatePolicyModel"
        }
      },
      "example": {
        "name": "exampleContract",
        "geo": "unitedstates",
        "status": "Enabled",
        "consumer": {
          "tenantId": "00000000-0000-0000-0000-000000000000"
        },
        "conditions": {
          "apiFilter": {
            "allowOtherPremiumConnectors": true,
            "requiredApis": [
              {
                "name": "example-connector-1"
              },
              {
                "name": "example-connector-2"
              }
            ]
          }
        },
        "powerAutomatePolicy": {
          "cloudFlowRunsPayAsYouGoState": "Enabled",
          "desktopFlowUnattendedRunsPayAsYouGoState": "Enabled",
          "desktopFlowAttendedRunsPayAsYouGoState": "Enabled"
        },
        "billingInstrument": {
          "subscriptionId": "00000000-0000-0000-0000-000000000000",
          "resourceGroup": "resourceGroupName"
        }
      }
    },
    "IsvContractPutRequestModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        },
        "conditions": {
          "$ref": "#/definitions/BillingPolicyConditionsModel"
        },
        "powerAutomatePolicy": {
          "$ref": "#/definitions/PowerAutomatePolicyModel"
        }
      }
    },
    "IsvContractResponseModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/BillingPolicyStatus"
        },
        "geo": {
          "type": "string"
        },
        "consumer": {
          "$ref": "#/definitions/ConsumerIdentityModel"
        },
        "conditions": {
          "$ref": "#/definitions/BillingPolicyConditionsModel"
        },
        "billingInstrument": {
          "$ref": "#/definitions/BillingInstrumentModel"
        },
        "powerAutomatePolicy": {
          "$ref": "#/definitions/PowerAutomatePolicyModel"
        },
        "createdOn": {
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/Principal"
        },
        "lastModifiedOn": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/Principal"
        }
      }
    },
    "IsvContractResponseModelResponseWithOdataContinuation": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IsvContractResponseModel"
          }
        },
        "@odata.nextLink": {
          "type": "string"
        }
      }
    },
    "PowerAutomatePolicyModel": {
      "description": "The Power Platform Requests policies.",
      "type": "object",
      "properties": {
        "cloudFlowRunsPayAsYouGoState": {
          "$ref": "#/definitions/PayAsYouGoState"
        },
        "desktopFlowUnattendedRunsPayAsYouGoState": {
          "$ref": "#/definitions/PayAsYouGoState"
        },
        "desktopFlowAttendedRunsPayAsYouGoState": {
          "$ref": "#/definitions/PayAsYouGoState"
        }
      }
    },
    "PayAsYouGoState": {
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string"
    },
    "Principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/PrincipalType"
        }
      }
    },
    "PrincipalType": {
      "enum": [
        "None",
        "Application",
        "User",
        "DelegatedAdmin"
      ],
      "type": "string"
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize?resource=https://api.powerplatform.com",
      "description": "Azure Active Directory OAuth2",
      "scopes": {
        ".default": ".default"
      }
    }
  },
  "security": [
    {
      "oauth2": [
        ".default"
      ]
    }
  ],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://admin.powerplatform.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://admin.powerplatform.com/privacy"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "IT Operations"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/powerplatformadminv2"
  },
  "basePath": "/apim/powerplatformadminv2"
}
