{
  "swagger": "2.0",
  "info": {
    "title": "FORCAM FORCE Bridge",
    "version": "1.0.3",
    "description": "FORCAM FORCE is a IIoT platform solution for data driven manufacturing. It supports manufacturing companies to significantly increase their productivity. Its semantic data layer creates a uniform production data model and connects the shop- and top floor. The platform's open web interface form the bridge to in-house and third-party applications, thus enabling the free composition and collaboration of solutions. Connect today with FORCE to empower your workforce for digital transformation.",
    "x-ms-api-annotation": {
      "status": "Preview"
    },
    "contact": {
      "name": "FORCAM FORCE Bridge Support",
      "url": "https://forcam.com/en/contact/",
      "email": "forcebridge@forcam.com"
    }
  },
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/forcamforcebridge",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/{connectionId}/callbacks/{callbackId}": {
      "delete": {
        "x-ms-visibility": "internal",
        "description": "Deleted a trigger",
        "summary": "Deleted a trigger",
        "tags": [
          "trigger"
        ],
        "operationId": "DeleteTrigger",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "callbackId",
            "x-ms-url-encoding": "single",
            "in": "path",
            "description": "Id of the callback",
            "required": true,
            "type": "string"
          },
          {
            "name": "event",
            "in": "query",
            "description": "event identifier",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#deleted-a-trigger"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-created": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/TicketEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a new ticket has been created",
        "summary": "When a new ticket has been created",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketCreatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-new-ticket-has-been-created"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-updated": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/TicketEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When an existing ticket has been updated",
        "summary": "When an existing ticket has been updated",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketUpdatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-an-existing-ticket-has-been-updated"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-deleted": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/DeleteEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket has been deleted",
        "summary": "When a ticket has been deleted",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketDeletedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-has-been-deleted"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-state-changed": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/TicketStateChangeEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When the state of a ticket has been changed",
        "summary": "When the state of a ticket has been changed",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketStateChangedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-the-state-of-a-ticket-has-been-changed"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-attachment-created": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/TicketAttachmentEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket attachment has been created",
        "summary": "When a ticket attachment has been created",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketAttachmentCreatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-attachment-has-been-created"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-attachment-deleted": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/DeleteEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket attachment has been deleted",
        "summary": "When a ticket attachment has been deleted",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketAttachmentDeletedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-attachment-has-been-deleted"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-activity-created": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/TicketActivityEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket activity has been created",
        "summary": "When a ticket activity has been created",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketActivityCreatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-activity-has-been-created"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-activity-updated": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/TicketActivityEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket activity has been updated",
        "summary": "When a ticket activity has been updated",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketActivityUpdatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-activity-has-been-updated"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-activity-deleted": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/DeleteEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket activity has been deleted",
        "summary": "When a ticket activity has been deleted",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketActivityDeletedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-activity-has-been-deleted"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-activity-state-changed": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/TicketActivityStateChangedEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket activity state has been changed",
        "summary": "When a ticket activity state has been changed",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketActivityStateChangedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-activity-state-has-been-changed"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-activity-remark-created": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/TicketActivityRemarkEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket activity remark has been created",
        "summary": "When a ticket activity remark has been created",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketActivityRemarkCreatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-activity-remark-has-been-created"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-activity-remark-deleted": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/DeleteEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket activity remark has been deleted",
        "summary": "When a ticket activity remark has been deleted",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketActivityRemarkDeletedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-activity-remark-has-been-deleted"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-activity-attachment-created": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/TicketActivityAttachmentEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket activity attachment has been created",
        "summary": "When a ticket activity attachment has been created",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketActivityAttachmentCreatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-activity-attachment-has-been-created"
        }
      }
    },
    "/{connectionId}/callbacks/ticket-activity-attachment-deleted": {
      "x-ms-notification-content": {
        "description": "Ticket Event",
        "schema": {
          "$ref": "#/definitions/DeleteEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a ticket activity attachment has been deleted",
        "summary": "When a ticket activity attachment has been deleted",
        "tags": [
          "ticket",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketActivityAttachmentDeletedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-ticket-activity-attachment-has-been-deleted"
        }
      }
    },
    "/{connectionId}/callbacks/workplace-created": {
      "x-ms-notification-content": {
        "description": "Workplace Event",
        "schema": {
          "$ref": "#/definitions/Workplace"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a new workplace has been created",
        "summary": "When a new workplace has been created",
        "tags": [
          "workplace",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "WorkplaceCreatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-new-workplace-has-been-created"
        }
      }
    },
    "/{connectionId}/callbacks/workplace-updated": {
      "x-ms-notification-content": {
        "description": "Workplace Event",
        "schema": {
          "$ref": "#/definitions/Workplace"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a workplace has been updated",
        "summary": "When a workplace has been updated",
        "tags": [
          "workplace",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "WorkplaceUpdatedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-workplace-has-been-updated"
        }
      }
    },
    "/{connectionId}/callbacks/workplace-operating-state-changed": {
      "x-ms-notification-content": {
        "description": "WorkplaceOperatingStateChangedEvent Event",
        "schema": {
          "$ref": "#/definitions/WorkplaceOperatingStateChangedEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When the operating state of a workplace has been changed",
        "summary": "When the operating state of a workplace has been changed",
        "tags": [
          "workplace",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "WorkplaceOperatingStateChangedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-the-operating-state-of-a-workplace-has-been-changed"
        }
      }
    },
    "/{connectionId}/callbacks/workplace-deleted": {
      "x-ms-notification-content": {
        "description": "Workplace Event",
        "schema": {
          "$ref": "#/definitions/DeleteEvent"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a workplace has been deleted",
        "summary": "When a workplace has been deleted",
        "tags": [
          "workplace",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "WorkplaceDeletedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-workplace-has-been-deleted"
        }
      }
    },
    "/{connectionId}/callbacks/process-data-rule-violated": {
      "x-ms-notification-content": {
        "description": "Process data rule violated Event",
        "schema": {
          "$ref": "#/definitions/ProcessDataRuleViolated"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a process data rule has been violated",
        "summary": "When a process data rule has been violated",
        "tags": [
          "workplace",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "ProcessDataRuleViolatedEventTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "eventName",
            "in": "query",
            "description": "Name of the rule",
            "x-ms-summary": "Name of the rule",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-process-data-rule-has-been-violated"
        }
      }
    },
    "/{connectionId}/callbacks/customized-action": {
      "x-ms-notification-content": {
        "description": "CustomCallback Event",
        "schema": {
          "$ref": "#/definitions/CustomCallback"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a customized action occured",
        "summary": "When a customized action occured",
        "tags": [
          "workplace",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "CustomizedTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "eventName",
            "in": "query",
            "description": "Name of the event",
            "x-ms-summary": "Name of the event",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-customized-action-occured"
        }
      }
    },
    "/{connectionId}/callbacks/customized-action-raw": {
      "x-ms-notification-content": {
        "description": "CustomCallback Event",
        "schema": {
          "$ref": "#/definitions/CustomCallbackRaw"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "When a customized action occured (raw)",
        "summary": "When a customized action occured (raw)",
        "tags": [
          "workplace",
          "trigger"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "CustomizedRawTrigger",
        "x-ms-trigger": "single",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "eventName",
            "in": "query",
            "description": "Name of the event",
            "x-ms-summary": "Name of the event",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#when-a-customized-action-occured-(raw)"
        }
      }
    },
    "/{connectionId}/callbacks/{eventRegisterName}": {
      "x-ms-notification-content": {
        "description": "Details for Webhook",
        "schema": {
          "$ref": "#/definitions/WebhookPushResponse"
        },
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ]
      },
      "post": {
        "description": "Creates webhook",
        "summary": "Triggers when a PUSH event occurs",
        "tags": [
          "hooks"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "Webhook-trigger",
        "x-ms-trigger": "single",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "description": "Provided by hook registrator. Contains url where the events are sent to",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterHookPayload"
            }
          },
          {
            "name": "eventRegisterName",
            "in": "path",
            "x-ms-url-encoding": "single",
            "description": "name of the registered event",
            "required": true,
            "type": "string"
          },
          {
            "name": "eventName",
            "in": "query",
            "description": "Name of the event",
            "x-ms-summary": "Name of the event",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterId",
            "in": "query",
            "description": "Id of object to filter",
            "x-ms-summary": "Id of object to filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/WebhookCreationResponse"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "$ref": "#/responses/ApiKeyNotValid"
          },
          "404": {
            "description": "Unknown eventName",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#triggers-when-a-push-event-occurs"
        }
      }
    },
    "/{connectionId}/masterData/operatingStates/id/{operatingStatesId}": {
      "get": {
        "description": "Get the operating states by its state Id",
        "summary": "Get operating state by Id",
        "tags": [
          "masterData"
        ],
        "operationId": "OperatingStatesById",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "operatingStatesId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "The Id of the operatingState",
            "x-ms-summary": "The Id of the operatingState",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MasterDataOperatingState"
            }
          },
          "401": {
            "description": "API Key not valid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-operating-state-by-id"
        }
      }
    },
    "/{connectionId}/miscellaneous/materials": {
      "get": {
        "description": "Get materials",
        "summary": "Get materials",
        "tags": [
          "miscellaneous"
        ],
        "operationId": "GetMaterials",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MaterialsListFilter"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-materials"
        }
      }
    },
    "/{connectionId}/operations/progress/workplaceId/{workplaceId}": {
      "get": {
        "description": "Get operations that are in progress",
        "summary": "Get operations in progress",
        "tags": [
          "operations"
        ],
        "operationId": "OperationsInProgress",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "workplaceId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of workplace",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-operations-in-progress"
        }
      }
    },
    "/{connectionId}/operations/dispatched/workplaceId/{workplaceId}": {
      "get": {
        "description": "Get operations that are dispatched",
        "summary": "Get dispatched operations",
        "tags": [
          "operations"
        ],
        "operationId": "OperationsDispatched",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "workplaceId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of workplace",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-dispatched-operations"
        }
      }
    },
    "/{connectionId}/operations/plannable/workplaceId/{workplaceId}": {
      "get": {
        "description": "Get operations that are plannable",
        "summary": "Get plannable operations",
        "tags": [
          "operations"
        ],
        "operationId": "OperationsPlannable",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "workplaceId",
            "in": "path",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "Id of workplace",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-plannable-operations"
        }
      }
    },
    "/{connectionId}/operations/operationId/{operationId}": {
      "get": {
        "description": "get an operation by the Id",
        "summary": "Get operation by Id",
        "tags": [
          "operations"
        ],
        "operationId": "OperationByOperationId",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "operationId",
            "in": "path",
            "required": true,
            "x-ms-url-encoding": "single",
            "description": "Id of an operation",
            "x-ms-summary": "Operation Id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-operation-by-id"
        }
      }
    },
    "/{connectionId}/semantic/hitListOperatingStateMaterial/startDate/{startDate}/materialId/{materialId}": {
      "get": {
        "description": "Get a hitlist of operating states",
        "summary": "Get hitlist by material",
        "tags": [
          "reports"
        ],
        "operationId": "HitListOperatingStateByMaterialId",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "startDate",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Filter start date",
            "x-ms-summary": "Start date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "materialId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of a material",
            "x-ms-summary": "MaterialId",
            "x-ms-dynamic-values": {
              "operationId": "GetMaterials",
              "value-path": "id",
              "value-title": "number",
              "value-collection": "materials"
            },
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "Filter end date",
            "x-ms-summary": "End date",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SemanticHitListOperatingStateMaterialList"
            }
          },
          "400": {
            "description": "Could not find element in the selected timespan",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "API Key not valid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-hitlist-by-material"
        }
      }
    },
    "/{connectionId}/semantic/hitListOperatingStateWorkplace/startDate/{startDate}/workplaceId/{workplaceId}": {
      "get": {
        "description": "Get a hitlist of operating states by its workplace Id",
        "summary": "Get hitlist by workplace",
        "tags": [
          "reports"
        ],
        "operationId": "HitListOperatingStateWorkplace",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "startDate",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Filter start date",
            "x-ms-summary": "Start date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "workplaceId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of a workplace",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "Filter end date",
            "x-ms-summary": "End date",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SemanticHitListOperatingStateWorkplaceList"
            }
          },
          "400": {
            "description": "Could not find element in the selected timespan",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "API Key not valid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-hitlist-by-workplace"
        }
      }
    },
    "/{connectionId}/semantic/hitListOperatingStateWorkplace/startDate/{startDate}/workplaceGroup/{workplaceGroupId}": {
      "get": {
        "description": "Get a hitlist of operating states by its workplace Id",
        "summary": "Get hitlist by workplaceGroup",
        "tags": [
          "reports"
        ],
        "operationId": "HitListOperatingStateWorkplaceGroup",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "startDate",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Filter start date",
            "x-ms-summary": "Start date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "workplaceGroupId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of a workplace group",
            "x-ms-summary": "WorkplaceGroupId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaceGroups",
              "value-path": "id",
              "value-title": "number",
              "value-collection": "workplaceGroups"
            },
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "Filter end date",
            "x-ms-summary": "End date",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SemanticHitListOperatingStateWorkplaceList"
            }
          },
          "400": {
            "description": "Could not find element in the selected timespan",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "API Key not valid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-hitlist-by-workplacegroup"
        }
      }
    },
    "/{connectionId}/semantic/overallEquipmentEfficiency/startDate/{startDate}": {
      "get": {
        "description": "Get overall equipment efficiency (OEE)",
        "summary": "Get overall equipment efficiency (OEE)",
        "tags": [
          "reports"
        ],
        "operationId": "OverallEquipmentEfficiency",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "startDate",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Filter start date",
            "x-ms-summary": "Start date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "workplaceId",
            "in": "query",
            "required": false,
            "description": "Id of a workplace",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "type": "string"
          },
          {
            "name": "workplaceGroupId",
            "in": "query",
            "required": false,
            "description": "Id of a workplace group",
            "x-ms-summary": "WorkplaceGroupId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaceGroups",
              "value-path": "id",
              "value-title": "number",
              "value-collection": "workplaceGroups"
            },
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "Filter end date",
            "x-ms-summary": "End date",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SemanticOverallEquipmentEfficiency"
            }
          },
          "400": {
            "description": "Could not find element in the selected timespan",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "API Key not valid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-overall-equipment-efficiency-(oee)"
        }
      }
    },
    "/{connectionId}/semantic/overallProcessEfficiency/startDate/{startDate}": {
      "get": {
        "description": "Get the overall process efficiency (OPE)",
        "summary": "Get overall process efficiency (OPE)",
        "tags": [
          "reports"
        ],
        "operationId": "OverallProcessEfficiency",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "startDate",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Filter start date",
            "x-ms-summary": "Start date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "materialId",
            "in": "query",
            "required": false,
            "description": "Id of a material",
            "x-ms-summary": "MaterialId",
            "x-ms-dynamic-values": {
              "operationId": "GetMaterials",
              "value-path": "id",
              "value-title": "number",
              "value-collection": "materials"
            },
            "type": "string"
          },
          {
            "name": "orderId",
            "in": "query",
            "required": false,
            "description": "Id of a order",
            "x-ms-summary": "Order Id",
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "Filter end date",
            "x-ms-summary": "End date",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SemanticOverallProcessEfficiency"
            }
          },
          "400": {
            "description": "Could not find element in the selected timespan",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "API Key not valid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-overall-process-efficiency-(ope)"
        }
      }
    },
    "/{connectionId}/semantic/qualityDetailsMaterial/startDate/{startDate}/materialId/{materialId}": {
      "get": {
        "description": "Get the material quality details",
        "summary": "Get material quality details",
        "tags": [
          "reports"
        ],
        "operationId": "QualityDetailsByMaterialId",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "startDate",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Filter start date",
            "x-ms-summary": "Start date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "materialId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of a material",
            "x-ms-summary": "MaterialId",
            "x-ms-dynamic-values": {
              "operationId": "GetMaterials",
              "value-path": "id",
              "value-title": "number",
              "value-collection": "materials"
            },
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "Filter end date",
            "x-ms-summary": "End date",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SemanticQualityDetailsMaterialList"
            }
          },
          "400": {
            "description": "Could not find element in the selected timespan",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "API Key not valid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-material-quality-details"
        }
      }
    },
    "/{connectionId}/semantic/qualityDetailsWorkplace/startDate/{startDate}": {
      "get": {
        "description": "Get workplace quality details by its workplaceId and materialId",
        "summary": "Get workplace quality details",
        "tags": [
          "reports"
        ],
        "operationId": "QualityDetailsByWorkplace",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "startDate",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Filter start date",
            "x-ms-summary": "Start date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "materialId",
            "in": "query",
            "required": false,
            "description": "Id of a material",
            "x-ms-summary": "MaterialId",
            "x-ms-dynamic-values": {
              "operationId": "GetMaterials",
              "value-path": "id",
              "value-title": "number",
              "value-collection": "materials"
            },
            "type": "string"
          },
          {
            "name": "workplaceId",
            "in": "query",
            "required": false,
            "description": "Id of a workplace",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "type": "string"
          },
          {
            "name": "workplaceGroupId",
            "in": "query",
            "required": false,
            "description": "Id of a workplace group",
            "x-ms-summary": "WorkplaceGroupId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaceGroups",
              "value-path": "id",
              "value-title": "number",
              "value-collection": "workplaceGroups"
            },
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "Filter end date",
            "x-ms-summary": "End date",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SemanticQualityDetailsWorkplaceList"
            }
          },
          "400": {
            "description": "Could not find element in the selected timespan",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "API Key not valid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-workplace-quality-details"
        }
      }
    },
    "/{connectionId}/semantic/totalQuantity/startDate/{startDate}": {
      "get": {
        "description": "Get total quantity details",
        "summary": "Get total quantity details",
        "tags": [
          "reports"
        ],
        "operationId": "TotalQuantity",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "startDate",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Filter start date",
            "x-ms-summary": "Start date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "Filter end date",
            "x-ms-summary": "End date",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "workplaceId",
            "in": "query",
            "required": false,
            "description": "Id of a workplace",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "type": "string"
          },
          {
            "name": "workplaceGroupId",
            "in": "query",
            "required": false,
            "description": "Id of a workplace group",
            "x-ms-summary": "WorkplaceGroupId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaceGroups",
              "value-path": "id",
              "value-title": "number",
              "value-collection": "workplaceGroups"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SemanticTotalQuantityList"
            }
          },
          "400": {
            "description": "Could not find element in the selected timespan",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "API Key not valid",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-total-quantity-details"
        }
      }
    },
    "/{connectionId}/tickets": {
      "get": {
        "description": "Get tickets",
        "summary": "Get tickets",
        "tags": [
          "ticket"
        ],
        "operationId": "Tickets",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketNumber",
            "in": "query",
            "required": false,
            "description": "Number of the ticket",
            "x-ms-summary": "Ticketnumber",
            "type": "string"
          },
          {
            "name": "ticketStateId",
            "in": "query",
            "required": false,
            "description": "Ticket state",
            "x-ms-summary": "Ticket state",
            "type": "string",
            "enum": [
              "NEW",
              "IN_PROGRESS",
              "DONE",
              "CONFIRMED",
              "REOPENED"
            ]
          },
          {
            "name": "ticketClassId",
            "in": "query",
            "required": false,
            "description": "class of the ticket",
            "x-ms-summary": "TicketClassId",
            "x-ms-dynamic-values": {
              "operationId": "TicketClasses",
              "value-path": "id",
              "value-title": "description",
              "value-collection": "ticketClasses"
            },
            "type": "string"
          },
          {
            "name": "workplaceId",
            "in": "query",
            "required": false,
            "description": "Id of workplace that tickets have to belong to",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-tickets"
        }
      },
      "post": {
        "description": "Create a new ticket",
        "summary": "Create a new ticket",
        "tags": [
          "ticket"
        ],
        "consumes": [
          "application/json"
        ],
        "operationId": "TicketCreate",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "newTicket",
            "in": "body",
            "required": true,
            "description": "Ticket to create",
            "schema": {
              "type": "object",
              "required": [
                "priority",
                "ticketStateId",
                "description",
                "title"
              ],
              "properties": {
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "rootCause": {
                  "type": "string"
                },
                "priority": {
                  "type": "string",
                  "enum": [
                    "LOW",
                    "MEDIUM",
                    "HIGH",
                    "VERY_HIGH"
                  ]
                },
                "ticketStateId": {
                  "type": "string",
                  "enum": [
                    "NEW",
                    "IN_PROGRESS",
                    "DONE",
                    "CONFIRMED",
                    "REOPENED"
                  ]
                },
                "ticketClassId": {
                  "type": "string",
                  "x-ms-dynamic-values": {
                    "operationId": "TicketClasses",
                    "value-path": "id",
                    "value-title": "description",
                    "value-collection": "ticketClasses"
                  }
                },
                "operationId": {
                  "type": "string"
                },
                "materialNumber": {
                  "type": "string"
                },
                "workplaceId": {
                  "type": "string",
                  "x-ms-summary": "WorkplaceId",
                  "x-ms-dynamic-values": {
                    "operationId": "getWorkplaces",
                    "value-path": "id",
                    "value-title": "name",
                    "value-collection": "workplaces"
                  }
                },
                "shiftId": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ticket"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#create-a-new-ticket"
        }
      }
    },
    "/{connectionId}/tickets/ticketId/{ticketId}": {
      "get": {
        "description": "Get ticket by Id",
        "summary": "Get ticket by Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketByTicketId",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the ticket",
            "x-ms-summary": "Ticket Id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ticket"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-by-id"
        }
      }
    },
    "/{connectionId}/tickets/ticketNumber/{ticketNumber}": {
      "get": {
        "description": "Get ticket by the ticket number",
        "summary": "Get ticket by number",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketByNumber",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketNumber",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Number of the ticket",
            "x-ms-summary": "Ticketnumber",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ticket"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-by-number"
        }
      }
    },
    "/{connectionId}/tickets/ticketId/{ticketId}/attachments/attachmentId/{attachmentId}": {
      "get": {
        "description": "Get ticket attachment by the ticket and attachmentId",
        "summary": "Get ticket attachment by attachment Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketAttachmentById",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the ticket",
            "x-ms-summary": "Ticket Id",
            "type": "string"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the attachment",
            "x-ms-summary": "Id of the attachment",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketAttachment"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-attachment-by-attachment-id"
        }
      }
    },
    "/{connectionId}/tickets/ticketId/{ticketId}/attachments": {
      "get": {
        "description": "Get ticket attachments by the ticket Id",
        "summary": "Get ticket attachments by ticket Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketAttachmentsByTicketId",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the ticket",
            "x-ms-summary": "Ticket Id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketAttachmentList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-attachments-by-ticket-id"
        }
      }
    },
    "/{connectionId}/tickets/ticketId/{ticketId}/activities/activityId/{activityId}": {
      "get": {
        "description": "Get ticket activity by the ticket and activity Id",
        "summary": "Get ticket activity by Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketActivityById",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the ticket",
            "x-ms-summary": "Ticket Id",
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the Activity",
            "x-ms-summary": "Id of the Activity",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketActivity"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-activity-by-id"
        }
      }
    },
    "/{connectionId}/tickets/ticketId/{ticketId}/activities": {
      "get": {
        "description": "Get ticket activities by the ticket Id",
        "summary": "Get ticket activities by ticket Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketActivityByTicketId",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the ticket",
            "x-ms-summary": "Ticket Id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketActivityList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-activities-by-ticket-id"
        }
      }
    },
    "/{connectionId}/tickets/classes": {
      "get": {
        "description": "Get ticket classes",
        "summary": "Get ticket classes",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketClasses",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Limit",
            "x-ms-summary": "Limit",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "Offset",
            "x-ms-summary": "Offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketClassList"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-classes"
        }
      }
    },
    "/{connectionId}/tickets/classes/{ticketClassId}": {
      "get": {
        "description": "Get ticket class by Id",
        "summary": "Get ticket class by Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketClassByClassId",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketClassId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of ticketClass",
            "x-ms-summary": "TicketClassId",
            "x-ms-dynamic-values": {
              "operationId": "TicketClasses",
              "value-path": "id",
              "value-title": "description",
              "value-collection": "ticketClasses"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketClass"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-class-by-id"
        }
      }
    },
    "/{connectionId}/tickets/ticketId/{ticketId}/activities/activityId/{activityId}/remarks/remarkId/{remarkId}": {
      "get": {
        "description": "Get ticket activity remark by the remark Id",
        "summary": "Get ticket activity remark by Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketActivityRemarkById",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the ticket",
            "x-ms-summary": "Ticket Id",
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the Activity",
            "x-ms-summary": "Id of the Activity",
            "type": "string"
          },
          {
            "name": "remarkId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the Activity",
            "x-ms-summary": "Id of the Activity",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketActivityRemark"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-activity-remark-by-id"
        }
      }
    },
    "/{connectionId}/tickets/states": {
      "get": {
        "description": "Get ticket states",
        "summary": "Get ticket states",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketStates",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Limit",
            "x-ms-summary": "Limit",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "Offset",
            "x-ms-summary": "Offset",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketStateList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-states"
        }
      }
    },
    "/{connectionId}/tickets/ticketId/{ticketId}/activities/activityId/{activityId}/remarks": {
      "get": {
        "description": "Get ticket activity remarks  by the activity Id",
        "summary": "Get ticket activity  remarks by activity Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketActivityRemarkByActivityId",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the ticket",
            "x-ms-summary": "Ticket Id",
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the Activity",
            "x-ms-summary": "Id of the Activity",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketActivityRemarkList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-activity--remarks-by-activity-id"
        }
      }
    },
    "/{connectionId}/tickets/{ticketId}/state/{newTicketState}": {
      "put": {
        "description": "Change state of ticket",
        "summary": "Change state of ticket",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketStatesChange",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of ticket",
            "x-ms-summary": "Ticket Id",
            "type": "string"
          },
          {
            "name": "newTicketState",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "New ticket state for ticket",
            "x-ms-summary": "New ticket state",
            "type": "string",
            "enum": [
              "NEW",
              "IN_PROGRESS",
              "DONE",
              "CONFIRMED",
              "REOPENED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Ticket"
            }
          },
          "400": {
            "description": "Wrong State",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#change-state-of-ticket"
        }
      }
    },
    "/{connectionId}/tickets/ticketId/{ticketId}/activities/activityId/{activityId}/attachments/attachmentId/{attachmentId}": {
      "get": {
        "description": "Get ticket activity attachment by the ticket, activity and attachmentId",
        "summary": "Get ticket activity attachment by Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketActivityAttachmentById",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the ticket",
            "x-ms-summary": "Ticket Id",
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the activity",
            "x-ms-summary": "Id of the Activity",
            "type": "string"
          },
          {
            "name": "attachmentId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the attachment",
            "x-ms-summary": "Id of the attachment",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketActivityAttachment"
            }
          },
          "400": {
            "description": "Wrong State",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-activity-attachment-by-id"
        }
      }
    },
    "/{connectionId}/tickets/states/{ticketStateId}": {
      "get": {
        "description": "Get ticket state by Id",
        "summary": "Get ticket state by Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketStatesByStateId",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketStateId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Ticket state",
            "x-ms-summary": "Ticket state",
            "type": "string",
            "enum": [
              "NEW",
              "IN_PROGRESS",
              "DONE",
              "CONFIRMED",
              "REOPENED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketState"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-state-by-id"
        }
      }
    },
    "/{connectionId}/tickets/ticketId/{ticketId}/activities/activityId/{activityId}/attachments": {
      "get": {
        "description": "Get ticket activity attachments by the ticket, activity and attachmentId",
        "summary": "Get ticket activity attachments by Id",
        "tags": [
          "ticket"
        ],
        "operationId": "TicketActivityAttachmentsByActivityId",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the ticket",
            "x-ms-summary": "Ticket Id",
            "type": "string"
          },
          {
            "name": "activityId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of the activity",
            "x-ms-summary": "Id of the Activity",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TicketActivityAttachmentList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-ticket-activity-attachments-by-id"
        }
      }
    },
    "/{connectionId}/workplaces/id/{workplaceId}": {
      "get": {
        "description": "Get workplace",
        "summary": "Get workplace",
        "tags": [
          "workplace"
        ],
        "operationId": "GetWorkplace",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "workplaceId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of workplace",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Workplace"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-workplace"
        }
      }
    },
    "/{connectionId}/workplaces/filter": {
      "get": {
        "description": "Get workplaces",
        "summary": "Get workplace",
        "tags": [
          "workplace"
        ],
        "operationId": "getWorkplaces",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkplaceFilter"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-workplace"
        }
      }
    },
    "/{connectionId}/workplaces/staffMember/id/{workplaceId}": {
      "get": {
        "description": "Get current staff members of the workplace",
        "summary": "Get current staff members of the workplace",
        "tags": [
          "workplace"
        ],
        "operationId": "WorkplaceStuffMember",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "workplaceId",
            "in": "path",
            "x-ms-url-encoding": "single",
            "required": true,
            "description": "Id of workplace",
            "x-ms-summary": "WorkplaceId",
            "x-ms-dynamic-values": {
              "operationId": "getWorkplaces",
              "value-path": "id",
              "value-title": "name",
              "value-collection": "workplaces"
            },
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkplaceStuffMemberList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-current-staff-members-of-the-workplace"
        }
      }
    },
    "/{connectionId}/workplaceGroups": {
      "get": {
        "description": "Get workplaces groups",
        "summary": "Get workplace groups",
        "tags": [
          "workplaceGroups"
        ],
        "operationId": "getWorkplaceGroups",
        "x-ms-visibility": "internal",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkplaceGroupListFilter"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/forcamforcebridge/#get-workplace-groups"
        }
      }
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://forcam.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://forcam.com/en/privacy-policy/"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Collaboration;Internet of Things"
    }
  ],
  "definitions": {
    "CustomCallback": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "callbackID",
        "timestamp",
        "key1",
        "key2",
        "key3",
        "key4",
        "key5"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "key1": {
          "type": "string"
        },
        "key2": {
          "type": "string"
        },
        "key3": {
          "type": "string"
        },
        "key4": {
          "type": "string"
        },
        "key5": {
          "type": "string"
        }
      }
    },
    "CustomCallbackRaw": {
      "type": "object",
      "additionalProperties": true,
      "required": [
        "callbackID",
        "timestamp"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        }
      }
    },
    "WorkplaceOperatingStateChangedEvent": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "callbackID",
        "timestamp",
        "workplaceNumber",
        "workplaceId",
        "workplaceDescription",
        "newStateCode",
        "newStateId",
        "newStateDescription",
        "oldStateCode",
        "oldStateId"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "workplaceNumber": {
          "type": "string"
        },
        "workplaceId": {
          "type": "string"
        },
        "workplaceDescription": {
          "type": "string"
        },
        "newStateCode": {
          "type": "string"
        },
        "newStateId": {
          "type": "string"
        },
        "newStateDescription": {
          "type": "string"
        },
        "oldStateCode": {
          "type": "string"
        },
        "oldStateId": {
          "type": "string"
        }
      }
    },
    "TicketEvent": {
      "type": "object",
      "required": [
        "callbackID",
        "timestamp",
        "eventType",
        "eventName",
        "ticketID",
        "ticketNumber",
        "ticketTitle"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "ticketID": {
          "type": "string"
        },
        "ticketNumber": {
          "type": "string"
        },
        "ticketTitle": {
          "type": "string"
        }
      }
    },
    "TicketStateChangeEvent": {
      "type": "object",
      "required": [
        "callbackID",
        "timestamp",
        "eventType",
        "eventName",
        "ticketID",
        "ticketNumber",
        "ticketTitle",
        "ticketStateID",
        "ticketState",
        "ticketStateColor"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "ticketID": {
          "type": "string"
        },
        "ticketNumber": {
          "type": "string"
        },
        "ticketTitle": {
          "type": "string"
        },
        "ticketStateID": {
          "type": "string"
        },
        "ticketState": {
          "type": "string"
        },
        "ticketStateColor": {
          "type": "string"
        }
      }
    },
    "TicketAttachmentEvent": {
      "type": "object",
      "required": [
        "callbackID",
        "timestamp",
        "eventType",
        "eventName",
        "ticketID",
        "ticketNumber",
        "ticketTitle",
        "attachmentId",
        "attachmentDescription"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "ticketID": {
          "type": "string"
        },
        "ticketNumber": {
          "type": "string"
        },
        "ticketTitle": {
          "type": "string"
        },
        "attachmentId": {
          "type": "string"
        },
        "attachmentDescription": {
          "type": "string"
        }
      }
    },
    "TicketActivityEvent": {
      "type": "object",
      "required": [
        "callbackID",
        "timestamp",
        "eventType",
        "eventName",
        "ticketID",
        "ticketNumber",
        "ticketTitle",
        "activityID",
        "activityTitle"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "ticketID": {
          "type": "string"
        },
        "ticketNumber": {
          "type": "string"
        },
        "ticketTitle": {
          "type": "string"
        },
        "activityID": {
          "type": "string"
        },
        "activityTitle": {
          "type": "string"
        }
      }
    },
    "TicketActivityStateChangedEvent": {
      "type": "object",
      "required": [
        "callbackID",
        "timestamp",
        "eventType",
        "eventName",
        "ticketID",
        "ticketNumber",
        "ticketTitle",
        "activityID",
        "activityTitle",
        "activityStateID"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "ticketID": {
          "type": "string"
        },
        "ticketNumber": {
          "type": "string"
        },
        "ticketTitle": {
          "type": "string"
        },
        "activityID": {
          "type": "string"
        },
        "activityTitle": {
          "type": "string"
        },
        "activityStateID": {
          "type": "string"
        }
      }
    },
    "TicketActivityRemarkEvent": {
      "type": "object",
      "required": [
        "callbackID",
        "timestamp",
        "eventType",
        "eventName",
        "ticketID",
        "ticketNumber",
        "ticketTitle",
        "activityID",
        "activityTitle",
        "activityRemarkID",
        "activityRemark",
        "activityRemarkEditor",
        "activityRemarkCreatedAt"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "ticketID": {
          "type": "string"
        },
        "ticketNumber": {
          "type": "string"
        },
        "ticketTitle": {
          "type": "string"
        },
        "activityID": {
          "type": "string"
        },
        "activityTitle": {
          "type": "string"
        },
        "activityRemarkID": {
          "type": "string"
        },
        "activityRemark": {
          "type": "string"
        },
        "activityRemarkEditor": {
          "type": "string"
        },
        "activityRemarkCreatedAt": {
          "type": "string"
        }
      }
    },
    "TicketActivityAttachmentEvent": {
      "type": "object",
      "required": [
        "callbackID",
        "timestamp",
        "eventType",
        "eventName",
        "ticketID",
        "ticketNumber",
        "ticketTitle",
        "activityID",
        "activityTitle",
        "attachmentID",
        "attachmentDescription"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "ticketID": {
          "type": "string"
        },
        "ticketNumber": {
          "type": "string"
        },
        "ticketTitle": {
          "type": "string"
        },
        "activityID": {
          "type": "string"
        },
        "activityTitle": {
          "type": "string"
        },
        "attachmentID": {
          "type": "string"
        },
        "attachmentDescription": {
          "type": "string"
        }
      }
    },
    "ProcessDataRuleViolated": {
      "type": "object",
      "required": [
        "callbackID",
        "objectID",
        "timestamp",
        "eventType",
        "eventName",
        "signalInfo",
        "unitInfo",
        "violationRuleInfo"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "objectID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "signalInfo": {
          "type": "object",
          "properties": {
            "signalName": {
              "type": "string"
            },
            "baseSignalValue": {
              "type": "string"
            },
            "signalGroup": {
              "type": "string"
            },
            "deliveredSignalValue": {
              "type": "string"
            },
            "controller": {
              "type": "string"
            }
          }
        },
        "unitInfo": {
          "type": "object",
          "properties": {
            "baseUnitSymbol": {
              "type": "string"
            },
            "baseUnitMnemonic": {
              "type": "string"
            },
            "deliveredUnitSymbol": {
              "type": "string"
            },
            "physicalUnitMnemonic": {
              "type": "string"
            },
            "deliveredUnitMnemonic": {
              "type": "string"
            }
          }
        },
        "violationRuleInfo": {
          "type": "object",
          "properties": {
            "priority": {
              "type": "string"
            },
            "level": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "ruleName": {
              "type": "string"
            },
            "violationValue": {
              "type": "string"
            },
            "range": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "violationMaxValue": {
              "type": "string"
            }
          }
        }
      }
    },
    "DeleteEvent": {
      "type": "object",
      "required": [
        "callbackID",
        "timestamp",
        "objectID",
        "eventType",
        "eventName"
      ],
      "properties": {
        "callbackID": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "objectID": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        }
      }
    },
    "RegisterHookPayload": {
      "type": "object",
      "required": [
        "callbackUrl"
      ],
      "properties": {
        "callbackUrl": {
          "type": "string",
          "description": "callbackUrl",
          "x-ms-notification-url": true,
          "x-ms-visibility": "internal"
        }
      }
    },
    "WebhookPushResponse": {
      "type": "object",
      "required": [
        "userName"
      ],
      "properties": {
        "userName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      }
    },
    "MasterDataOperatingState": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "operatingStateId",
        "description",
        "shortDescription",
        "code",
        "color",
        "recodable",
        "splittable",
        "annotatable",
        "customerCode",
        "workplaceStateId",
        "operatingStateClassId"
      ],
      "properties": {
        "operatingStateId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "recodable": {
          "type": "boolean"
        },
        "splittable": {
          "type": "boolean"
        },
        "annotatable": {
          "type": "boolean"
        },
        "customerCode": {
          "type": "string"
        },
        "workplaceStateId": {
          "type": "string"
        },
        "operatingStateClassId": {
          "type": "string"
        }
      }
    },
    "MaterialsListFilter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaterialList"
          },
          "x-ms-summary": "value"
        }
      }
    },
    "MaterialList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "materials",
        "numberOfMaterials"
      ],
      "properties": {
        "numberOfMaterials": {
          "type": "number"
        },
        "materials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Material"
          }
        }
      }
    },
    "Material": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "number",
        "description",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "OperationWorkplace": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "workplaceId",
        "operationErpKey",
        "workplaceNumber",
        "workplaceDescription",
        "productionLineNumber",
        "productionLineDescription",
        "workplaceType",
        "operationId",
        "operationName",
        "operationSequenceNumber",
        "operationDescription",
        "operationPhase",
        "productionOrderId",
        "productionOrderName",
        "productionOrderSplit",
        "productionOrderDescription",
        "productionOrderMaterialNumber",
        "productionOrderMaterialDescription",
        "productionOrderMaterialType"
      ],
      "properties": {
        "workplaceId": {
          "type": "string"
        },
        "operationErpKey": {
          "type": "string"
        },
        "workplaceNumber": {
          "type": "string"
        },
        "workplaceDescription": {
          "type": "string"
        },
        "productionLineNumber": {
          "type": "string"
        },
        "productionLineDescription": {
          "type": "string"
        },
        "workplaceType": {
          "type": "string"
        },
        "operationId": {
          "type": "string"
        },
        "operationName": {
          "type": "string"
        },
        "operationSequenceNumber": {
          "type": "string"
        },
        "operationDescription": {
          "type": "string"
        },
        "operationPhase": {
          "type": "string"
        },
        "productionOrderId": {
          "type": "string"
        },
        "productionOrderName": {
          "type": "string"
        },
        "productionOrderSplit": {
          "type": "string"
        },
        "productionOrderDescription": {
          "type": "string"
        },
        "productionOrderMaterialNumber": {
          "type": "string"
        },
        "productionOrderMaterialDescription": {
          "type": "string"
        },
        "productionOrderMaterialType": {
          "type": "string"
        }
      }
    },
    "OperationList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfOperations",
        "operationList"
      ],
      "properties": {
        "numberOfOperations": {
          "type": "number"
        },
        "operationList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OperationWorkplace"
          }
        }
      }
    },
    "Operation": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "operationErpKey",
        "operationId",
        "operationName",
        "operationSequenceNumber",
        "operationDescription",
        "operationPhase",
        "productionOrderId",
        "productionOrderName",
        "productionOrderSplit",
        "productionOrderDescription",
        "productionOrderMaterialNumber",
        "productionOrderMaterialDescription",
        "productionOrderMaterialType"
      ],
      "properties": {
        "operationErpKey": {
          "type": "string"
        },
        "operationId": {
          "type": "string"
        },
        "operationName": {
          "type": "string"
        },
        "operationSequenceNumber": {
          "type": "string"
        },
        "operationDescription": {
          "type": "string"
        },
        "operationPhase": {
          "type": "string"
        },
        "productionOrderId": {
          "type": "string"
        },
        "productionOrderName": {
          "type": "string"
        },
        "productionOrderSplit": {
          "type": "string"
        },
        "productionOrderDescription": {
          "type": "string"
        },
        "productionOrderMaterialNumber": {
          "type": "string"
        },
        "productionOrderMaterialDescription": {
          "type": "string"
        },
        "productionOrderMaterialType": {
          "type": "string"
        }
      }
    },
    "SemanticHitListOperatingStateMaterial": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "absoluteDurationPercentage",
        "duration",
        "durationPercentage",
        "frequency",
        "materialId",
        "operationStateId"
      ],
      "properties": {
        "absoluteDurationPercentage": {
          "type": "number"
        },
        "duration": {
          "type": "number"
        },
        "durationPercentage": {
          "type": "number"
        },
        "frequency": {
          "type": "number"
        },
        "materialId": {
          "type": "string"
        },
        "operationStateId": {
          "type": "string"
        }
      }
    },
    "SemanticHitListOperatingStateMaterialList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfMaterialOperationStates",
        "materialOperationStates"
      ],
      "properties": {
        "numberOfMaterialOperationStates": {
          "type": "number"
        },
        "materialOperationStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SemanticHitListOperatingStateMaterial"
          }
        }
      }
    },
    "SemanticHitListOperatingStateWorkplace": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "absoluteDurationPercentage",
        "duration",
        "durationPercentage",
        "frequency",
        "workplaceId",
        "operatingStateId"
      ],
      "properties": {
        "absoluteDurationPercentage": {
          "type": "number"
        },
        "duration": {
          "type": "number"
        },
        "durationPercentage": {
          "type": "number"
        },
        "frequency": {
          "type": "number"
        },
        "workplaceId": {
          "type": "string"
        },
        "operatingStateId": {
          "type": "string"
        }
      }
    },
    "SemanticHitListOperatingStateWorkplaceList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfWorkplaceOperatingStates",
        "workplaceOperatingStates"
      ],
      "properties": {
        "numberOfWorkplaceOperatingStates": {
          "type": "number"
        },
        "workplaceOperatingStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SemanticHitListOperatingStateWorkplace"
          }
        }
      }
    },
    "SemanticOverallEquipmentEfficiency": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "availability",
        "oee",
        "performance",
        "quality"
      ],
      "properties": {
        "availability": {
          "type": "number"
        },
        "oee": {
          "type": "number"
        },
        "performance": {
          "type": "number"
        },
        "quality": {
          "type": "number"
        }
      }
    },
    "SemanticOverallProcessEfficiency": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ope",
        "performance",
        "processAvailability",
        "productionProcessRatio",
        "quality",
        "schedulingEfficiency",
        "setupReduction"
      ],
      "properties": {
        "ope": {
          "type": "number"
        },
        "performance": {
          "type": "number"
        },
        "processAvailability": {
          "type": "number"
        },
        "productionProcessRatio": {
          "type": "number"
        },
        "quality": {
          "type": "number"
        },
        "schedulingEfficiency": {
          "type": "number"
        },
        "setupReduction": {
          "type": "number"
        }
      }
    },
    "SemanticQualityDetailsMaterial": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "qualityTypeId",
        "qualityDetailId",
        "materialId",
        "quantity"
      ],
      "properties": {
        "qualityTypeId": {
          "type": "string"
        },
        "qualityDetailId": {
          "type": "string"
        },
        "materialId": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        }
      }
    },
    "SemanticQualityDetailsMaterialList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfMaterialQualityDetails",
        "materialQualityDetails"
      ],
      "properties": {
        "numberOfMaterialQualityDetails": {
          "type": "number"
        },
        "materialQualityDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SemanticQualityDetailsMaterial"
          }
        }
      }
    },
    "SemanticQualityDetailsWorkplace": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "qualityTypeId",
        "qualityDetailsId",
        "workplaceId",
        "quantity"
      ],
      "properties": {
        "qualityTypeId": {
          "type": "string"
        },
        "qualityDetailsId": {
          "type": "string"
        },
        "workplaceId": {
          "type": "string"
        },
        "quantity": {
          "type": "number"
        }
      }
    },
    "SemanticQualityDetailsWorkplaceList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfWorkplaceQualityDetails",
        "workplaceQualityDetails"
      ],
      "properties": {
        "numberOfWorkplaceQualityDetails": {
          "type": "number"
        },
        "workplaceQualityDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SemanticQualityDetailsWorkplace"
          }
        }
      }
    },
    "SemanticTotalQuantity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "endDate",
        "materialId",
        "reworkQuantity",
        "scrapQuantity",
        "startDate",
        "targetQuantity",
        "totalQuantity",
        "workplaceId",
        "yieldQuantity"
      ],
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "materialId": {
          "type": "string"
        },
        "reworkQuantity": {
          "type": "number"
        },
        "scrapQuantity": {
          "type": "number"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "targetQuantity": {
          "type": "number"
        },
        "totalQuantity": {
          "type": "number"
        },
        "workplaceId": {
          "type": "string"
        },
        "yieldQuantity": {
          "type": "number"
        }
      }
    },
    "SemanticTotalQuantityList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfTotalQuantities",
        "totalQuantities"
      ],
      "properties": {
        "numberOfTotalQuantities": {
          "type": "number"
        },
        "totalQuantities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SemanticTotalQuantity"
          }
        }
      }
    },
    "Ticket": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ticketId",
        "ticketNumber",
        "title",
        "description",
        "rootCause",
        "priority",
        "creationDate",
        "editor",
        "ticketStateId",
        "ticketClassId",
        "operationId",
        "materialId",
        "materialNumber",
        "materialDescription",
        "materialType",
        "workplaceId",
        "workplaceNumber",
        "workplaceDescription",
        "workplaceErpContextId",
        "shiftId"
      ],
      "properties": {
        "ticketId": {
          "type": "string"
        },
        "ticketNumber": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "rootCause": {
          "type": "string"
        },
        "priority": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "editor": {
          "type": "string"
        },
        "ticketStateId": {
          "type": "string",
          "enum": [
            "NEW",
            "IN_PROGRESS",
            "DONE",
            "CONFIRMED",
            "REOPENED"
          ]
        },
        "ticketClassId": {
          "type": "string"
        },
        "operationId": {
          "type": "string"
        },
        "materialId": {
          "type": "string"
        },
        "materialNumber": {
          "type": "string"
        },
        "materialDescription": {
          "type": "string"
        },
        "materialType": {
          "type": "string"
        },
        "workplaceId": {
          "type": "string"
        },
        "workplaceNumber": {
          "type": "string"
        },
        "workplaceDescription": {
          "type": "string"
        },
        "workplaceErpContextId": {
          "type": "string"
        },
        "shiftId": {
          "type": "string"
        }
      }
    },
    "TicketList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfTickets",
        "tickets"
      ],
      "properties": {
        "numberOfTickets": {
          "type": "number"
        },
        "tickets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Ticket"
          }
        }
      }
    },
    "TicketAttachment": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "attachment",
        "editor",
        "description",
        "creationDate",
        "mimeType",
        "size"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "attachment": {
          "type": "string",
          "format": "binary"
        },
        "editor": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "mimeType": {
          "type": "string"
        },
        "size": {
          "type": "number"
        }
      }
    },
    "TicketAttachmentList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfTicketAttachments",
        "ticketAttachments"
      ],
      "properties": {
        "numberOfTicketAttachments": {
          "type": "number"
        },
        "ticketAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketAttachment"
          }
        }
      }
    },
    "TicketActivity": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ticketActivityId",
        "ticketActivityTitle",
        "ticketActivityEditor",
        "ticketActivityDescription",
        "ticketActivityDueDate",
        "ticketActivityStateId"
      ],
      "properties": {
        "ticketActivityId": {
          "type": "string"
        },
        "ticketActivityTitle": {
          "type": "string"
        },
        "ticketActivityEditor": {
          "type": "string"
        },
        "ticketActivityDescription": {
          "type": "string"
        },
        "ticketActivityDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "ticketActivityStateId": {
          "type": "string"
        }
      }
    },
    "TicketActivityList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfTicketActivities",
        "ticketActivities"
      ],
      "properties": {
        "numberOfTicketActivities": {
          "type": "number"
        },
        "ticketActivities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketActivity"
          }
        }
      }
    },
    "TicketState": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "name",
        "color"
      ],
      "properties": {
        "id": {
          "type": "string",
          "enum": [
            "NEW",
            "IN_PROGRESS",
            "DONE",
            "CONFIRMED",
            "REOPENED"
          ]
        },
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      }
    },
    "TicketStateList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfTicketStates",
        "ticketStates"
      ],
      "properties": {
        "numberOfTicketStates": {
          "type": "number"
        },
        "ticketStates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketState"
          }
        }
      }
    },
    "TicketActivityRemark": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ticketActivityRemarkId",
        "ticketActivityRemark",
        "ticketActivityRemarkEditor",
        "ticketActivityRemarkCreationDate"
      ],
      "properties": {
        "ticketActivityRemarkId": {
          "type": "string"
        },
        "ticketActivityRemark": {
          "type": "string"
        },
        "ticketActivityRemarkEditor": {
          "type": "string"
        },
        "ticketActivityRemarkCreationDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "TicketActivityRemarkList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfTicketActivityRemarks",
        "ticketActivityRemarks"
      ],
      "properties": {
        "numberOfTicketActivityRemarks": {
          "type": "number"
        },
        "ticketActivityRemarks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketActivityRemark"
          }
        }
      }
    },
    "TicketClass": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "shortDescription",
        "description",
        "sequence",
        "code"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "shortDescription": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sequence": {
          "type": "number"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "TicketClassList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfTicketClasses",
        "ticketClasses"
      ],
      "properties": {
        "numberOfTicketClasses": {
          "type": "number"
        },
        "ticketClasses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketClass"
          }
        }
      }
    },
    "TicketActivityAttachment": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "ticketActivityAttachmentId",
        "ticketActivityAttachmentData",
        "ticketActivityAttachmentName",
        "ticketActivityAttachmentEditor",
        "ticketActivityAttachmentDescription",
        "ticketActivityAttachmentCreationDate",
        "ticketActivityAttachmentMimeType",
        "ticketActivityAttachmentSize"
      ],
      "properties": {
        "ticketActivityAttachmentId": {
          "type": "string"
        },
        "ticketActivityAttachmentData": {
          "type": "string",
          "format": "binary"
        },
        "ticketActivityAttachmentName": {
          "type": "string"
        },
        "ticketActivityAttachmentEditor": {
          "type": "string"
        },
        "ticketActivityAttachmentDescription": {
          "type": "string"
        },
        "ticketActivityAttachmentCreationDate": {
          "type": "string",
          "format": "date-time"
        },
        "ticketActivityAttachmentMimeType": {
          "type": "string"
        },
        "ticketActivityAttachmentSize": {
          "type": "number"
        }
      }
    },
    "TicketActivityAttachmentList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfTicketActivityAttachments",
        "ticketActivityAttachments"
      ],
      "properties": {
        "numberOfTicketActivityAttachments": {
          "type": "number"
        },
        "ticketActivityAttachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketActivityAttachment"
          }
        }
      }
    },
    "WorkplaceFilter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkplaceList"
          },
          "x-ms-summary": "value"
        }
      }
    },
    "Workplace": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "erpKey",
        "name",
        "description",
        "type",
        "productionLineNumber",
        "productionLineDescription",
        "operatingStateId",
        "operatingStateCode",
        "operatingStateDescription",
        "operatingStateShortDescription",
        "operatingStateColor"
      ],
      "properties": {
        "id": {
          "description": "Id of the workplace",
          "type": "string",
          "x-ms-summary": "Id of the workplace"
        },
        "erpKey": {
          "description": "Erp key linked with the workplace",
          "type": "string",
          "x-ms-summary": "Erp key linked with the workplace"
        },
        "name": {
          "description": "Name of the workplace",
          "type": "string",
          "x-ms-summary": "Name of the workplace"
        },
        "description": {
          "description": "Description of the workplace",
          "type": "string",
          "x-ms-summary": "Description of the workplace"
        },
        "type": {
          "description": "Type of the workplace",
          "type": "string",
          "x-ms-summary": "Type of the workplace"
        },
        "productionLineNumber": {
          "description": "Production line number of a workplace",
          "type": "string",
          "x-ms-summary": "Production line number of a workplace"
        },
        "productionLineDescription": {
          "description": "Production line description of a workplace",
          "type": "string",
          "x-ms-summary": "Production line description of a workplace"
        },
        "operatingStateId": {
          "description": "Operation state id of a workplace",
          "type": "string",
          "x-ms-summary": "Operation state id of a workplace"
        },
        "operatingStateCode": {
          "description": "Operation state code of a workplace",
          "type": "string",
          "x-ms-summary": "Operation state code of a workplace"
        },
        "operatingStateDescription": {
          "description": "Operation state description of a workplace",
          "type": "string",
          "x-ms-summary": "Operation state description of a workplace"
        },
        "operatingStateShortDescription": {
          "description": "Operation state short description of a workplace",
          "type": "string",
          "x-ms-summary": "Operation state short description of a workplace"
        },
        "operatingStateColor": {
          "description": "Operation state color of a workplace",
          "type": "string",
          "x-ms-summary": "Operation state color of a workplace"
        }
      }
    },
    "WorkplaceList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "workplaces",
        "numberOfWorkplaces"
      ],
      "properties": {
        "numberOfWorkplaces": {
          "type": "number"
        },
        "workplaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Workplace"
          }
        }
      }
    },
    "WorkplaceStuffMemberList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "numberOfStaffMembers",
        "staffMembers"
      ],
      "properties": {
        "numberOfStaffMembers": {
          "type": "number"
        },
        "staffMembers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkplaceStuffMember"
          }
        }
      }
    },
    "WorkplaceStuffMember": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "erpContextId",
        "firstName",
        "lastName",
        "identificationNumber",
        "staffNumber"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "erpContextId": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "identificationNumber": {
          "type": "string"
        },
        "staffNumber": {
          "type": "string"
        }
      }
    },
    "WorkplaceGroupListFilter": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkplaceGroupList"
          },
          "x-ms-summary": "value"
        }
      }
    },
    "WorkplaceGroupList": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "workplaceGroups",
        "numberOfWorkplaceGroups"
      ],
      "properties": {
        "numberOfWorkplaceGroups": {
          "type": "number"
        },
        "workplaceGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkplaceGroup"
          }
        }
      }
    },
    "WorkplaceGroup": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "erpContextId",
        "number",
        "description",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "erpContextId": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {},
  "responses": {
    "WebhookCreationResponse": {
      "description": "Created",
      "headers": {
        "Location": {
          "type": "string",
          "description": "The webhook creation response is required to specify a 'Location' header, the value of which will be used to delete the webhook registration. You must define the path of the delete webhook request as an internal action."
        }
      }
    },
    "ApiKeyNotValid": {
      "description": "API Key not valid",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-KEY"
    }
  },
  "security": [],
  "tags": [
    {
      "name": "operations"
    },
    {
      "name": "workplace"
    },
    {
      "name": "reports"
    },
    {
      "name": "ticket"
    },
    {
      "name": "workplaceGroups"
    },
    {
      "name": "miscellaneous"
    },
    {
      "name": "hooks",
      "description": "Called by the webhooks registrator",
      "externalDocs": {
        "url": "https://docs.microsoft.com/en-us/connectors/custom-connectors/create-webhook-trigger"
      }
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/forcamforcebridge"
  }
}
