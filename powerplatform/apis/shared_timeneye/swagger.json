{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "info@timeneye.com",
      "name": "Support",
      "url": "https://support.timeneye.com/"
    },
    "description": "This interface allows users to integrate Timeneye's time tracking and management capabilities with various applications and services in the Microsoft ecosystem. By leveraging this interface, users can automate workflows, synchronize time tracking data, and enhance productivity through seamless integration with other tools.",
    "license": {
      "name": "Custom",
      "url": "https://www.timeneye.com/legal/terms-and-conditions"
    },
    "termsOfService": "https://www.timeneye.com/legal/terms-and-conditions",
    "title": "Timeneye",
    "version": "1.0",
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/timeneye",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectionId}/account": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "account_name": {
                      "description": "The name of the account, usually the Company name.",
                      "type": "string"
                    },
                    "billing_enabled": {
                      "description": "Whether or not a subscription is active for the account",
                      "type": "boolean"
                    },
                    "created_date": {
                      "description": "Date of creation",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "Date of license (or trial period) expiration",
                      "example": "2023-01-01",
                      "type": "string"
                    },
                    "is_trial": {
                      "type": "boolean"
                    },
                    "settings": {
                      "properties": {
                        "adminNewEntryForOthers": {
                          "description": "Whether o",
                          "type": "integer"
                        },
                        "allow_apps": {
                          "description": "Whether or not the third party a",
                          "type": "integer"
                        },
                        "authenticationMethod": {
                          "description": "Authen",
                          "properties": {
                            "allow_password_login": {
                              "description": "Whether or not the login with email + password is allowed",
                              "type": "integer"
                            },
                            "idp_cert": {
                              "description": "Certificate of the identity provider (used with type = saml)",
                              "type": "string"
                            },
                            "idp_entity_id": {
                              "description": "Id of the identity provider (used with type = saml)",
                              "type": "string"
                            },
                            "idp_sso_url": {
                              "description": "Single Sign on URL (used with type = saml)",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type of login method",
                              "enum": [
                                "all",
                                "google",
                                "microsoft",
                                "saml"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "companyName": {
                          "description": "The name of the company, could be different from account_name",
                          "type": "string"
                        },
                        "currencyCode": {
                          "description": "Code of the used currency",
                          "type": "string"
                        },
                        "entries_lock_automation": {
                          "description": "Describes the automatic entry lock parameters",
                          "properties": {
                            "enabled": {
                              "description": "Whether or not the entry lock automation is enabled",
                              "type": "boolean"
                            },
                            "interval": {
                              "description": "Interval of the entry lock",
                              "enum": [
                                "weekly",
                                "monthly",
                                "0"
                              ],
                              "type": "string"
                            },
                            "interval_target": {
                              "description": "Between 1 and 31 if the interval is monthly (the day of the month), Between 0 and 6i if the interval is weekly ",
                              "type": "integer",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "memberAverageCost": {
                          "description": "Indicates the average labour cost for the account members",
                          "type": "integer"
                        },
                        "prosett_clientMode": {
                          "description": "Whether or not the client should be displayed in the re",
                          "type": "integer"
                        },
                        "prosett_entriesLock_date": {
                          "description": "The date of the last entry lock",
                          "type": "boolean"
                        },
                        "prosett_entriesLock_enabled": {
                          "description": "Whether or not the entry lock system is enabled",
                          "type": "integer"
                        },
                        "showWorkingTime": {
                          "description": "Whether or not the users can see their working time in their dashboard. (e.g. 7h of 8h)",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "subscription_limit_users": {
                      "description": "Maximum number of active users allowed in the account due to purchased licenses",
                      "type": "integer"
                    },
                    "trial_expiration": {
                      "description": "Date of trial period expiration",
                      "example": "2023-01-01",
                      "type": "string"
                    }
                  },
                  "title": "Account",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "wlpj5oz3p1xgd"
                  }
                },
                {
                  "properties": {
                    "avatar": {
                      "description": "An avatar that can be linked to an Account or to a User",
                      "properties": {
                        "account_id": {
                          "description": "Identifier of the account which has this avatar",
                          "type": "integer"
                        },
                        "avatar_name": {
                          "description": "unique file name",
                          "type": "string"
                        },
                        "avatar_url": {
                          "description": "Image url",
                          "type": "string"
                        },
                        "user_id": {
                          "description": "Identifier of the user which has this avatar",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "rmwkjif7pfhgs"
                      }
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Gets the information on the user account",
        "operationId": "Get-account",
        "summary": "Get Account",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-account"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "Account request",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "account_name": {
                  "description": "The name of the account, usually the Company name.",
                  "type": "string"
                },
                "settings": {
                  "properties": {
                    "adminNewEntryForOthers": {
                      "description": "Possibility to add entries on behalf of other users",
                      "type": "boolean"
                    },
                    "authenticationMethod": {
                      "properties": {
                        "allow_password_login": {
                          "description": "Whether or not the login with email + password is allowed\n",
                          "type": "boolean"
                        },
                        "idp_cert": {
                          "description": "Certificate of the identity provider (used with type = saml)\n",
                          "type": "string"
                        },
                        "idp_entity_id": {
                          "description": "Id of the identity provider (used with type = saml)\n",
                          "type": "string"
                        },
                        "idp_metadata_url": {
                          "description": "Id of the identity provider (used with type = saml)\n",
                          "type": "string"
                        },
                        "idp_sso_url": {
                          "description": "Single Sign on URL (used with type = saml)\n",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of login method\n",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "currencyCode": {
                      "description": "Code of the used currency",
                      "type": "string"
                    },
                    "entries_lock_automation": {
                      "description": "Describes the automatic entry lock parameters",
                      "properties": {
                        "enabled": {
                          "description": "Whether or not the entry lock automation is enabled\n",
                          "type": "boolean"
                        },
                        "interval": {
                          "description": "Interval of the entry lock\n",
                          "type": "string",
                          "x-nullable": true
                        },
                        "interval_target": {
                          "description": "Between 1 and 31 if the interval is monthly (the day of the month), Between 0 and 6i if the interval is weekly\n",
                          "type": "number",
                          "x-nullable": true
                        }
                      },
                      "type": "object",
                      "x-nullable": true
                    },
                    "memberAverageCost": {
                      "description": "Indicates the average labour cost for the account members\n",
                      "type": "number"
                    },
                    "showWorkingTime": {
                      "description": "Whether or not the users can see their working time in their dashboard. (e.g. 7h of 8h)\n",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "account_name": {
                      "description": "The name of the account, usually the Company name.",
                      "type": "string"
                    },
                    "billing_enabled": {
                      "description": "Whether or not a subscription is active for the account",
                      "type": "boolean"
                    },
                    "created_date": {
                      "description": "Date of creation",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "Date of license (or trial period) expiration",
                      "example": "2023-01-01",
                      "type": "string"
                    },
                    "is_trial": {
                      "type": "boolean"
                    },
                    "settings": {
                      "properties": {
                        "adminNewEntryForOthers": {
                          "description": "Whether o",
                          "type": "integer"
                        },
                        "allow_apps": {
                          "description": "Whether or not the third party a",
                          "type": "integer"
                        },
                        "authenticationMethod": {
                          "description": "Authen",
                          "properties": {
                            "allow_password_login": {
                              "description": "Whether or not the login with email + password is allowed",
                              "type": "integer"
                            },
                            "idp_cert": {
                              "description": "Certificate of the identity provider (used with type = saml)",
                              "type": "string"
                            },
                            "idp_entity_id": {
                              "description": "Id of the identity provider (used with type = saml)",
                              "type": "string"
                            },
                            "idp_sso_url": {
                              "description": "Single Sign on URL (used with type = saml)",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type of login method",
                              "enum": [
                                "all",
                                "google",
                                "microsoft",
                                "saml"
                              ],
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "companyName": {
                          "description": "The name of the company, could be different from account_name",
                          "type": "string"
                        },
                        "currencyCode": {
                          "description": "Code of the used currency",
                          "type": "string"
                        },
                        "entries_lock_automation": {
                          "description": "Describes the automatic entry lock parameters",
                          "properties": {
                            "enabled": {
                              "description": "Whether or not the entry lock automation is enabled",
                              "type": "boolean"
                            },
                            "interval": {
                              "description": "Interval of the entry lock",
                              "enum": [
                                "weekly",
                                "monthly",
                                "0"
                              ],
                              "type": "string"
                            },
                            "interval_target": {
                              "description": "Between 1 and 31 if the interval is monthly (the day of the month), Between 0 and 6i if the interval is weekly ",
                              "type": "integer",
                              "x-nullable": true
                            }
                          },
                          "type": "object"
                        },
                        "memberAverageCost": {
                          "description": "Indicates the average labour cost for the account members",
                          "type": "integer"
                        },
                        "prosett_clientMode": {
                          "description": "Whether or not the client should be displayed in the re",
                          "type": "integer"
                        },
                        "prosett_entriesLock_date": {
                          "description": "The date of the last entry lock",
                          "type": "boolean"
                        },
                        "prosett_entriesLock_enabled": {
                          "description": "Whether or not the entry lock system is enabled",
                          "type": "integer"
                        },
                        "showWorkingTime": {
                          "description": "Whether or not the users can see their working time in their dashboard. (e.g. 7h of 8h)",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "subscription_limit_users": {
                      "description": "Maximum number of active users allowed in the account due to purchased licenses",
                      "type": "integer"
                    },
                    "trial_expiration": {
                      "description": "Date of trial period expiration",
                      "example": "2023-01-01",
                      "type": "string"
                    }
                  },
                  "title": "Account",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "wlpj5oz3p1xgd"
                  }
                },
                {
                  "properties": {
                    "avatar": {
                      "description": "An avatar that can be linked to an Account or to a User",
                      "properties": {
                        "account_id": {
                          "description": "Identifier of the account which has this avatar",
                          "type": "integer"
                        },
                        "avatar_name": {
                          "description": "unique file name",
                          "type": "string"
                        },
                        "avatar_url": {
                          "description": "Image url",
                          "type": "string"
                        },
                        "user_id": {
                          "description": "Identifier of the user which has this avatar",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "rmwkjif7pfhgs"
                      }
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Accounts"
        ],
        "description": "Updates an account",
        "operationId": "Put-account-account_id",
        "summary": "Update Account",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-account"
        }
      }
    },
    "/{connectionId}/avatars": {
      "parameters": [],
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "A file containing an image",
            "format": "binary",
            "in": "formData",
            "name": "image",
            "required": true,
            "type": "string"
          },
          {
            "description": "Identifier of the user which has this avatar",
            "in": "formData",
            "name": "user_id",
            "type": "integer",
            "x-nullable": true
          },
          {
            "description": "Identifier of the account which has this avatar",
            "in": "formData",
            "name": "account_id",
            "type": "integer",
            "x-nullable": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "An avatar that can be linked to an Account or to a User",
              "properties": {
                "account_id": {
                  "description": "Identifier of the account which has this avatar",
                  "type": "integer"
                },
                "avatar_name": {
                  "description": "unique file name",
                  "type": "string"
                },
                "avatar_url": {
                  "description": "Image url",
                  "type": "string"
                },
                "user_id": {
                  "description": "Identifier of the user which has this avatar",
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {},
              "x-stoplight": {
                "id": "rmwkjif7pfhgs"
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Avatars"
        ],
        "description": "Creates an avatar",
        "operationId": "Post-avatar-avatar_id",
        "summary": "Create an Avatar",
        "x-internal": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-an-avatar"
        }
      }
    },
    "/{connectionId}/budgets": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "description": "Identifier of the project to which the budget belongs",
            "in": "query",
            "name": "project_id",
            "type": "integer"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "budget_id": {
                        "description": "Unique identifier of the budget",
                        "type": "integer"
                      },
                      "budget_minutes": {
                        "description": "The amount of minutes the budget represents",
                        "type": "integer"
                      },
                      "interval": {
                        "description": "Day of budget reset: 1 to 31 if the budget is monthly, 0 to 6 if the budget is weekly",
                        "maximum": 31,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "is_active": {
                        "description": "Whether or not the budget is active",
                        "maximum": 1,
                        "minimum": 0,
                        "type": "integer"
                      },
                      "period_end": {
                        "description": "Format: YYYY-MM-DD",
                        "type": "string",
                        "x-nullable": true
                      },
                      "period_start": {
                        "description": "Format: YYYY-MM-DD",
                        "type": "string",
                        "x-nullable": true
                      },
                      "project_id": {
                        "description": "Identifier of the project to which the budget belongs",
                        "type": "integer"
                      },
                      "recurrence": {
                        "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
                        "enum": [
                          0,
                          1,
                          2
                        ],
                        "type": "integer"
                      }
                    },
                    "type": "object",
                    "x-examples": {},
                    "x-stoplight": {
                      "id": "h9p1bc7gu2rnb"
                    }
                  },
                  "type": "array"
                },
                "links": {
                  "properties": {
                    "first": {
                      "type": "string"
                    },
                    "last": {
                      "type": "string"
                    },
                    "next": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "prev": {
                      "type": "string",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "current_page": {
                      "type": "integer"
                    },
                    "from": {
                      "type": "integer"
                    },
                    "last_page": {
                      "type": "integer"
                    },
                    "links": {
                      "items": {
                        "properties": {
                          "active": {
                            "type": "boolean"
                          },
                          "label": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "path": {
                      "type": "string"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "to": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "data": [
                    {
                      "budget_id": 1,
                      "budget_minutes": 540,
                      "interval": -1,
                      "is_active": 1,
                      "period_end": null,
                      "period_start": null,
                      "project_id": 2,
                      "recurrence": 0
                    },
                    {
                      "budget_id": 2,
                      "budget_minutes": 1020,
                      "interval": -1,
                      "is_active": 1,
                      "period_end": null,
                      "period_start": null,
                      "project_id": 3,
                      "recurrence": 0
                    }
                  ],
                  "links": {
                    "first": "https://api.timeneye.com/api/v1/budgets?page=1",
                    "last": "https://api.timeneye.com/api/v1/budgets?page=1",
                    "next": null,
                    "prev": null
                  },
                  "meta": {
                    "current_page": 1,
                    "from": 1,
                    "last_page": 1,
                    "links": [
                      {
                        "active": false,
                        "label": "&laquo; Previous",
                        "url": null
                      },
                      {
                        "active": true,
                        "label": "1",
                        "url": "https://api.timeneye.com/api/v1/budgets?page=1"
                      },
                      {
                        "active": false,
                        "label": "Next &raquo;",
                        "url": null
                      }
                    ],
                    "path": "https://api.timeneye.com/api/v1/budgets",
                    "per_page": 200,
                    "to": 126,
                    "total": 126
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "description": "Get budgets list",
        "operationId": "List-Budgets",
        "summary": "List Budgets",
        "x-internal": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-budgets"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "budget_minutes": {
                  "description": "The amount of minutes the budget represents",
                  "type": "integer"
                },
                "interval": {
                  "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
                  "type": "integer",
                  "x-nullable": true
                },
                "project_id": {
                  "description": "Identifier of the project to which the budget belongs",
                  "type": "integer"
                },
                "recurrence": {
                  "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "type": "integer"
                }
              },
              "required": [
                "project_id",
                "recurrence",
                "budget_minutes"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "properties": {
                "budget_id": {
                  "description": "Unique identifier of the budget",
                  "type": "integer"
                },
                "budget_minutes": {
                  "description": "The amount of minutes the budget represents",
                  "type": "integer"
                },
                "interval": {
                  "description": "Day of budget reset: 1 to 31 if the budget is monthly, 0 to 6 if the budget is weekly",
                  "maximum": 31,
                  "minimum": 0,
                  "type": "integer"
                },
                "is_active": {
                  "description": "Whether or not the budget is active",
                  "maximum": 1,
                  "minimum": 0,
                  "type": "integer"
                },
                "period_end": {
                  "description": "Format: YYYY-MM-DD",
                  "type": "string",
                  "x-nullable": true
                },
                "period_start": {
                  "description": "Format: YYYY-MM-DD",
                  "type": "string",
                  "x-nullable": true
                },
                "project_id": {
                  "description": "Identifier of the project to which the budget belongs",
                  "type": "integer"
                },
                "recurrence": {
                  "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {},
              "x-stoplight": {
                "id": "h9p1bc7gu2rnb"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "description": "Creates a budget",
        "operationId": "Post-budget",
        "summary": "Create a Budget",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-budget"
        }
      }
    },
    "/{connectionId}/budgets/{budget}": {
      "parameters": [
        {
          "in": "path",
          "name": "budget",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "budget",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "description": "Deletes a budget",
        "operationId": "Delete-budGet-budget_id",
        "summary": "Delete a Budget",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-budget"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "budget",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "budget_id": {
                  "description": "Unique identifier of the budget",
                  "type": "integer"
                },
                "budget_minutes": {
                  "description": "The amount of minutes the budget represents",
                  "type": "integer"
                },
                "interval": {
                  "description": "Day of budget reset: 1 to 31 if the budget is monthly, 0 to 6 if the budget is weekly",
                  "maximum": 31,
                  "minimum": 0,
                  "type": "integer"
                },
                "is_active": {
                  "description": "Whether or not the budget is active",
                  "maximum": 1,
                  "minimum": 0,
                  "type": "integer"
                },
                "period_end": {
                  "description": "Format: YYYY-MM-DD",
                  "type": "string",
                  "x-nullable": true
                },
                "period_start": {
                  "description": "Format: YYYY-MM-DD",
                  "type": "string",
                  "x-nullable": true
                },
                "project_id": {
                  "description": "Identifier of the project to which the budget belongs",
                  "type": "integer"
                },
                "recurrence": {
                  "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {},
              "x-stoplight": {
                "id": "h9p1bc7gu2rnb"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "description": "Get a budget",
        "operationId": "Get-budGet-budget_id",
        "summary": "Get a Budget",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-budget"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "budget",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "budget_minutes": {
                  "description": "Day of budget reset: 1 to 31 if the budget is monthly, 0 to 6 if the budget is weekly",
                  "type": "integer"
                },
                "interval": {
                  "description": "Day of budget reset: 1 to 31 if the budget is monthly, 0 to 6 if the budget is weekly",
                  "type": "integer"
                },
                "recurrence": {
                  "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "budget_id": {
                  "description": "Unique identifier of the budget",
                  "type": "integer"
                },
                "budget_minutes": {
                  "description": "The amount of minutes the budget represents",
                  "type": "integer"
                },
                "interval": {
                  "description": "Day of budget reset: 1 to 31 if the budget is monthly, 0 to 6 if the budget is weekly",
                  "maximum": 31,
                  "minimum": 0,
                  "type": "integer"
                },
                "is_active": {
                  "description": "Whether or not the budget is active",
                  "maximum": 1,
                  "minimum": 0,
                  "type": "integer"
                },
                "period_end": {
                  "description": "Format: YYYY-MM-DD",
                  "type": "string",
                  "x-nullable": true
                },
                "period_start": {
                  "description": "Format: YYYY-MM-DD",
                  "type": "string",
                  "x-nullable": true
                },
                "project_id": {
                  "description": "Identifier of the project to which the budget belongs",
                  "type": "integer"
                },
                "recurrence": {
                  "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
                  "enum": [
                    0,
                    1,
                    2
                  ],
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {},
              "x-stoplight": {
                "id": "h9p1bc7gu2rnb"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Budgets"
        ],
        "description": "Updates a budget",
        "operationId": "Put-budGet-budget_id",
        "summary": "Update a Budget",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-budget"
        }
      }
    },
    "/{connectionId}/clients": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "description": "Searches in the client's name",
            "in": "query",
            "name": "text",
            "type": "string"
          },
          {
            "description": "A comma separated list of client ids to filter the results",
            "in": "query",
            "name": "member_ids[]",
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "description": "Represents a client of the company. A client can have multiple projects.",
                    "properties": {
                      "client_id": {
                        "description": "Unique identifier",
                        "type": "integer"
                      },
                      "color": {
                        "description": "Color used in reports",
                        "maxLength": 7,
                        "minLength": 7,
                        "pattern": "#[0-9A-F]{6}",
                        "type": "string"
                      },
                      "is_active": {
                        "description": "Whether or not the client is archived",
                        "type": "boolean"
                      },
                      "name": {
                        "description": "Name of the client",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "title": "Client",
                    "type": "object",
                    "x-stoplight": {
                      "id": "o6w3tpvmilemj"
                    }
                  },
                  "type": "array"
                },
                "links": {
                  "properties": {
                    "first": {
                      "type": "string"
                    },
                    "last": {
                      "type": "string"
                    },
                    "next": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "prev": {
                      "type": "string",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "current_page": {
                      "type": "integer"
                    },
                    "from": {
                      "type": "integer"
                    },
                    "last_page": {
                      "type": "integer"
                    },
                    "links": {
                      "items": {
                        "properties": {
                          "active": {
                            "type": "boolean"
                          },
                          "label": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "path": {
                      "type": "string"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "to": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "data": [
                    {
                      "client_id": 10,
                      "color": "#F8B59B",
                      "name": "ACME spa"
                    },
                    {
                      "client_id": 11,
                      "color": "#EA0A8A",
                      "name": "Cool Company inc."
                    }
                  ],
                  "links": {
                    "first": "https://api.timeneye.com/api/v1/clients?page=1",
                    "last": "https://api.timeneye.com/api/v1/clients?page=1",
                    "next": null,
                    "prev": null
                  },
                  "meta": {
                    "current_page": 1,
                    "from": 1,
                    "last_page": 1,
                    "links": [
                      {
                        "active": false,
                        "label": "&laquo; Previous",
                        "url": null
                      },
                      {
                        "active": true,
                        "label": "1",
                        "url": "https://api.timeneye.com/api/v1/clients?page=1"
                      },
                      {
                        "active": false,
                        "label": "Next &raquo;",
                        "url": null
                      }
                    ],
                    "path": "https://api.timeneye.com/api/v1/clients",
                    "per_page": 100,
                    "to": 50,
                    "total": 50
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Clients"
        ],
        "description": "Get clients list",
        "operationId": "List-clients",
        "summary": "List Clients",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-clients"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "Color used in reports",
                  "example": "#FFAABB",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "#[0-9A-F]{6}",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the client",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "color"
              ],
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "Represents a client of the company. A client can have multiple projects.",
              "properties": {
                "client_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                },
                "color": {
                  "description": "Color used in reports",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "#[0-9A-F]{6}",
                  "type": "string"
                },
                "is_active": {
                  "description": "Whether or not the client is archived",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the client",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "Client",
              "type": "object",
              "x-stoplight": {
                "id": "o6w3tpvmilemj"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Clients"
        ],
        "description": "Creates a client",
        "operationId": "Post-client",
        "summary": "Create a Client",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-client"
        }
      }
    },
    "/{connectionId}/clients/{client}": {
      "parameters": [
        {
          "in": "path",
          "name": "client",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "client",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Clients"
        ],
        "description": "Deletes a client",
        "operationId": "Delete-client-client_id",
        "summary": "Delete a Client",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-client"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "client",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "Represents a client of the company. A client can have multiple projects.",
                  "properties": {
                    "client_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "color": {
                      "description": "Color used in reports",
                      "maxLength": 7,
                      "minLength": 7,
                      "pattern": "#[0-9A-F]{6}",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the client is archived",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Name of the client",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "title": "Client",
                  "type": "object",
                  "x-stoplight": {
                    "id": "o6w3tpvmilemj"
                  }
                },
                {
                  "properties": {
                    "projects": {
                      "items": {
                        "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                        "properties": {
                          "api_only": {
                            "description": "Whether or not the project is usable for tracking time only using a third party app.",
                            "type": "integer"
                          },
                          "client_id": {
                            "description": "Unique identifier of a client that the project belongs to",
                            "type": "integer"
                          },
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "description": {
                            "description": "A text description of the project",
                            "type": "string"
                          },
                          "hourly_rate": {
                            "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                            "type": "string"
                          },
                          "is_active": {
                            "description": "Whether or not the project is archived",
                            "type": "integer"
                          },
                          "is_billable": {
                            "description": "Whether or not the project is billable per hour",
                            "type": "integer"
                          },
                          "is_public": {
                            "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The project's name",
                            "type": "string"
                          },
                          "project_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "title": "Project",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "aa7t79mq3m8d2"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Clients"
        ],
        "description": "Get a client",
        "operationId": "Get-client-client_id",
        "summary": "Get a Client",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-client"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "client",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "Color used in reports",
                  "type": "string"
                },
                "name": {
                  "description": "Color used in reports",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "color"
              ],
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Represents a client of the company. A client can have multiple projects.",
              "properties": {
                "client_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                },
                "color": {
                  "description": "Color used in reports",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "#[0-9A-F]{6}",
                  "type": "string"
                },
                "is_active": {
                  "description": "Whether or not the client is archived",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the client",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "title": "Client",
              "type": "object",
              "x-stoplight": {
                "id": "o6w3tpvmilemj"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Clients"
        ],
        "description": "Updates a client",
        "operationId": "Put-client-client_id",
        "summary": "Update a Client",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-client"
        }
      }
    },
    "/{connectionId}/countries": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "properties": {
                  "company_tax": {
                    "type": "string"
                  },
                  "country_code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "private_tax": {
                    "type": "string"
                  },
                  "vat_required": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array",
              "x-examples": {
                "Example 1": [
                  {
                    "company_tax": "0.00",
                    "country_code": "AD",
                    "name": "Andorra",
                    "private_tax": "0.00",
                    "vat_required": 0
                  },
                  {
                    "company_tax": "0.00",
                    "country_code": "AE",
                    "name": "United Arab Emirates",
                    "private_tax": "0.00",
                    "vat_required": 0
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Countries"
        ],
        "description": "Get countries list",
        "operationId": "List-countries",
        "summary": "List Countries",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-countries"
        }
      }
    },
    "/{connectionId}/currencies": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "properties": {
                  "currency_code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array",
              "x-examples": {
                "Example 1": [
                  {
                    "currency_code": "AED",
                    "name": "UAE Dirham"
                  },
                  {
                    "currency_code": "AFN",
                    "name": "Afghani"
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Currencies"
        ],
        "description": "Get currencies list",
        "operationId": "List-currencies",
        "summary": "List Currencies",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-currencies"
        }
      }
    },
    "/{connectionId}/entries": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "description": "A comma separated list of user ids to filter the results",
            "in": "query",
            "name": "member_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of entry ids to filter the results",
            "in": "query",
            "name": "entry_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of project ids to filter the results",
            "in": "query",
            "name": "project_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of phase ids to filter the results",
            "in": "query",
            "name": "phase_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of client ids to filter the results",
            "in": "query",
            "name": "client_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of group ids to filter the results",
            "in": "query",
            "name": "group_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of phase category ids to filter the results",
            "in": "query",
            "name": "category_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of tag list ids to filter the results",
            "in": "query",
            "name": "tag_list_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of tag ids to filter the results",
            "in": "query",
            "name": "tag_ids[]",
            "type": "string"
          },
          {
            "description": "Get only the entry that have a given billed status: 0: Unbilled 1: Billed 2: Not billable 3: Billable",
            "in": "query",
            "maximum": 3,
            "minimum": 0,
            "name": "billed_status",
            "type": "integer"
          },
          {
            "description": "Get only the entries in a given timeframe",
            "enum": [
              "custom",
              "all",
              "week_last",
              "week_this",
              "month_last",
              "month_this",
              "days_7",
              "days_15",
              "days_30",
              "months_3",
              "months_6",
              "months_12",
              "yesterday",
              "today"
            ],
            "in": "query",
            "name": "timeframe",
            "type": "string"
          },
          {
            "description": "Get only the entries that have date grater or equal to this date",
            "in": "query",
            "name": "date_from",
            "type": "string",
            "x-example": "2023-01-01"
          },
          {
            "description": "Get only the entries that have date less or equal to this date",
            "in": "query",
            "name": "date_to",
            "type": "string",
            "x-example": "2023-01-01"
          },
          {
            "description": "Get entries that contain this text in the notes",
            "in": "query",
            "name": "text",
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "description": "Represents a time entry in Timeneye. Time entries are portions of time assigned to a project, a phase and optionally to a client (the one linked to the project) and multiple tags.",
                    "properties": {
                      "billed": {
                        "description": "Indicates if the entry has been billed",
                        "type": "integer"
                      },
                      "client_id": {
                        "description": "Unique identifier of the client that belongs to the entry's project",
                        "type": "integer"
                      },
                      "cost": {
                        "description": "The monetary cost of the time entry based on the hourly cost of the user that created it",
                        "type": "string"
                      },
                      "created_date": {
                        "description": "Date and time of creation",
                        "example": "2023-01-01 10:00:00",
                        "type": "string"
                      },
                      "entry_date": {
                        "description": "Date of the entry",
                        "example": "2023-01-01",
                        "type": "string"
                      },
                      "entry_id": {
                        "description": "Unique identifier",
                        "type": "integer"
                      },
                      "entry_minutes": {
                        "description": "Amount of tracked time in minutes",
                        "type": "integer"
                      },
                      "locked": {
                        "description": "Whether or not the entry is locked",
                        "type": "integer"
                      },
                      "locked_by_apionly": {
                        "description": "Whether or not the entry is locked by restriction on third party app only",
                        "type": "integer"
                      },
                      "locked_by_date": {
                        "description": "Whether or not the entry is locked by date",
                        "type": "integer"
                      },
                      "locked_by_membership": {
                        "description": "Whether or not the entry is locked by membership",
                        "type": "integer"
                      },
                      "notes": {
                        "description": "Notes on the time entry",
                        "type": "string"
                      },
                      "phase_category_id": {
                        "description": "Unique identifier of the the phase category which the entry's phase belongs to",
                        "type": "integer"
                      },
                      "phase_id": {
                        "description": "Unique identifier of the the phase which the entry belongs to",
                        "type": "integer"
                      },
                      "profit": {
                        "description": "The difference between the revenue and the cost",
                        "type": "string"
                      },
                      "project_id": {
                        "description": "Unique identifier of the project",
                        "type": "integer"
                      },
                      "revenue": {
                        "description": "The monetary revenue of the time entry based on the general hourly rate,the project's .",
                        "type": "string"
                      },
                      "source": {
                        "description": "Indicates the source of the entry (if any)",
                        "type": "string"
                      },
                      "source_data": {
                        "description": "Additional data of the source ",
                        "type": "string"
                      },
                      "source_id": {
                        "description": "A unique identifier of the source of the entry",
                        "type": "string"
                      },
                      "source_text": {
                        "description": "A text that describes the source of the entry",
                        "type": "string"
                      },
                      "source_url": {
                        "description": "An URL to the source of the entry",
                        "type": "string"
                      },
                      "suggested_phase_id": {
                        "description": "An optional identifier of a suggested phase if the entry is created from an EntrySuggestion",
                        "type": "string",
                        "x-nullable": true
                      },
                      "suggested_project_id": {
                        "description": "An optional identifier of a suggested project if the entry is created from an EntrySuggestion",
                        "type": "string",
                        "x-nullable": true
                      },
                      "todo_id": {
                        "description": "The unique identifier of a todo linked to the time entry",
                        "type": "string",
                        "x-nullable": true
                      },
                      "updated_date": {
                        "description": "Date and time od update",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Unique identifier of the user that created the entry",
                        "type": "integer"
                      }
                    },
                    "title": "Entry",
                    "type": "object",
                    "x-examples": {},
                    "x-stoplight": {
                      "id": "5f8bbr1bf1gt7"
                    }
                  },
                  "type": "array"
                },
                "links": {
                  "properties": {
                    "first": {
                      "type": "string"
                    },
                    "last": {
                      "type": "string"
                    },
                    "next": {
                      "type": "string",
                      "x-nullable": true
                    },
                    "prev": {
                      "type": "string",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "meta": {
                  "properties": {
                    "current_page": {
                      "type": "integer"
                    },
                    "from": {
                      "type": "integer"
                    },
                    "last_page": {
                      "type": "integer"
                    },
                    "links": {
                      "items": {
                        "properties": {
                          "active": {
                            "type": "boolean"
                          },
                          "label": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string",
                            "x-nullable": true
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "path": {
                      "type": "string"
                    },
                    "per_page": {
                      "type": "integer"
                    },
                    "to": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Entries"
        ],
        "description": "Get entries list",
        "operationId": "List-entries",
        "summary": "List Entries",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-entries"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "billed": {
                  "description": "0 = Entry billable, 1 = Entry billed, 2 = Entry not billable",
                  "maximum": 3,
                  "minimum": 1,
                  "type": "integer"
                },
                "date": {
                  "description": "Date of the entry",
                  "example": "2023-01-01",
                  "type": "string"
                },
                "entry_suggestion_id": {
                  "description": "A unique identifier of the entry suggestion from which the entry is created",
                  "type": "integer"
                },
                "minutes": {
                  "description": "Amount of tracked time in minutes",
                  "type": "integer"
                },
                "notes": {
                  "description": "Notes on the time entry",
                  "type": "string"
                },
                "origin_date": {
                  "description": "Format Y-m-d required with repeatable_suggestion_id",
                  "type": "string"
                },
                "phase_id": {
                  "description": "Unique identifier of the the phase which the entry belongs to",
                  "type": "integer"
                },
                "project_id": {
                  "description": "Unique identifier of the project",
                  "type": "integer"
                },
                "repeatable_suggestion_id": {
                  "description": "A unique identifier of the repeatable entry suggestion from which the entry is created",
                  "type": "integer",
                  "x-nullable": true
                },
                "source": {
                  "description": "Must be one of integration_code available or \"consistency\"",
                  "type": "string"
                },
                "source_text": {
                  "description": "A text that describes the source of the entry",
                  "type": "string"
                },
                "source_url": {
                  "description": "A text that describes the source of the entry",
                  "type": "string"
                },
                "tag_ids": {
                  "description": "Array of tag_id",
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "user_id": {
                  "description": "Unique identifier of the user that created the entry",
                  "type": "integer"
                }
              },
              "required": [
                "project_id",
                "phase_id",
                "minutes",
                "date"
              ],
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "description": "Represents a time entry in Timeneye. Time entries are portions of time assigned to a project, a phase and optionally to a client (the one linked to the project) and multiple tags.",
                  "properties": {
                    "billed": {
                      "description": "Indicates if the entry has been billed",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of the client that belongs to the entry's project",
                      "type": "integer"
                    },
                    "cost": {
                      "description": "The monetary cost of the time entry based on the hourly cost of the user that created it",
                      "type": "string"
                    },
                    "created_date": {
                      "description": "Date and time of creation",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "entry_date": {
                      "description": "Date of the entry",
                      "example": "2023-01-01",
                      "type": "string"
                    },
                    "entry_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "entry_minutes": {
                      "description": "Amount of tracked time in minutes",
                      "type": "integer"
                    },
                    "locked": {
                      "description": "Whether or not the entry is locked",
                      "type": "integer"
                    },
                    "locked_by_apionly": {
                      "description": "Whether or not the entry is locked by restriction on third party app only",
                      "type": "integer"
                    },
                    "locked_by_date": {
                      "description": "Whether or not the entry is locked by date",
                      "type": "integer"
                    },
                    "locked_by_membership": {
                      "description": "Whether or not the entry is locked by membership",
                      "type": "integer"
                    },
                    "notes": {
                      "description": "Notes on the time entry",
                      "type": "string"
                    },
                    "phase_category_id": {
                      "description": "Unique identifier of the the phase category which the entry's phase belongs to",
                      "type": "integer"
                    },
                    "phase_id": {
                      "description": "Unique identifier of the the phase which the entry belongs to",
                      "type": "integer"
                    },
                    "profit": {
                      "description": "The difference between the revenue and the cost",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier of the project",
                      "type": "integer"
                    },
                    "revenue": {
                      "description": "The monetary revenue of the time entry based on the general hourly rate,the project's .",
                      "type": "string"
                    },
                    "source": {
                      "description": "Indicates the source of the entry (if any)",
                      "type": "string"
                    },
                    "source_data": {
                      "description": "Additional data of the source ",
                      "type": "string"
                    },
                    "source_id": {
                      "description": "A unique identifier of the source of the entry",
                      "type": "string"
                    },
                    "source_text": {
                      "description": "A text that describes the source of the entry",
                      "type": "string"
                    },
                    "source_url": {
                      "description": "An URL to the source of the entry",
                      "type": "string"
                    },
                    "suggested_phase_id": {
                      "description": "An optional identifier of a suggested phase if the entry is created from an EntrySuggestion",
                      "type": "string",
                      "x-nullable": true
                    },
                    "suggested_project_id": {
                      "description": "An optional identifier of a suggested project if the entry is created from an EntrySuggestion",
                      "type": "string",
                      "x-nullable": true
                    },
                    "todo_id": {
                      "description": "The unique identifier of a todo linked to the time entry",
                      "type": "string",
                      "x-nullable": true
                    },
                    "updated_date": {
                      "description": "Date and time od update",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Unique identifier of the user that created the entry",
                      "type": "integer"
                    }
                  },
                  "title": "Entry",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "5f8bbr1bf1gt7"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A tag",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag",
                                "type": "string"
                              },
                              "tag_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier of the tag list which the tag belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "tag_list_id",
                              "name"
                            ],
                            "title": "Tag",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "iwk9zguiajgif"
                            }
                          },
                          {
                            "properties": {
                              "tag_list": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "phase": {
                      "description": "A project's phase",
                      "properties": {
                        "budget_minutes": {
                          "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                          "type": "integer"
                        },
                        "is_open": {
                          "description": "Whether or not the phase is archived",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the phase",
                          "type": "string"
                        },
                        "phase_category_id": {
                          "description": "Unique identifier of the phase category which the phase belongs to",
                          "type": "integer"
                        },
                        "phase_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "project_id": {
                          "description": "Unique identifier of the project which the phase belongs to",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "project_id",
                        "name"
                      ],
                      "title": "Phase",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "2gsuxkayxq83f"
                      }
                    },
                    "project": {
                      "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                      "properties": {
                        "api_only": {
                          "description": "Whether or not the project is usable for tracking time only using a third party app.",
                          "type": "integer"
                        },
                        "client_id": {
                          "description": "Unique identifier of a client that the project belongs to",
                          "type": "integer"
                        },
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text description of the project",
                          "type": "string"
                        },
                        "hourly_rate": {
                          "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the project is archived",
                          "type": "integer"
                        },
                        "is_billable": {
                          "description": "Whether or not the project is billable per hour",
                          "type": "integer"
                        },
                        "is_public": {
                          "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The project's name",
                          "type": "string"
                        },
                        "project_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Project",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "aa7t79mq3m8d2"
                      }
                    },
                    "user": {
                      "allOf": [
                        {
                          "description": "User",
                          "properties": {
                            "apple_id": {
                              "description": "Apple unique identifier of the user",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Date of creation of the user",
                              "type": "string"
                            },
                            "department": {
                              "description": "The user's department",
                              "type": "string",
                              "x-nullable": true
                            },
                            "email": {
                              "description": "Email of the user, must be unique",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Tells if the user is archived or not",
                              "type": "integer"
                            },
                            "google_id": {
                              "description": "Google unique identifier of the user",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "Unique identifier of the group to which the user belongs to",
                              "type": "integer"
                            },
                            "is_admin": {
                              "description": "Whether or not the user is an admin of the account",
                              "type": "boolean"
                            },
                            "is_gm": {
                              "description": "Whether or not the user is a group manager of his group",
                              "type": "boolean"
                            },
                            "is_owner": {
                              "description": "Whether or not the user is an owner of the account",
                              "type": "boolean"
                            },
                            "job_title": {
                              "description": "The job title of the user in the company",
                              "type": "string"
                            },
                            "microsoft_id": {
                              "description": "Microsoft unique identifier of the user",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the user",
                              "type": "string"
                            },
                            "role": {
                              "description": "The role of the user in the company.",
                              "type": "string",
                              "x-nullable": true
                            },
                            "settings_dailyemail_time": {
                              "description": "Hour of the day in which the user receives the daily email",
                              "type": "integer"
                            },
                            "settings_emails_automation_enabled": {
                              "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                              "type": "integer"
                            },
                            "settings_emails_dailyrecap_enabled": {
                              "description": "Whether or not the daily recap email is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_developer_enabled": {
                              "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_newsletter_enabled": {
                              "description": "Whether or not the newsletter emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_onboarding_enabled": {
                              "description": "Whether or not the emails to guide the user through the trial period are enabled",
                              "type": "integer"
                            },
                            "settings_emails_status_day": {
                              "description": "Day of the week in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_status_enabled": {
                              "description": "Whether or not the email containing the status update is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_status_time": {
                              "description": "Hour of the day in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_system_enabled": {
                              "description": "Whether or not the system emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_timerssaved_enabled": {
                              "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                              "type": "integer"
                            },
                            "user_hourly_cost": {
                              "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_hourly_rate": {
                              "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "Unique identifier of the user",
                              "type": "integer"
                            },
                            "working_time": {
                              "description": "How many hours the user is usually working on a day",
                              "type": "integer"
                            },
                            "workspace_access_level": {
                              "description": "The role of the user in Timeneye: owner, admin or member",
                              "type": "string"
                            }
                          },
                          "title": "User",
                          "type": "object",
                          "x-examples": {},
                          "x-stoplight": {
                            "id": "8r0gf5rqoxwwv"
                          }
                        },
                        {
                          "properties": {
                            "avatar": {
                              "description": "An avatar that can be linked to an Account or to a User",
                              "properties": {
                                "account_id": {
                                  "description": "Identifier of the account which has this avatar",
                                  "type": "integer"
                                },
                                "avatar_name": {
                                  "description": "unique file name",
                                  "type": "string"
                                },
                                "avatar_url": {
                                  "description": "Image url",
                                  "type": "string"
                                },
                                "user_id": {
                                  "description": "Identifier of the user which has this avatar",
                                  "type": "integer"
                                }
                              },
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "rmwkjif7pfhgs"
                              }
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Entries"
        ],
        "description": "Creates an entry",
        "operationId": "Post-entry",
        "summary": "Create an Entry",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-an-entry"
        }
      }
    },
    "/{connectionId}/entries/{entry}": {
      "parameters": [
        {
          "in": "path",
          "name": "entry",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "entry",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "Represents a time entry in Timeneye. Time entries are portions of time assigned to a project, a phase and optionally to a client (the one linked to the project) and multiple tags.",
                  "properties": {
                    "billed": {
                      "description": "Indicates if the entry has been billed",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of the client that belongs to the entry's project",
                      "type": "integer"
                    },
                    "cost": {
                      "description": "The monetary cost of the time entry based on the hourly cost of the user that created it",
                      "type": "string"
                    },
                    "created_date": {
                      "description": "Date and time of creation",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "entry_date": {
                      "description": "Date of the entry",
                      "example": "2023-01-01",
                      "type": "string"
                    },
                    "entry_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "entry_minutes": {
                      "description": "Amount of tracked time in minutes",
                      "type": "integer"
                    },
                    "locked": {
                      "description": "Whether or not the entry is locked",
                      "type": "integer"
                    },
                    "locked_by_apionly": {
                      "description": "Whether or not the entry is locked by restriction on third party app only",
                      "type": "integer"
                    },
                    "locked_by_date": {
                      "description": "Whether or not the entry is locked by date",
                      "type": "integer"
                    },
                    "locked_by_membership": {
                      "description": "Whether or not the entry is locked by membership",
                      "type": "integer"
                    },
                    "notes": {
                      "description": "Notes on the time entry",
                      "type": "string"
                    },
                    "phase_category_id": {
                      "description": "Unique identifier of the the phase category which the entry's phase belongs to",
                      "type": "integer"
                    },
                    "phase_id": {
                      "description": "Unique identifier of the the phase which the entry belongs to",
                      "type": "integer"
                    },
                    "profit": {
                      "description": "The difference between the revenue and the cost",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier of the project",
                      "type": "integer"
                    },
                    "revenue": {
                      "description": "The monetary revenue of the time entry based on the general hourly rate,the project's .",
                      "type": "string"
                    },
                    "source": {
                      "description": "Indicates the source of the entry (if any)",
                      "type": "string"
                    },
                    "source_data": {
                      "description": "Additional data of the source ",
                      "type": "string"
                    },
                    "source_id": {
                      "description": "A unique identifier of the source of the entry",
                      "type": "string"
                    },
                    "source_text": {
                      "description": "A text that describes the source of the entry",
                      "type": "string"
                    },
                    "source_url": {
                      "description": "An URL to the source of the entry",
                      "type": "string"
                    },
                    "suggested_phase_id": {
                      "description": "An optional identifier of a suggested phase if the entry is created from an EntrySuggestion",
                      "type": "string",
                      "x-nullable": true
                    },
                    "suggested_project_id": {
                      "description": "An optional identifier of a suggested project if the entry is created from an EntrySuggestion",
                      "type": "string",
                      "x-nullable": true
                    },
                    "todo_id": {
                      "description": "The unique identifier of a todo linked to the time entry",
                      "type": "string",
                      "x-nullable": true
                    },
                    "updated_date": {
                      "description": "Date and time od update",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Unique identifier of the user that created the entry",
                      "type": "integer"
                    }
                  },
                  "title": "Entry",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "5f8bbr1bf1gt7"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A tag",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag",
                                "type": "string"
                              },
                              "tag_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier of the tag list which the tag belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "tag_list_id",
                              "name"
                            ],
                            "title": "Tag",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "iwk9zguiajgif"
                            }
                          },
                          {
                            "properties": {
                              "tag_list": {
                                "properties": {
                                  "color": {
                                    "description": "The color used for reporting",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Whether or not the tag list is archived",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the tag list",
                                    "type": "string"
                                  },
                                  "tag_list_id": {
                                    "description": "Unique identifier",
                                    "type": "integer"
                                  },
                                  "text_color": {
                                    "description": "The color of the text used for reporting",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "color",
                                  "text_color"
                                ],
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "z8r3lwt40nihp"
                                }
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "phase": {
                      "description": "A project's phase",
                      "properties": {
                        "budget_minutes": {
                          "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                          "type": "integer"
                        },
                        "is_open": {
                          "description": "Whether or not the phase is archived",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the phase",
                          "type": "string"
                        },
                        "phase_category_id": {
                          "description": "Unique identifier of the phase category which the phase belongs to",
                          "type": "integer"
                        },
                        "phase_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "project_id": {
                          "description": "Unique identifier of the project which the phase belongs to",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "project_id",
                        "name"
                      ],
                      "title": "Phase",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "2gsuxkayxq83f"
                      }
                    },
                    "project": {
                      "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                      "properties": {
                        "api_only": {
                          "description": "Whether or not the project is usable for tracking time only using a third party app.",
                          "type": "integer"
                        },
                        "client_id": {
                          "description": "Unique identifier of a client that the project belongs to",
                          "type": "integer"
                        },
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text description of the project",
                          "type": "string"
                        },
                        "hourly_rate": {
                          "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the project is archived",
                          "type": "integer"
                        },
                        "is_billable": {
                          "description": "Whether or not the project is billable per hour",
                          "type": "integer"
                        },
                        "is_public": {
                          "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The project's name",
                          "type": "string"
                        },
                        "project_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Project",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "aa7t79mq3m8d2"
                      }
                    },
                    "user": {
                      "allOf": [
                        {
                          "description": "User",
                          "properties": {
                            "apple_id": {
                              "description": "Apple unique identifier of the user",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Date of creation of the user",
                              "type": "string"
                            },
                            "department": {
                              "description": "The user's department",
                              "type": "string",
                              "x-nullable": true
                            },
                            "email": {
                              "description": "Email of the user, must be unique",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Tells if the user is archived or not",
                              "type": "integer"
                            },
                            "google_id": {
                              "description": "Google unique identifier of the user",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "Unique identifier of the group to which the user belongs to",
                              "type": "integer"
                            },
                            "is_admin": {
                              "description": "Whether or not the user is an admin of the account",
                              "type": "boolean"
                            },
                            "is_gm": {
                              "description": "Whether or not the user is a group manager of his group",
                              "type": "boolean"
                            },
                            "is_owner": {
                              "description": "Whether or not the user is an owner of the account",
                              "type": "boolean"
                            },
                            "job_title": {
                              "description": "The job title of the user in the company",
                              "type": "string"
                            },
                            "microsoft_id": {
                              "description": "Microsoft unique identifier of the user",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the user",
                              "type": "string"
                            },
                            "role": {
                              "description": "The role of the user in the company.",
                              "type": "string",
                              "x-nullable": true
                            },
                            "settings_dailyemail_time": {
                              "description": "Hour of the day in which the user receives the daily email",
                              "type": "integer"
                            },
                            "settings_emails_automation_enabled": {
                              "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                              "type": "integer"
                            },
                            "settings_emails_dailyrecap_enabled": {
                              "description": "Whether or not the daily recap email is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_developer_enabled": {
                              "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_newsletter_enabled": {
                              "description": "Whether or not the newsletter emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_onboarding_enabled": {
                              "description": "Whether or not the emails to guide the user through the trial period are enabled",
                              "type": "integer"
                            },
                            "settings_emails_status_day": {
                              "description": "Day of the week in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_status_enabled": {
                              "description": "Whether or not the email containing the status update is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_status_time": {
                              "description": "Hour of the day in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_system_enabled": {
                              "description": "Whether or not the system emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_timerssaved_enabled": {
                              "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                              "type": "integer"
                            },
                            "user_hourly_cost": {
                              "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_hourly_rate": {
                              "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "Unique identifier of the user",
                              "type": "integer"
                            },
                            "working_time": {
                              "description": "How many hours the user is usually working on a day",
                              "type": "integer"
                            },
                            "workspace_access_level": {
                              "description": "The role of the user in Timeneye: owner, admin or member",
                              "type": "string"
                            }
                          },
                          "title": "User",
                          "type": "object",
                          "x-examples": {},
                          "x-stoplight": {
                            "id": "8r0gf5rqoxwwv"
                          }
                        },
                        {
                          "properties": {
                            "avatar": {
                              "description": "An avatar that can be linked to an Account or to a User",
                              "properties": {
                                "account_id": {
                                  "description": "Identifier of the account which has this avatar",
                                  "type": "integer"
                                },
                                "avatar_name": {
                                  "description": "unique file name",
                                  "type": "string"
                                },
                                "avatar_url": {
                                  "description": "Image url",
                                  "type": "string"
                                },
                                "user_id": {
                                  "description": "Identifier of the user which has this avatar",
                                  "type": "integer"
                                }
                              },
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "rmwkjif7pfhgs"
                              }
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Entries"
        ],
        "description": "Delete an entry",
        "operationId": "Delete-entries-entry_id",
        "summary": "Delete an Entry",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-an-entry"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "entry",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "Represents a time entry in Timeneye. Time entries are portions of time assigned to a project, a phase and optionally to a client (the one linked to the project) and multiple tags.",
                  "properties": {
                    "billed": {
                      "description": "Indicates if the entry has been billed",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of the client that belongs to the entry's project",
                      "type": "integer"
                    },
                    "cost": {
                      "description": "The monetary cost of the time entry based on the hourly cost of the user that created it",
                      "type": "string"
                    },
                    "created_date": {
                      "description": "Date and time of creation",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "entry_date": {
                      "description": "Date of the entry",
                      "example": "2023-01-01",
                      "type": "string"
                    },
                    "entry_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "entry_minutes": {
                      "description": "Amount of tracked time in minutes",
                      "type": "integer"
                    },
                    "locked": {
                      "description": "Whether or not the entry is locked",
                      "type": "integer"
                    },
                    "locked_by_apionly": {
                      "description": "Whether or not the entry is locked by restriction on third party app only",
                      "type": "integer"
                    },
                    "locked_by_date": {
                      "description": "Whether or not the entry is locked by date",
                      "type": "integer"
                    },
                    "locked_by_membership": {
                      "description": "Whether or not the entry is locked by membership",
                      "type": "integer"
                    },
                    "notes": {
                      "description": "Notes on the time entry",
                      "type": "string"
                    },
                    "phase_category_id": {
                      "description": "Unique identifier of the the phase category which the entry's phase belongs to",
                      "type": "integer"
                    },
                    "phase_id": {
                      "description": "Unique identifier of the the phase which the entry belongs to",
                      "type": "integer"
                    },
                    "profit": {
                      "description": "The difference between the revenue and the cost",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier of the project",
                      "type": "integer"
                    },
                    "revenue": {
                      "description": "The monetary revenue of the time entry based on the general hourly rate,the project's .",
                      "type": "string"
                    },
                    "source": {
                      "description": "Indicates the source of the entry (if any)",
                      "type": "string"
                    },
                    "source_data": {
                      "description": "Additional data of the source ",
                      "type": "string"
                    },
                    "source_id": {
                      "description": "A unique identifier of the source of the entry",
                      "type": "string"
                    },
                    "source_text": {
                      "description": "A text that describes the source of the entry",
                      "type": "string"
                    },
                    "source_url": {
                      "description": "An URL to the source of the entry",
                      "type": "string"
                    },
                    "suggested_phase_id": {
                      "description": "An optional identifier of a suggested phase if the entry is created from an EntrySuggestion",
                      "type": "string",
                      "x-nullable": true
                    },
                    "suggested_project_id": {
                      "description": "An optional identifier of a suggested project if the entry is created from an EntrySuggestion",
                      "type": "string",
                      "x-nullable": true
                    },
                    "todo_id": {
                      "description": "The unique identifier of a todo linked to the time entry",
                      "type": "string",
                      "x-nullable": true
                    },
                    "updated_date": {
                      "description": "Date and time od update",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Unique identifier of the user that created the entry",
                      "type": "integer"
                    }
                  },
                  "title": "Entry",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "5f8bbr1bf1gt7"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "description": "A tag",
                        "properties": {
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "is_active": {
                            "description": "Whether or not the tag is archived",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the tag",
                            "type": "string"
                          },
                          "tag_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "tag_list_id": {
                            "description": "Unique identifier of the tag list which the tag belongs to",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "tag_list_id",
                          "name"
                        ],
                        "title": "Tag",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "iwk9zguiajgif"
                        }
                      },
                      "type": "array"
                    },
                    "phase": {
                      "description": "A project's phase",
                      "properties": {
                        "budget_minutes": {
                          "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                          "type": "integer"
                        },
                        "is_open": {
                          "description": "Whether or not the phase is archived",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the phase",
                          "type": "string"
                        },
                        "phase_category_id": {
                          "description": "Unique identifier of the phase category which the phase belongs to",
                          "type": "integer"
                        },
                        "phase_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "project_id": {
                          "description": "Unique identifier of the project which the phase belongs to",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "project_id",
                        "name"
                      ],
                      "title": "Phase",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "2gsuxkayxq83f"
                      }
                    },
                    "project": {
                      "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                      "properties": {
                        "api_only": {
                          "description": "Whether or not the project is usable for tracking time only using a third party app.",
                          "type": "integer"
                        },
                        "client_id": {
                          "description": "Unique identifier of a client that the project belongs to",
                          "type": "integer"
                        },
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text description of the project",
                          "type": "string"
                        },
                        "hourly_rate": {
                          "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the project is archived",
                          "type": "integer"
                        },
                        "is_billable": {
                          "description": "Whether or not the project is billable per hour",
                          "type": "integer"
                        },
                        "is_public": {
                          "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The project's name",
                          "type": "string"
                        },
                        "project_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Project",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "aa7t79mq3m8d2"
                      }
                    },
                    "user": {
                      "allOf": [
                        {
                          "description": "User",
                          "properties": {
                            "apple_id": {
                              "description": "Apple unique identifier of the user",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Date of creation of the user",
                              "type": "string"
                            },
                            "department": {
                              "description": "The user's department",
                              "type": "string",
                              "x-nullable": true
                            },
                            "email": {
                              "description": "Email of the user, must be unique",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Tells if the user is archived or not",
                              "type": "integer"
                            },
                            "google_id": {
                              "description": "Google unique identifier of the user",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "Unique identifier of the group to which the user belongs to",
                              "type": "integer"
                            },
                            "is_admin": {
                              "description": "Whether or not the user is an admin of the account",
                              "type": "boolean"
                            },
                            "is_gm": {
                              "description": "Whether or not the user is a group manager of his group",
                              "type": "boolean"
                            },
                            "is_owner": {
                              "description": "Whether or not the user is an owner of the account",
                              "type": "boolean"
                            },
                            "job_title": {
                              "description": "The job title of the user in the company",
                              "type": "string"
                            },
                            "microsoft_id": {
                              "description": "Microsoft unique identifier of the user",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the user",
                              "type": "string"
                            },
                            "role": {
                              "description": "The role of the user in the company.",
                              "type": "string",
                              "x-nullable": true
                            },
                            "settings_dailyemail_time": {
                              "description": "Hour of the day in which the user receives the daily email",
                              "type": "integer"
                            },
                            "settings_emails_automation_enabled": {
                              "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                              "type": "integer"
                            },
                            "settings_emails_dailyrecap_enabled": {
                              "description": "Whether or not the daily recap email is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_developer_enabled": {
                              "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_newsletter_enabled": {
                              "description": "Whether or not the newsletter emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_onboarding_enabled": {
                              "description": "Whether or not the emails to guide the user through the trial period are enabled",
                              "type": "integer"
                            },
                            "settings_emails_status_day": {
                              "description": "Day of the week in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_status_enabled": {
                              "description": "Whether or not the email containing the status update is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_status_time": {
                              "description": "Hour of the day in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_system_enabled": {
                              "description": "Whether or not the system emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_timerssaved_enabled": {
                              "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                              "type": "integer"
                            },
                            "user_hourly_cost": {
                              "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_hourly_rate": {
                              "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "Unique identifier of the user",
                              "type": "integer"
                            },
                            "working_time": {
                              "description": "How many hours the user is usually working on a day",
                              "type": "integer"
                            },
                            "workspace_access_level": {
                              "description": "The role of the user in Timeneye: owner, admin or member",
                              "type": "string"
                            }
                          },
                          "title": "User",
                          "type": "object",
                          "x-examples": {},
                          "x-stoplight": {
                            "id": "8r0gf5rqoxwwv"
                          }
                        },
                        {
                          "properties": {
                            "avatar": {
                              "description": "An avatar that can be linked to an Account or to a User",
                              "properties": {
                                "account_id": {
                                  "description": "Identifier of the account which has this avatar",
                                  "type": "integer"
                                },
                                "avatar_name": {
                                  "description": "unique file name",
                                  "type": "string"
                                },
                                "avatar_url": {
                                  "description": "Image url",
                                  "type": "string"
                                },
                                "user_id": {
                                  "description": "Identifier of the user which has this avatar",
                                  "type": "integer"
                                }
                              },
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "rmwkjif7pfhgs"
                              }
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "object",
              "x-examples": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Entries"
        ],
        "description": "Get an entry",
        "operationId": "Get-entries-entry_id",
        "summary": "Get Entries",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-entries"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "entry",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "billed": {
                  "description": "0 = Entry billable, 1 = Entry billed, 2 = Entry not billable",
                  "maximum": 3,
                  "minimum": 1,
                  "type": "integer"
                },
                "date": {
                  "description": "Date of the entry",
                  "example": "2023-01-01",
                  "type": "string"
                },
                "entry_suggestion_id": {
                  "description": "A unique identifier of the entry suggestion from which the entry is created",
                  "type": "integer"
                },
                "minutes": {
                  "description": "Amount of tracked time in minutes",
                  "type": "integer"
                },
                "notes": {
                  "description": "Notes on the time entry",
                  "type": "string"
                },
                "origin_date": {
                  "description": "Format Y-m-d required with repeatable_suggestion_id",
                  "type": "string"
                },
                "phase_id": {
                  "description": "Unique identifier of the the phase which the entry belongs to",
                  "type": "integer"
                },
                "project_id": {
                  "description": "Unique identifier of the project",
                  "type": "integer"
                },
                "repeatable_suggestion_id": {
                  "description": "A unique identifier of the repeatable entry suggestion from which the entry is created",
                  "type": "integer",
                  "x-nullable": true
                },
                "source": {
                  "description": "Must be one of integration_code available or \"consistency\"",
                  "type": "string"
                },
                "source_text": {
                  "description": "A text that describes the source of the entry",
                  "type": "string"
                },
                "source_url": {
                  "description": "A text that describes the source of the entry",
                  "type": "string"
                },
                "tag_ids": {
                  "description": "Array of tag_id",
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "user_id": {
                  "description": "Unique identifier of the user that created the entry",
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "Represents a time entry in Timeneye. Time entries are portions of time assigned to a project, a phase and optionally to a client (the one linked to the project) and multiple tags.",
                  "properties": {
                    "billed": {
                      "description": "Indicates if the entry has been billed",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of the client that belongs to the entry's project",
                      "type": "integer"
                    },
                    "cost": {
                      "description": "The monetary cost of the time entry based on the hourly cost of the user that created it",
                      "type": "string"
                    },
                    "created_date": {
                      "description": "Date and time of creation",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "entry_date": {
                      "description": "Date of the entry",
                      "example": "2023-01-01",
                      "type": "string"
                    },
                    "entry_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "entry_minutes": {
                      "description": "Amount of tracked time in minutes",
                      "type": "integer"
                    },
                    "locked": {
                      "description": "Whether or not the entry is locked",
                      "type": "integer"
                    },
                    "locked_by_apionly": {
                      "description": "Whether or not the entry is locked by restriction on third party app only",
                      "type": "integer"
                    },
                    "locked_by_date": {
                      "description": "Whether or not the entry is locked by date",
                      "type": "integer"
                    },
                    "locked_by_membership": {
                      "description": "Whether or not the entry is locked by membership",
                      "type": "integer"
                    },
                    "notes": {
                      "description": "Notes on the time entry",
                      "type": "string"
                    },
                    "phase_category_id": {
                      "description": "Unique identifier of the the phase category which the entry's phase belongs to",
                      "type": "integer"
                    },
                    "phase_id": {
                      "description": "Unique identifier of the the phase which the entry belongs to",
                      "type": "integer"
                    },
                    "profit": {
                      "description": "The difference between the revenue and the cost",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier of the project",
                      "type": "integer"
                    },
                    "revenue": {
                      "description": "The monetary revenue of the time entry based on the general hourly rate,the project's .",
                      "type": "string"
                    },
                    "source": {
                      "description": "Indicates the source of the entry (if any)",
                      "type": "string"
                    },
                    "source_data": {
                      "description": "Additional data of the source ",
                      "type": "string"
                    },
                    "source_id": {
                      "description": "A unique identifier of the source of the entry",
                      "type": "string"
                    },
                    "source_text": {
                      "description": "A text that describes the source of the entry",
                      "type": "string"
                    },
                    "source_url": {
                      "description": "An URL to the source of the entry",
                      "type": "string"
                    },
                    "suggested_phase_id": {
                      "description": "An optional identifier of a suggested phase if the entry is created from an EntrySuggestion",
                      "type": "string",
                      "x-nullable": true
                    },
                    "suggested_project_id": {
                      "description": "An optional identifier of a suggested project if the entry is created from an EntrySuggestion",
                      "type": "string",
                      "x-nullable": true
                    },
                    "todo_id": {
                      "description": "The unique identifier of a todo linked to the time entry",
                      "type": "string",
                      "x-nullable": true
                    },
                    "updated_date": {
                      "description": "Date and time od update",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Unique identifier of the user that created the entry",
                      "type": "integer"
                    }
                  },
                  "title": "Entry",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "5f8bbr1bf1gt7"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A tag",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag",
                                "type": "string"
                              },
                              "tag_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier of the tag list which the tag belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "tag_list_id",
                              "name"
                            ],
                            "title": "Tag",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "iwk9zguiajgif"
                            }
                          },
                          {
                            "properties": {
                              "tag_list": {
                                "properties": {
                                  "color": {
                                    "description": "The color used for reporting",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Whether or not the tag list is archived",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the tag list",
                                    "type": "string"
                                  },
                                  "tag_list_id": {
                                    "description": "Unique identifier",
                                    "type": "integer"
                                  },
                                  "text_color": {
                                    "description": "The color of the text used for reporting",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "color",
                                  "text_color"
                                ],
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "z8r3lwt40nihp"
                                }
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "phase": {
                      "description": "A project's phase",
                      "properties": {
                        "budget_minutes": {
                          "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                          "type": "integer"
                        },
                        "is_open": {
                          "description": "Whether or not the phase is archived",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the phase",
                          "type": "string"
                        },
                        "phase_category_id": {
                          "description": "Unique identifier of the phase category which the phase belongs to",
                          "type": "integer"
                        },
                        "phase_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "project_id": {
                          "description": "Unique identifier of the project which the phase belongs to",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "project_id",
                        "name"
                      ],
                      "title": "Phase",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "2gsuxkayxq83f"
                      }
                    },
                    "project": {
                      "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                      "properties": {
                        "api_only": {
                          "description": "Whether or not the project is usable for tracking time only using a third party app.",
                          "type": "integer"
                        },
                        "client_id": {
                          "description": "Unique identifier of a client that the project belongs to",
                          "type": "integer"
                        },
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text description of the project",
                          "type": "string"
                        },
                        "hourly_rate": {
                          "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the project is archived",
                          "type": "integer"
                        },
                        "is_billable": {
                          "description": "Whether or not the project is billable per hour",
                          "type": "integer"
                        },
                        "is_public": {
                          "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The project's name",
                          "type": "string"
                        },
                        "project_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Project",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "aa7t79mq3m8d2"
                      }
                    },
                    "user": {
                      "allOf": [
                        {
                          "description": "User",
                          "properties": {
                            "apple_id": {
                              "description": "Apple unique identifier of the user",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Date of creation of the user",
                              "type": "string"
                            },
                            "department": {
                              "description": "The user's department",
                              "type": "string",
                              "x-nullable": true
                            },
                            "email": {
                              "description": "Email of the user, must be unique",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Tells if the user is archived or not",
                              "type": "integer"
                            },
                            "google_id": {
                              "description": "Google unique identifier of the user",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "Unique identifier of the group to which the user belongs to",
                              "type": "integer"
                            },
                            "is_admin": {
                              "description": "Whether or not the user is an admin of the account",
                              "type": "boolean"
                            },
                            "is_gm": {
                              "description": "Whether or not the user is a group manager of his group",
                              "type": "boolean"
                            },
                            "is_owner": {
                              "description": "Whether or not the user is an owner of the account",
                              "type": "boolean"
                            },
                            "job_title": {
                              "description": "The job title of the user in the company",
                              "type": "string"
                            },
                            "microsoft_id": {
                              "description": "Microsoft unique identifier of the user",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the user",
                              "type": "string"
                            },
                            "role": {
                              "description": "The role of the user in the company.",
                              "type": "string",
                              "x-nullable": true
                            },
                            "settings_dailyemail_time": {
                              "description": "Hour of the day in which the user receives the daily email",
                              "type": "integer"
                            },
                            "settings_emails_automation_enabled": {
                              "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                              "type": "integer"
                            },
                            "settings_emails_dailyrecap_enabled": {
                              "description": "Whether or not the daily recap email is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_developer_enabled": {
                              "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_newsletter_enabled": {
                              "description": "Whether or not the newsletter emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_onboarding_enabled": {
                              "description": "Whether or not the emails to guide the user through the trial period are enabled",
                              "type": "integer"
                            },
                            "settings_emails_status_day": {
                              "description": "Day of the week in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_status_enabled": {
                              "description": "Whether or not the email containing the status update is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_status_time": {
                              "description": "Hour of the day in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_system_enabled": {
                              "description": "Whether or not the system emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_timerssaved_enabled": {
                              "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                              "type": "integer"
                            },
                            "user_hourly_cost": {
                              "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_hourly_rate": {
                              "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "Unique identifier of the user",
                              "type": "integer"
                            },
                            "working_time": {
                              "description": "How many hours the user is usually working on a day",
                              "type": "integer"
                            },
                            "workspace_access_level": {
                              "description": "The role of the user in Timeneye: owner, admin or member",
                              "type": "string"
                            }
                          },
                          "title": "User",
                          "type": "object",
                          "x-examples": {},
                          "x-stoplight": {
                            "id": "8r0gf5rqoxwwv"
                          }
                        },
                        {
                          "properties": {
                            "avatar": {
                              "description": "An avatar that can be linked to an Account or to a User",
                              "properties": {
                                "account_id": {
                                  "description": "Identifier of the account which has this avatar",
                                  "type": "integer"
                                },
                                "avatar_name": {
                                  "description": "unique file name",
                                  "type": "string"
                                },
                                "avatar_url": {
                                  "description": "Image url",
                                  "type": "string"
                                },
                                "user_id": {
                                  "description": "Identifier of the user which has this avatar",
                                  "type": "integer"
                                }
                              },
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "rmwkjif7pfhgs"
                              }
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Entries"
        ],
        "description": "Updates an entry",
        "operationId": "Put-entries-entry_id",
        "summary": "Update an Entry",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-an-entry"
        }
      }
    },
    "/{connectionId}/entry-suggestions": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "Get a full list of suggestions without paginating the results",
            "in": "query",
            "name": "no_paginate",
            "type": "boolean"
          },
          {
            "description": "Get only the suggestions in a given timeframe",
            "enum": [
              "custom",
              "all",
              "week_last",
              "week_this",
              "month_last",
              "month_this",
              "days_7",
              "days_15",
              "days_30",
              "months_3",
              "months_6",
              "months_12",
              "yesterday",
              "today"
            ],
            "in": "query",
            "name": "timeframe",
            "type": "string"
          },
          {
            "description": "Get only the suggestions that have date grater or equal to this date",
            "in": "query",
            "name": "date_from",
            "type": "string"
          },
          {
            "default": "2023-01-31",
            "description": "Get only the suggestions that have date less or equal to this date",
            "in": "query",
            "name": "date_to",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "properties": {
                      "accepted": {
                        "description": "Whether or not the suggestion is accepted an transformed into an entry",
                        "type": "integer"
                      },
                      "created_datetime": {
                        "description": "Date and time of creation of the suggestion",
                        "type": "string"
                      },
                      "entry_date": {
                        "description": "Suggested date",
                        "type": "string"
                      },
                      "entry_minutes": {
                        "description": "Suggested amount of time in minutes",
                        "type": "integer"
                      },
                      "entry_suggestion_id": {
                        "description": "Unique identifier",
                        "type": "integer"
                      },
                      "notes": {
                        "description": "Notes related to the source of the suggestion",
                        "type": "string"
                      },
                      "phase_id": {
                        "description": "Unique identifier of the suggested phase",
                        "type": "integer"
                      },
                      "phase_name": {
                        "description": "Name of the suggested phase",
                        "type": "string"
                      },
                      "project_id": {
                        "description": "Unique identifier of the suggested project",
                        "type": "integer"
                      },
                      "project_name": {
                        "description": "Name of the suggested project",
                        "type": "string"
                      },
                      "source": {
                        "description": "Source identifier",
                        "type": "string"
                      },
                      "source_data": {
                        "description": "Other data related to the source",
                        "type": "string"
                      },
                      "source_id": {
                        "description": "Unique identifier of the source",
                        "type": "string"
                      },
                      "source_text": {
                        "description": "Text related to the source",
                        "type": "string"
                      },
                      "source_url": {
                        "description": "URL of the source of the suggestion",
                        "type": "string"
                      },
                      "todo_id": {
                        "type": "integer",
                        "x-nullable": true
                      },
                      "user_id": {
                        "description": "Unique identifier of the user that owns the suggestion",
                        "type": "integer"
                      }
                    },
                    "type": "object",
                    "x-examples": {},
                    "x-stoplight": {
                      "id": "rczv4ar2ph4q2"
                    }
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer",
                  "x-nullable": true
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer",
                  "x-nullable": true
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "EntrySuggestions"
        ],
        "description": "Get a list of Entry suggestions for a given timeframe",
        "operationId": "Get-entry-suggestions",
        "summary": "List Entry Suggestions",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-entry-suggestions"
        }
      }
    },
    "/{connectionId}/entry-suggestions/{entry_suggestion}": {
      "parameters": [
        {
          "in": "path",
          "name": "entry_suggestion",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "entry_suggestion",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "EntrySuggestions"
        ],
        "description": "Deletes an entry suggestion",
        "operationId": "Delete-entry-suggestions-entry_suggestion_id",
        "summary": "Delete an Entry Suggestion",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-an-entry-suggestion"
        }
      }
    },
    "/{connectionId}/groups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "allOf": [
                      {
                        "description": "A group of users",
                        "properties": {
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "group_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the group",
                            "type": "string"
                          }
                        },
                        "title": "Group",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "gh9aq1pihfeit"
                        }
                      },
                      {
                        "properties": {
                          "users": {
                            "items": {
                              "allOf": [
                                {
                                  "description": "User",
                                  "properties": {
                                    "apple_id": {
                                      "description": "Apple unique identifier of the user",
                                      "type": "string"
                                    },
                                    "created_date": {
                                      "description": "Date of creation of the user",
                                      "type": "string"
                                    },
                                    "department": {
                                      "description": "The user's department",
                                      "type": "string",
                                      "x-nullable": true
                                    },
                                    "email": {
                                      "description": "Email of the user, must be unique",
                                      "type": "string"
                                    },
                                    "enabled": {
                                      "description": "Tells if the user is archived or not",
                                      "type": "integer"
                                    },
                                    "google_id": {
                                      "description": "Google unique identifier of the user",
                                      "type": "string"
                                    },
                                    "group_id": {
                                      "description": "Unique identifier of the group to which the user belongs to",
                                      "type": "integer"
                                    },
                                    "is_admin": {
                                      "description": "Whether or not the user is an admin of the account",
                                      "type": "boolean"
                                    },
                                    "is_gm": {
                                      "description": "Whether or not the user is a group manager of his group",
                                      "type": "boolean"
                                    },
                                    "is_owner": {
                                      "description": "Whether or not the user is an owner of the account",
                                      "type": "boolean"
                                    },
                                    "job_title": {
                                      "description": "The job title of the user in the company",
                                      "type": "string"
                                    },
                                    "microsoft_id": {
                                      "description": "Microsoft unique identifier of the user",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the user",
                                      "type": "string"
                                    },
                                    "role": {
                                      "description": "The role of the user in the company.",
                                      "type": "string",
                                      "x-nullable": true
                                    },
                                    "settings_dailyemail_time": {
                                      "description": "Hour of the day in which the user receives the daily email",
                                      "type": "integer"
                                    },
                                    "settings_emails_automation_enabled": {
                                      "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                      "type": "integer"
                                    },
                                    "settings_emails_dailyrecap_enabled": {
                                      "description": "Whether or not the daily recap email is enabled fro the user",
                                      "type": "integer"
                                    },
                                    "settings_emails_developer_enabled": {
                                      "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                      "type": "integer"
                                    },
                                    "settings_emails_newsletter_enabled": {
                                      "description": "Whether or not the newsletter emails are enabled fro the user",
                                      "type": "integer"
                                    },
                                    "settings_emails_onboarding_enabled": {
                                      "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                      "type": "integer"
                                    },
                                    "settings_emails_status_day": {
                                      "description": "Day of the week in which the user receives the status email",
                                      "type": "integer"
                                    },
                                    "settings_emails_status_enabled": {
                                      "description": "Whether or not the email containing the status update is enabled fro the user",
                                      "type": "integer"
                                    },
                                    "settings_emails_status_time": {
                                      "description": "Hour of the day in which the user receives the status email",
                                      "type": "integer"
                                    },
                                    "settings_emails_system_enabled": {
                                      "description": "Whether or not the system emails are enabled fro the user",
                                      "type": "integer"
                                    },
                                    "settings_emails_timerssaved_enabled": {
                                      "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                      "type": "integer"
                                    },
                                    "user_hourly_cost": {
                                      "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                      "type": "string"
                                    },
                                    "user_hourly_rate": {
                                      "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                      "type": "string"
                                    },
                                    "user_id": {
                                      "description": "Unique identifier of the user",
                                      "type": "integer"
                                    },
                                    "working_time": {
                                      "description": "How many hours the user is usually working on a day",
                                      "type": "integer"
                                    },
                                    "workspace_access_level": {
                                      "description": "The role of the user in Timeneye: owner, admin or member",
                                      "type": "string"
                                    }
                                  },
                                  "title": "User",
                                  "type": "object",
                                  "x-examples": {},
                                  "x-stoplight": {
                                    "id": "8r0gf5rqoxwwv"
                                  }
                                },
                                {
                                  "properties": {
                                    "avatar": {
                                      "description": "An avatar that can be linked to an Account or to a User",
                                      "properties": {
                                        "account_id": {
                                          "description": "Identifier of the account which has this avatar",
                                          "type": "integer"
                                        },
                                        "avatar_name": {
                                          "description": "unique file name",
                                          "type": "string"
                                        },
                                        "avatar_url": {
                                          "description": "Image url",
                                          "type": "string"
                                        },
                                        "user_id": {
                                          "description": "Identifier of the user which has this avatar",
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object",
                                      "x-examples": {},
                                      "x-stoplight": {
                                        "id": "rmwkjif7pfhgs"
                                      }
                                    },
                                    "pivot": {
                                      "properties": {
                                        "is_gm": {
                                          "type": "boolean"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "pivot"
                                  ],
                                  "type": "object"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Get the list of all the groups",
        "operationId": "Get-groups",
        "summary": "List Groups",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-groups"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the group",
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "A group of users",
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "group_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                },
                "name": {
                  "description": "Name of the group",
                  "type": "string"
                }
              },
              "title": "Group",
              "type": "object",
              "x-examples": {},
              "x-stoplight": {
                "id": "gh9aq1pihfeit"
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Create Group",
        "operationId": "Post-groups-group_id",
        "summary": "Create a Group",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-group"
        }
      }
    },
    "/{connectionId}/groups/{group}": {
      "parameters": [
        {
          "in": "path",
          "name": "group",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "group",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Delete a group",
        "operationId": "Delete-groups-group_id",
        "summary": "Delete a Group",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-group"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "group",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A group of users",
                  "properties": {
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "group_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the group",
                      "type": "string"
                    }
                  },
                  "title": "Group",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "gh9aq1pihfeit"
                  }
                },
                {
                  "properties": {
                    "projects": {
                      "items": {
                        "properties": {
                          "is_public": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "project_id": {
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "users": {
                      "items": {
                        "allOf": [
                          {
                            "description": "User",
                            "properties": {
                              "apple_id": {
                                "description": "Apple unique identifier of the user",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Date of creation of the user",
                                "type": "string"
                              },
                              "department": {
                                "description": "The user's department",
                                "type": "string",
                                "x-nullable": true
                              },
                              "email": {
                                "description": "Email of the user, must be unique",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Tells if the user is archived or not",
                                "type": "integer"
                              },
                              "google_id": {
                                "description": "Google unique identifier of the user",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Unique identifier of the group to which the user belongs to",
                                "type": "integer"
                              },
                              "is_admin": {
                                "description": "Whether or not the user is an admin of the account",
                                "type": "boolean"
                              },
                              "is_gm": {
                                "description": "Whether or not the user is a group manager of his group",
                                "type": "boolean"
                              },
                              "is_owner": {
                                "description": "Whether or not the user is an owner of the account",
                                "type": "boolean"
                              },
                              "job_title": {
                                "description": "The job title of the user in the company",
                                "type": "string"
                              },
                              "microsoft_id": {
                                "description": "Microsoft unique identifier of the user",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user",
                                "type": "string"
                              },
                              "role": {
                                "description": "The role of the user in the company.",
                                "type": "string",
                                "x-nullable": true
                              },
                              "settings_dailyemail_time": {
                                "description": "Hour of the day in which the user receives the daily email",
                                "type": "integer"
                              },
                              "settings_emails_automation_enabled": {
                                "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                "type": "integer"
                              },
                              "settings_emails_dailyrecap_enabled": {
                                "description": "Whether or not the daily recap email is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_developer_enabled": {
                                "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_newsletter_enabled": {
                                "description": "Whether or not the newsletter emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_onboarding_enabled": {
                                "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                "type": "integer"
                              },
                              "settings_emails_status_day": {
                                "description": "Day of the week in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_status_enabled": {
                                "description": "Whether or not the email containing the status update is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_status_time": {
                                "description": "Hour of the day in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_system_enabled": {
                                "description": "Whether or not the system emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_timerssaved_enabled": {
                                "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                "type": "integer"
                              },
                              "user_hourly_cost": {
                                "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_hourly_rate": {
                                "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Unique identifier of the user",
                                "type": "integer"
                              },
                              "working_time": {
                                "description": "How many hours the user is usually working on a day",
                                "type": "integer"
                              },
                              "workspace_access_level": {
                                "description": "The role of the user in Timeneye: owner, admin or member",
                                "type": "string"
                              }
                            },
                            "title": "User",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "8r0gf5rqoxwwv"
                            }
                          },
                          {
                            "properties": {
                              "pivot": {
                                "properties": {
                                  "is_gm": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "pivot"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Get a group",
        "operationId": "Get-group",
        "summary": "Get a Group",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-group"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "group",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "maxLength": 7,
                  "minLength": 7,
                  "type": "string"
                },
                "name": {
                  "description": "Name of the group",
                  "minLength": 3,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A group of users",
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "group_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                },
                "name": {
                  "description": "Name of the group",
                  "type": "string"
                }
              },
              "title": "Group",
              "type": "object",
              "x-examples": {},
              "x-stoplight": {
                "id": "gh9aq1pihfeit"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "Update a Group",
        "operationId": "Put-groups-group_id",
        "summary": "Update a Group",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-group"
        }
      }
    },
    "/{connectionId}/groups/{group}/projects/{project}": {
      "parameters": [
        {
          "in": "path",
          "name": "group",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "project",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "group",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Groups",
          "Projects"
        ],
        "description": "Removed a project from a group",
        "operationId": "Delete-groups-projects",
        "summary": "Delete Group-Project relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-group-project-relationship"
        }
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "group",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Groups",
          "Projects"
        ],
        "description": "Attach a project to a group",
        "operationId": "Post-groups-projects",
        "summary": "Create Group-Project relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-group-project-relationship"
        }
      }
    },
    "/{connectionId}/groups/{group}/users/{user}": {
      "parameters": [
        {
          "in": "path",
          "name": "group",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "user",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "group",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Groups",
          "Users"
        ],
        "description": "Removed a user from a group",
        "operationId": "Delete-groups-users",
        "summary": "Delete Group-User relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-group-user-relationship"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "group",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "is_gm": {
                  "description": "Tells if the user is group manager of the group",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Groups",
          "Users"
        ],
        "description": "Attach a user to a group",
        "operationId": "Post-groups-users",
        "summary": "Create Group-User relationship",
        "x-internal": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-group-user-relationship"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "group",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "is_gm": {
                  "description": "Tells if the user is group manager of the group",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Groups",
          "Users"
        ],
        "description": "Updates the relationship between a user and a group",
        "operationId": "Put-groups-users",
        "summary": "Update Group-User relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-group-user-relationship"
        }
      }
    },
    "/{connectionId}/languages": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "description": "A language supported in Timeneye",
                "properties": {
                  "language_code": {
                    "description": "Unique identifier",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the language",
                    "type": "string"
                  }
                },
                "title": "Language",
                "type": "object",
                "x-examples": {},
                "x-stoplight": {
                  "id": "ri5snko16593b"
                }
              },
              "type": "array",
              "x-examples": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Languages"
        ],
        "description": "Get languages list",
        "operationId": "List-languages",
        "summary": "List Languages",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-languages"
        }
      }
    },
    "/{connectionId}/phase-categories": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "Full text search string",
            "in": "query",
            "name": "text",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "allOf": [
                      {
                        "description": "Categorizes phases",
                        "properties": {
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the phase category",
                            "type": "string"
                          },
                          "phase_category_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          }
                        },
                        "title": "PhaseCategory",
                        "type": "object",
                        "x-examples": {},
                        "x-nullable": true,
                        "x-stoplight": {
                          "id": "1b463g7kp1qsa"
                        }
                      }
                    ]
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "PhaseCategories"
        ],
        "description": "Get the list of the phase categories",
        "operationId": "Get-phase-categories",
        "summary": "List Phase Categories",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-phase-categories"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "maxLength": 7,
                  "type": "string"
                },
                "name": {
                  "description": "Name of the phase category",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "Categorizes phases",
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the phase category",
                  "type": "string"
                },
                "phase_category_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                }
              },
              "title": "PhaseCategory",
              "type": "object",
              "x-examples": {},
              "x-nullable": true,
              "x-stoplight": {
                "id": "1b463g7kp1qsa"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "PhaseCategories"
        ],
        "description": "Creates a phase category",
        "operationId": "Post-phase-categories",
        "summary": "Create a Phase Category",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-phase-category"
        }
      }
    },
    "/{connectionId}/phase-categories/{phase_category}": {
      "parameters": [
        {
          "in": "path",
          "name": "phase_category",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "phase_category",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "PhaseCategories"
        ],
        "description": "Delete a phase category",
        "operationId": "Delete-phase-categories-phase_category_id",
        "summary": "Delete a Phase Category",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-phase-category"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "phase_category",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Categorizes phases",
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the phase category",
                  "type": "string"
                },
                "phase_category_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                }
              },
              "title": "PhaseCategory",
              "type": "object",
              "x-examples": {},
              "x-nullable": true,
              "x-stoplight": {
                "id": "1b463g7kp1qsa"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "PhaseCategories"
        ],
        "description": "Get a phase category",
        "operationId": "Get-phase-categories-phase_category_id",
        "summary": "Get a Phase Category",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-phase-category"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "phase_category",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "maxLength": 7,
                  "type": "string"
                },
                "name": {
                  "description": "Name of the phase category",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Categorizes phases",
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the phase category",
                  "type": "string"
                },
                "phase_category_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                }
              },
              "title": "PhaseCategory",
              "type": "object",
              "x-examples": {},
              "x-nullable": true,
              "x-stoplight": {
                "id": "1b463g7kp1qsa"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "PhaseCategories"
        ],
        "description": "Update a phase category",
        "operationId": "Put-phase-categories-phase_category_id",
        "summary": "Update a Phase Category",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-phase-category"
        }
      }
    },
    "/{connectionId}/phases": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "Get phases containing this text in the name",
            "in": "query",
            "name": "text",
            "type": "string"
          },
          {
            "description": "Get only active or inactive phases",
            "in": "query",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "Get phases belonging to a project",
            "in": "query",
            "minimum": 0,
            "name": "project_id",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "allOf": [
                      {
                        "description": "A project's phase",
                        "properties": {
                          "budget_minutes": {
                            "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                            "type": "integer"
                          },
                          "is_open": {
                            "description": "Whether or not the phase is archived",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the phase",
                            "type": "string"
                          },
                          "phase_category_id": {
                            "description": "Unique identifier of the phase category which the phase belongs to",
                            "type": "integer"
                          },
                          "phase_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "project_id": {
                            "description": "Unique identifier of the project which the phase belongs to",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "project_id",
                          "name"
                        ],
                        "title": "Phase",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "2gsuxkayxq83f"
                        }
                      }
                    ]
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Phases"
        ],
        "description": "List all the phases",
        "operationId": "Get-phases",
        "summary": "List Phases",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-phases"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "budget_minutes": {
                  "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                  "type": "integer"
                },
                "name": {
                  "description": "The name of the phase\n",
                  "type": "string"
                },
                "phase_category_id": {
                  "description": "Unique identifier of the phase category which the phase belongs to",
                  "type": "integer"
                },
                "project_id": {
                  "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                  "type": "integer"
                }
              },
              "required": [
                "name",
                "budget_minutes",
                "project_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "description": "A project's phase",
              "properties": {
                "budget_minutes": {
                  "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                  "type": "integer"
                },
                "is_open": {
                  "description": "Whether or not the phase is archived",
                  "type": "integer"
                },
                "name": {
                  "description": "The name of the phase",
                  "type": "string"
                },
                "phase_category_id": {
                  "description": "Unique identifier of the phase category which the phase belongs to",
                  "type": "integer"
                },
                "phase_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                },
                "project_id": {
                  "description": "Unique identifier of the project which the phase belongs to",
                  "type": "integer"
                }
              },
              "required": [
                "project_id",
                "name"
              ],
              "title": "Phase",
              "type": "object",
              "x-examples": {},
              "x-stoplight": {
                "id": "2gsuxkayxq83f"
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Phases"
        ],
        "description": "Create a new phase",
        "operationId": "Post-phases",
        "summary": "Create a Phase",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-phase"
        }
      }
    },
    "/{connectionId}/phases/{phase}": {
      "parameters": [
        {
          "in": "path",
          "name": "phase",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "phase",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Phases"
        ],
        "description": "Deletes a phase",
        "operationId": "Delete-phases-phase_id",
        "summary": "Delete a Phase",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-phase"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "phase",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A project's phase",
                  "properties": {
                    "budget_minutes": {
                      "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                      "type": "integer"
                    },
                    "is_open": {
                      "description": "Whether or not the phase is archived",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the phase",
                      "type": "string"
                    },
                    "phase_category_id": {
                      "description": "Unique identifier of the phase category which the phase belongs to",
                      "type": "integer"
                    },
                    "phase_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "project_id": {
                      "description": "Unique identifier of the project which the phase belongs to",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "project_id",
                    "name"
                  ],
                  "title": "Phase",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "2gsuxkayxq83f"
                  }
                },
                {
                  "properties": {
                    "phase_category": {
                      "description": "Categorizes phases",
                      "properties": {
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the phase category",
                          "type": "string"
                        },
                        "phase_category_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        }
                      },
                      "title": "PhaseCategory",
                      "type": "object",
                      "x-examples": {},
                      "x-nullable": true,
                      "x-stoplight": {
                        "id": "1b463g7kp1qsa"
                      }
                    },
                    "project": {
                      "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                      "properties": {
                        "api_only": {
                          "description": "Whether or not the project is usable for tracking time only using a third party app.",
                          "type": "integer"
                        },
                        "client_id": {
                          "description": "Unique identifier of a client that the project belongs to",
                          "type": "integer"
                        },
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text description of the project",
                          "type": "string"
                        },
                        "hourly_rate": {
                          "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the project is archived",
                          "type": "integer"
                        },
                        "is_billable": {
                          "description": "Whether or not the project is billable per hour",
                          "type": "integer"
                        },
                        "is_public": {
                          "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The project's name",
                          "type": "string"
                        },
                        "project_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Project",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "aa7t79mq3m8d2"
                      }
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Phases"
        ],
        "description": "Gets a phase",
        "operationId": "Get-phases-phase_id",
        "summary": "Get a Phase",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-phase"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "phase",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "budget_minutes": {
                  "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project\n",
                  "type": "integer"
                },
                "is_open": {
                  "description": "Whether or not the phase is archived",
                  "type": "integer"
                },
                "name": {
                  "description": "The name of the phase",
                  "type": "string"
                },
                "phase_category_id": {
                  "description": "Unique identifier of the phase category which the phase belongs to",
                  "type": "integer"
                },
                "project_id": {
                  "description": "Unique identifier of the project which the phase belongs to",
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A project's phase",
                  "properties": {
                    "budget_minutes": {
                      "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                      "type": "integer"
                    },
                    "is_open": {
                      "description": "Whether or not the phase is archived",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the phase",
                      "type": "string"
                    },
                    "phase_category_id": {
                      "description": "Unique identifier of the phase category which the phase belongs to",
                      "type": "integer"
                    },
                    "phase_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "project_id": {
                      "description": "Unique identifier of the project which the phase belongs to",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "project_id",
                    "name"
                  ],
                  "title": "Phase",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "2gsuxkayxq83f"
                  }
                },
                {
                  "properties": {
                    "phase_category": {
                      "description": "Categorizes phases",
                      "properties": {
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the phase category",
                          "type": "string"
                        },
                        "phase_category_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        }
                      },
                      "title": "PhaseCategory",
                      "type": "object",
                      "x-examples": {},
                      "x-nullable": true,
                      "x-stoplight": {
                        "id": "1b463g7kp1qsa"
                      }
                    },
                    "project": {
                      "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                      "properties": {
                        "api_only": {
                          "description": "Whether or not the project is usable for tracking time only using a third party app.",
                          "type": "integer"
                        },
                        "client_id": {
                          "description": "Unique identifier of a client that the project belongs to",
                          "type": "integer"
                        },
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text description of the project",
                          "type": "string"
                        },
                        "hourly_rate": {
                          "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the project is archived",
                          "type": "integer"
                        },
                        "is_billable": {
                          "description": "Whether or not the project is billable per hour",
                          "type": "integer"
                        },
                        "is_public": {
                          "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The project's name",
                          "type": "string"
                        },
                        "project_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Project",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "aa7t79mq3m8d2"
                      }
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Phases"
        ],
        "description": "Updates a phase",
        "operationId": "Put-phases-phase_id",
        "summary": "Update a Phase",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-phase"
        }
      }
    },
    "/{connectionId}/projects": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "Get only public projects",
            "in": "query",
            "name": "public",
            "type": "boolean"
          },
          {
            "description": "Get only active projects",
            "in": "query",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "Get only billable projects",
            "in": "query",
            "name": "billable",
            "type": "boolean"
          },
          {
            "description": "A comma separated list of entities to load. Possible values: users,budget,phases,groups",
            "in": "query",
            "name": "load[]",
            "type": "string"
          },
          {
            "description": "Full text search",
            "in": "query",
            "name": "text",
            "type": "string"
          },
          {
            "description": "Get projects belonging to a client identified by this parameter",
            "in": "query",
            "name": "client_id",
            "type": "integer"
          },
          {
            "description": "Search project in which the user is in the team",
            "in": "query",
            "name": "user_id",
            "type": "integer"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "allOf": [
                      {
                        "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                        "properties": {
                          "api_only": {
                            "description": "Whether or not the project is usable for tracking time only using a third party app.",
                            "type": "integer"
                          },
                          "client_id": {
                            "description": "Unique identifier of a client that the project belongs to",
                            "type": "integer"
                          },
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "description": {
                            "description": "A text description of the project",
                            "type": "string"
                          },
                          "hourly_rate": {
                            "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                            "type": "string"
                          },
                          "is_active": {
                            "description": "Whether or not the project is archived",
                            "type": "integer"
                          },
                          "is_billable": {
                            "description": "Whether or not the project is billable per hour",
                            "type": "integer"
                          },
                          "is_public": {
                            "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The project's name",
                            "type": "string"
                          },
                          "project_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "title": "Project",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "aa7t79mq3m8d2"
                        }
                      },
                      {
                        "properties": {
                          "budget": {
                            "properties": {
                              "budget_id": {
                                "description": "Unique identifier of the budget",
                                "type": "integer"
                              },
                              "budget_minutes": {
                                "description": "The amount of minutes the budget represents",
                                "type": "integer"
                              },
                              "interval": {
                                "description": "Day of budget reset: 1 to 31 if the budget is monthly, 0 to 6 if the budget is weekly",
                                "maximum": 31,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "is_active": {
                                "description": "Whether or not the budget is active",
                                "maximum": 1,
                                "minimum": 0,
                                "type": "integer"
                              },
                              "period_end": {
                                "description": "Format: YYYY-MM-DD",
                                "type": "string",
                                "x-nullable": true
                              },
                              "period_start": {
                                "description": "Format: YYYY-MM-DD",
                                "type": "string",
                                "x-nullable": true
                              },
                              "project_id": {
                                "description": "Identifier of the project to which the budget belongs",
                                "type": "integer"
                              },
                              "recurrence": {
                                "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
                                "enum": [
                                  0,
                                  1,
                                  2
                                ],
                                "type": "integer"
                              }
                            },
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "h9p1bc7gu2rnb"
                            }
                          },
                          "groups": {
                            "items": {
                              "allOf": [
                                {
                                  "description": "A group of users",
                                  "properties": {
                                    "color": {
                                      "description": "The color used for reporting",
                                      "type": "string"
                                    },
                                    "group_id": {
                                      "description": "Unique identifier",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Name of the group",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Group",
                                  "type": "object",
                                  "x-examples": {},
                                  "x-stoplight": {
                                    "id": "gh9aq1pihfeit"
                                  }
                                }
                              ]
                            },
                            "type": "array",
                            "x-nullable": true
                          },
                          "phases": {
                            "items": {
                              "description": "A project's phase",
                              "properties": {
                                "budget_minutes": {
                                  "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                                  "type": "integer"
                                },
                                "is_open": {
                                  "description": "Whether or not the phase is archived",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "The name of the phase",
                                  "type": "string"
                                },
                                "phase_category_id": {
                                  "description": "Unique identifier of the phase category which the phase belongs to",
                                  "type": "integer"
                                },
                                "phase_id": {
                                  "description": "Unique identifier",
                                  "type": "integer"
                                },
                                "project_id": {
                                  "description": "Unique identifier of the project which the phase belongs to",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "project_id",
                                "name"
                              ],
                              "title": "Phase",
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "2gsuxkayxq83f"
                              }
                            },
                            "type": "array",
                            "x-nullable": true
                          },
                          "users": {
                            "items": {
                              "allOf": [
                                {
                                  "description": "User",
                                  "properties": {
                                    "apple_id": {
                                      "description": "Apple unique identifier of the user",
                                      "type": "string"
                                    },
                                    "created_date": {
                                      "description": "Date of creation of the user",
                                      "type": "string"
                                    },
                                    "department": {
                                      "description": "The user's department",
                                      "type": "string",
                                      "x-nullable": true
                                    },
                                    "email": {
                                      "description": "Email of the user, must be unique",
                                      "type": "string"
                                    },
                                    "enabled": {
                                      "description": "Tells if the user is archived or not",
                                      "type": "integer"
                                    },
                                    "google_id": {
                                      "description": "Google unique identifier of the user",
                                      "type": "string"
                                    },
                                    "group_id": {
                                      "description": "Unique identifier of the group to which the user belongs to",
                                      "type": "integer"
                                    },
                                    "is_admin": {
                                      "description": "Whether or not the user is an admin of the account",
                                      "type": "boolean"
                                    },
                                    "is_gm": {
                                      "description": "Whether or not the user is a group manager of his group",
                                      "type": "boolean"
                                    },
                                    "is_owner": {
                                      "description": "Whether or not the user is an owner of the account",
                                      "type": "boolean"
                                    },
                                    "job_title": {
                                      "description": "The job title of the user in the company",
                                      "type": "string"
                                    },
                                    "microsoft_id": {
                                      "description": "Microsoft unique identifier of the user",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the user",
                                      "type": "string"
                                    },
                                    "role": {
                                      "description": "The role of the user in the company.",
                                      "type": "string",
                                      "x-nullable": true
                                    },
                                    "settings_dailyemail_time": {
                                      "description": "Hour of the day in which the user receives the daily email",
                                      "type": "integer"
                                    },
                                    "settings_emails_automation_enabled": {
                                      "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                      "type": "integer"
                                    },
                                    "settings_emails_dailyrecap_enabled": {
                                      "description": "Whether or not the daily recap email is enabled fro the user",
                                      "type": "integer"
                                    },
                                    "settings_emails_developer_enabled": {
                                      "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                      "type": "integer"
                                    },
                                    "settings_emails_newsletter_enabled": {
                                      "description": "Whether or not the newsletter emails are enabled fro the user",
                                      "type": "integer"
                                    },
                                    "settings_emails_onboarding_enabled": {
                                      "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                      "type": "integer"
                                    },
                                    "settings_emails_status_day": {
                                      "description": "Day of the week in which the user receives the status email",
                                      "type": "integer"
                                    },
                                    "settings_emails_status_enabled": {
                                      "description": "Whether or not the email containing the status update is enabled fro the user",
                                      "type": "integer"
                                    },
                                    "settings_emails_status_time": {
                                      "description": "Hour of the day in which the user receives the status email",
                                      "type": "integer"
                                    },
                                    "settings_emails_system_enabled": {
                                      "description": "Whether or not the system emails are enabled fro the user",
                                      "type": "integer"
                                    },
                                    "settings_emails_timerssaved_enabled": {
                                      "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                      "type": "integer"
                                    },
                                    "user_hourly_cost": {
                                      "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                      "type": "string"
                                    },
                                    "user_hourly_rate": {
                                      "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                      "type": "string"
                                    },
                                    "user_id": {
                                      "description": "Unique identifier of the user",
                                      "type": "integer"
                                    },
                                    "working_time": {
                                      "description": "How many hours the user is usually working on a day",
                                      "type": "integer"
                                    },
                                    "workspace_access_level": {
                                      "description": "The role of the user in Timeneye: owner, admin or member",
                                      "type": "string"
                                    }
                                  },
                                  "title": "User",
                                  "type": "object",
                                  "x-examples": {},
                                  "x-stoplight": {
                                    "id": "8r0gf5rqoxwwv"
                                  }
                                },
                                {
                                  "properties": {
                                    "pivot": {
                                      "properties": {
                                        "budget_minutes": {
                                          "type": "integer"
                                        },
                                        "hourly_rate": {
                                          "type": "string"
                                        },
                                        "is_favorited": {
                                          "type": "boolean"
                                        },
                                        "is_member": {
                                          "type": "boolean"
                                        },
                                        "is_pm": {
                                          "type": "boolean"
                                        },
                                        "last_used": {
                                          "type": "string"
                                        },
                                        "last_used_phase_id": {
                                          "type": "integer"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "pivot"
                                  ],
                                  "type": "object"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Get a list of projects",
        "operationId": "Get-projects",
        "summary": "List Projects",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-projects"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "api_only": {
                  "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                  "type": "boolean"
                },
                "client_id": {
                  "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                  "type": "integer",
                  "x-nullable": true
                },
                "color": {
                  "description": "The color used for reporting",
                  "maxLength": 7,
                  "minLength": 7,
                  "type": "string"
                },
                "description": {
                  "description": "A text description of the project",
                  "type": "string"
                },
                "hourly_rate": {
                  "description": "The color used for reporting\n",
                  "type": "number",
                  "x-nullable": true
                },
                "is_billable": {
                  "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                  "type": "boolean"
                },
                "is_public": {
                  "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                  "type": "boolean"
                },
                "name": {
                  "description": "The project's name",
                  "minLength": 3,
                  "type": "string"
                }
              },
              "required": [
                "name",
                "color"
              ],
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
              "properties": {
                "api_only": {
                  "description": "Whether or not the project is usable for tracking time only using the apis.",
                  "type": "integer"
                },
                "client_id": {
                  "description": "Unique identifier of a client that the project belongs to",
                  "type": "integer"
                },
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "description": {
                  "description": "A text description of the project",
                  "type": "string"
                },
                "hourly_rate": {
                  "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                  "type": "string"
                },
                "is_active": {
                  "description": "Whether or not the project is archived",
                  "type": "integer"
                },
                "is_billable": {
                  "description": "Whether or not the project is billable per hour",
                  "type": "integer"
                },
                "is_public": {
                  "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                  "type": "integer"
                },
                "name": {
                  "description": "The project's name",
                  "type": "string"
                },
                "project_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                }
              },
              "required": [
                "name"
              ],
              "title": "Project",
              "type": "object",
              "x-examples": {},
              "x-stoplight": {
                "id": "aa7t79mq3m8d2"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Creates a project",
        "operationId": "Post-projects",
        "summary": "Create a Project",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-project"
        }
      }
    },
    "/{connectionId}/projects/{project}": {
      "parameters": [
        {
          "in": "path",
          "name": "project",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Deletes a project",
        "operationId": "Delete-projects-project_id",
        "summary": "Delete a Project",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-project"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                  "properties": {
                    "api_only": {
                      "description": "Whether or not the project is usable for tracking time only using a third party app.",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of a client that the project belongs to",
                      "type": "integer"
                    },
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "description": {
                      "description": "A text description of the project",
                      "type": "string"
                    },
                    "hourly_rate": {
                      "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the project is archived",
                      "type": "integer"
                    },
                    "is_billable": {
                      "description": "Whether or not the project is billable per hour",
                      "type": "integer"
                    },
                    "is_public": {
                      "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The project's name",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "title": "Project",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "aa7t79mq3m8d2"
                  }
                },
                {
                  "properties": {
                    "budget": {
                      "properties": {
                        "budget_id": {
                          "description": "Unique identifier of the budget",
                          "type": "integer"
                        },
                        "budget_minutes": {
                          "description": "The amount of minutes the budget represents",
                          "type": "integer"
                        },
                        "interval": {
                          "description": "Day of budget reset: 1 to 31 if the budget is monthly, 0 to 6 if the budget is weekly",
                          "maximum": 31,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "is_active": {
                          "description": "Whether or not the budget is active",
                          "maximum": 1,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "period_end": {
                          "description": "Format: YYYY-MM-DD",
                          "type": "string",
                          "x-nullable": true
                        },
                        "period_start": {
                          "description": "Format: YYYY-MM-DD",
                          "type": "string",
                          "x-nullable": true
                        },
                        "project_id": {
                          "description": "Identifier of the project to which the budget belongs",
                          "type": "integer"
                        },
                        "recurrence": {
                          "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "h9p1bc7gu2rnb"
                      }
                    },
                    "client": {
                      "description": "Represents a client of the company. A client can have multiple projects.",
                      "properties": {
                        "client_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "color": {
                          "description": "Color used in reports",
                          "maxLength": 7,
                          "minLength": 7,
                          "pattern": "#[0-9A-F]{6}",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the client is archived",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the client",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Client",
                      "type": "object",
                      "x-stoplight": {
                        "id": "o6w3tpvmilemj"
                      }
                    },
                    "groups": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A group of users",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the group",
                                "type": "string"
                              }
                            },
                            "title": "Group",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "gh9aq1pihfeit"
                            }
                          }
                        ]
                      },
                      "type": "array",
                      "x-nullable": true
                    },
                    "phases": {
                      "items": {
                        "description": "A project's phase",
                        "properties": {
                          "budget_minutes": {
                            "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                            "type": "integer"
                          },
                          "is_open": {
                            "description": "Whether or not the phase is archived",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the phase",
                            "type": "string"
                          },
                          "phase_category_id": {
                            "description": "Unique identifier of the phase category which the phase belongs to",
                            "type": "integer"
                          },
                          "phase_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "project_id": {
                            "description": "Unique identifier of the project which the phase belongs to",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "project_id",
                          "name"
                        ],
                        "title": "Phase",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "2gsuxkayxq83f"
                        }
                      },
                      "type": "array"
                    },
                    "users": {
                      "items": {
                        "allOf": [
                          {
                            "description": "User",
                            "properties": {
                              "apple_id": {
                                "description": "Apple unique identifier of the user",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Date of creation of the user",
                                "type": "string"
                              },
                              "department": {
                                "description": "The user's department",
                                "type": "string",
                                "x-nullable": true
                              },
                              "email": {
                                "description": "Email of the user, must be unique",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Tells if the user is archived or not",
                                "type": "integer"
                              },
                              "google_id": {
                                "description": "Google unique identifier of the user",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Unique identifier of the group to which the user belongs to",
                                "type": "integer"
                              },
                              "is_admin": {
                                "description": "Whether or not the user is an admin of the account",
                                "type": "boolean"
                              },
                              "is_gm": {
                                "description": "Whether or not the user is a group manager of his group",
                                "type": "boolean"
                              },
                              "is_owner": {
                                "description": "Whether or not the user is an owner of the account",
                                "type": "boolean"
                              },
                              "job_title": {
                                "description": "The job title of the user in the company",
                                "type": "string"
                              },
                              "microsoft_id": {
                                "description": "Microsoft unique identifier of the user",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user",
                                "type": "string"
                              },
                              "role": {
                                "description": "The role of the user in the company.",
                                "type": "string",
                                "x-nullable": true
                              },
                              "settings_dailyemail_time": {
                                "description": "Hour of the day in which the user receives the daily email",
                                "type": "integer"
                              },
                              "settings_emails_automation_enabled": {
                                "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                "type": "integer"
                              },
                              "settings_emails_dailyrecap_enabled": {
                                "description": "Whether or not the daily recap email is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_developer_enabled": {
                                "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_newsletter_enabled": {
                                "description": "Whether or not the newsletter emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_onboarding_enabled": {
                                "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                "type": "integer"
                              },
                              "settings_emails_status_day": {
                                "description": "Day of the week in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_status_enabled": {
                                "description": "Whether or not the email containing the status update is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_status_time": {
                                "description": "Hour of the day in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_system_enabled": {
                                "description": "Whether or not the system emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_timerssaved_enabled": {
                                "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                "type": "integer"
                              },
                              "user_hourly_cost": {
                                "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_hourly_rate": {
                                "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Unique identifier of the user",
                                "type": "integer"
                              },
                              "working_time": {
                                "description": "How many hours the user is usually working on a day",
                                "type": "integer"
                              },
                              "workspace_access_level": {
                                "description": "The role of the user in Timeneye: owner, admin or member",
                                "type": "string"
                              }
                            },
                            "title": "User",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "8r0gf5rqoxwwv"
                            }
                          },
                          {
                            "properties": {
                              "pivot": {
                                "properties": {
                                  "budget_minutes": {
                                    "type": "integer"
                                  },
                                  "hourly_rate": {
                                    "type": "number"
                                  },
                                  "is_favorited": {
                                    "type": "boolean"
                                  },
                                  "is_member": {
                                    "type": "boolean"
                                  },
                                  "is_pm": {
                                    "type": "boolean"
                                  },
                                  "last_used": {
                                    "type": "string"
                                  },
                                  "last_used_phase_id": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "pivot"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Gets a project",
        "operationId": "Get-projects-project_id",
        "summary": "Get a Project",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-project"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "api_only": {
                  "description": "Whether or not the project is usable for tracking time only using the apis.",
                  "type": "boolean"
                },
                "client_id": {
                  "description": "Unique identifier of a client that the project belongs to",
                  "type": "integer",
                  "x-nullable": true
                },
                "color": {
                  "description": "The color used for reporting",
                  "maxLength": 7,
                  "minLength": 7,
                  "type": "string"
                },
                "description": {
                  "description": "A text description of the project",
                  "type": "string"
                },
                "hourly_rate": {
                  "description": "The color used for reporting\n",
                  "type": "number",
                  "x-nullable": true
                },
                "is_billable": {
                  "description": "Whether or not the project is billable per hour",
                  "type": "boolean"
                },
                "is_public": {
                  "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                  "type": "boolean"
                },
                "name": {
                  "description": "The project's name",
                  "minLength": 3,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                  "properties": {
                    "api_only": {
                      "description": "Whether or not the project is usable for tracking time only using a third party app.",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of a client that the project belongs to",
                      "type": "integer"
                    },
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "description": {
                      "description": "A text description of the project",
                      "type": "string"
                    },
                    "hourly_rate": {
                      "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the project is archived",
                      "type": "integer"
                    },
                    "is_billable": {
                      "description": "Whether or not the project is billable per hour",
                      "type": "integer"
                    },
                    "is_public": {
                      "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The project's name",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "title": "Project",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "aa7t79mq3m8d2"
                  }
                },
                {
                  "properties": {
                    "budget": {
                      "properties": {
                        "budget_id": {
                          "description": "Unique identifier of the budget",
                          "type": "integer"
                        },
                        "budget_minutes": {
                          "description": "The amount of minutes the budget represents",
                          "type": "integer"
                        },
                        "interval": {
                          "description": "Day of budget reset: 1 to 31 if the budget is monthly, 0 to 6 if the budget is weekly",
                          "maximum": 31,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "is_active": {
                          "description": "Whether or not the budget is active",
                          "maximum": 1,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "period_end": {
                          "description": "Format: YYYY-MM-DD",
                          "type": "string",
                          "x-nullable": true
                        },
                        "period_start": {
                          "description": "Format: YYYY-MM-DD",
                          "type": "string",
                          "x-nullable": true
                        },
                        "project_id": {
                          "description": "Identifier of the project to which the budget belongs",
                          "type": "integer"
                        },
                        "recurrence": {
                          "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
                          "enum": [
                            0,
                            1,
                            2
                          ],
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "h9p1bc7gu2rnb"
                      }
                    },
                    "client": {
                      "description": "Represents a client of the company. A client can have multiple projects.",
                      "properties": {
                        "client_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "color": {
                          "description": "Color used in reports",
                          "maxLength": 7,
                          "minLength": 7,
                          "pattern": "#[0-9A-F]{6}",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the client is archived",
                          "type": "boolean"
                        },
                        "name": {
                          "description": "Name of the client",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Client",
                      "type": "object",
                      "x-stoplight": {
                        "id": "o6w3tpvmilemj"
                      }
                    },
                    "groups": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A group of users",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "name": {
                                "description": "Name of the group",
                                "type": "string"
                              }
                            },
                            "title": "Group",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "gh9aq1pihfeit"
                            }
                          }
                        ]
                      },
                      "type": "array",
                      "x-nullable": true
                    },
                    "phases": {
                      "items": {
                        "description": "A project's phase",
                        "properties": {
                          "budget_minutes": {
                            "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                            "type": "integer"
                          },
                          "is_open": {
                            "description": "Whether or not the phase is archived",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the phase",
                            "type": "string"
                          },
                          "phase_category_id": {
                            "description": "Unique identifier of the phase category which the phase belongs to",
                            "type": "integer"
                          },
                          "phase_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "project_id": {
                            "description": "Unique identifier of the project which the phase belongs to",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "project_id",
                          "name"
                        ],
                        "title": "Phase",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "2gsuxkayxq83f"
                        }
                      },
                      "type": "array"
                    },
                    "users": {
                      "items": {
                        "allOf": [
                          {
                            "description": "User",
                            "properties": {
                              "apple_id": {
                                "description": "Apple unique identifier of the user",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Date of creation of the user",
                                "type": "string"
                              },
                              "department": {
                                "description": "The user's department",
                                "type": "string",
                                "x-nullable": true
                              },
                              "email": {
                                "description": "Email of the user, must be unique",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Tells if the user is archived or not",
                                "type": "integer"
                              },
                              "google_id": {
                                "description": "Google unique identifier of the user",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Unique identifier of the group to which the user belongs to",
                                "type": "integer"
                              },
                              "is_admin": {
                                "description": "Whether or not the user is an admin of the account",
                                "type": "boolean"
                              },
                              "is_gm": {
                                "description": "Whether or not the user is a group manager of his group",
                                "type": "boolean"
                              },
                              "is_owner": {
                                "description": "Whether or not the user is an owner of the account",
                                "type": "boolean"
                              },
                              "job_title": {
                                "description": "The job title of the user in the company",
                                "type": "string"
                              },
                              "microsoft_id": {
                                "description": "Microsoft unique identifier of the user",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user",
                                "type": "string"
                              },
                              "role": {
                                "description": "The role of the user in the company.",
                                "type": "string",
                                "x-nullable": true
                              },
                              "settings_dailyemail_time": {
                                "description": "Hour of the day in which the user receives the daily email",
                                "type": "integer"
                              },
                              "settings_emails_automation_enabled": {
                                "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                "type": "integer"
                              },
                              "settings_emails_dailyrecap_enabled": {
                                "description": "Whether or not the daily recap email is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_developer_enabled": {
                                "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_newsletter_enabled": {
                                "description": "Whether or not the newsletter emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_onboarding_enabled": {
                                "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                "type": "integer"
                              },
                              "settings_emails_status_day": {
                                "description": "Day of the week in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_status_enabled": {
                                "description": "Whether or not the email containing the status update is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_status_time": {
                                "description": "Hour of the day in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_system_enabled": {
                                "description": "Whether or not the system emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_timerssaved_enabled": {
                                "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                "type": "integer"
                              },
                              "user_hourly_cost": {
                                "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_hourly_rate": {
                                "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Unique identifier of the user",
                                "type": "integer"
                              },
                              "working_time": {
                                "description": "How many hours the user is usually working on a day",
                                "type": "integer"
                              },
                              "workspace_access_level": {
                                "description": "The role of the user in Timeneye: owner, admin or member",
                                "type": "string"
                              }
                            },
                            "title": "User",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "8r0gf5rqoxwwv"
                            }
                          },
                          {
                            "properties": {
                              "pivot": {
                                "properties": {
                                  "budget_minutes": {
                                    "type": "integer"
                                  },
                                  "hourly_rate": {
                                    "type": "number"
                                  },
                                  "is_favorited": {
                                    "type": "boolean"
                                  },
                                  "is_member": {
                                    "type": "boolean"
                                  },
                                  "is_pm": {
                                    "type": "boolean"
                                  },
                                  "last_used": {
                                    "type": "string"
                                  },
                                  "last_used_phase_id": {
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "pivot"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "Updates a project",
        "operationId": "Put-projects-project_id",
        "summary": "Update a Project",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-project"
        }
      }
    },
    "/{connectionId}/projects/{project}/tag-lists/{tag_list}": {
      "parameters": [
        {
          "in": "path",
          "name": "project",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "tag_list",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "tag_list",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Projects",
          "TagLists"
        ],
        "description": "Remove project-tag list relationship",
        "operationId": "Delete-projects-project_id-tag-lists-tag_list_id",
        "summary": "Delete Project-Tag List relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-project-tag-list-relationship"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "tag_list",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "budget": {
                  "properties": {
                    "budget_amount": {
                      "description": "The budgeted amount allocated to this tag list on this project",
                      "minimum": 0,
                      "type": "number",
                      "x-nullable": true
                    },
                    "budget_minutes": {
                      "description": "The budgeted minutes allocated to this tag list on this project",
                      "minimum": 0,
                      "type": "integer",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "budget_amount": {
                  "description": "The budgeted amount allocated to this tag list on this project",
                  "minimum": 0,
                  "type": "number",
                  "x-deprecated": true,
                  "x-nullable": true
                },
                "budget_minutes": {
                  "description": "The budgeted minutes allocated to this tag list on this project",
                  "minimum": 0,
                  "type": "integer",
                  "x-deprecated": true,
                  "x-nullable": true
                },
                "required": {
                  "description": "Whether or not the tag is required for time entries of this project",
                  "type": "boolean",
                  "x-nullable": true
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                  "properties": {
                    "api_only": {
                      "description": "Whether or not the project is usable for tracking time only using a third party app.",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of a client that the project belongs to",
                      "type": "integer"
                    },
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "description": {
                      "description": "A text description of the project",
                      "type": "string"
                    },
                    "hourly_rate": {
                      "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the project is archived",
                      "type": "integer"
                    },
                    "is_billable": {
                      "description": "Whether or not the project is billable per hour",
                      "type": "integer"
                    },
                    "is_public": {
                      "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The project's name",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "title": "Project",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "aa7t79mq3m8d2"
                  }
                },
                {
                  "properties": {
                    "tag_lists": {
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag list is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag list",
                                "type": "string"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "text_color": {
                                "description": "The color of the text used for reporting",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "color",
                              "text_color"
                            ],
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "z8r3lwt40nihp"
                            }
                          },
                          {
                            "properties": {
                              "pivot": {
                                "properties": {
                                  "budget_minutes": {
                                    "description": "The budgeted minutes allocated to this tag list on this project",
                                    "minimum": 0,
                                    "type": "integer",
                                    "x-nullable": true
                                  },
                                  "required": {
                                    "description": "Whether or not the tag is required for time entries of this project",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "pivot"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Projects",
          "TagLists"
        ],
        "description": "Create Project-Tag list relationship",
        "operationId": "Post-projects-project_id-tag-lists-tag_list_id",
        "summary": "Create Project-Tag List relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-project-tag-list-relationship"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "tag_list",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "budget": {
                  "properties": {
                    "budget_amount": {
                      "description": "The budgeted amount allocated to this tag list on this project",
                      "minimum": 0,
                      "type": "number",
                      "x-nullable": true
                    },
                    "budget_minutes": {
                      "description": "The budgeted minutes allocated to this list tag on this project",
                      "minimum": 0,
                      "type": "integer",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "budget_amount": {
                  "description": "The budgeted amount allocated to this tag list on this project",
                  "minimum": 0,
                  "type": "number",
                  "x-deprecated": true,
                  "x-nullable": true
                },
                "budget_minutes": {
                  "description": "The budgeted minutes allocated to this tag list on this project",
                  "minimum": 0,
                  "type": "integer",
                  "x-deprecated": true,
                  "x-nullable": true
                },
                "required": {
                  "type": "boolean",
                  "x-nullable": true
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                  "properties": {
                    "api_only": {
                      "description": "Whether or not the project is usable for tracking time only using a third party app.",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of a client that the project belongs to",
                      "type": "integer"
                    },
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "description": {
                      "description": "A text description of the project",
                      "type": "string"
                    },
                    "hourly_rate": {
                      "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the project is archived",
                      "type": "integer"
                    },
                    "is_billable": {
                      "description": "Whether or not the project is billable per hour",
                      "type": "integer"
                    },
                    "is_public": {
                      "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The project's name",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "title": "Project",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "aa7t79mq3m8d2"
                  }
                },
                {
                  "properties": {
                    "tag_lists": {
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag list is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag list",
                                "type": "string"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "text_color": {
                                "description": "The color of the text used for reporting",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "color",
                              "text_color"
                            ],
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "z8r3lwt40nihp"
                            }
                          },
                          {
                            "properties": {
                              "pivot": {
                                "properties": {
                                  "budget_minutes": {
                                    "minimum": 0,
                                    "type": "integer",
                                    "x-nullable": true
                                  },
                                  "required": {
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "pivot"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Projects",
          "TagLists"
        ],
        "description": "Update project-tag list relationship",
        "operationId": "Put-projects-project_id-tag-lists-tag_list_id",
        "summary": "Update Project-Tag List relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-project-tag-list-relationship"
        }
      }
    },
    "/{connectionId}/projects/{project}/tags/{tag}": {
      "parameters": [
        {
          "in": "path",
          "name": "project",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "tag",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "tag",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Projects",
          "TagLists"
        ],
        "description": "Remove project-tag relationship",
        "operationId": "Delete-projects-project_id-tags-tag_id",
        "summary": "Delete Project-Tag relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-project-tag-relationship"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "tag",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "budget": {
                  "properties": {
                    "budget_amount": {
                      "description": "The budgeted amount allocated to this tag on this project",
                      "minimum": 0,
                      "type": "number",
                      "x-nullable": true
                    },
                    "budget_minutes": {
                      "description": "The budgeted minutes allocated to this tag on this project",
                      "minimum": 0,
                      "type": "integer",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "budget_amount": {
                  "description": "The budgeted amount allocated to this tag on this project",
                  "minimum": 0,
                  "type": "number",
                  "x-deprecated": true,
                  "x-nullable": true
                },
                "budget_minutes": {
                  "description": "The budgeted minutes allocated to this tag on this project",
                  "minimum": 0,
                  "type": "integer",
                  "x-deprecated": true,
                  "x-nullable": true
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                  "properties": {
                    "api_only": {
                      "description": "Whether or not the project is usable for tracking time only using a third party app.",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of a client that the project belongs to",
                      "type": "integer"
                    },
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "description": {
                      "description": "A text description of the project",
                      "type": "string"
                    },
                    "hourly_rate": {
                      "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the project is archived",
                      "type": "integer"
                    },
                    "is_billable": {
                      "description": "Whether or not the project is billable per hour",
                      "type": "integer"
                    },
                    "is_public": {
                      "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The project's name",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "title": "Project",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "aa7t79mq3m8d2"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A tag",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag",
                                "type": "string"
                              },
                              "tag_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier of the tag list which the tag belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "tag_list_id",
                              "name"
                            ],
                            "title": "Tag",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "iwk9zguiajgif"
                            }
                          },
                          {
                            "properties": {
                              "pivot": {
                                "properties": {
                                  "budget_minutes": {
                                    "description": "The budgeted minutes allocated to this tag on this project",
                                    "minimum": 0,
                                    "type": "integer",
                                    "x-nullable": true
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "pivot"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Projects",
          "TagLists"
        ],
        "description": "Create Project-Tag list relationship",
        "operationId": "Post-projects-project_id-tag-tag_id",
        "summary": "Create Project-Tag relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-project-tag-relationship"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "tag",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "budget": {
                  "properties": {
                    "budget_amount": {
                      "description": "The budgeted amount allocated to this tag on this project",
                      "minimum": 0,
                      "type": "number",
                      "x-nullable": true
                    },
                    "budget_minutes": {
                      "description": "The budgeted minutes allocated to this tag on this project",
                      "minimum": 0,
                      "type": "integer",
                      "x-nullable": true
                    }
                  },
                  "type": "object"
                },
                "budget_amount": {
                  "description": "The budgeted amount allocated to this tag on this project",
                  "minimum": 0,
                  "type": "number",
                  "x-deprecated": true,
                  "x-nullable": true
                },
                "budget_minutes": {
                  "description": "The budgeted minutes allocated to this tag on this project",
                  "minimum": 0,
                  "type": "integer",
                  "x-deprecated": true,
                  "x-nullable": true
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                  "properties": {
                    "api_only": {
                      "description": "Whether or not the project is usable for tracking time only using a third party app.",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of a client that the project belongs to",
                      "type": "integer"
                    },
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "description": {
                      "description": "A text description of the project",
                      "type": "string"
                    },
                    "hourly_rate": {
                      "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the project is archived",
                      "type": "integer"
                    },
                    "is_billable": {
                      "description": "Whether or not the project is billable per hour",
                      "type": "integer"
                    },
                    "is_public": {
                      "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The project's name",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "title": "Project",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "aa7t79mq3m8d2"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A tag",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag",
                                "type": "string"
                              },
                              "tag_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier of the tag list which the tag belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "tag_list_id",
                              "name"
                            ],
                            "title": "Tag",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "iwk9zguiajgif"
                            }
                          },
                          {
                            "properties": {
                              "pivot": {
                                "properties": {
                                  "budget_minutes": {
                                    "description": "The budgeted minutes allocated to this tag on this project",
                                    "minimum": 0,
                                    "type": "integer",
                                    "x-nullable": true
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "pivot"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Projects",
          "TagLists"
        ],
        "description": "Update project-tag list relationship",
        "operationId": "Put-projects-project_id-tag-tag_id",
        "summary": "Update Project-Tag relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-project-tag-relationship"
        }
      }
    },
    "/{connectionId}/projects/{project}/users/{user}": {
      "parameters": [
        {
          "in": "path",
          "name": "project",
          "required": true,
          "type": "string"
        },
        {
          "in": "path",
          "name": "user",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Projects",
          "Users"
        ],
        "description": "Removed a user from a project",
        "operationId": "Delete-projects-users",
        "summary": "Delete Project-User relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-project-user-relationship"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "budget_minutes": {
                  "description": "The minutes budgeted for this user in this project",
                  "minimum": 0,
                  "type": "integer"
                },
                "hourly_rate": {
                  "description": "The hourly rate for this user in this project. Takes precedence over the hourly rate at project level and hourly rate at account level",
                  "minimum": 0,
                  "type": "number"
                },
                "is_favorited": {
                  "description": "Whether or not the project is favorited by the user",
                  "type": "boolean"
                },
                "is_pm": {
                  "description": "Whether or not the user is project manager of the project",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                  "properties": {
                    "api_only": {
                      "description": "Whether or not the project is usable for tracking time only using a third party app.",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of a client that the project belongs to",
                      "type": "integer"
                    },
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "description": {
                      "description": "A text description of the project",
                      "type": "string"
                    },
                    "hourly_rate": {
                      "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the project is archived",
                      "type": "integer"
                    },
                    "is_billable": {
                      "description": "Whether or not the project is billable per hour",
                      "type": "integer"
                    },
                    "is_public": {
                      "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The project's name",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "title": "Project",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "aa7t79mq3m8d2"
                  }
                },
                {
                  "properties": {
                    "users": {
                      "items": {
                        "allOf": [
                          {
                            "description": "User",
                            "properties": {
                              "apple_id": {
                                "description": "Apple unique identifier of the user",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Date of creation of the user",
                                "type": "string"
                              },
                              "department": {
                                "description": "The user's department",
                                "type": "string",
                                "x-nullable": true
                              },
                              "email": {
                                "description": "Email of the user, must be unique",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Tells if the user is archived or not",
                                "type": "integer"
                              },
                              "google_id": {
                                "description": "Google unique identifier of the user",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Unique identifier of the group to which the user belongs to",
                                "type": "integer"
                              },
                              "is_admin": {
                                "description": "Whether or not the user is an admin of the account",
                                "type": "boolean"
                              },
                              "is_gm": {
                                "description": "Whether or not the user is a group manager of his group",
                                "type": "boolean"
                              },
                              "is_owner": {
                                "description": "Whether or not the user is an owner of the account",
                                "type": "boolean"
                              },
                              "job_title": {
                                "description": "The job title of the user in the company",
                                "type": "string"
                              },
                              "microsoft_id": {
                                "description": "Microsoft unique identifier of the user",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user",
                                "type": "string"
                              },
                              "role": {
                                "description": "The role of the user in the company.",
                                "type": "string",
                                "x-nullable": true
                              },
                              "settings_dailyemail_time": {
                                "description": "Hour of the day in which the user receives the daily email",
                                "type": "integer"
                              },
                              "settings_emails_automation_enabled": {
                                "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                "type": "integer"
                              },
                              "settings_emails_dailyrecap_enabled": {
                                "description": "Whether or not the daily recap email is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_developer_enabled": {
                                "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_newsletter_enabled": {
                                "description": "Whether or not the newsletter emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_onboarding_enabled": {
                                "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                "type": "integer"
                              },
                              "settings_emails_status_day": {
                                "description": "Day of the week in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_status_enabled": {
                                "description": "Whether or not the email containing the status update is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_status_time": {
                                "description": "Hour of the day in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_system_enabled": {
                                "description": "Whether or not the system emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_timerssaved_enabled": {
                                "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                "type": "integer"
                              },
                              "user_hourly_cost": {
                                "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_hourly_rate": {
                                "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Unique identifier of the user",
                                "type": "integer"
                              },
                              "working_time": {
                                "description": "How many hours the user is usually working on a day",
                                "type": "integer"
                              },
                              "workspace_access_level": {
                                "description": "The role of the user in Timeneye: owner, admin or member",
                                "type": "string"
                              }
                            },
                            "title": "User",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "8r0gf5rqoxwwv"
                            }
                          },
                          {
                            "properties": {
                              "pivot": {
                                "properties": {
                                  "budget_minutes": {
                                    "description": "The minutes budgeted for this user in this project",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "hourly_rate": {
                                    "description": "The hourly rate for this user in this project. Takes precedence over the hourly rate at project level and hourly rate at account level",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "is_favorited": {
                                    "description": "Whether or not the project is favorited by the user",
                                    "type": "boolean"
                                  },
                                  "is_pm": {
                                    "description": "Whether or not the user is project manager of the project",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "pivot"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Projects",
          "Users"
        ],
        "description": "Attach a user to a project",
        "operationId": "Post-projects-users",
        "summary": "Create Project-User relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-project-user-relationship"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "project",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "budget_minutes": {
                  "description": "The minutes budgeted for this user in this project",
                  "minimum": 0,
                  "type": "integer"
                },
                "hourly_rate": {
                  "description": "The hourly rate for this user in this project. Takes precedence over the hourly rate at project level and hourly rate at account level",
                  "minimum": 0,
                  "type": "number"
                },
                "is_favorited": {
                  "description": "Whether or not the project is favorited by the user",
                  "type": "boolean"
                },
                "is_pm": {
                  "description": "Whether or not the user is project manager of the project",
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                  "properties": {
                    "api_only": {
                      "description": "Whether or not the project is usable for tracking time only using a third party app.",
                      "type": "integer"
                    },
                    "client_id": {
                      "description": "Unique identifier of a client that the project belongs to",
                      "type": "integer"
                    },
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "description": {
                      "description": "A text description of the project",
                      "type": "string"
                    },
                    "hourly_rate": {
                      "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the project is archived",
                      "type": "integer"
                    },
                    "is_billable": {
                      "description": "Whether or not the project is billable per hour",
                      "type": "integer"
                    },
                    "is_public": {
                      "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The project's name",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "title": "Project",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "aa7t79mq3m8d2"
                  }
                },
                {
                  "properties": {
                    "users": {
                      "items": {
                        "allOf": [
                          {
                            "description": "User",
                            "properties": {
                              "apple_id": {
                                "description": "Apple unique identifier of the user",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Date of creation of the user",
                                "type": "string"
                              },
                              "department": {
                                "description": "The user's department",
                                "type": "string",
                                "x-nullable": true
                              },
                              "email": {
                                "description": "Email of the user, must be unique",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Tells if the user is archived or not",
                                "type": "integer"
                              },
                              "google_id": {
                                "description": "Google unique identifier of the user",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Unique identifier of the group to which the user belongs to",
                                "type": "integer"
                              },
                              "is_admin": {
                                "description": "Whether or not the user is an admin of the account",
                                "type": "boolean"
                              },
                              "is_gm": {
                                "description": "Whether or not the user is a group manager of his group",
                                "type": "boolean"
                              },
                              "is_owner": {
                                "description": "Whether or not the user is an owner of the account",
                                "type": "boolean"
                              },
                              "job_title": {
                                "description": "The job title of the user in the company",
                                "type": "string"
                              },
                              "microsoft_id": {
                                "description": "Microsoft unique identifier of the user",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user",
                                "type": "string"
                              },
                              "role": {
                                "description": "The role of the user in the company.",
                                "type": "string",
                                "x-nullable": true
                              },
                              "settings_dailyemail_time": {
                                "description": "Hour of the day in which the user receives the daily email",
                                "type": "integer"
                              },
                              "settings_emails_automation_enabled": {
                                "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                "type": "integer"
                              },
                              "settings_emails_dailyrecap_enabled": {
                                "description": "Whether or not the daily recap email is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_developer_enabled": {
                                "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_newsletter_enabled": {
                                "description": "Whether or not the newsletter emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_onboarding_enabled": {
                                "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                "type": "integer"
                              },
                              "settings_emails_status_day": {
                                "description": "Day of the week in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_status_enabled": {
                                "description": "Whether or not the email containing the status update is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_status_time": {
                                "description": "Hour of the day in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_system_enabled": {
                                "description": "Whether or not the system emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_timerssaved_enabled": {
                                "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                "type": "integer"
                              },
                              "user_hourly_cost": {
                                "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_hourly_rate": {
                                "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Unique identifier of the user",
                                "type": "integer"
                              },
                              "working_time": {
                                "description": "How many hours the user is usually working on a day",
                                "type": "integer"
                              },
                              "workspace_access_level": {
                                "description": "The role of the user in Timeneye: owner, admin or member",
                                "type": "string"
                              }
                            },
                            "title": "User",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "8r0gf5rqoxwwv"
                            }
                          },
                          {
                            "properties": {
                              "pivot": {
                                "properties": {
                                  "budget_minutes": {
                                    "description": "The minutes budgeted for this user in this project",
                                    "minimum": 0,
                                    "type": "integer"
                                  },
                                  "hourly_rate": {
                                    "description": "The hourly rate for this user in this project. Takes precedence over the hourly rate at project level and hourly rate at account level",
                                    "minimum": 0,
                                    "type": "number"
                                  },
                                  "is_favorited": {
                                    "description": "Whether or not the project is favorited by the user",
                                    "type": "boolean"
                                  },
                                  "is_pm": {
                                    "description": "Whether or not the user is project manager of the project",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "required": [
                              "pivot"
                            ],
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Projects",
          "Users"
        ],
        "description": "Updates the relationship between a project and a user",
        "operationId": "Put-projects-users",
        "summary": "Update Project-User relationship",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-project-user-relationship"
        }
      }
    },
    "/{connectionId}/tag-lists": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "description": "Get tag lists belonging to a project",
            "in": "query",
            "name": "project_id",
            "type": "integer"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "allOf": [
                      {
                        "properties": {
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "is_active": {
                            "description": "Whether or not the tag list is archived",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the tag list",
                            "type": "string"
                          },
                          "tag_list_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "text_color": {
                            "description": "The color of the text used for reporting",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "color",
                          "text_color"
                        ],
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "z8r3lwt40nihp"
                        }
                      },
                      {
                        "properties": {
                          "tags": {
                            "items": {
                              "description": "A tag",
                              "properties": {
                                "color": {
                                  "description": "The color used for reporting",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Whether or not the tag is archived",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "The name of the tag",
                                  "type": "string"
                                },
                                "tag_id": {
                                  "description": "Unique identifier",
                                  "type": "integer"
                                },
                                "tag_list_id": {
                                  "description": "Unique identifier of the tag list which the tag belongs to",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "tag_list_id",
                                "name"
                              ],
                              "title": "Tag",
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "iwk9zguiajgif"
                              }
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "TagLists"
        ],
        "description": "Get tag lists list",
        "operationId": "List-tag-lists",
        "summary": "List Tag Lists",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-tag-lists"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "maxLength": 7,
                  "minLength": 7,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the tag list",
                  "type": "string"
                },
                "text_color": {
                  "description": "The color of the text used for reporting",
                  "maxLength": 7,
                  "minLength": 4,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the tag list is archived",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the tag list",
                      "type": "string"
                    },
                    "tag_list_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "text_color": {
                      "description": "The color of the text used for reporting",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "color",
                    "text_color"
                  ],
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "z8r3lwt40nihp"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "description": "A tag",
                        "properties": {
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "is_active": {
                            "description": "Whether or not the tag is archived",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the tag",
                            "type": "string"
                          },
                          "tag_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "tag_list_id": {
                            "description": "Unique identifier of the tag list which the tag belongs to",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "tag_list_id",
                          "name"
                        ],
                        "title": "Tag",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "iwk9zguiajgif"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "TagLists"
        ],
        "description": "Creates a tag list",
        "operationId": "Post-tag-list",
        "summary": "Create a Tag List",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-tag-list"
        }
      }
    },
    "/{connectionId}/tag-lists/{tag_list}": {
      "parameters": [
        {
          "in": "path",
          "name": "tag_list",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "tag_list",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "TagLists"
        ],
        "description": "Deletes a tag list",
        "operationId": "Delete-tag-lists-tag_list_id",
        "summary": "Delete a Tag List",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-tag-list"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "tag_list",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the tag list is archived",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the tag list",
                      "type": "string"
                    },
                    "tag_list_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "text_color": {
                      "description": "The color of the text used for reporting",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "color",
                    "text_color"
                  ],
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "z8r3lwt40nihp"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "description": "A tag",
                        "properties": {
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "is_active": {
                            "description": "Whether or not the tag is archived",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the tag",
                            "type": "string"
                          },
                          "tag_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "tag_list_id": {
                            "description": "Unique identifier of the tag list which the tag belongs to",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "tag_list_id",
                          "name"
                        ],
                        "title": "Tag",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "iwk9zguiajgif"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "TagLists"
        ],
        "description": "Gets a single tag list",
        "operationId": "Get-tag-lists-tag_list_id",
        "summary": "Get a Tag List",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-tag-list"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "tag_list",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "maxLength": 7,
                  "minLength": 7,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the tag list",
                  "type": "string"
                },
                "text_color": {
                  "description": "The color of the text used for reporting",
                  "maxLength": 7,
                  "minLength": 4,
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the tag list is archived",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the tag list",
                      "type": "string"
                    },
                    "tag_list_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "text_color": {
                      "description": "The color of the text used for reporting",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "color",
                    "text_color"
                  ],
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "z8r3lwt40nihp"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "description": "A tag",
                        "properties": {
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "is_active": {
                            "description": "Whether or not the tag is archived",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the tag",
                            "type": "string"
                          },
                          "tag_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "tag_list_id": {
                            "description": "Unique identifier of the tag list which the tag belongs to",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "tag_list_id",
                          "name"
                        ],
                        "title": "Tag",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "iwk9zguiajgif"
                        }
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "TagLists"
        ],
        "description": "Updates a tag list",
        "operationId": "Put-tag-lists-tag_list_id",
        "summary": "Update a Tag List",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-tag-list"
        }
      }
    },
    "/{connectionId}/tags": {
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "Text search in name",
            "in": "query",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Id of a TagList",
            "in": "query",
            "name": "tag_list_id",
            "type": "integer"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "description": "A tag",
                    "properties": {
                      "color": {
                        "description": "The color used for reporting",
                        "type": "string"
                      },
                      "is_active": {
                        "description": "Whether or not the tag is archived",
                        "type": "integer"
                      },
                      "name": {
                        "description": "The name of the tag",
                        "type": "string"
                      },
                      "tag_id": {
                        "description": "Unique identifier",
                        "type": "integer"
                      },
                      "tag_list_id": {
                        "description": "Unique identifier of the tag list which the tag belongs to",
                        "type": "integer"
                      }
                    },
                    "required": [
                      "tag_list_id",
                      "name"
                    ],
                    "title": "Tag",
                    "type": "object",
                    "x-examples": {},
                    "x-stoplight": {
                      "id": "iwk9zguiajgif"
                    }
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Get list of tags",
        "operationId": "Get-tags",
        "summary": "List Tags",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-tags"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "name": {
                  "description": "The name of the tag",
                  "type": "string"
                },
                "tag_list_id": {
                  "description": "Unique identifier of the tag list which the tag belongs to",
                  "type": "integer"
                }
              },
              "required": [
                "name",
                "tag_list_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A tag",
                  "properties": {
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the tag is archived",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the tag",
                      "type": "string"
                    },
                    "tag_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "tag_list_id": {
                      "description": "Unique identifier of the tag list which the tag belongs to",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "tag_list_id",
                    "name"
                  ],
                  "title": "Tag",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "iwk9zguiajgif"
                  }
                },
                {
                  "properties": {
                    "tag_list": {
                      "properties": {
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the tag list is archived",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the tag list",
                          "type": "string"
                        },
                        "tag_list_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "text_color": {
                          "description": "The color of the text used for reporting",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "color",
                        "text_color"
                      ],
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "z8r3lwt40nihp"
                      }
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Creates a tag",
        "operationId": "Post-tags",
        "summary": "Create a Tag",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-tag"
        }
      }
    },
    "/{connectionId}/tags/{tag}": {
      "parameters": [
        {
          "in": "path",
          "name": "tag",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "tag",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Deletes a tag",
        "operationId": "Delete-tags-tag_id",
        "summary": "Delete a Tag",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-tag"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "tag",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A tag",
                  "properties": {
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the tag is archived",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the tag",
                      "type": "string"
                    },
                    "tag_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "tag_list_id": {
                      "description": "Unique identifier of the tag list which the tag belongs to",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "tag_list_id",
                    "name"
                  ],
                  "title": "Tag",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "iwk9zguiajgif"
                  }
                },
                {
                  "properties": {
                    "tag_list": {
                      "properties": {
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the tag list is archived",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the tag list",
                          "type": "string"
                        },
                        "tag_list_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "text_color": {
                          "description": "The color of the text used for reporting",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "color",
                        "text_color"
                      ],
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "z8r3lwt40nihp"
                      }
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Get a single tag",
        "operationId": "Get-tags-tag_id",
        "summary": "Get a Tag",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-tag"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "tag",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "maxLength": 7,
                  "minLength": 7,
                  "type": "string"
                },
                "name": {
                  "description": "The name of the tag",
                  "type": "string"
                },
                "tag_list_id": {
                  "description": "Unique identifier of the tag list which the tag belongs to",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "A tag",
                  "properties": {
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "is_active": {
                      "description": "Whether or not the tag is archived",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The name of the tag",
                      "type": "string"
                    },
                    "tag_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "tag_list_id": {
                      "description": "Unique identifier of the tag list which the tag belongs to",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "tag_list_id",
                    "name"
                  ],
                  "title": "Tag",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "iwk9zguiajgif"
                  }
                },
                {
                  "properties": {
                    "tag_list": {
                      "properties": {
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the tag list is archived",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the tag list",
                          "type": "string"
                        },
                        "tag_list_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "text_color": {
                          "description": "The color of the text used for reporting",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "color",
                        "text_color"
                      ],
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "z8r3lwt40nihp"
                      }
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "Updates a tag",
        "operationId": "Put-tags-tag_id",
        "summary": "Update a Tag",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-tag"
        }
      }
    },
    "/{connectionId}/timers": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "description": "Get only the timers that have date grater or equal to this date",
            "in": "query",
            "name": "date_from",
            "type": "string",
            "x-example": "2023-01-01"
          },
          {
            "description": "Get only the timers that have date less or equal to this date",
            "in": "query",
            "name": "date_to",
            "type": "string",
            "x-example": "2023-01-01"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "allOf": [
                      {
                        "description": "a Timeneye timer",
                        "properties": {
                          "notes": {
                            "description": "Notes on the time entry",
                            "type": "string"
                          },
                          "phase_id": {
                            "description": "phase id",
                            "type": "integer"
                          },
                          "project_id": {
                            "description": "Unique identifier of the project",
                            "type": "integer"
                          },
                          "seconds": {
                            "exclusiveMinimum": true,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "source": {
                            "description": "Indicates the source of the entry (if any)",
                            "type": "string"
                          },
                          "source_data": {
                            "description": "Additional data of the source",
                            "type": "string"
                          },
                          "source_id": {
                            "description": "A unique identifier of the source of the entry",
                            "type": "string"
                          },
                          "source_text": {
                            "description": "A text that describes the source of the entry",
                            "type": "string"
                          },
                          "source_url": {
                            "description": "An URL to the source of the entry",
                            "type": "string"
                          },
                          "timer_date": {
                            "description": "The data in which the timer has been started",
                            "example": "2023-01-01",
                            "type": "string"
                          },
                          "timer_id": {
                            "description": "Unique identifier of the timer",
                            "type": "integer"
                          },
                          "timer_start": {
                            "example": "2023-01-01 10:00:00",
                            "type": "string"
                          },
                          "timer_status": {
                            "enum": [
                              "running",
                              "paused"
                            ],
                            "type": "string"
                          },
                          "todo_id": {
                            "type": "integer",
                            "x-nullable": true
                          },
                          "user_id": {
                            "description": "Unique identifier of the user that c",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "user_id",
                          "project_id",
                          "phase_id",
                          "seconds"
                        ],
                        "title": "Timer",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "nog9f972tdw3t"
                        }
                      },
                      {
                        "properties": {
                          "tags": {
                            "items": {
                              "allOf": [
                                {
                                  "description": "A tag",
                                  "properties": {
                                    "color": {
                                      "description": "The color used for reporting",
                                      "type": "string"
                                    },
                                    "is_active": {
                                      "description": "Whether or not the tag is archived",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "The name of the tag",
                                      "type": "string"
                                    },
                                    "tag_id": {
                                      "description": "Unique identifier",
                                      "type": "integer"
                                    },
                                    "tag_list_id": {
                                      "description": "Unique identifier of the tag list which the tag belongs to",
                                      "type": "integer"
                                    }
                                  },
                                  "required": [
                                    "tag_list_id",
                                    "name"
                                  ],
                                  "title": "Tag",
                                  "type": "object",
                                  "x-examples": {},
                                  "x-stoplight": {
                                    "id": "iwk9zguiajgif"
                                  }
                                },
                                {
                                  "properties": {
                                    "tag_list": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "type": "array"
                          },
                          "phase": {
                            "description": "A project's phase",
                            "properties": {
                              "budget_minutes": {
                                "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                                "type": "integer"
                              },
                              "is_open": {
                                "description": "Whether or not the phase is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the phase",
                                "type": "string"
                              },
                              "phase_category_id": {
                                "description": "Unique identifier of the phase category which the phase belongs to",
                                "type": "integer"
                              },
                              "phase_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "project_id": {
                                "description": "Unique identifier of the project which the phase belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "project_id",
                              "name"
                            ],
                            "title": "Phase",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "2gsuxkayxq83f"
                            }
                          },
                          "project": {
                            "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                            "properties": {
                              "api_only": {
                                "description": "Whether or not the project is usable for tracking time only using a third party app.",
                                "type": "integer"
                              },
                              "client_id": {
                                "description": "Unique identifier of a client that the project belongs to",
                                "type": "integer"
                              },
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "description": {
                                "description": "A text description of the project",
                                "type": "string"
                              },
                              "hourly_rate": {
                                "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the project is archived",
                                "type": "integer"
                              },
                              "is_billable": {
                                "description": "Whether or not the project is billable per hour",
                                "type": "integer"
                              },
                              "is_public": {
                                "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The project's name",
                                "type": "string"
                              },
                              "project_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "title": "Project",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "aa7t79mq3m8d2"
                            }
                          },
                          "user": {
                            "allOf": [
                              {
                                "description": "User",
                                "properties": {
                                  "apple_id": {
                                    "description": "Apple unique identifier of the user",
                                    "type": "string"
                                  },
                                  "created_date": {
                                    "description": "Date of creation of the user",
                                    "type": "string"
                                  },
                                  "department": {
                                    "description": "The user's department",
                                    "type": "string",
                                    "x-nullable": true
                                  },
                                  "email": {
                                    "description": "Email of the user, must be unique",
                                    "type": "string"
                                  },
                                  "enabled": {
                                    "description": "Tells if the user is archived or not",
                                    "type": "integer"
                                  },
                                  "google_id": {
                                    "description": "Google unique identifier of the user",
                                    "type": "string"
                                  },
                                  "group_id": {
                                    "description": "Unique identifier of the group to which the user belongs to",
                                    "type": "integer"
                                  },
                                  "is_admin": {
                                    "description": "Whether or not the user is an admin of the account",
                                    "type": "boolean"
                                  },
                                  "is_gm": {
                                    "description": "Whether or not the user is a group manager of his group",
                                    "type": "boolean"
                                  },
                                  "is_owner": {
                                    "description": "Whether or not the user is an owner of the account",
                                    "type": "boolean"
                                  },
                                  "job_title": {
                                    "description": "The job title of the user in the company",
                                    "type": "string"
                                  },
                                  "microsoft_id": {
                                    "description": "Microsoft unique identifier of the user",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the user",
                                    "type": "string"
                                  },
                                  "role": {
                                    "description": "The role of the user in the company.",
                                    "type": "string",
                                    "x-nullable": true
                                  },
                                  "settings_dailyemail_time": {
                                    "description": "Hour of the day in which the user receives the daily email",
                                    "type": "integer"
                                  },
                                  "settings_emails_automation_enabled": {
                                    "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                    "type": "integer"
                                  },
                                  "settings_emails_dailyrecap_enabled": {
                                    "description": "Whether or not the daily recap email is enabled fro the user",
                                    "type": "integer"
                                  },
                                  "settings_emails_developer_enabled": {
                                    "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                    "type": "integer"
                                  },
                                  "settings_emails_newsletter_enabled": {
                                    "description": "Whether or not the newsletter emails are enabled fro the user",
                                    "type": "integer"
                                  },
                                  "settings_emails_onboarding_enabled": {
                                    "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                    "type": "integer"
                                  },
                                  "settings_emails_status_day": {
                                    "description": "Day of the week in which the user receives the status email",
                                    "type": "integer"
                                  },
                                  "settings_emails_status_enabled": {
                                    "description": "Whether or not the email containing the status update is enabled fro the user",
                                    "type": "integer"
                                  },
                                  "settings_emails_status_time": {
                                    "description": "Hour of the day in which the user receives the status email",
                                    "type": "integer"
                                  },
                                  "settings_emails_system_enabled": {
                                    "description": "Whether or not the system emails are enabled fro the user",
                                    "type": "integer"
                                  },
                                  "settings_emails_timerssaved_enabled": {
                                    "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                    "type": "integer"
                                  },
                                  "user_hourly_cost": {
                                    "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                    "type": "string"
                                  },
                                  "user_hourly_rate": {
                                    "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                    "type": "string"
                                  },
                                  "user_id": {
                                    "description": "Unique identifier of the user",
                                    "type": "integer"
                                  },
                                  "working_time": {
                                    "description": "How many hours the user is usually working on a day",
                                    "type": "integer"
                                  },
                                  "workspace_access_level": {
                                    "description": "The role of the user in Timeneye: owner, admin or member",
                                    "type": "string"
                                  }
                                },
                                "title": "User",
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "8r0gf5rqoxwwv"
                                }
                              },
                              {
                                "properties": {
                                  "avatar": {
                                    "description": "An avatar that can be linked to an Account or to a User",
                                    "properties": {
                                      "account_id": {
                                        "description": "Identifier of the account which has this avatar",
                                        "type": "integer"
                                      },
                                      "avatar_name": {
                                        "description": "unique file name",
                                        "type": "string"
                                      },
                                      "avatar_url": {
                                        "description": "Image url",
                                        "type": "string"
                                      },
                                      "user_id": {
                                        "description": "Identifier of the user which has this avatar",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "x-examples": {},
                                    "x-stoplight": {
                                      "id": "rmwkjif7pfhgs"
                                    }
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Timers"
        ],
        "description": "Get timers list",
        "operationId": "List-timers",
        "summary": "List Timers",
        "x-internal": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-timers"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "date": {
                  "description": "Date of the timer",
                  "example": "2023-01-01",
                  "type": "string"
                },
                "entry_suggestion_id": {
                  "description": "A unique identifier of the entry suggestion from which the timer is created",
                  "type": "integer"
                },
                "notes": {
                  "description": "Notes on the timer",
                  "type": "string"
                },
                "origin_date": {
                  "description": "Format Y-m-d required with repeatable_suggestion_id",
                  "type": "string"
                },
                "phase_id": {
                  "description": "Unique identifier of the the phase which the timer belongs to",
                  "type": "integer"
                },
                "project_id": {
                  "description": "Unique identifier of the project",
                  "type": "integer"
                },
                "repeatable_suggestion_id": {
                  "description": "A unique identifier of the repeatable entry suggestion from which the timer is created",
                  "type": "integer",
                  "x-nullable": true
                },
                "seconds": {
                  "exclusiveMaximum": true,
                  "exclusiveMinimum": true,
                  "maximum": 86400,
                  "minimum": 0,
                  "type": "integer"
                },
                "source": {
                  "description": "Must be one of integration_code available or \"consistency\"",
                  "type": "string"
                },
                "source_text": {
                  "description": "A text that describes the source of the timer",
                  "type": "string"
                },
                "source_url": {
                  "description": "A text that describes the source of the timer",
                  "type": "string"
                },
                "tag_ids": {
                  "description": "Array of tag_id",
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "timer_status": {
                  "enum": [
                    "running",
                    "paused"
                  ],
                  "type": "string"
                },
                "user_id": {
                  "description": "Unique identifier of the user that created the timer",
                  "type": "integer"
                }
              },
              "required": [
                "project_id",
                "phase_id",
                "timer_status"
              ],
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "description": "a Timeneye timer",
                  "properties": {
                    "notes": {
                      "description": "Notes on the time entry",
                      "type": "string"
                    },
                    "phase_id": {
                      "description": "phase id",
                      "type": "integer"
                    },
                    "project_id": {
                      "description": "Unique identifier of the project",
                      "type": "integer"
                    },
                    "seconds": {
                      "exclusiveMinimum": true,
                      "minimum": 0,
                      "type": "integer"
                    },
                    "source": {
                      "description": "Indicates the source of the entry (if any)",
                      "type": "string"
                    },
                    "source_data": {
                      "description": "Additional data of the source",
                      "type": "string"
                    },
                    "source_id": {
                      "description": "A unique identifier of the source of the entry",
                      "type": "string"
                    },
                    "source_text": {
                      "description": "A text that describes the source of the entry",
                      "type": "string"
                    },
                    "source_url": {
                      "description": "An URL to the source of the entry",
                      "type": "string"
                    },
                    "timer_date": {
                      "description": "The data in which the timer has been started",
                      "example": "2023-01-01",
                      "type": "string"
                    },
                    "timer_id": {
                      "description": "Unique identifier of the timer",
                      "type": "integer"
                    },
                    "timer_start": {
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "timer_status": {
                      "enum": [
                        "running",
                        "paused"
                      ],
                      "type": "string"
                    },
                    "todo_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "description": "Unique identifier of the user that c",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "user_id",
                    "project_id",
                    "phase_id",
                    "seconds"
                  ],
                  "title": "Timer",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "nog9f972tdw3t"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A tag",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag",
                                "type": "string"
                              },
                              "tag_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier of the tag list which the tag belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "tag_list_id",
                              "name"
                            ],
                            "title": "Tag",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "iwk9zguiajgif"
                            }
                          },
                          {
                            "properties": {
                              "tag_list": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "phase": {
                      "description": "A project's phase",
                      "properties": {
                        "budget_minutes": {
                          "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                          "type": "integer"
                        },
                        "is_open": {
                          "description": "Whether or not the phase is archived",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the phase",
                          "type": "string"
                        },
                        "phase_category_id": {
                          "description": "Unique identifier of the phase category which the phase belongs to",
                          "type": "integer"
                        },
                        "phase_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "project_id": {
                          "description": "Unique identifier of the project which the phase belongs to",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "project_id",
                        "name"
                      ],
                      "title": "Phase",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "2gsuxkayxq83f"
                      }
                    },
                    "project": {
                      "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                      "properties": {
                        "api_only": {
                          "description": "Whether or not the project is usable for tracking time only using a third party app.",
                          "type": "integer"
                        },
                        "client_id": {
                          "description": "Unique identifier of a client that the project belongs to",
                          "type": "integer"
                        },
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text description of the project",
                          "type": "string"
                        },
                        "hourly_rate": {
                          "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the project is archived",
                          "type": "integer"
                        },
                        "is_billable": {
                          "description": "Whether or not the project is billable per hour",
                          "type": "integer"
                        },
                        "is_public": {
                          "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The project's name",
                          "type": "string"
                        },
                        "project_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Project",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "aa7t79mq3m8d2"
                      }
                    },
                    "user": {
                      "allOf": [
                        {
                          "description": "User",
                          "properties": {
                            "apple_id": {
                              "description": "Apple unique identifier of the user",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Date of creation of the user",
                              "type": "string"
                            },
                            "department": {
                              "description": "The user's department",
                              "type": "string",
                              "x-nullable": true
                            },
                            "email": {
                              "description": "Email of the user, must be unique",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Tells if the user is archived or not",
                              "type": "integer"
                            },
                            "google_id": {
                              "description": "Google unique identifier of the user",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "Unique identifier of the group to which the user belongs to",
                              "type": "integer"
                            },
                            "is_admin": {
                              "description": "Whether or not the user is an admin of the account",
                              "type": "boolean"
                            },
                            "is_gm": {
                              "description": "Whether or not the user is a group manager of his group",
                              "type": "boolean"
                            },
                            "is_owner": {
                              "description": "Whether or not the user is an owner of the account",
                              "type": "boolean"
                            },
                            "job_title": {
                              "description": "The job title of the user in the company",
                              "type": "string"
                            },
                            "microsoft_id": {
                              "description": "Microsoft unique identifier of the user",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the user",
                              "type": "string"
                            },
                            "role": {
                              "description": "The role of the user in the company.",
                              "type": "string",
                              "x-nullable": true
                            },
                            "settings_dailyemail_time": {
                              "description": "Hour of the day in which the user receives the daily email",
                              "type": "integer"
                            },
                            "settings_emails_automation_enabled": {
                              "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                              "type": "integer"
                            },
                            "settings_emails_dailyrecap_enabled": {
                              "description": "Whether or not the daily recap email is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_developer_enabled": {
                              "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_newsletter_enabled": {
                              "description": "Whether or not the newsletter emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_onboarding_enabled": {
                              "description": "Whether or not the emails to guide the user through the trial period are enabled",
                              "type": "integer"
                            },
                            "settings_emails_status_day": {
                              "description": "Day of the week in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_status_enabled": {
                              "description": "Whether or not the email containing the status update is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_status_time": {
                              "description": "Hour of the day in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_system_enabled": {
                              "description": "Whether or not the system emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_timerssaved_enabled": {
                              "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                              "type": "integer"
                            },
                            "user_hourly_cost": {
                              "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_hourly_rate": {
                              "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "Unique identifier of the user",
                              "type": "integer"
                            },
                            "working_time": {
                              "description": "How many hours the user is usually working on a day",
                              "type": "integer"
                            },
                            "workspace_access_level": {
                              "description": "The role of the user in Timeneye: owner, admin or member",
                              "type": "string"
                            }
                          },
                          "title": "User",
                          "type": "object",
                          "x-examples": {},
                          "x-stoplight": {
                            "id": "8r0gf5rqoxwwv"
                          }
                        },
                        {
                          "properties": {
                            "avatar": {
                              "description": "An avatar that can be linked to an Account or to a User",
                              "properties": {
                                "account_id": {
                                  "description": "Identifier of the account which has this avatar",
                                  "type": "integer"
                                },
                                "avatar_name": {
                                  "description": "unique file name",
                                  "type": "string"
                                },
                                "avatar_url": {
                                  "description": "Image url",
                                  "type": "string"
                                },
                                "user_id": {
                                  "description": "Identifier of the user which has this avatar",
                                  "type": "integer"
                                }
                              },
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "rmwkjif7pfhgs"
                              }
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Timers"
        ],
        "description": "Creates a timer",
        "operationId": "Post-timer",
        "summary": "Create a Timer",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-timer"
        }
      }
    },
    "/{connectionId}/timers/{timer}": {
      "parameters": [
        {
          "in": "path",
          "name": "timer",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "timer",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Timers"
        ],
        "description": "Delete a timer",
        "operationId": "Delete-timers-timer_id",
        "summary": "Delete a Timer",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-timer"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "timer",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "allOf": [
                      {
                        "description": "a Timeneye timer",
                        "properties": {
                          "notes": {
                            "description": "Notes on the time entry",
                            "type": "string"
                          },
                          "phase_id": {
                            "description": "phase id",
                            "type": "integer"
                          },
                          "project_id": {
                            "description": "Unique identifier of the project",
                            "type": "integer"
                          },
                          "seconds": {
                            "exclusiveMinimum": true,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "source": {
                            "description": "Indicates the source of the entry (if any)",
                            "type": "string"
                          },
                          "source_data": {
                            "description": "Additional data of the source",
                            "type": "string"
                          },
                          "source_id": {
                            "description": "A unique identifier of the source of the entry",
                            "type": "string"
                          },
                          "source_text": {
                            "description": "A text that describes the source of the entry",
                            "type": "string"
                          },
                          "source_url": {
                            "description": "An URL to the source of the entry",
                            "type": "string"
                          },
                          "timer_date": {
                            "description": "The data in which the timer has been started",
                            "example": "2023-01-01",
                            "type": "string"
                          },
                          "timer_id": {
                            "description": "Unique identifier of the timer",
                            "type": "integer"
                          },
                          "timer_start": {
                            "example": "2023-01-01 10:00:00",
                            "type": "string"
                          },
                          "timer_status": {
                            "enum": [
                              "running",
                              "paused"
                            ],
                            "type": "string"
                          },
                          "todo_id": {
                            "type": "integer",
                            "x-nullable": true
                          },
                          "user_id": {
                            "description": "Unique identifier of the user that c",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "user_id",
                          "project_id",
                          "phase_id",
                          "seconds"
                        ],
                        "title": "Timer",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "nog9f972tdw3t"
                        }
                      },
                      {
                        "properties": {
                          "tags": {
                            "items": {
                              "description": "A tag",
                              "properties": {
                                "color": {
                                  "description": "The color used for reporting",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Whether or not the tag is archived",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "The name of the tag",
                                  "type": "string"
                                },
                                "tag_id": {
                                  "description": "Unique identifier",
                                  "type": "integer"
                                },
                                "tag_list_id": {
                                  "description": "Unique identifier of the tag list which the tag belongs to",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "tag_list_id",
                                "name"
                              ],
                              "title": "Tag",
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "iwk9zguiajgif"
                              }
                            },
                            "type": "array"
                          },
                          "phase": {
                            "description": "A project's phase",
                            "properties": {
                              "budget_minutes": {
                                "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                                "type": "integer"
                              },
                              "is_open": {
                                "description": "Whether or not the phase is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the phase",
                                "type": "string"
                              },
                              "phase_category_id": {
                                "description": "Unique identifier of the phase category which the phase belongs to",
                                "type": "integer"
                              },
                              "phase_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "project_id": {
                                "description": "Unique identifier of the project which the phase belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "project_id",
                              "name"
                            ],
                            "title": "Phase",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "2gsuxkayxq83f"
                            }
                          },
                          "project": {
                            "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                            "properties": {
                              "api_only": {
                                "description": "Whether or not the project is usable for tracking time only using a third party app.",
                                "type": "integer"
                              },
                              "client_id": {
                                "description": "Unique identifier of a client that the project belongs to",
                                "type": "integer"
                              },
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "description": {
                                "description": "A text description of the project",
                                "type": "string"
                              },
                              "hourly_rate": {
                                "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the project is archived",
                                "type": "integer"
                              },
                              "is_billable": {
                                "description": "Whether or not the project is billable per hour",
                                "type": "integer"
                              },
                              "is_public": {
                                "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The project's name",
                                "type": "string"
                              },
                              "project_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "title": "Project",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "aa7t79mq3m8d2"
                            }
                          },
                          "user": {
                            "allOf": [
                              {
                                "description": "User",
                                "properties": {
                                  "apple_id": {
                                    "description": "Apple unique identifier of the user",
                                    "type": "string"
                                  },
                                  "created_date": {
                                    "description": "Date of creation of the user",
                                    "type": "string"
                                  },
                                  "department": {
                                    "description": "The user's department",
                                    "type": "string",
                                    "x-nullable": true
                                  },
                                  "email": {
                                    "description": "Email of the user, must be unique",
                                    "type": "string"
                                  },
                                  "enabled": {
                                    "description": "Tells if the user is archived or not",
                                    "type": "integer"
                                  },
                                  "google_id": {
                                    "description": "Google unique identifier of the user",
                                    "type": "string"
                                  },
                                  "group_id": {
                                    "description": "Unique identifier of the group to which the user belongs to",
                                    "type": "integer"
                                  },
                                  "is_admin": {
                                    "description": "Whether or not the user is an admin of the account",
                                    "type": "boolean"
                                  },
                                  "is_gm": {
                                    "description": "Whether or not the user is a group manager of his group",
                                    "type": "boolean"
                                  },
                                  "is_owner": {
                                    "description": "Whether or not the user is an owner of the account",
                                    "type": "boolean"
                                  },
                                  "job_title": {
                                    "description": "The job title of the user in the company",
                                    "type": "string"
                                  },
                                  "microsoft_id": {
                                    "description": "Microsoft unique identifier of the user",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the user",
                                    "type": "string"
                                  },
                                  "role": {
                                    "description": "The role of the user in the company.",
                                    "type": "string",
                                    "x-nullable": true
                                  },
                                  "settings_dailyemail_time": {
                                    "description": "Hour of the day in which the user receives the daily email",
                                    "type": "integer"
                                  },
                                  "settings_emails_automation_enabled": {
                                    "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                    "type": "integer"
                                  },
                                  "settings_emails_dailyrecap_enabled": {
                                    "description": "Whether or not the daily recap email is enabled fro the user",
                                    "type": "integer"
                                  },
                                  "settings_emails_developer_enabled": {
                                    "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                    "type": "integer"
                                  },
                                  "settings_emails_newsletter_enabled": {
                                    "description": "Whether or not the newsletter emails are enabled fro the user",
                                    "type": "integer"
                                  },
                                  "settings_emails_onboarding_enabled": {
                                    "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                    "type": "integer"
                                  },
                                  "settings_emails_status_day": {
                                    "description": "Day of the week in which the user receives the status email",
                                    "type": "integer"
                                  },
                                  "settings_emails_status_enabled": {
                                    "description": "Whether or not the email containing the status update is enabled fro the user",
                                    "type": "integer"
                                  },
                                  "settings_emails_status_time": {
                                    "description": "Hour of the day in which the user receives the status email",
                                    "type": "integer"
                                  },
                                  "settings_emails_system_enabled": {
                                    "description": "Whether or not the system emails are enabled fro the user",
                                    "type": "integer"
                                  },
                                  "settings_emails_timerssaved_enabled": {
                                    "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                    "type": "integer"
                                  },
                                  "user_hourly_cost": {
                                    "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                    "type": "string"
                                  },
                                  "user_hourly_rate": {
                                    "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                    "type": "string"
                                  },
                                  "user_id": {
                                    "description": "Unique identifier of the user",
                                    "type": "integer"
                                  },
                                  "working_time": {
                                    "description": "How many hours the user is usually working on a day",
                                    "type": "integer"
                                  },
                                  "workspace_access_level": {
                                    "description": "The role of the user in Timeneye: owner, admin or member",
                                    "type": "string"
                                  }
                                },
                                "title": "User",
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "8r0gf5rqoxwwv"
                                }
                              },
                              {
                                "properties": {
                                  "avatar": {
                                    "description": "An avatar that can be linked to an Account or to a User",
                                    "properties": {
                                      "account_id": {
                                        "description": "Identifier of the account which has this avatar",
                                        "type": "integer"
                                      },
                                      "avatar_name": {
                                        "description": "unique file name",
                                        "type": "string"
                                      },
                                      "avatar_url": {
                                        "description": "Image url",
                                        "type": "string"
                                      },
                                      "user_id": {
                                        "description": "Identifier of the user which has this avatar",
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object",
                                    "x-examples": {},
                                    "x-stoplight": {
                                      "id": "rmwkjif7pfhgs"
                                    }
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Timers"
        ],
        "description": "Get a timer",
        "operationId": "Get-timers-timer_id",
        "summary": "Get a Timer",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-timer"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "timer",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "date": {
                  "description": "Date of the timer",
                  "example": "2023-01-01",
                  "type": "string"
                },
                "entry_suggestion_id": {
                  "description": "A unique identifier of the entry suggestion from which the timer is created",
                  "type": "integer"
                },
                "notes": {
                  "description": "Notes on the timer",
                  "type": "string"
                },
                "origin_date": {
                  "description": "Format Y-m-d required with repeatable_suggestion_id",
                  "type": "string"
                },
                "phase_id": {
                  "description": "Unique identifier of the the phase which the timer belongs to",
                  "type": "integer"
                },
                "project_id": {
                  "description": "Unique identifier of the project",
                  "type": "integer"
                },
                "repeatable_suggestion_id": {
                  "description": "A unique identifier of the repeatable entry suggestion from which the timer is created",
                  "type": "integer",
                  "x-nullable": true
                },
                "seconds": {
                  "exclusiveMaximum": true,
                  "exclusiveMinimum": true,
                  "maximum": 86400,
                  "minimum": 0,
                  "type": "integer"
                },
                "source": {
                  "description": "Must be one of integration_code available or \"consistency\"",
                  "type": "string"
                },
                "source_text": {
                  "description": "A text that describes the source of the timer",
                  "type": "string"
                },
                "source_url": {
                  "description": "A text that describes the source of the timer",
                  "type": "string"
                },
                "tag_ids": {
                  "description": "Array of tag_id",
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "timer_status": {
                  "enum": [
                    "running",
                    "paused"
                  ],
                  "type": "string"
                },
                "user_id": {
                  "description": "Unique identifier of the user that created the timer",
                  "type": "integer"
                }
              },
              "required": [
                "project_id",
                "phase_id",
                "timer_status"
              ],
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "a Timeneye timer",
                  "properties": {
                    "notes": {
                      "description": "Notes on the time entry",
                      "type": "string"
                    },
                    "phase_id": {
                      "description": "phase id",
                      "type": "integer"
                    },
                    "project_id": {
                      "description": "Unique identifier of the project",
                      "type": "integer"
                    },
                    "seconds": {
                      "exclusiveMinimum": true,
                      "minimum": 0,
                      "type": "integer"
                    },
                    "source": {
                      "description": "Indicates the source of the entry (if any)",
                      "type": "string"
                    },
                    "source_data": {
                      "description": "Additional data of the source",
                      "type": "string"
                    },
                    "source_id": {
                      "description": "A unique identifier of the source of the entry",
                      "type": "string"
                    },
                    "source_text": {
                      "description": "A text that describes the source of the entry",
                      "type": "string"
                    },
                    "source_url": {
                      "description": "An URL to the source of the entry",
                      "type": "string"
                    },
                    "timer_date": {
                      "description": "The data in which the timer has been started",
                      "example": "2023-01-01",
                      "type": "string"
                    },
                    "timer_id": {
                      "description": "Unique identifier of the timer",
                      "type": "integer"
                    },
                    "timer_start": {
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "timer_status": {
                      "enum": [
                        "running",
                        "paused"
                      ],
                      "type": "string"
                    },
                    "todo_id": {
                      "type": "integer",
                      "x-nullable": true
                    },
                    "user_id": {
                      "description": "Unique identifier of the user that c",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "user_id",
                    "project_id",
                    "phase_id",
                    "seconds"
                  ],
                  "title": "Timer",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "nog9f972tdw3t"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A tag",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag",
                                "type": "string"
                              },
                              "tag_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier of the tag list which the tag belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "tag_list_id",
                              "name"
                            ],
                            "title": "Tag",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "iwk9zguiajgif"
                            }
                          },
                          {
                            "properties": {
                              "tag_list": {
                                "properties": {
                                  "color": {
                                    "description": "The color used for reporting",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Whether or not the tag list is archived",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the tag list",
                                    "type": "string"
                                  },
                                  "tag_list_id": {
                                    "description": "Unique identifier",
                                    "type": "integer"
                                  },
                                  "text_color": {
                                    "description": "The color of the text used for reporting",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "color",
                                  "text_color"
                                ],
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "z8r3lwt40nihp"
                                }
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "phase": {
                      "description": "A project's phase",
                      "properties": {
                        "budget_minutes": {
                          "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
                          "type": "integer"
                        },
                        "is_open": {
                          "description": "Whether or not the phase is archived",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The name of the phase",
                          "type": "string"
                        },
                        "phase_category_id": {
                          "description": "Unique identifier of the phase category which the phase belongs to",
                          "type": "integer"
                        },
                        "phase_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        },
                        "project_id": {
                          "description": "Unique identifier of the project which the phase belongs to",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "project_id",
                        "name"
                      ],
                      "title": "Phase",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "2gsuxkayxq83f"
                      }
                    },
                    "project": {
                      "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                      "properties": {
                        "api_only": {
                          "description": "Whether or not the project is usable for tracking time only using a third party app.",
                          "type": "integer"
                        },
                        "client_id": {
                          "description": "Unique identifier of a client that the project belongs to",
                          "type": "integer"
                        },
                        "color": {
                          "description": "The color used for reporting",
                          "type": "string"
                        },
                        "description": {
                          "description": "A text description of the project",
                          "type": "string"
                        },
                        "hourly_rate": {
                          "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                          "type": "string"
                        },
                        "is_active": {
                          "description": "Whether or not the project is archived",
                          "type": "integer"
                        },
                        "is_billable": {
                          "description": "Whether or not the project is billable per hour",
                          "type": "integer"
                        },
                        "is_public": {
                          "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The project's name",
                          "type": "string"
                        },
                        "project_id": {
                          "description": "Unique identifier",
                          "type": "integer"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "title": "Project",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "aa7t79mq3m8d2"
                      }
                    },
                    "user": {
                      "allOf": [
                        {
                          "description": "User",
                          "properties": {
                            "apple_id": {
                              "description": "Apple unique identifier of the user",
                              "type": "string"
                            },
                            "created_date": {
                              "description": "Date of creation of the user",
                              "type": "string"
                            },
                            "department": {
                              "description": "The user's department",
                              "type": "string",
                              "x-nullable": true
                            },
                            "email": {
                              "description": "Email of the user, must be unique",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Tells if the user is archived or not",
                              "type": "integer"
                            },
                            "google_id": {
                              "description": "Google unique identifier of the user",
                              "type": "string"
                            },
                            "group_id": {
                              "description": "Unique identifier of the group to which the user belongs to",
                              "type": "integer"
                            },
                            "is_admin": {
                              "description": "Whether or not the user is an admin of the account",
                              "type": "boolean"
                            },
                            "is_gm": {
                              "description": "Whether or not the user is a group manager of his group",
                              "type": "boolean"
                            },
                            "is_owner": {
                              "description": "Whether or not the user is an owner of the account",
                              "type": "boolean"
                            },
                            "job_title": {
                              "description": "The job title of the user in the company",
                              "type": "string"
                            },
                            "microsoft_id": {
                              "description": "Microsoft unique identifier of the user",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the user",
                              "type": "string"
                            },
                            "role": {
                              "description": "The role of the user in the company.",
                              "type": "string",
                              "x-nullable": true
                            },
                            "settings_dailyemail_time": {
                              "description": "Hour of the day in which the user receives the daily email",
                              "type": "integer"
                            },
                            "settings_emails_automation_enabled": {
                              "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                              "type": "integer"
                            },
                            "settings_emails_dailyrecap_enabled": {
                              "description": "Whether or not the daily recap email is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_developer_enabled": {
                              "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_newsletter_enabled": {
                              "description": "Whether or not the newsletter emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_onboarding_enabled": {
                              "description": "Whether or not the emails to guide the user through the trial period are enabled",
                              "type": "integer"
                            },
                            "settings_emails_status_day": {
                              "description": "Day of the week in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_status_enabled": {
                              "description": "Whether or not the email containing the status update is enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_status_time": {
                              "description": "Hour of the day in which the user receives the status email",
                              "type": "integer"
                            },
                            "settings_emails_system_enabled": {
                              "description": "Whether or not the system emails are enabled fro the user",
                              "type": "integer"
                            },
                            "settings_emails_timerssaved_enabled": {
                              "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                              "type": "integer"
                            },
                            "user_hourly_cost": {
                              "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_hourly_rate": {
                              "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                              "type": "string"
                            },
                            "user_id": {
                              "description": "Unique identifier of the user",
                              "type": "integer"
                            },
                            "working_time": {
                              "description": "How many hours the user is usually working on a day",
                              "type": "integer"
                            },
                            "workspace_access_level": {
                              "description": "The role of the user in Timeneye: owner, admin or member",
                              "type": "string"
                            }
                          },
                          "title": "User",
                          "type": "object",
                          "x-examples": {},
                          "x-stoplight": {
                            "id": "8r0gf5rqoxwwv"
                          }
                        },
                        {
                          "properties": {
                            "avatar": {
                              "description": "An avatar that can be linked to an Account or to a User",
                              "properties": {
                                "account_id": {
                                  "description": "Identifier of the account which has this avatar",
                                  "type": "integer"
                                },
                                "avatar_name": {
                                  "description": "unique file name",
                                  "type": "string"
                                },
                                "avatar_url": {
                                  "description": "Image url",
                                  "type": "string"
                                },
                                "user_id": {
                                  "description": "Identifier of the user which has this avatar",
                                  "type": "integer"
                                }
                              },
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "rmwkjif7pfhgs"
                              }
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Timers"
        ],
        "description": "Updates a timer",
        "operationId": "Put-timers-timer_id",
        "summary": "Update a Timer",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-timer"
        }
      }
    },
    "/{connectionId}/todo-lists": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "description": "Unique identifier of the project which the todo list belongs to",
            "in": "query",
            "name": "project_id",
            "type": "integer"
          },
          {
            "description": "A comma separated list of entities to load. '\"todos\" is the only accepted value'",
            "in": "query",
            "name": "load[]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "allOf": [
                      {
                        "properties": {
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "created_at": {
                            "description": "Created date and time",
                            "type": "string"
                          },
                          "index": {
                            "description": "The index of the todo list in the board (order)",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the todo list",
                            "type": "string"
                          },
                          "project_id": {
                            "description": "Unique identifier of the project which the todo list belongs to",
                            "type": "integer"
                          },
                          "todo_list_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "updated_at": {
                            "description": "Updated date and time",
                            "type": "string"
                          }
                        },
                        "title": "TodoList",
                        "type": "object",
                        "x-stoplight": {
                          "id": "1363raammdbed"
                        }
                      },
                      {
                        "properties": {
                          "todos": {
                            "items": {
                              "allOf": [
                                {
                                  "description": "It is a todo in Timeneye",
                                  "properties": {
                                    "created_at": {
                                      "description": "Created date and time",
                                      "example": "2023-01-01 10:00:00",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "Description of the todo",
                                      "type": "string"
                                    },
                                    "due_date": {
                                      "description": "The data by which the todo should be completed",
                                      "example": "2023-01-01",
                                      "type": "string",
                                      "x-nullable": true
                                    },
                                    "index": {
                                      "description": "The index of the todo in the list (order)",
                                      "type": "integer"
                                    },
                                    "is_completed": {
                                      "description": "Whether or not the todo is marked as done",
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "description": "Title of the todo",
                                      "type": "string"
                                    },
                                    "priority": {
                                      "description": "Priority of the todo",
                                      "type": "string"
                                    },
                                    "start_date": {
                                      "description": "The date in which the todo should be taken in charge",
                                      "example": "2023-01-01",
                                      "type": "string",
                                      "x-nullable": true
                                    },
                                    "status": {
                                      "description": "The current status of the todo",
                                      "type": "string"
                                    },
                                    "todo_id": {
                                      "description": "Unique identifier",
                                      "type": "integer"
                                    },
                                    "todo_list_id": {
                                      "description": "Unique identifier of the todo list which the todo belongs to",
                                      "type": "integer",
                                      "x-nullable": true
                                    },
                                    "updated_at": {
                                      "description": "Updated date and time",
                                      "example": "2023-01-01 10:00:00",
                                      "type": "string"
                                    },
                                    "user_id": {
                                      "description": "Unique identifier of the user assigned to the todo",
                                      "type": "integer",
                                      "x-nullable": true
                                    }
                                  },
                                  "title": "Todo",
                                  "type": "object",
                                  "x-stoplight": {
                                    "id": "weym60vlwuhf7"
                                  }
                                }
                              ]
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Todos"
        ],
        "description": "Get a list of todo lists",
        "operationId": "Get-todo-lists",
        "summary": "List Todo Lists",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-todo-lists"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "index": {
                  "description": "The color used for reporting",
                  "type": "integer"
                },
                "name": {
                  "description": "Name of the todo list",
                  "type": "string"
                },
                "project_id": {
                  "description": "Unique identifier of the project which the todo list belongs to",
                  "type": "integer"
                }
              },
              "required": [
                "project_id",
                "name",
                "color"
              ],
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "created_at": {
                  "description": "Created date and time",
                  "type": "string"
                },
                "index": {
                  "description": "The index of the todo list in the board (order)",
                  "type": "integer"
                },
                "name": {
                  "description": "Name of the todo list",
                  "type": "string"
                },
                "project_id": {
                  "description": "Unique identifier of the project which the todo list belongs to",
                  "type": "integer"
                },
                "todo_list_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                },
                "updated_at": {
                  "description": "Updated date and time",
                  "type": "string"
                }
              },
              "title": "TodoList",
              "type": "object",
              "x-stoplight": {
                "id": "1363raammdbed"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Todos"
        ],
        "description": "Create a todo list",
        "operationId": "Post-todo-lists",
        "summary": "Create a Todo List",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-todo-list"
        }
      }
    },
    "/{connectionId}/todo-lists/{todo_list}": {
      "parameters": [
        {
          "in": "path",
          "name": "todo_list",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "todo_list",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "TodoLists"
        ],
        "description": "Deletes a todo list",
        "operationId": "Delete-todo-lists-todo_list_id",
        "summary": "Delete a Todo List",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-todo-list"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "todo_list",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "color": {
                      "description": "The color used for reporting",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "Created date and time",
                      "type": "string"
                    },
                    "index": {
                      "description": "The index of the todo list in the board (order)",
                      "type": "integer"
                    },
                    "name": {
                      "description": "Name of the todo list",
                      "type": "string"
                    },
                    "project_id": {
                      "description": "Unique identifier of the project which the todo list belongs to",
                      "type": "integer"
                    },
                    "todo_list_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "updated_at": {
                      "description": "Updated date and time",
                      "type": "string"
                    }
                  },
                  "title": "TodoList",
                  "type": "object",
                  "x-stoplight": {
                    "id": "1363raammdbed"
                  }
                },
                {
                  "properties": {
                    "todos": {
                      "items": {
                        "allOf": [
                          {
                            "description": "It is a todo in Timeneye",
                            "properties": {
                              "created_at": {
                                "description": "Created date and time",
                                "example": "2023-01-01 10:00:00",
                                "type": "string"
                              },
                              "description": {
                                "description": "Description of the todo",
                                "type": "string"
                              },
                              "due_date": {
                                "description": "The data by which the todo should be completed",
                                "example": "2023-01-01",
                                "type": "string",
                                "x-nullable": true
                              },
                              "index": {
                                "description": "The index of the todo in the list (order)",
                                "type": "integer"
                              },
                              "is_completed": {
                                "description": "Whether or not the todo is marked as done",
                                "type": "boolean"
                              },
                              "name": {
                                "description": "Title of the todo",
                                "type": "string"
                              },
                              "priority": {
                                "description": "Priority of the todo",
                                "type": "string"
                              },
                              "start_date": {
                                "description": "The date in which the todo should be taken in charge",
                                "example": "2023-01-01",
                                "type": "string",
                                "x-nullable": true
                              },
                              "status": {
                                "description": "The current status of the todo",
                                "type": "string"
                              },
                              "todo_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "todo_list_id": {
                                "description": "Unique identifier of the todo list which the todo belongs to",
                                "type": "integer",
                                "x-nullable": true
                              },
                              "updated_at": {
                                "description": "Updated date and time",
                                "example": "2023-01-01 10:00:00",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Unique identifier of the user assigned to the todo",
                                "type": "integer",
                                "x-nullable": true
                              }
                            },
                            "title": "Todo",
                            "type": "object",
                            "x-stoplight": {
                              "id": "weym60vlwuhf7"
                            }
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "TodoLists"
        ],
        "description": "Gets a single todo list",
        "operationId": "Get-todo-List-todolist_id",
        "summary": "Get a Todo List",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-todo-list"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "todo_list",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "index": {
                  "description": "The color used for reporting",
                  "type": "integer"
                },
                "name": {
                  "description": "Name of the todo list",
                  "type": "string"
                },
                "project_id": {
                  "description": "Unique identifier of the project which the todo list belongs to",
                  "type": "integer"
                }
              },
              "required": [
                "project_id",
                "name",
                "color"
              ],
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "color": {
                  "description": "The color used for reporting",
                  "type": "string"
                },
                "created_at": {
                  "description": "Created date and time",
                  "type": "string"
                },
                "index": {
                  "description": "The index of the todo list in the board (order)",
                  "type": "integer"
                },
                "name": {
                  "description": "Name of the todo list",
                  "type": "string"
                },
                "project_id": {
                  "description": "Unique identifier of the project which the todo list belongs to",
                  "type": "integer"
                },
                "todo_list_id": {
                  "description": "Unique identifier",
                  "type": "integer"
                },
                "updated_at": {
                  "description": "Updated date and time",
                  "type": "string"
                }
              },
              "title": "TodoList",
              "type": "object",
              "x-stoplight": {
                "id": "1363raammdbed"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "TodoLists"
        ],
        "description": "Updates a tag list",
        "operationId": "Put-todo-List-todolist_id",
        "summary": "Update a Todo List",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-todo-list"
        }
      }
    },
    "/{connectionId}/todos": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "description": "Unique identifier of the project which the todo belongs to",
            "in": "query",
            "name": "project_id",
            "type": "integer"
          },
          {
            "description": "Unique identifier of a todo list",
            "in": "query",
            "name": "todo_list_id",
            "type": "integer"
          },
          {
            "description": "A comma separated list of User unique identifiers assigned to the todos",
            "in": "query",
            "name": "user_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of priorities: Allowed values: low, medium, high",
            "in": "query",
            "name": "priority[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of statuses. Allowed values: todo, in_progress, completed",
            "in": "query",
            "name": "status[]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "allOf": [
                      {
                        "properties": {
                          "todos": {
                            "items": {
                              "allOf": [
                                {
                                  "description": "It is a todo in Timeneye",
                                  "properties": {
                                    "created_at": {
                                      "description": "Created date and time",
                                      "example": "2023-01-01 10:00:00",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "Description of the todo",
                                      "type": "string"
                                    },
                                    "due_date": {
                                      "description": "The data by which the todo should be completed",
                                      "example": "2023-01-01",
                                      "type": "string"
                                    },
                                    "index": {
                                      "description": "The index of the todo in the list (order)",
                                      "type": "integer"
                                    },
                                    "is_completed": {
                                      "description": "Whether or not the todo is marked as done",
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "description": "Title of the todo",
                                      "type": "string"
                                    },
                                    "priority": {
                                      "description": "Priority of the todo",
                                      "type": "string"
                                    },
                                    "start_date": {
                                      "description": "The date in which the todo should be taken in charge",
                                      "example": "2023-01-01",
                                      "type": "string"
                                    },
                                    "status": {
                                      "description": "The current status of the todo",
                                      "type": "string"
                                    },
                                    "todo_id": {
                                      "description": "Unique identifier",
                                      "type": "integer"
                                    },
                                    "todo_list_id": {
                                      "description": "Unique identifier of the todo list which the todo belongs to",
                                      "type": "integer"
                                    },
                                    "updated_at": {
                                      "description": "Updated date and time",
                                      "example": "2023-01-01 10:00:00",
                                      "type": "string"
                                    },
                                    "user_id": {
                                      "description": "Unique identifier of the user assigned to the todo",
                                      "type": "integer"
                                    }
                                  },
                                  "title": "Todo",
                                  "type": "object",
                                  "x-stoplight": {
                                    "id": "weym60vlwuhf7"
                                  }
                                },
                                {
                                  "properties": {
                                    "tags": {
                                      "items": {
                                        "allOf": [
                                          {
                                            "description": "A tag",
                                            "properties": {
                                              "color": {
                                                "description": "The color used for reporting",
                                                "type": "string"
                                              },
                                              "is_active": {
                                                "description": "Whether or not the tag is archived",
                                                "type": "integer"
                                              },
                                              "name": {
                                                "description": "The name of the tag",
                                                "type": "string"
                                              },
                                              "tag_id": {
                                                "description": "Unique identifier",
                                                "type": "integer"
                                              },
                                              "tag_list_id": {
                                                "description": "Unique identifier of the tag list which the tag belongs to",
                                                "type": "integer"
                                              }
                                            },
                                            "required": [
                                              "tag_list_id",
                                              "name"
                                            ],
                                            "title": "Tag",
                                            "type": "object",
                                            "x-examples": {},
                                            "x-stoplight": {
                                              "id": "iwk9zguiajgif"
                                            }
                                          },
                                          {
                                            "properties": {
                                              "tag_list": {
                                                "properties": {
                                                  "color": {
                                                    "description": "The color used for reporting",
                                                    "type": "string"
                                                  },
                                                  "is_active": {
                                                    "description": "Whether or not the tag list is archived",
                                                    "type": "integer"
                                                  },
                                                  "name": {
                                                    "description": "The name of the tag list",
                                                    "type": "string"
                                                  },
                                                  "tag_list_id": {
                                                    "description": "Unique identifier",
                                                    "type": "integer"
                                                  },
                                                  "text_color": {
                                                    "description": "The color of the text used for reporting",
                                                    "type": "string"
                                                  }
                                                },
                                                "required": [
                                                  "name",
                                                  "color",
                                                  "text_color"
                                                ],
                                                "type": "object",
                                                "x-examples": {},
                                                "x-stoplight": {
                                                  "id": "z8r3lwt40nihp"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          }
                                        ]
                                      },
                                      "type": "array"
                                    },
                                    "users": {
                                      "items": {
                                        "description": "User",
                                        "properties": {
                                          "apple_id": {
                                            "description": "Apple unique identifier of the user",
                                            "type": "string"
                                          },
                                          "created_date": {
                                            "description": "Date of creation of the user",
                                            "type": "string"
                                          },
                                          "department": {
                                            "description": "The user's department",
                                            "type": "string"
                                          },
                                          "email": {
                                            "description": "Email of the user, must be unique",
                                            "type": "string"
                                          },
                                          "enabled": {
                                            "description": "Tells if the user is archived or not",
                                            "type": "integer"
                                          },
                                          "google_id": {
                                            "description": "Google unique identifier of the user",
                                            "type": "string"
                                          },
                                          "group_id": {
                                            "description": "Unique identifier of the group to which the user belongs to",
                                            "type": "integer"
                                          },
                                          "is_admin": {
                                            "description": "Whether or not the user is an admin of the account",
                                            "type": "boolean"
                                          },
                                          "is_gm": {
                                            "description": "Whether or not the user is a group manager of his group",
                                            "type": "boolean"
                                          },
                                          "is_owner": {
                                            "description": "Whether or not the user is an owner of the account",
                                            "type": "boolean"
                                          },
                                          "job_title": {
                                            "description": "The job title of the user in the company",
                                            "type": "string"
                                          },
                                          "microsoft_id": {
                                            "description": "Microsoft unique identifier of the user",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "Name of the user",
                                            "type": "string"
                                          },
                                          "role": {
                                            "description": "The role of the user in the company.",
                                            "type": "string"
                                          },
                                          "settings_dailyemail_time": {
                                            "description": "Hour of the day in which the user receives the daily email",
                                            "type": "integer"
                                          },
                                          "settings_emails_automation_enabled": {
                                            "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                            "type": "integer"
                                          },
                                          "settings_emails_dailyrecap_enabled": {
                                            "description": "Whether or not the daily recap email is enabled fro the user",
                                            "type": "integer"
                                          },
                                          "settings_emails_developer_enabled": {
                                            "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                            "type": "integer"
                                          },
                                          "settings_emails_newsletter_enabled": {
                                            "description": "Whether or not the newsletter emails are enabled fro the user",
                                            "type": "integer"
                                          },
                                          "settings_emails_onboarding_enabled": {
                                            "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                            "type": "integer"
                                          },
                                          "settings_emails_status_day": {
                                            "description": "Day of the week in which the user receives the status email",
                                            "type": "integer"
                                          },
                                          "settings_emails_status_enabled": {
                                            "description": "Whether or not the email containing the status update is enabled fro the user",
                                            "type": "integer"
                                          },
                                          "settings_emails_status_time": {
                                            "description": "Hour of the day in which the user receives the status email",
                                            "type": "integer"
                                          },
                                          "settings_emails_system_enabled": {
                                            "description": "Whether or not the system emails are enabled fro the user",
                                            "type": "integer"
                                          },
                                          "settings_emails_timerssaved_enabled": {
                                            "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                            "type": "integer"
                                          },
                                          "user_hourly_cost": {
                                            "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                            "type": "string"
                                          },
                                          "user_hourly_rate": {
                                            "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                            "type": "string"
                                          },
                                          "user_id": {
                                            "description": "Unique identifier of the user",
                                            "type": "integer"
                                          },
                                          "working_time": {
                                            "description": "How many hours the user is usually working on a day",
                                            "type": "integer"
                                          },
                                          "workspace_access_level": {
                                            "description": "The role of the user in Timeneye: owner, admin or member",
                                            "type": "string"
                                          }
                                        },
                                        "title": "User",
                                        "type": "object",
                                        "x-examples": {},
                                        "x-stoplight": {
                                          "id": "8r0gf5rqoxwwv"
                                        }
                                      },
                                      "type": "array"
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "type": "array"
                          }
                        }
                      }
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Todos"
        ],
        "description": "Get a list of todos",
        "operationId": "Get-todos",
        "summary": "List Todos",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-todos"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "description": {
                  "description": "Description of the todo",
                  "type": "string"
                },
                "due_date": {
                  "description": "The data by which the todo should be completed",
                  "example": "2023-01-01",
                  "type": "string"
                },
                "index": {
                  "description": "The index of the todo in the list (order)",
                  "type": "integer"
                },
                "is_completed": {
                  "description": "Whether or not the todo is marked as done",
                  "type": "boolean"
                },
                "name": {
                  "description": "Title of the todo",
                  "type": "string"
                },
                "priority": {
                  "description": "Whether or not the todo is marked as done",
                  "enum": [
                    "high",
                    "medium",
                    "low"
                  ],
                  "type": "string",
                  "x-nullable": true
                },
                "start_date": {
                  "description": "The date in which the todo should be taken in charge",
                  "type": "string"
                },
                "status": {
                  "default": "todo",
                  "description": "The current status of the todo",
                  "enum": [
                    "todo",
                    "in_progress",
                    "completed"
                  ],
                  "type": "string"
                },
                "tag_ids": {
                  "description": "Array of tag_id to be linked to the todo",
                  "items": {
                    "type": "integer"
                  },
                  "type": "array",
                  "x-nullable": true
                },
                "todo_list_id": {
                  "description": "Unique identifier of the todo list which the todo belongs to",
                  "type": "integer"
                },
                "user_id": {
                  "description": "Unique identifier of the user assigned to the todo",
                  "type": "integer"
                },
                "user_ids": {
                  "description": "Array of user_id representing users that are assigned to the todo",
                  "items": {
                    "type": "integer"
                  },
                  "type": "array",
                  "x-nullable": true
                }
              },
              "required": [
                "todo_list_id",
                "user_id",
                "name"
              ],
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "allOf": [
                {
                  "description": "It is a todo in Timeneye",
                  "properties": {
                    "created_at": {
                      "description": "Created date and time",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "description": {
                      "description": "Description of the todo",
                      "type": "string"
                    },
                    "due_date": {
                      "description": "The data by which the todo should be completed",
                      "example": "2023-01-01",
                      "type": "string",
                      "x-nullable": true
                    },
                    "index": {
                      "description": "The index of the todo in the list (order)",
                      "type": "integer"
                    },
                    "is_completed": {
                      "description": "Whether or not the todo is marked as done",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Title of the todo",
                      "type": "string"
                    },
                    "priority": {
                      "description": "Priority of the todo",
                      "type": "string"
                    },
                    "start_date": {
                      "description": "The date in which the todo should be taken in charge",
                      "example": "2023-01-01",
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "description": "The current status of the todo",
                      "type": "string"
                    },
                    "todo_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "todo_list_id": {
                      "description": "Unique identifier of the todo list which the todo belongs to",
                      "type": "integer",
                      "x-nullable": true
                    },
                    "updated_at": {
                      "description": "Updated date and time",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Unique identifier of the user assigned to the todo",
                      "type": "integer",
                      "x-nullable": true
                    }
                  },
                  "title": "Todo",
                  "type": "object",
                  "x-stoplight": {
                    "id": "weym60vlwuhf7"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A tag",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag",
                                "type": "string"
                              },
                              "tag_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier of the tag list which the tag belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "tag_list_id",
                              "name"
                            ],
                            "title": "Tag",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "iwk9zguiajgif"
                            }
                          },
                          {
                            "properties": {
                              "tag_list": {
                                "properties": {
                                  "color": {
                                    "description": "The color used for reporting",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Whether or not the tag list is archived",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the tag list",
                                    "type": "string"
                                  },
                                  "tag_list_id": {
                                    "description": "Unique identifier",
                                    "type": "integer"
                                  },
                                  "text_color": {
                                    "description": "The color of the text used for reporting",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "color",
                                  "text_color"
                                ],
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "z8r3lwt40nihp"
                                }
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "todo_list": {
                      "allOf": [
                        {
                          "properties": {
                            "color": {
                              "description": "The color used for reporting",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Created date and time",
                              "type": "string"
                            },
                            "index": {
                              "description": "The index of the todo list in the board (order)",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the todo list",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Unique identifier of the project which the todo list belongs to",
                              "type": "integer"
                            },
                            "todo_list_id": {
                              "description": "Unique identifier",
                              "type": "integer"
                            },
                            "updated_at": {
                              "description": "Updated date and time",
                              "type": "string"
                            }
                          },
                          "title": "TodoList",
                          "type": "object",
                          "x-stoplight": {
                            "id": "1363raammdbed"
                          }
                        },
                        {
                          "properties": {
                            "project": {
                              "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                              "properties": {
                                "api_only": {
                                  "description": "Whether or not the project is usable for tracking time only using a third party app.",
                                  "type": "integer"
                                },
                                "client_id": {
                                  "description": "Unique identifier of a client that the project belongs to",
                                  "type": "integer"
                                },
                                "color": {
                                  "description": "The color used for reporting",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "A text description of the project",
                                  "type": "string"
                                },
                                "hourly_rate": {
                                  "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Whether or not the project is archived",
                                  "type": "integer"
                                },
                                "is_billable": {
                                  "description": "Whether or not the project is billable per hour",
                                  "type": "integer"
                                },
                                "is_public": {
                                  "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "The project's name",
                                  "type": "string"
                                },
                                "project_id": {
                                  "description": "Unique identifier",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "title": "Project",
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "aa7t79mq3m8d2"
                              }
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "users": {
                      "items": {
                        "allOf": [
                          {
                            "description": "User",
                            "properties": {
                              "apple_id": {
                                "description": "Apple unique identifier of the user",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Date of creation of the user",
                                "type": "string"
                              },
                              "department": {
                                "description": "The user's department",
                                "type": "string"
                              },
                              "email": {
                                "description": "Email of the user, must be unique",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Tells if the user is archived or not",
                                "type": "integer"
                              },
                              "google_id": {
                                "description": "Google unique identifier of the user",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Unique identifier of the group to which the user belongs to",
                                "type": "integer"
                              },
                              "is_admin": {
                                "description": "Whether or not the user is an admin of the account",
                                "type": "boolean"
                              },
                              "is_gm": {
                                "description": "Whether or not the user is a group manager of his group",
                                "type": "boolean"
                              },
                              "is_owner": {
                                "description": "Whether or not the user is an owner of the account",
                                "type": "boolean"
                              },
                              "job_title": {
                                "description": "The job title of the user in the company",
                                "type": "string"
                              },
                              "microsoft_id": {
                                "description": "Microsoft unique identifier of the user",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user",
                                "type": "string"
                              },
                              "role": {
                                "description": "The role of the user in the company.",
                                "type": "string"
                              },
                              "settings_dailyemail_time": {
                                "description": "Hour of the day in which the user receives the daily email",
                                "type": "integer"
                              },
                              "settings_emails_automation_enabled": {
                                "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                "type": "integer"
                              },
                              "settings_emails_dailyrecap_enabled": {
                                "description": "Whether or not the daily recap email is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_developer_enabled": {
                                "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_newsletter_enabled": {
                                "description": "Whether or not the newsletter emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_onboarding_enabled": {
                                "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                "type": "integer"
                              },
                              "settings_emails_status_day": {
                                "description": "Day of the week in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_status_enabled": {
                                "description": "Whether or not the email containing the status update is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_status_time": {
                                "description": "Hour of the day in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_system_enabled": {
                                "description": "Whether or not the system emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_timerssaved_enabled": {
                                "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                "type": "integer"
                              },
                              "user_hourly_cost": {
                                "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_hourly_rate": {
                                "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Unique identifier of the user",
                                "type": "integer"
                              },
                              "working_time": {
                                "description": "How many hours the user is usually working on a day",
                                "type": "integer"
                              },
                              "workspace_access_level": {
                                "description": "The role of the user in Timeneye: owner, admin or member",
                                "type": "string"
                              }
                            },
                            "title": "User",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "8r0gf5rqoxwwv"
                            }
                          },
                          {
                            "properties": {
                              "avatar": {
                                "description": "An avatar that can be linked to an Account or to a User",
                                "properties": {
                                  "account_id": {
                                    "description": "Identifier of the account which has this avatar",
                                    "type": "integer"
                                  },
                                  "avatar_name": {
                                    "description": "unique file name",
                                    "type": "string"
                                  },
                                  "avatar_url": {
                                    "description": "Image url",
                                    "type": "string"
                                  },
                                  "user_id": {
                                    "description": "Identifier of the user which has this avatar",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "rmwkjif7pfhgs"
                                }
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              ],
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Todos"
        ],
        "description": "Create a todo",
        "operationId": "Post-todos",
        "summary": "Create a Todo",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#create-a-todo"
        }
      }
    },
    "/{connectionId}/todos/{todo}": {
      "parameters": [
        {
          "in": "path",
          "name": "todo",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "todo",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Todos"
        ],
        "description": "Deletes a todo",
        "operationId": "Delete-todos-todo_id",
        "summary": "Delete a Todo",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-todo"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "todo",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "It is a todo in Timeneye",
                  "properties": {
                    "created_at": {
                      "description": "Created date and time",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "description": {
                      "description": "Description of the todo",
                      "type": "string"
                    },
                    "due_date": {
                      "description": "The data by which the todo should be completed",
                      "example": "2023-01-01",
                      "type": "string",
                      "x-nullable": true
                    },
                    "index": {
                      "description": "The index of the todo in the list (order)",
                      "type": "integer"
                    },
                    "is_completed": {
                      "description": "Whether or not the todo is marked as done",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Title of the todo",
                      "type": "string"
                    },
                    "priority": {
                      "description": "Priority of the todo",
                      "type": "string"
                    },
                    "start_date": {
                      "description": "The date in which the todo should be taken in charge",
                      "example": "2023-01-01",
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "description": "The current status of the todo",
                      "type": "string"
                    },
                    "todo_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "todo_list_id": {
                      "description": "Unique identifier of the todo list which the todo belongs to",
                      "type": "integer",
                      "x-nullable": true
                    },
                    "updated_at": {
                      "description": "Updated date and time",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Unique identifier of the user assigned to the todo",
                      "type": "integer",
                      "x-nullable": true
                    }
                  },
                  "title": "Todo",
                  "type": "object",
                  "x-stoplight": {
                    "id": "weym60vlwuhf7"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A tag",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag",
                                "type": "string"
                              },
                              "tag_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier of the tag list which the tag belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "tag_list_id",
                              "name"
                            ],
                            "title": "Tag",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "iwk9zguiajgif"
                            }
                          },
                          {
                            "properties": {
                              "tag_list": {
                                "properties": {
                                  "color": {
                                    "description": "The color used for reporting",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Whether or not the tag list is archived",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the tag list",
                                    "type": "string"
                                  },
                                  "tag_list_id": {
                                    "description": "Unique identifier",
                                    "type": "integer"
                                  },
                                  "text_color": {
                                    "description": "The color of the text used for reporting",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "color",
                                  "text_color"
                                ],
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "z8r3lwt40nihp"
                                }
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "todo_list": {
                      "allOf": [
                        {
                          "properties": {
                            "color": {
                              "description": "The color used for reporting",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Created date and time",
                              "type": "string"
                            },
                            "index": {
                              "description": "The index of the todo list in the board (order)",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the todo list",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Unique identifier of the project which the todo list belongs to",
                              "type": "integer"
                            },
                            "todo_list_id": {
                              "description": "Unique identifier",
                              "type": "integer"
                            },
                            "updated_at": {
                              "description": "Updated date and time",
                              "type": "string"
                            }
                          },
                          "title": "TodoList",
                          "type": "object",
                          "x-stoplight": {
                            "id": "1363raammdbed"
                          }
                        },
                        {
                          "properties": {
                            "project": {
                              "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                              "properties": {
                                "api_only": {
                                  "description": "Whether or not the project is usable for tracking time only using a third party app.",
                                  "type": "integer"
                                },
                                "client_id": {
                                  "description": "Unique identifier of a client that the project belongs to",
                                  "type": "integer"
                                },
                                "color": {
                                  "description": "The color used for reporting",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "A text description of the project",
                                  "type": "string"
                                },
                                "hourly_rate": {
                                  "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Whether or not the project is archived",
                                  "type": "integer"
                                },
                                "is_billable": {
                                  "description": "Whether or not the project is billable per hour",
                                  "type": "integer"
                                },
                                "is_public": {
                                  "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "The project's name",
                                  "type": "string"
                                },
                                "project_id": {
                                  "description": "Unique identifier",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "title": "Project",
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "aa7t79mq3m8d2"
                              }
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "users": {
                      "items": {
                        "allOf": [
                          {
                            "description": "User",
                            "properties": {
                              "apple_id": {
                                "description": "Apple unique identifier of the user",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Date of creation of the user",
                                "type": "string"
                              },
                              "department": {
                                "description": "The user's department",
                                "type": "string"
                              },
                              "email": {
                                "description": "Email of the user, must be unique",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Tells if the user is archived or not",
                                "type": "integer"
                              },
                              "google_id": {
                                "description": "Google unique identifier of the user",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Unique identifier of the group to which the user belongs to",
                                "type": "integer"
                              },
                              "is_admin": {
                                "description": "Whether or not the user is an admin of the account",
                                "type": "boolean"
                              },
                              "is_gm": {
                                "description": "Whether or not the user is a group manager of his group",
                                "type": "boolean"
                              },
                              "is_owner": {
                                "description": "Whether or not the user is an owner of the account",
                                "type": "boolean"
                              },
                              "job_title": {
                                "description": "The job title of the user in the company",
                                "type": "string"
                              },
                              "microsoft_id": {
                                "description": "Microsoft unique identifier of the user",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user",
                                "type": "string"
                              },
                              "role": {
                                "description": "The role of the user in the company.",
                                "type": "string"
                              },
                              "settings_dailyemail_time": {
                                "description": "Hour of the day in which the user receives the daily email",
                                "type": "integer"
                              },
                              "settings_emails_automation_enabled": {
                                "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                "type": "integer"
                              },
                              "settings_emails_dailyrecap_enabled": {
                                "description": "Whether or not the daily recap email is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_developer_enabled": {
                                "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_newsletter_enabled": {
                                "description": "Whether or not the newsletter emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_onboarding_enabled": {
                                "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                "type": "integer"
                              },
                              "settings_emails_status_day": {
                                "description": "Day of the week in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_status_enabled": {
                                "description": "Whether or not the email containing the status update is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_status_time": {
                                "description": "Hour of the day in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_system_enabled": {
                                "description": "Whether or not the system emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_timerssaved_enabled": {
                                "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                "type": "integer"
                              },
                              "user_hourly_cost": {
                                "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_hourly_rate": {
                                "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Unique identifier of the user",
                                "type": "integer"
                              },
                              "working_time": {
                                "description": "How many hours the user is usually working on a day",
                                "type": "integer"
                              },
                              "workspace_access_level": {
                                "description": "The role of the user in Timeneye: owner, admin or member",
                                "type": "string"
                              }
                            },
                            "title": "User",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "8r0gf5rqoxwwv"
                            }
                          },
                          {
                            "properties": {
                              "avatar": {
                                "description": "An avatar that can be linked to an Account or to a User",
                                "properties": {
                                  "account_id": {
                                    "description": "Identifier of the account which has this avatar",
                                    "type": "integer"
                                  },
                                  "avatar_name": {
                                    "description": "unique file name",
                                    "type": "string"
                                  },
                                  "avatar_url": {
                                    "description": "Image url",
                                    "type": "string"
                                  },
                                  "user_id": {
                                    "description": "Identifier of the user which has this avatar",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "rmwkjif7pfhgs"
                                }
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              ],
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Todos"
        ],
        "description": "Gets a single todo",
        "operationId": "Get-todos-todo_id",
        "summary": "Get a Todo",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-todo"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "todo",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "description": {
                  "description": "Description of the todo",
                  "type": "string"
                },
                "due_date": {
                  "description": "The data by which the todo should be completed",
                  "example": "2023-01-01",
                  "type": "string"
                },
                "index": {
                  "description": "The index of the todo in the list (order)",
                  "type": "integer"
                },
                "is_completed": {
                  "description": "Whether or not the todo is marked as done",
                  "type": "boolean"
                },
                "name": {
                  "description": "Title of the todo",
                  "type": "string"
                },
                "priority": {
                  "description": "Whether or not the todo is marked as done",
                  "enum": [
                    "high",
                    "medium",
                    "low"
                  ],
                  "type": "string",
                  "x-nullable": true
                },
                "project_id": {
                  "description": "Unique identifier of the project which the todo belongs to",
                  "type": "integer"
                },
                "start_date": {
                  "description": "The date in which the todo should be taken in charge",
                  "type": "string"
                },
                "status": {
                  "default": "todo",
                  "description": "The current status of the todo",
                  "enum": [
                    "todo",
                    "in_progress",
                    "completed"
                  ],
                  "type": "string"
                },
                "tag_ids": {
                  "description": "Array of tag_id to be linked to the todo",
                  "items": {
                    "type": "integer"
                  },
                  "type": "array",
                  "x-nullable": true
                },
                "todo_list_id": {
                  "description": "Unique identifier of the todo list which the todo belongs to",
                  "type": "integer"
                },
                "user_id": {
                  "description": "Unique identifier of the user assigned to the todo",
                  "type": "integer"
                },
                "user_ids": {
                  "description": "Array of user_id representing users that are assigned to the todo",
                  "items": {
                    "type": "integer"
                  },
                  "type": "array",
                  "x-nullable": true
                }
              },
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "It is a todo in Timeneye",
                  "properties": {
                    "created_at": {
                      "description": "Created date and time",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "description": {
                      "description": "Description of the todo",
                      "type": "string"
                    },
                    "due_date": {
                      "description": "The data by which the todo should be completed",
                      "example": "2023-01-01",
                      "type": "string",
                      "x-nullable": true
                    },
                    "index": {
                      "description": "The index of the todo in the list (order)",
                      "type": "integer"
                    },
                    "is_completed": {
                      "description": "Whether or not the todo is marked as done",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Title of the todo",
                      "type": "string"
                    },
                    "priority": {
                      "description": "Priority of the todo",
                      "type": "string"
                    },
                    "start_date": {
                      "description": "The date in which the todo should be taken in charge",
                      "example": "2023-01-01",
                      "type": "string",
                      "x-nullable": true
                    },
                    "status": {
                      "description": "The current status of the todo",
                      "type": "string"
                    },
                    "todo_id": {
                      "description": "Unique identifier",
                      "type": "integer"
                    },
                    "todo_list_id": {
                      "description": "Unique identifier of the todo list which the todo belongs to",
                      "type": "integer",
                      "x-nullable": true
                    },
                    "updated_at": {
                      "description": "Updated date and time",
                      "example": "2023-01-01 10:00:00",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Unique identifier of the user assigned to the todo",
                      "type": "integer",
                      "x-nullable": true
                    }
                  },
                  "title": "Todo",
                  "type": "object",
                  "x-stoplight": {
                    "id": "weym60vlwuhf7"
                  }
                },
                {
                  "properties": {
                    "tags": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A tag",
                            "properties": {
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the tag is archived",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The name of the tag",
                                "type": "string"
                              },
                              "tag_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              },
                              "tag_list_id": {
                                "description": "Unique identifier of the tag list which the tag belongs to",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "tag_list_id",
                              "name"
                            ],
                            "title": "Tag",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "iwk9zguiajgif"
                            }
                          },
                          {
                            "properties": {
                              "tag_list": {
                                "properties": {
                                  "color": {
                                    "description": "The color used for reporting",
                                    "type": "string"
                                  },
                                  "is_active": {
                                    "description": "Whether or not the tag list is archived",
                                    "type": "integer"
                                  },
                                  "name": {
                                    "description": "The name of the tag list",
                                    "type": "string"
                                  },
                                  "tag_list_id": {
                                    "description": "Unique identifier",
                                    "type": "integer"
                                  },
                                  "text_color": {
                                    "description": "The color of the text used for reporting",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "color",
                                  "text_color"
                                ],
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "z8r3lwt40nihp"
                                }
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    },
                    "todo_list": {
                      "allOf": [
                        {
                          "properties": {
                            "color": {
                              "description": "The color used for reporting",
                              "type": "string"
                            },
                            "created_at": {
                              "description": "Created date and time",
                              "type": "string"
                            },
                            "index": {
                              "description": "The index of the todo list in the board (order)",
                              "type": "integer"
                            },
                            "name": {
                              "description": "Name of the todo list",
                              "type": "string"
                            },
                            "project_id": {
                              "description": "Unique identifier of the project which the todo list belongs to",
                              "type": "integer"
                            },
                            "todo_list_id": {
                              "description": "Unique identifier",
                              "type": "integer"
                            },
                            "updated_at": {
                              "description": "Updated date and time",
                              "type": "string"
                            }
                          },
                          "title": "TodoList",
                          "type": "object",
                          "x-stoplight": {
                            "id": "1363raammdbed"
                          }
                        },
                        {
                          "properties": {
                            "project": {
                              "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                              "properties": {
                                "api_only": {
                                  "description": "Whether or not the project is usable for tracking time only using a third party app.",
                                  "type": "integer"
                                },
                                "client_id": {
                                  "description": "Unique identifier of a client that the project belongs to",
                                  "type": "integer"
                                },
                                "color": {
                                  "description": "The color used for reporting",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "A text description of the project",
                                  "type": "string"
                                },
                                "hourly_rate": {
                                  "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                                  "type": "string"
                                },
                                "is_active": {
                                  "description": "Whether or not the project is archived",
                                  "type": "integer"
                                },
                                "is_billable": {
                                  "description": "Whether or not the project is billable per hour",
                                  "type": "integer"
                                },
                                "is_public": {
                                  "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "The project's name",
                                  "type": "string"
                                },
                                "project_id": {
                                  "description": "Unique identifier",
                                  "type": "integer"
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "title": "Project",
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "aa7t79mq3m8d2"
                              }
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "users": {
                      "items": {
                        "allOf": [
                          {
                            "description": "User",
                            "properties": {
                              "apple_id": {
                                "description": "Apple unique identifier of the user",
                                "type": "string"
                              },
                              "created_date": {
                                "description": "Date of creation of the user",
                                "type": "string"
                              },
                              "department": {
                                "description": "The user's department",
                                "type": "string"
                              },
                              "email": {
                                "description": "Email of the user, must be unique",
                                "type": "string"
                              },
                              "enabled": {
                                "description": "Tells if the user is archived or not",
                                "type": "integer"
                              },
                              "google_id": {
                                "description": "Google unique identifier of the user",
                                "type": "string"
                              },
                              "group_id": {
                                "description": "Unique identifier of the group to which the user belongs to",
                                "type": "integer"
                              },
                              "is_admin": {
                                "description": "Whether or not the user is an admin of the account",
                                "type": "boolean"
                              },
                              "is_gm": {
                                "description": "Whether or not the user is a group manager of his group",
                                "type": "boolean"
                              },
                              "is_owner": {
                                "description": "Whether or not the user is an owner of the account",
                                "type": "boolean"
                              },
                              "job_title": {
                                "description": "The job title of the user in the company",
                                "type": "string"
                              },
                              "microsoft_id": {
                                "description": "Microsoft unique identifier of the user",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the user",
                                "type": "string"
                              },
                              "role": {
                                "description": "The role of the user in the company.",
                                "type": "string"
                              },
                              "settings_dailyemail_time": {
                                "description": "Hour of the day in which the user receives the daily email",
                                "type": "integer"
                              },
                              "settings_emails_automation_enabled": {
                                "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                                "type": "integer"
                              },
                              "settings_emails_dailyrecap_enabled": {
                                "description": "Whether or not the daily recap email is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_developer_enabled": {
                                "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_newsletter_enabled": {
                                "description": "Whether or not the newsletter emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_onboarding_enabled": {
                                "description": "Whether or not the emails to guide the user through the trial period are enabled",
                                "type": "integer"
                              },
                              "settings_emails_status_day": {
                                "description": "Day of the week in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_status_enabled": {
                                "description": "Whether or not the email containing the status update is enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_status_time": {
                                "description": "Hour of the day in which the user receives the status email",
                                "type": "integer"
                              },
                              "settings_emails_system_enabled": {
                                "description": "Whether or not the system emails are enabled fro the user",
                                "type": "integer"
                              },
                              "settings_emails_timerssaved_enabled": {
                                "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                                "type": "integer"
                              },
                              "user_hourly_cost": {
                                "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_hourly_rate": {
                                "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Unique identifier of the user",
                                "type": "integer"
                              },
                              "working_time": {
                                "description": "How many hours the user is usually working on a day",
                                "type": "integer"
                              },
                              "workspace_access_level": {
                                "description": "The role of the user in Timeneye: owner, admin or member",
                                "type": "string"
                              }
                            },
                            "title": "User",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "8r0gf5rqoxwwv"
                            }
                          },
                          {
                            "properties": {
                              "avatar": {
                                "description": "An avatar that can be linked to an Account or to a User",
                                "properties": {
                                  "account_id": {
                                    "description": "Identifier of the account which has this avatar",
                                    "type": "integer"
                                  },
                                  "avatar_name": {
                                    "description": "unique file name",
                                    "type": "string"
                                  },
                                  "avatar_url": {
                                    "description": "Image url",
                                    "type": "string"
                                  },
                                  "user_id": {
                                    "description": "Identifier of the user which has this avatar",
                                    "type": "integer"
                                  }
                                },
                                "type": "object",
                                "x-examples": {},
                                "x-stoplight": {
                                  "id": "rmwkjif7pfhgs"
                                }
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  }
                }
              ],
              "type": "object"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Todos"
        ],
        "description": "Updates a todo",
        "operationId": "Put-todos-todo_id",
        "summary": "Update a Todo",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-todo"
        }
      }
    },
    "/{connectionId}/users": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          },
          {
            "description": "The currently displayed page",
            "in": "query",
            "minimum": 1,
            "name": "page",
            "type": "integer"
          },
          {
            "description": "How many items per page",
            "in": "query",
            "name": "per_page",
            "type": "integer"
          },
          {
            "description": "The attribute to sort by",
            "in": "query",
            "name": "sort_by",
            "type": "string"
          },
          {
            "default": "asc",
            "description": "The sort direction",
            "enum": [
              "asc",
              "desc"
            ],
            "in": "query",
            "name": "direction",
            "type": "string"
          },
          {
            "description": "Full text search",
            "in": "query",
            "name": "text",
            "type": "string"
          },
          {
            "description": "Search the users by name",
            "enum": [
              "todos"
            ],
            "in": "query",
            "name": "name",
            "type": "string"
          },
          {
            "description": "Search the users by email",
            "in": "query",
            "name": "email",
            "type": "string"
          },
          {
            "description": "Search the users by status",
            "enum": [
              "active",
              "inactive"
            ],
            "in": "query",
            "name": "status",
            "type": "string"
          },
          {
            "description": "Search the users by active status",
            "in": "query",
            "name": "active",
            "type": "boolean"
          },
          {
            "description": "A comma separated list of group ids to filter by",
            "in": "query",
            "name": "group_ids[]",
            "type": "string"
          },
          {
            "description": "Search the users that belong to a group",
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "description": "A comma separated list of user ids to filter by",
            "in": "query",
            "name": "member_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of project ids to filter by",
            "in": "query",
            "name": "project_ids[]",
            "type": "string"
          },
          {
            "description": "A comma separated list of client ids to filter by",
            "in": "query",
            "name": "client_ids[]",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "current_page": {
                  "type": "integer"
                },
                "data": {
                  "items": {
                    "allOf": [
                      {
                        "description": "User",
                        "properties": {
                          "apple_id": {
                            "description": "Apple unique identifier of the user",
                            "type": "string"
                          },
                          "created_date": {
                            "description": "Date of creation of the user",
                            "type": "string"
                          },
                          "department": {
                            "description": "The user's department",
                            "type": "string",
                            "x-nullable": true
                          },
                          "email": {
                            "description": "Email of the user, must be unique",
                            "type": "string"
                          },
                          "enabled": {
                            "description": "Tells if the user is archived or not",
                            "type": "integer"
                          },
                          "google_id": {
                            "description": "Google unique identifier of the user",
                            "type": "string"
                          },
                          "group_id": {
                            "description": "Unique identifier of the group to which the user belongs to",
                            "type": "integer"
                          },
                          "is_admin": {
                            "description": "Whether or not the user is an admin of the account",
                            "type": "boolean"
                          },
                          "is_gm": {
                            "description": "Whether or not the user is a group manager of his group",
                            "type": "boolean"
                          },
                          "is_owner": {
                            "description": "Whether or not the user is an owner of the account",
                            "type": "boolean"
                          },
                          "job_title": {
                            "description": "The job title of the user in the company",
                            "type": "string"
                          },
                          "microsoft_id": {
                            "description": "Microsoft unique identifier of the user",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the user",
                            "type": "string"
                          },
                          "role": {
                            "description": "The role of the user in the company.",
                            "type": "string",
                            "x-nullable": true
                          },
                          "settings_dailyemail_time": {
                            "description": "Hour of the day in which the user receives the daily email",
                            "type": "integer"
                          },
                          "settings_emails_automation_enabled": {
                            "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                            "type": "integer"
                          },
                          "settings_emails_dailyrecap_enabled": {
                            "description": "Whether or not the daily recap email is enabled fro the user",
                            "type": "integer"
                          },
                          "settings_emails_developer_enabled": {
                            "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                            "type": "integer"
                          },
                          "settings_emails_newsletter_enabled": {
                            "description": "Whether or not the newsletter emails are enabled fro the user",
                            "type": "integer"
                          },
                          "settings_emails_onboarding_enabled": {
                            "description": "Whether or not the emails to guide the user through the trial period are enabled",
                            "type": "integer"
                          },
                          "settings_emails_status_day": {
                            "description": "Day of the week in which the user receives the status email",
                            "type": "integer"
                          },
                          "settings_emails_status_enabled": {
                            "description": "Whether or not the email containing the status update is enabled fro the user",
                            "type": "integer"
                          },
                          "settings_emails_status_time": {
                            "description": "Hour of the day in which the user receives the status email",
                            "type": "integer"
                          },
                          "settings_emails_system_enabled": {
                            "description": "Whether or not the system emails are enabled fro the user",
                            "type": "integer"
                          },
                          "settings_emails_timerssaved_enabled": {
                            "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                            "type": "integer"
                          },
                          "user_hourly_cost": {
                            "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                            "type": "string"
                          },
                          "user_hourly_rate": {
                            "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                            "type": "string"
                          },
                          "user_id": {
                            "description": "Unique identifier of the user",
                            "type": "integer"
                          },
                          "working_time": {
                            "description": "How many hours the user is usually working on a day",
                            "type": "integer"
                          },
                          "workspace_access_level": {
                            "description": "The role of the user in Timeneye: owner, admin or member",
                            "type": "string"
                          }
                        },
                        "title": "User",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "8r0gf5rqoxwwv"
                        }
                      },
                      {
                        "properties": {
                          "account": {
                            "properties": {
                              "account_name": {
                                "description": "The name of the account, usually the Company name.",
                                "type": "string"
                              },
                              "billing_enabled": {
                                "description": "Whether or not a subscription is active for the account",
                                "type": "boolean"
                              },
                              "created_date": {
                                "description": "Date of creation",
                                "example": "2023-01-01 10:00:00",
                                "type": "string"
                              },
                              "expiration": {
                                "description": "Date of license (or trial period) expiration",
                                "example": "2023-01-01",
                                "type": "string"
                              },
                              "is_trial": {
                                "type": "boolean"
                              },
                              "settings": {
                                "properties": {
                                  "adminNewEntryForOthers": {
                                    "description": "Whether o",
                                    "type": "integer"
                                  },
                                  "allow_apps": {
                                    "description": "Whether or not the third party a",
                                    "type": "integer"
                                  },
                                  "authenticationMethod": {
                                    "description": "Authen",
                                    "properties": {
                                      "allow_password_login": {
                                        "description": "Whether or not the login with email + password is allowed",
                                        "type": "integer"
                                      },
                                      "idp_cert": {
                                        "description": "Certificate of the identity provider (used with type = saml)",
                                        "type": "string"
                                      },
                                      "idp_entity_id": {
                                        "description": "Id of the identity provider (used with type = saml)",
                                        "type": "string"
                                      },
                                      "idp_sso_url": {
                                        "description": "Single Sign on URL (used with type = saml)",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type of login method",
                                        "enum": [
                                          "all",
                                          "google",
                                          "microsoft",
                                          "saml"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "companyName": {
                                    "description": "The name of the company, could be different from account_name",
                                    "type": "string"
                                  },
                                  "currencyCode": {
                                    "description": "Code of the used currency",
                                    "type": "string"
                                  },
                                  "entries_lock_automation": {
                                    "description": "Describes the automatic entry lock parameters",
                                    "properties": {
                                      "enabled": {
                                        "description": "Whether or not the entry lock automation is enabled",
                                        "type": "boolean"
                                      },
                                      "interval": {
                                        "description": "Interval of the entry lock",
                                        "enum": [
                                          "weekly",
                                          "monthly",
                                          "0"
                                        ],
                                        "type": "string"
                                      },
                                      "interval_target": {
                                        "description": "Between 1 and 31 if the interval is monthly (the day of the month), Between 0 and 6i if the interval is weekly ",
                                        "type": "integer",
                                        "x-nullable": true
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "memberAverageCost": {
                                    "description": "Indicates the average labour cost for the account members",
                                    "type": "integer"
                                  },
                                  "prosett_clientMode": {
                                    "description": "Whether or not the client should be displayed in the re",
                                    "type": "integer"
                                  },
                                  "prosett_entriesLock_date": {
                                    "description": "The date of the last entry lock",
                                    "type": "boolean"
                                  },
                                  "prosett_entriesLock_enabled": {
                                    "description": "Whether or not the entry lock system is enabled",
                                    "type": "integer"
                                  },
                                  "showWorkingTime": {
                                    "description": "Whether or not the users can see their working time in their dashboard. (e.g. 7h of 8h)",
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "subscription_limit_users": {
                                "description": "Maximum number of active users allowed in the account due to purchased licenses",
                                "type": "integer"
                              },
                              "trial_expiration": {
                                "description": "Date of trial period expiration",
                                "example": "2023-01-01",
                                "type": "string"
                              }
                            },
                            "title": "Account",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "wlpj5oz3p1xgd"
                            }
                          },
                          "avatar": {
                            "description": "An avatar that can be linked to an Account or to a User",
                            "properties": {
                              "account_id": {
                                "description": "Identifier of the account which has this avatar",
                                "type": "integer"
                              },
                              "avatar_name": {
                                "description": "unique file name",
                                "type": "string"
                              },
                              "avatar_url": {
                                "description": "Image url",
                                "type": "string"
                              },
                              "user_id": {
                                "description": "Identifier of the user which has this avatar",
                                "type": "integer"
                              }
                            },
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "rmwkjif7pfhgs"
                            }
                          },
                          "groups": {
                            "items": {
                              "description": "A group of users",
                              "properties": {
                                "color": {
                                  "description": "The color used for reporting",
                                  "type": "string"
                                },
                                "group_id": {
                                  "description": "Unique identifier",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "Name of the group",
                                  "type": "string"
                                }
                              },
                              "title": "Group",
                              "type": "object",
                              "x-examples": {},
                              "x-stoplight": {
                                "id": "gh9aq1pihfeit"
                              }
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "type": "array"
                },
                "first_page_url": {
                  "type": "string"
                },
                "from": {
                  "type": "integer"
                },
                "last_page": {
                  "type": "integer"
                },
                "last_page_url": {
                  "type": "string"
                },
                "next_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "path": {
                  "type": "string"
                },
                "per_page": {
                  "type": "integer"
                },
                "prev_page_url": {
                  "type": "string",
                  "x-nullable": true
                },
                "to": {
                  "type": "integer"
                },
                "total": {
                  "type": "integer"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Get a list of users",
        "operationId": "Get-user-lists",
        "summary": "List Users",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-users"
        }
      }
    },
    "/{connectionId}/users/{user}": {
      "parameters": [
        {
          "in": "path",
          "name": "user",
          "required": true,
          "type": "string"
        }
      ],
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Deletes a user",
        "operationId": "Delete-users-user_id",
        "summary": "Delete a User",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#delete-a-user"
        }
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "User",
                  "properties": {
                    "apple_id": {
                      "description": "Apple unique identifier of the user",
                      "type": "string"
                    },
                    "created_date": {
                      "description": "Date of creation of the user",
                      "type": "string"
                    },
                    "department": {
                      "description": "The user's department",
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "description": "Email of the user, must be unique",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Tells if the user is archived or not",
                      "type": "integer"
                    },
                    "google_id": {
                      "description": "Google unique identifier of the user",
                      "type": "string"
                    },
                    "group_id": {
                      "description": "Unique identifier of the group to which the user belongs to",
                      "type": "integer"
                    },
                    "is_admin": {
                      "description": "Whether or not the user is an admin of the account",
                      "type": "boolean"
                    },
                    "is_gm": {
                      "description": "Whether or not the user is a group manager of his group",
                      "type": "boolean"
                    },
                    "is_owner": {
                      "description": "Whether or not the user is an owner of the account",
                      "type": "boolean"
                    },
                    "job_title": {
                      "description": "The job title of the user in the company",
                      "type": "string"
                    },
                    "microsoft_id": {
                      "description": "Microsoft unique identifier of the user",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the user",
                      "type": "string"
                    },
                    "role": {
                      "description": "The role of the user in the company.",
                      "type": "string",
                      "x-nullable": true
                    },
                    "settings_dailyemail_time": {
                      "description": "Hour of the day in which the user receives the daily email",
                      "type": "integer"
                    },
                    "settings_emails_automation_enabled": {
                      "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                      "type": "integer"
                    },
                    "settings_emails_dailyrecap_enabled": {
                      "description": "Whether or not the daily recap email is enabled fro the user",
                      "type": "integer"
                    },
                    "settings_emails_developer_enabled": {
                      "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                      "type": "integer"
                    },
                    "settings_emails_newsletter_enabled": {
                      "description": "Whether or not the newsletter emails are enabled fro the user",
                      "type": "integer"
                    },
                    "settings_emails_onboarding_enabled": {
                      "description": "Whether or not the emails to guide the user through the trial period are enabled",
                      "type": "integer"
                    },
                    "settings_emails_status_day": {
                      "description": "Day of the week in which the user receives the status email",
                      "type": "integer"
                    },
                    "settings_emails_status_enabled": {
                      "description": "Whether or not the email containing the status update is enabled fro the user",
                      "type": "integer"
                    },
                    "settings_emails_status_time": {
                      "description": "Hour of the day in which the user receives the status email",
                      "type": "integer"
                    },
                    "settings_emails_system_enabled": {
                      "description": "Whether or not the system emails are enabled fro the user",
                      "type": "integer"
                    },
                    "settings_emails_timerssaved_enabled": {
                      "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                      "type": "integer"
                    },
                    "user_hourly_cost": {
                      "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                      "type": "string"
                    },
                    "user_hourly_rate": {
                      "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Unique identifier of the user",
                      "type": "integer"
                    },
                    "working_time": {
                      "description": "How many hours the user is usually working on a day",
                      "type": "integer"
                    },
                    "workspace_access_level": {
                      "description": "The role of the user in Timeneye: owner, admin or member",
                      "type": "string"
                    }
                  },
                  "title": "User",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "8r0gf5rqoxwwv"
                  }
                },
                {
                  "properties": {
                    "account": {
                      "properties": {
                        "account_name": {
                          "description": "The name of the account, usually the Company name.",
                          "type": "string"
                        },
                        "billing_enabled": {
                          "description": "Whether or not a subscription is active for the account",
                          "type": "boolean"
                        },
                        "created_date": {
                          "description": "Date of creation",
                          "example": "2023-01-01 10:00:00",
                          "type": "string"
                        },
                        "expiration": {
                          "description": "Date of license (or trial period) expiration",
                          "example": "2023-01-01",
                          "type": "string"
                        },
                        "is_trial": {
                          "type": "boolean"
                        },
                        "settings": {
                          "properties": {
                            "adminNewEntryForOthers": {
                              "description": "Whether o",
                              "type": "integer"
                            },
                            "allow_apps": {
                              "description": "Whether or not the third party a",
                              "type": "integer"
                            },
                            "authenticationMethod": {
                              "description": "Authen",
                              "properties": {
                                "allow_password_login": {
                                  "description": "Whether or not the login with email + password is allowed",
                                  "type": "integer"
                                },
                                "idp_cert": {
                                  "description": "Certificate of the identity provider (used with type = saml)",
                                  "type": "string"
                                },
                                "idp_entity_id": {
                                  "description": "Id of the identity provider (used with type = saml)",
                                  "type": "string"
                                },
                                "idp_sso_url": {
                                  "description": "Single Sign on URL (used with type = saml)",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of login method",
                                  "enum": [
                                    "all",
                                    "google",
                                    "microsoft",
                                    "saml"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "companyName": {
                              "description": "The name of the company, could be different from account_name",
                              "type": "string"
                            },
                            "currencyCode": {
                              "description": "Code of the used currency",
                              "type": "string"
                            },
                            "entries_lock_automation": {
                              "description": "Describes the automatic entry lock parameters",
                              "properties": {
                                "enabled": {
                                  "description": "Whether or not the entry lock automation is enabled",
                                  "type": "boolean"
                                },
                                "interval": {
                                  "description": "Interval of the entry lock",
                                  "enum": [
                                    "weekly",
                                    "monthly",
                                    "0"
                                  ],
                                  "type": "string"
                                },
                                "interval_target": {
                                  "description": "Between 1 and 31 if the interval is monthly (the day of the month), Between 0 and 6i if the interval is weekly ",
                                  "type": "integer",
                                  "x-nullable": true
                                }
                              },
                              "type": "object"
                            },
                            "memberAverageCost": {
                              "description": "Indicates the average labour cost for the account members",
                              "type": "integer"
                            },
                            "prosett_clientMode": {
                              "description": "Whether or not the client should be displayed in the re",
                              "type": "integer"
                            },
                            "prosett_entriesLock_date": {
                              "description": "The date of the last entry lock",
                              "type": "boolean"
                            },
                            "prosett_entriesLock_enabled": {
                              "description": "Whether or not the entry lock system is enabled",
                              "type": "integer"
                            },
                            "showWorkingTime": {
                              "description": "Whether or not the users can see their working time in their dashboard. (e.g. 7h of 8h)",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "subscription_limit_users": {
                          "description": "Maximum number of active users allowed in the account due to purchased licenses",
                          "type": "integer"
                        },
                        "trial_expiration": {
                          "description": "Date of trial period expiration",
                          "example": "2023-01-01",
                          "type": "string"
                        }
                      },
                      "title": "Account",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "wlpj5oz3p1xgd"
                      }
                    },
                    "avatar": {
                      "description": "An avatar that can be linked to an Account or to a User",
                      "properties": {
                        "account_id": {
                          "description": "Identifier of the account which has this avatar",
                          "type": "integer"
                        },
                        "avatar_name": {
                          "description": "unique file name",
                          "type": "string"
                        },
                        "avatar_url": {
                          "description": "Image url",
                          "type": "string"
                        },
                        "user_id": {
                          "description": "Identifier of the user which has this avatar",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "rmwkjif7pfhgs"
                      }
                    },
                    "groups": {
                      "items": {
                        "description": "A group of users",
                        "properties": {
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "group_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the group",
                            "type": "string"
                          }
                        },
                        "title": "Group",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "gh9aq1pihfeit"
                        }
                      },
                      "type": "array"
                    },
                    "projects": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                            "properties": {
                              "api_only": {
                                "description": "Whether or not the project is usable for tracking time only using a third party app.",
                                "type": "integer"
                              },
                              "client_id": {
                                "description": "Unique identifier of a client that the project belongs to",
                                "type": "integer"
                              },
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "description": {
                                "description": "A text description of the project",
                                "type": "string"
                              },
                              "hourly_rate": {
                                "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the project is archived",
                                "type": "integer"
                              },
                              "is_billable": {
                                "description": "Whether or not the project is billable per hour",
                                "type": "integer"
                              },
                              "is_public": {
                                "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The project's name",
                                "type": "string"
                              },
                              "project_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "title": "Project",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "aa7t79mq3m8d2"
                            }
                          },
                          {
                            "properties": {
                              "groups": {
                                "items": {
                                  "description": "A group of users",
                                  "properties": {
                                    "color": {
                                      "description": "The color used for reporting",
                                      "type": "string"
                                    },
                                    "group_id": {
                                      "description": "Unique identifier",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Name of the group",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Group",
                                  "type": "object",
                                  "x-examples": {},
                                  "x-stoplight": {
                                    "id": "gh9aq1pihfeit"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Gets a single user",
        "operationId": "Get-users-user_id",
        "summary": "Get a User",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#get-a-user"
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "user",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "group_id": {
                  "description": "Unique identifier of the group to which the user belongs to",
                  "type": "integer"
                },
                "user_hourly_cost": {
                  "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                  "minimum": 0,
                  "type": "integer",
                  "x-nullable": true
                },
                "user_hourly_rate": {
                  "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                  "minimum": 0,
                  "type": "integer",
                  "x-nullable": true
                },
                "working_time": {
                  "description": "How many hours the user is usually working on a day",
                  "maximum": 1440,
                  "minimum": 0,
                  "type": "integer",
                  "x-nullable": true
                },
                "workspace_access_level": {
                  "description": "The role of the user in Timeneye: owner, admin or member",
                  "enum": [
                    "member",
                    "admin",
                    "owner"
                  ],
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "allOf": [
                {
                  "description": "User",
                  "properties": {
                    "apple_id": {
                      "description": "Apple unique identifier of the user",
                      "type": "string"
                    },
                    "created_date": {
                      "description": "Date of creation of the user",
                      "type": "string"
                    },
                    "department": {
                      "description": "The user's department",
                      "type": "string",
                      "x-nullable": true
                    },
                    "email": {
                      "description": "Email of the user, must be unique",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Tells if the user is archived or not",
                      "type": "integer"
                    },
                    "google_id": {
                      "description": "Google unique identifier of the user",
                      "type": "string"
                    },
                    "group_id": {
                      "description": "Unique identifier of the group to which the user belongs to",
                      "type": "integer"
                    },
                    "is_admin": {
                      "description": "Whether or not the user is an admin of the account",
                      "type": "boolean"
                    },
                    "is_gm": {
                      "description": "Whether or not the user is a group manager of his group",
                      "type": "boolean"
                    },
                    "is_owner": {
                      "description": "Whether or not the user is an owner of the account",
                      "type": "boolean"
                    },
                    "job_title": {
                      "description": "The job title of the user in the company",
                      "type": "string"
                    },
                    "microsoft_id": {
                      "description": "Microsoft unique identifier of the user",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the user",
                      "type": "string"
                    },
                    "role": {
                      "description": "The role of the user in the company.",
                      "type": "string",
                      "x-nullable": true
                    },
                    "settings_dailyemail_time": {
                      "description": "Hour of the day in which the user receives the daily email",
                      "type": "integer"
                    },
                    "settings_emails_automation_enabled": {
                      "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
                      "type": "integer"
                    },
                    "settings_emails_dailyrecap_enabled": {
                      "description": "Whether or not the daily recap email is enabled fro the user",
                      "type": "integer"
                    },
                    "settings_emails_developer_enabled": {
                      "description": "Whether or not the emails regarding developer updates are enabled fro the user",
                      "type": "integer"
                    },
                    "settings_emails_newsletter_enabled": {
                      "description": "Whether or not the newsletter emails are enabled fro the user",
                      "type": "integer"
                    },
                    "settings_emails_onboarding_enabled": {
                      "description": "Whether or not the emails to guide the user through the trial period are enabled",
                      "type": "integer"
                    },
                    "settings_emails_status_day": {
                      "description": "Day of the week in which the user receives the status email",
                      "type": "integer"
                    },
                    "settings_emails_status_enabled": {
                      "description": "Whether or not the email containing the status update is enabled fro the user",
                      "type": "integer"
                    },
                    "settings_emails_status_time": {
                      "description": "Hour of the day in which the user receives the status email",
                      "type": "integer"
                    },
                    "settings_emails_system_enabled": {
                      "description": "Whether or not the system emails are enabled fro the user",
                      "type": "integer"
                    },
                    "settings_emails_timerssaved_enabled": {
                      "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
                      "type": "integer"
                    },
                    "user_hourly_cost": {
                      "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
                      "type": "string"
                    },
                    "user_hourly_rate": {
                      "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
                      "type": "string"
                    },
                    "user_id": {
                      "description": "Unique identifier of the user",
                      "type": "integer"
                    },
                    "working_time": {
                      "description": "How many hours the user is usually working on a day",
                      "type": "integer"
                    },
                    "workspace_access_level": {
                      "description": "The role of the user in Timeneye: owner, admin or member",
                      "type": "string"
                    }
                  },
                  "title": "User",
                  "type": "object",
                  "x-examples": {},
                  "x-stoplight": {
                    "id": "8r0gf5rqoxwwv"
                  }
                },
                {
                  "properties": {
                    "account": {
                      "properties": {
                        "account_name": {
                          "description": "The name of the account, usually the Company name.",
                          "type": "string"
                        },
                        "billing_enabled": {
                          "description": "Whether or not a subscription is active for the account",
                          "type": "boolean"
                        },
                        "created_date": {
                          "description": "Date of creation",
                          "example": "2023-01-01 10:00:00",
                          "type": "string"
                        },
                        "expiration": {
                          "description": "Date of license (or trial period) expiration",
                          "example": "2023-01-01",
                          "type": "string"
                        },
                        "is_trial": {
                          "type": "boolean"
                        },
                        "settings": {
                          "properties": {
                            "adminNewEntryForOthers": {
                              "description": "Whether o",
                              "type": "integer"
                            },
                            "allow_apps": {
                              "description": "Whether or not the third party a",
                              "type": "integer"
                            },
                            "authenticationMethod": {
                              "description": "Authen",
                              "properties": {
                                "allow_password_login": {
                                  "description": "Whether or not the login with email + password is allowed",
                                  "type": "integer"
                                },
                                "idp_cert": {
                                  "description": "Certificate of the identity provider (used with type = saml)",
                                  "type": "string"
                                },
                                "idp_entity_id": {
                                  "description": "Id of the identity provider (used with type = saml)",
                                  "type": "string"
                                },
                                "idp_sso_url": {
                                  "description": "Single Sign on URL (used with type = saml)",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type of login method",
                                  "enum": [
                                    "all",
                                    "google",
                                    "microsoft",
                                    "saml"
                                  ],
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "companyName": {
                              "description": "The name of the company, could be different from account_name",
                              "type": "string"
                            },
                            "currencyCode": {
                              "description": "Code of the used currency",
                              "type": "string"
                            },
                            "entries_lock_automation": {
                              "description": "Describes the automatic entry lock parameters",
                              "properties": {
                                "enabled": {
                                  "description": "Whether or not the entry lock automation is enabled",
                                  "type": "boolean"
                                },
                                "interval": {
                                  "description": "Interval of the entry lock",
                                  "enum": [
                                    "weekly",
                                    "monthly",
                                    "0"
                                  ],
                                  "type": "string"
                                },
                                "interval_target": {
                                  "description": "Between 1 and 31 if the interval is monthly (the day of the month), Between 0 and 6i if the interval is weekly ",
                                  "type": "integer",
                                  "x-nullable": true
                                }
                              },
                              "type": "object"
                            },
                            "memberAverageCost": {
                              "description": "Indicates the average labour cost for the account members",
                              "type": "integer"
                            },
                            "prosett_clientMode": {
                              "description": "Whether or not the client should be displayed in the re",
                              "type": "integer"
                            },
                            "prosett_entriesLock_date": {
                              "description": "The date of the last entry lock",
                              "type": "boolean"
                            },
                            "prosett_entriesLock_enabled": {
                              "description": "Whether or not the entry lock system is enabled",
                              "type": "integer"
                            },
                            "showWorkingTime": {
                              "description": "Whether or not the users can see their working time in their dashboard. (e.g. 7h of 8h)",
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "subscription_limit_users": {
                          "description": "Maximum number of active users allowed in the account due to purchased licenses",
                          "type": "integer"
                        },
                        "trial_expiration": {
                          "description": "Date of trial period expiration",
                          "example": "2023-01-01",
                          "type": "string"
                        }
                      },
                      "title": "Account",
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "wlpj5oz3p1xgd"
                      }
                    },
                    "avatar": {
                      "description": "An avatar that can be linked to an Account or to a User",
                      "properties": {
                        "account_id": {
                          "description": "Identifier of the account which has this avatar",
                          "type": "integer"
                        },
                        "avatar_name": {
                          "description": "unique file name",
                          "type": "string"
                        },
                        "avatar_url": {
                          "description": "Image url",
                          "type": "string"
                        },
                        "user_id": {
                          "description": "Identifier of the user which has this avatar",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "x-examples": {},
                      "x-stoplight": {
                        "id": "rmwkjif7pfhgs"
                      }
                    },
                    "groups": {
                      "items": {
                        "description": "A group of users",
                        "properties": {
                          "color": {
                            "description": "The color used for reporting",
                            "type": "string"
                          },
                          "group_id": {
                            "description": "Unique identifier",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the group",
                            "type": "string"
                          }
                        },
                        "title": "Group",
                        "type": "object",
                        "x-examples": {},
                        "x-stoplight": {
                          "id": "gh9aq1pihfeit"
                        }
                      },
                      "type": "array"
                    },
                    "projects": {
                      "items": {
                        "allOf": [
                          {
                            "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
                            "properties": {
                              "api_only": {
                                "description": "Whether or not the project is usable for tracking time only using a third party app.",
                                "type": "integer"
                              },
                              "client_id": {
                                "description": "Unique identifier of a client that the project belongs to",
                                "type": "integer"
                              },
                              "color": {
                                "description": "The color used for reporting",
                                "type": "string"
                              },
                              "description": {
                                "description": "A text description of the project",
                                "type": "string"
                              },
                              "hourly_rate": {
                                "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
                                "type": "string"
                              },
                              "is_active": {
                                "description": "Whether or not the project is archived",
                                "type": "integer"
                              },
                              "is_billable": {
                                "description": "Whether or not the project is billable per hour",
                                "type": "integer"
                              },
                              "is_public": {
                                "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The project's name",
                                "type": "string"
                              },
                              "project_id": {
                                "description": "Unique identifier",
                                "type": "integer"
                              }
                            },
                            "required": [
                              "name"
                            ],
                            "title": "Project",
                            "type": "object",
                            "x-examples": {},
                            "x-stoplight": {
                              "id": "aa7t79mq3m8d2"
                            }
                          },
                          {
                            "properties": {
                              "groups": {
                                "items": {
                                  "description": "A group of users",
                                  "properties": {
                                    "color": {
                                      "description": "The color used for reporting",
                                      "type": "string"
                                    },
                                    "group_id": {
                                      "description": "Unique identifier",
                                      "type": "integer"
                                    },
                                    "name": {
                                      "description": "Name of the group",
                                      "type": "string"
                                    }
                                  },
                                  "title": "Group",
                                  "type": "object",
                                  "x-examples": {},
                                  "x-stoplight": {
                                    "id": "gh9aq1pihfeit"
                                  }
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          },
          "422": {
            "description": "Invalid request",
            "headers": {},
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Updates a user",
        "operationId": "Put-users-user_id",
        "summary": "Update a User",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#update-a-user"
        }
      }
    },
    "/{connectionId}/zones": {
      "parameters": [],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "application/json",
            "in": "header",
            "name": "Accept",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "description": "A timezone object",
                "properties": {
                  "country_code": {
                    "description": "Code of the country which the zone belongs to",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the time zone",
                    "type": "string"
                  },
                  "zone_id": {
                    "description": "Unique identifier",
                    "type": "integer"
                  }
                },
                "title": "Zone",
                "type": "object",
                "x-examples": {},
                "x-stoplight": {
                  "id": "srt2ge5xz5dn1"
                }
              },
              "type": "array",
              "x-examples": {
                "Example 1": [
                  {
                    "country_code": "AD",
                    "name": "Europe/Andorra",
                    "zone_id": 1
                  },
                  {
                    "country_code": "AE",
                    "name": "Asia/Dubai",
                    "zone_id": 2
                  }
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Zones"
        ],
        "description": "Get zones list",
        "operationId": "List-zones",
        "summary": "List Zones",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/timeneye/#list-zones"
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "properties": {
        "account_name": {
          "description": "The name of the account, usually the Company name.",
          "type": "string"
        },
        "billing_enabled": {
          "description": "Whether or not a subscription is active for the account",
          "type": "boolean"
        },
        "created_date": {
          "description": "Date of creation",
          "example": "2023-01-01 10:00:00",
          "type": "string"
        },
        "expiration": {
          "description": "Date of license (or trial period) expiration",
          "example": "2023-01-01",
          "type": "string"
        },
        "is_trial": {
          "type": "boolean"
        },
        "settings": {
          "properties": {
            "adminNewEntryForOthers": {
              "description": "Whether o",
              "type": "integer"
            },
            "allow_apps": {
              "description": "Whether or not the third party a",
              "type": "integer"
            },
            "authenticationMethod": {
              "description": "Authen",
              "properties": {
                "allow_password_login": {
                  "description": "Whether or not the login with email + password is allowed",
                  "type": "integer"
                },
                "idp_cert": {
                  "description": "Certificate of the identity provider (used with type = saml)",
                  "type": "string"
                },
                "idp_entity_id": {
                  "description": "Id of the identity provider (used with type = saml)",
                  "type": "string"
                },
                "idp_sso_url": {
                  "description": "Single Sign on URL (used with type = saml)",
                  "type": "string"
                },
                "type": {
                  "description": "Type of login method",
                  "enum": [
                    "all",
                    "google",
                    "microsoft",
                    "saml"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            },
            "companyName": {
              "description": "The name of the company, could be different from account_name",
              "type": "string"
            },
            "currencyCode": {
              "description": "Code of the used currency",
              "type": "string"
            },
            "entries_lock_automation": {
              "description": "Describes the automatic entry lock parameters",
              "properties": {
                "enabled": {
                  "description": "Whether or not the entry lock automation is enabled",
                  "type": "boolean"
                },
                "interval": {
                  "description": "Interval of the entry lock",
                  "enum": [
                    "weekly",
                    "monthly",
                    "0"
                  ],
                  "type": "string"
                },
                "interval_target": {
                  "description": "Between 1 and 31 if the interval is monthly (the day of the month), Between 0 and 6i if the interval is weekly ",
                  "type": "integer",
                  "x-nullable": true
                }
              },
              "type": "object"
            },
            "memberAverageCost": {
              "description": "Indicates the average labour cost for the account members",
              "type": "integer"
            },
            "prosett_clientMode": {
              "description": "Whether or not the client should be displayed in the re",
              "type": "integer"
            },
            "prosett_entriesLock_date": {
              "description": "The date of the last entry lock",
              "type": "boolean"
            },
            "prosett_entriesLock_enabled": {
              "description": "Whether or not the entry lock system is enabled",
              "type": "integer"
            },
            "showWorkingTime": {
              "description": "Whether or not the users can see their working time in their dashboard. (e.g. 7h of 8h)",
              "type": "boolean"
            }
          },
          "type": "object"
        },
        "subscription_limit_users": {
          "description": "Maximum number of active users allowed in the account due to purchased licenses",
          "type": "integer"
        },
        "trial_expiration": {
          "description": "Date of trial period expiration",
          "example": "2023-01-01",
          "type": "string"
        }
      },
      "title": "Account",
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "wlpj5oz3p1xgd"
      }
    },
    "Avatar": {
      "description": "An avatar that can be linked to an Account or to a User",
      "properties": {
        "account_id": {
          "description": "Identifier of the account which has this avatar",
          "type": "integer"
        },
        "avatar_name": {
          "description": "unique file name",
          "type": "string"
        },
        "avatar_url": {
          "description": "Image url",
          "type": "string"
        },
        "user_id": {
          "description": "Identifier of the user which has this avatar",
          "type": "integer"
        }
      },
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "rmwkjif7pfhgs"
      }
    },
    "Budget": {
      "properties": {
        "budget_id": {
          "description": "Unique identifier of the budget",
          "type": "integer"
        },
        "budget_minutes": {
          "description": "The amount of minutes the budget represents",
          "type": "integer"
        },
        "interval": {
          "description": "Day of budget reset: 1 to 31 if the budget is monthly, 0 to 6 if the budget is weekly",
          "maximum": 31,
          "minimum": 0,
          "type": "integer"
        },
        "is_active": {
          "description": "Whether or not the budget is active",
          "maximum": 1,
          "minimum": 0,
          "type": "integer"
        },
        "period_end": {
          "description": "Format: YYYY-MM-DD",
          "type": "string",
          "x-nullable": true
        },
        "period_start": {
          "description": "Format: YYYY-MM-DD",
          "type": "string",
          "x-nullable": true
        },
        "project_id": {
          "description": "Identifier of the project to which the budget belongs",
          "type": "integer"
        },
        "recurrence": {
          "description": "Recurrence of the budget: 0 = no recurrence, 1 = weekly, 2 = monthly",
          "enum": [
            0,
            1,
            2
          ],
          "type": "integer"
        }
      },
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "h9p1bc7gu2rnb"
      }
    },
    "Client": {
      "description": "Represents a client of the company. A client can have multiple projects.",
      "properties": {
        "client_id": {
          "description": "Unique identifier",
          "type": "integer"
        },
        "color": {
          "description": "Color used in reports",
          "maxLength": 7,
          "minLength": 7,
          "pattern": "#[0-9A-F]{6}",
          "type": "string"
        },
        "is_active": {
          "description": "Whether or not the client is archived",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the client",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "title": "Client",
      "type": "object",
      "x-stoplight": {
        "id": "o6w3tpvmilemj"
      }
    },
    "Entry": {
      "description": "Represents a time entry in Timeneye. Time entries are portions of time assigned to a project, a phase and optionally to a client (the one linked to the project) and multiple tags.",
      "properties": {
        "billed": {
          "description": "Indicates if the entry has been billed",
          "type": "integer"
        },
        "client_id": {
          "description": "Unique identifier of the client that belongs to the entry's project",
          "type": "integer"
        },
        "cost": {
          "description": "The monetary cost of the time entry based on the hourly cost of the user that created it",
          "type": "string"
        },
        "created_date": {
          "description": "Date and time of creation",
          "example": "2023-01-01 10:00:00",
          "type": "string"
        },
        "entry_date": {
          "description": "Date of the entry",
          "example": "2023-01-01",
          "type": "string"
        },
        "entry_id": {
          "description": "Unique identifier",
          "type": "integer"
        },
        "entry_minutes": {
          "description": "Amount of tracked time in minutes",
          "type": "integer"
        },
        "locked": {
          "description": "Whether or not the entry is locked",
          "type": "integer"
        },
        "locked_by_apionly": {
          "description": "Whether or not the entry is locked by restriction on third party app only",
          "type": "integer"
        },
        "locked_by_date": {
          "description": "Whether or not the entry is locked by date",
          "type": "integer"
        },
        "locked_by_membership": {
          "description": "Whether or not the entry is locked by membership",
          "type": "integer"
        },
        "notes": {
          "description": "Notes on the time entry",
          "type": "string"
        },
        "phase_category_id": {
          "description": "Unique identifier of the the phase category which the entry's phase belongs to",
          "type": "integer"
        },
        "phase_id": {
          "description": "Unique identifier of the the phase which the entry belongs to",
          "type": "integer"
        },
        "profit": {
          "description": "The difference between the revenue and the cost",
          "type": "string"
        },
        "project_id": {
          "description": "Unique identifier of the project",
          "type": "integer"
        },
        "revenue": {
          "description": "The monetary revenue of the time entry based on the general hourly rate,the project's .",
          "type": "string"
        },
        "source": {
          "description": "Indicates the source of the entry (if any)",
          "type": "string"
        },
        "source_data": {
          "description": "Additional data of the source ",
          "type": "string"
        },
        "source_id": {
          "description": "A unique identifier of the source of the entry",
          "type": "string"
        },
        "source_text": {
          "description": "A text that describes the source of the entry",
          "type": "string"
        },
        "source_url": {
          "description": "An URL to the source of the entry",
          "type": "string"
        },
        "suggested_phase_id": {
          "description": "An optional identifier of a suggested phase if the entry is created from an EntrySuggestion",
          "type": "string",
          "x-nullable": true
        },
        "suggested_project_id": {
          "description": "An optional identifier of a suggested project if the entry is created from an EntrySuggestion",
          "type": "string",
          "x-nullable": true
        },
        "todo_id": {
          "description": "The unique identifier of a todo linked to the time entry",
          "type": "string",
          "x-nullable": true
        },
        "updated_date": {
          "description": "Date and time od update",
          "type": "string"
        },
        "user_id": {
          "description": "Unique identifier of the user that created the entry",
          "type": "integer"
        }
      },
      "title": "Entry",
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "5f8bbr1bf1gt7"
      }
    },
    "EntrySuggestion": {
      "properties": {
        "accepted": {
          "description": "Whether or not the suggestion is accepted an transformed into an entry",
          "type": "integer"
        },
        "created_datetime": {
          "description": "Date and time of creation of the suggestion",
          "type": "string"
        },
        "entry_date": {
          "description": "Suggested date",
          "type": "string"
        },
        "entry_minutes": {
          "description": "Suggested amount of time in minutes",
          "type": "integer"
        },
        "entry_suggestion_id": {
          "description": "Unique identifier",
          "type": "integer"
        },
        "notes": {
          "description": "Notes related to the source of the suggestion",
          "type": "string"
        },
        "phase_id": {
          "description": "Unique identifier of the suggested phase",
          "type": "integer"
        },
        "phase_name": {
          "description": "Name of the suggested phase",
          "type": "string"
        },
        "project_id": {
          "description": "Unique identifier of the suggested project",
          "type": "integer"
        },
        "project_name": {
          "description": "Name of the suggested project",
          "type": "string"
        },
        "source": {
          "description": "Source identifier",
          "type": "string"
        },
        "source_data": {
          "description": "Other data related to the source",
          "type": "string"
        },
        "source_id": {
          "description": "Unique identifier of the source",
          "type": "string"
        },
        "source_text": {
          "description": "Text related to the source",
          "type": "string"
        },
        "source_url": {
          "description": "URL of the source of the suggestion",
          "type": "string"
        },
        "todo_id": {
          "type": "integer",
          "x-nullable": true
        },
        "user_id": {
          "description": "Unique identifier of the user that owns the suggestion",
          "type": "integer"
        }
      },
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "rczv4ar2ph4q2"
      }
    },
    "Group": {
      "description": "A group of users",
      "properties": {
        "color": {
          "description": "The color used for reporting",
          "type": "string"
        },
        "group_id": {
          "description": "Unique identifier",
          "type": "integer"
        },
        "name": {
          "description": "Name of the group",
          "type": "string"
        }
      },
      "title": "Group",
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "gh9aq1pihfeit"
      }
    },
    "Language": {
      "description": "A language supported in Timeneye",
      "properties": {
        "language_code": {
          "description": "Unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Name of the language",
          "type": "string"
        }
      },
      "title": "Language",
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "ri5snko16593b"
      }
    },
    "Phase": {
      "description": "A project's phase",
      "properties": {
        "budget_minutes": {
          "description": "Amount of budgeted time for theis phase. The sum of the budget_minutes of the phases must not be grater than the budgeted time for the project",
          "type": "integer"
        },
        "is_open": {
          "description": "Whether or not the phase is archived",
          "type": "integer"
        },
        "name": {
          "description": "The name of the phase",
          "type": "string"
        },
        "phase_category_id": {
          "description": "Unique identifier of the phase category which the phase belongs to",
          "type": "integer"
        },
        "phase_id": {
          "description": "Unique identifier",
          "type": "integer"
        },
        "project_id": {
          "description": "Unique identifier of the project which the phase belongs to",
          "type": "integer"
        }
      },
      "required": [
        "project_id",
        "name"
      ],
      "title": "Phase",
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "2gsuxkayxq83f"
      }
    },
    "PhaseCategory": {
      "description": "Categorizes phases",
      "properties": {
        "color": {
          "description": "The color used for reporting",
          "type": "string"
        },
        "name": {
          "description": "Name of the phase category",
          "type": "string"
        },
        "phase_category_id": {
          "description": "Unique identifier",
          "type": "integer"
        }
      },
      "title": "PhaseCategory",
      "type": "object",
      "x-examples": {},
      "x-nullable": true,
      "x-stoplight": {
        "id": "1b463g7kp1qsa"
      }
    },
    "Project": {
      "description": "A project the principal way of categorizing the time in Timeneye.\nProjects have one or more tasks on which the time is spent.",
      "properties": {
        "api_only": {
          "description": "Whether or not the project is usable for tracking time only using the apis.",
          "type": "integer"
        },
        "client_id": {
          "description": "Unique identifier of a client that the project belongs to",
          "type": "integer"
        },
        "color": {
          "description": "The color used for reporting",
          "type": "string"
        },
        "description": {
          "description": "A text description of the project",
          "type": "string"
        },
        "hourly_rate": {
          "description": "The general hourly rate for the project. A specific hourly_rate can be set on the project-user relation",
          "type": "string"
        },
        "is_active": {
          "description": "Whether or not the project is archived",
          "type": "integer"
        },
        "is_billable": {
          "description": "Whether or not the project is billable per hour",
          "type": "integer"
        },
        "is_public": {
          "description": "Whether or not the project is public, meaning that it is visible by all the users in the workspace and everybody can track time on it",
          "type": "integer"
        },
        "name": {
          "description": "The project's name",
          "type": "string"
        },
        "project_id": {
          "description": "Unique identifier",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ],
      "title": "Project",
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "aa7t79mq3m8d2"
      }
    },
    "Tag": {
      "description": "A tag",
      "properties": {
        "color": {
          "description": "The color used for reporting",
          "type": "string"
        },
        "is_active": {
          "description": "Whether or not the tag is archived",
          "type": "integer"
        },
        "name": {
          "description": "The name of the tag",
          "type": "string"
        },
        "tag_id": {
          "description": "Unique identifier",
          "type": "integer"
        },
        "tag_list_id": {
          "description": "Unique identifier of the tag list which the tag belongs to",
          "type": "integer"
        }
      },
      "required": [
        "tag_list_id",
        "name"
      ],
      "title": "Tag",
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "iwk9zguiajgif"
      }
    },
    "TagList": {
      "properties": {
        "color": {
          "description": "The color used for reporting",
          "type": "string"
        },
        "is_active": {
          "description": "Whether or not the tag list is archived",
          "type": "integer"
        },
        "name": {
          "description": "The name of the tag list",
          "type": "string"
        },
        "tag_list_id": {
          "description": "Unique identifier",
          "type": "integer"
        },
        "text_color": {
          "description": "The color of the text used for reporting",
          "type": "string"
        }
      },
      "required": [
        "name",
        "color",
        "text_color"
      ],
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "z8r3lwt40nihp"
      }
    },
    "Timer": {
      "description": "a Timeneye timer",
      "properties": {
        "notes": {
          "description": "Notes on the time entry",
          "type": "string"
        },
        "phase_id": {
          "description": "phase id",
          "type": "integer"
        },
        "project_id": {
          "description": "Unique identifier of the project",
          "type": "integer"
        },
        "seconds": {
          "exclusiveMinimum": true,
          "minimum": 0,
          "type": "integer"
        },
        "source": {
          "description": "Indicates the source of the entry (if any)",
          "type": "string"
        },
        "source_data": {
          "description": "Additional data of the source",
          "type": "string"
        },
        "source_id": {
          "description": "A unique identifier of the source of the entry",
          "type": "string"
        },
        "source_text": {
          "description": "A text that describes the source of the entry",
          "type": "string"
        },
        "source_url": {
          "description": "An URL to the source of the entry",
          "type": "string"
        },
        "timer_date": {
          "description": "The data in which the timer has been started",
          "example": "2023-01-01",
          "type": "string"
        },
        "timer_id": {
          "description": "Unique identifier of the timer",
          "type": "integer"
        },
        "timer_start": {
          "example": "2023-01-01 10:00:00",
          "type": "string"
        },
        "timer_status": {
          "enum": [
            "running",
            "paused"
          ],
          "type": "string"
        },
        "todo_id": {
          "type": "integer",
          "x-nullable": true
        },
        "user_id": {
          "description": "Unique identifier of the user that c",
          "type": "integer"
        }
      },
      "required": [
        "user_id",
        "project_id",
        "phase_id",
        "seconds"
      ],
      "title": "Timer",
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "nog9f972tdw3t"
      }
    },
    "Todo": {
      "description": "It is a todo in Timeneye",
      "properties": {
        "created_at": {
          "description": "Created date and time",
          "example": "2023-01-01 10:00:00",
          "type": "string"
        },
        "description": {
          "description": "Description of the todo",
          "type": "string"
        },
        "due_date": {
          "description": "The data by which the todo should be completed",
          "example": "2023-01-01",
          "type": "string",
          "x-nullable": true
        },
        "index": {
          "description": "The index of the todo in the list (order)",
          "type": "integer"
        },
        "is_completed": {
          "description": "Whether or not the todo is marked as done",
          "type": "boolean"
        },
        "name": {
          "description": "Title of the todo",
          "type": "string"
        },
        "priority": {
          "description": "Priority of the todo",
          "type": "string"
        },
        "start_date": {
          "description": "The date in which the todo should be taken in charge",
          "example": "2023-01-01",
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "The current status of the todo",
          "type": "string"
        },
        "todo_id": {
          "description": "Unique identifier",
          "type": "integer"
        },
        "todo_list_id": {
          "description": "Unique identifier of the todo list which the todo belongs to",
          "type": "integer",
          "x-nullable": true
        },
        "updated_at": {
          "description": "Updated date and time",
          "example": "2023-01-01 10:00:00",
          "type": "string"
        },
        "user_id": {
          "description": "Unique identifier of the user assigned to the todo",
          "type": "integer",
          "x-nullable": true
        }
      },
      "title": "Todo",
      "type": "object",
      "x-stoplight": {
        "id": "weym60vlwuhf7"
      }
    },
    "TodoList": {
      "properties": {
        "color": {
          "description": "The color used for reporting",
          "type": "string"
        },
        "created_at": {
          "description": "Created date and time",
          "type": "string"
        },
        "index": {
          "description": "The index of the todo list in the board (order)",
          "type": "integer"
        },
        "name": {
          "description": "Name of the todo list",
          "type": "string"
        },
        "project_id": {
          "description": "Unique identifier of the project which the todo list belongs to",
          "type": "integer"
        },
        "todo_list_id": {
          "description": "Unique identifier",
          "type": "integer"
        },
        "updated_at": {
          "description": "Updated date and time",
          "type": "string"
        }
      },
      "title": "TodoList",
      "type": "object",
      "x-stoplight": {
        "id": "1363raammdbed"
      }
    },
    "User": {
      "description": "User",
      "properties": {
        "apple_id": {
          "description": "Apple unique identifier of the user",
          "type": "string"
        },
        "created_date": {
          "description": "Date of creation of the user",
          "type": "string"
        },
        "department": {
          "description": "The user's department",
          "type": "string",
          "x-nullable": true
        },
        "email": {
          "description": "Email of the user, must be unique",
          "type": "string"
        },
        "enabled": {
          "description": "Tells if the user is archived or not",
          "type": "integer"
        },
        "google_id": {
          "description": "Google unique identifier of the user",
          "type": "string"
        },
        "group_id": {
          "description": "Unique identifier of the group to which the user belongs to",
          "type": "integer"
        },
        "is_admin": {
          "description": "Whether or not the user is an admin of the account",
          "type": "boolean"
        },
        "is_gm": {
          "description": "Whether or not the user is a group manager of his group",
          "type": "boolean"
        },
        "is_owner": {
          "description": "Whether or not the user is an owner of the account",
          "type": "boolean"
        },
        "job_title": {
          "description": "The job title of the user in the company",
          "type": "string"
        },
        "microsoft_id": {
          "description": "Microsoft unique identifier of the user",
          "type": "string"
        },
        "name": {
          "description": "Name of the user",
          "type": "string"
        },
        "role": {
          "description": "The role of the user in the company.",
          "type": "string",
          "x-nullable": true
        },
        "settings_dailyemail_time": {
          "description": "Hour of the day in which the user receives the daily email",
          "type": "integer"
        },
        "settings_emails_automation_enabled": {
          "description": "Enable this option to be able to receive the e-mails from the automations, and be able to create automations regarding scheduled reports.",
          "type": "integer"
        },
        "settings_emails_dailyrecap_enabled": {
          "description": "Whether or not the daily recap email is enabled fro the user",
          "type": "integer"
        },
        "settings_emails_developer_enabled": {
          "description": "Whether or not the emails regarding developer updates are enabled fro the user",
          "type": "integer"
        },
        "settings_emails_newsletter_enabled": {
          "description": "Whether or not the newsletter emails are enabled fro the user",
          "type": "integer"
        },
        "settings_emails_onboarding_enabled": {
          "description": "Whether or not the emails to guide the user through the trial period are enabled",
          "type": "integer"
        },
        "settings_emails_status_day": {
          "description": "Day of the week in which the user receives the status email",
          "type": "integer"
        },
        "settings_emails_status_enabled": {
          "description": "Whether or not the email containing the status update is enabled fro the user",
          "type": "integer"
        },
        "settings_emails_status_time": {
          "description": "Hour of the day in which the user receives the status email",
          "type": "integer"
        },
        "settings_emails_system_enabled": {
          "description": "Whether or not the system emails are enabled fro the user",
          "type": "integer"
        },
        "settings_emails_timerssaved_enabled": {
          "description": "Whether or not the email containing the unsaved timers is enabled fro the user",
          "type": "integer"
        },
        "user_hourly_cost": {
          "description": "The hourly cost of the user, expressed in the currency selected in the account settings",
          "type": "string"
        },
        "user_hourly_rate": {
          "description": "The hourly rate of the user, expressed in the currency selected in the account settings",
          "type": "string"
        },
        "user_id": {
          "description": "Unique identifier of the user",
          "type": "integer"
        },
        "working_time": {
          "description": "How many hours the user is usually working on a day",
          "type": "integer"
        },
        "workspace_access_level": {
          "description": "The role of the user in Timeneye: owner, admin or member",
          "type": "string"
        }
      },
      "title": "User",
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "8r0gf5rqoxwwv"
      }
    },
    "Zone": {
      "description": "A timezone object",
      "properties": {
        "country_code": {
          "description": "Code of the country which the zone belongs to",
          "type": "string"
        },
        "name": {
          "description": "Name of the time zone",
          "type": "string"
        },
        "zone_id": {
          "description": "Unique identifier",
          "type": "integer"
        }
      },
      "title": "Zone",
      "type": "object",
      "x-examples": {},
      "x-stoplight": {
        "id": "srt2ge5xz5dn1"
      }
    }
  },
  "securityDefinitions": {
    "oauth2-auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://api.timeneye.com/oauth/authorize",
      "tokenUrl": "https://api.timeneye.com/oauth/token",
      "scopes": {}
    }
  },
  "security": [
    {
      "oauth2-auth": []
    }
  ],
  "tags": [
    {
      "description": "Accounts",
      "name": "Accounts"
    },
    {
      "description": "Avatars",
      "name": "Avatars"
    },
    {
      "description": "Budgets",
      "name": "Budgets"
    },
    {
      "description": "Clients",
      "name": "Clients"
    },
    {
      "description": "Countries",
      "name": "Countries"
    },
    {
      "description": "Currencies",
      "name": "Currencies"
    },
    {
      "description": "Entries",
      "name": "Entries"
    },
    {
      "description": "EntrySuggestions",
      "name": "EntrySuggestions"
    },
    {
      "description": "Groups",
      "name": "Groups"
    },
    {
      "description": "Languages",
      "name": "Languages"
    },
    {
      "description": "PhaseCategories",
      "name": "PhaseCategories"
    },
    {
      "description": "Phases",
      "name": "Phases"
    },
    {
      "description": "Projects",
      "name": "Projects"
    },
    {
      "description": "TagLists",
      "name": "TagLists"
    },
    {
      "description": "Tags",
      "name": "Tags"
    },
    {
      "description": "Timers",
      "name": "Timers"
    },
    {
      "description": "TodoLists",
      "name": "TodoLists"
    },
    {
      "description": "Todos",
      "name": "Todos"
    },
    {
      "description": "Users",
      "name": "Users"
    },
    {
      "description": "Zones",
      "name": "Zones"
    }
  ],
  "x-components": {
    "parameters": {
      "direction": {
        "description": "The sort direction",
        "in": "query",
        "name": "direction",
        "schema": {
          "default": "asc",
          "enum": [
            "asc",
            "desc"
          ],
          "type": "string"
        }
      },
      "page": {
        "description": "The currently displayed page",
        "in": "query",
        "name": "page",
        "schema": {
          "minimum": 1,
          "type": "integer"
        }
      },
      "per_page": {
        "description": "How many items per page",
        "in": "query",
        "name": "per_page",
        "schema": {
          "type": "integer"
        }
      },
      "sort_by": {
        "description": "The attribute to sort by",
        "in": "query",
        "name": "sort_by",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "401": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "Unauthorized"
      },
      "403": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "Forbidden"
      },
      "404": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "example-1": {
                  "message": "No query results for model [App\\Models\\Account] 3"
                }
              }
            }
          }
        },
        "description": "Not found"
      },
      "422": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "errors": {
                  "description": "The errors object has properties as keys and array of strings as values",
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "color": [
                      "The color must be 7 characters."
                    ]
                  },
                  "message": "The color must be 7 characters."
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "properties": {
                "errors": {
                  "type": "object"
                },
                "message": {
                  "type": "string"
                }
              },
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "errors": {
                    "date": [
                      "The date field is required."
                    ],
                    "minutes": [
                      "The minutes field is required."
                    ],
                    "phase_id": [
                      "The phase is required if you are changing the entry's owner"
                    ],
                    "project_id": [
                      "The project is required if you are changing the entry's owner"
                    ],
                    "user_id": [
                      "The user field is required."
                    ]
                  },
                  "message": "The project is required if you are changing the entry's owner (and 4 more errors)"
                }
              }
            }
          }
        },
        "description": "Invalid request",
        "headers": {}
      }
    }
  },
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/timeneye"
  }
}
