{
  "basePath": "/apim/seismic",
  "consumes": [],
  "definitions": {
    "OriginApiClient.Models.LibraryWorkflow.SubmitFileToWorkFlowRequest": {
      "properties": {
        "comments": {
          "description": "A comment for the submission",
          "title": "Comment",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Seismic.PublicIntegrationApi.OriginApiClient.Models.ContentManager.ContentCustomProperties": {
      "properties": {
        "id": {
          "description": "",
          "title": "Content Property Id",
          "type": "string"
        },
        "name": {
          "description": "",
          "title": "Content Property Name",
          "type": "string"
        },
        "values": {
          "items": {
            "description": "",
            "title": "Content Property Values",
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "V2.AdHocInputs": {
      "properties": {
        "name": {
          "description": "Ad Hoc Input Name",
          "title": "The key of the ad hoc input field",
          "type": "string"
        },
        "value": {
          "description": "The value of the ad hoc input field",
          "title": "Ad Hoc Input Value",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.Common.CreatedUser": {
      "properties": {
        "id": {
          "description": "Creator User Id",
          "title": "User Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.Common.Models.DownloadLocationResp": {
      "properties": {
        "downloadUrl": {
          "title": "Download Url",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.Common.ModifiedUser": {
      "properties": {
        "id": {
          "description": "Modifier User Id",
          "title": "User Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.Common.User": {
      "properties": {
        "id": {
          "description": "User Id",
          "title": "User Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LibraryContentManagement.Models.AssignedToProfile": {
      "properties": {
        "id": {
          "description": "The content profile id that the library content is assigned to.",
          "title": "Profile Id",
          "type": "string"
        },
        "name": {
          "description": "The assigned to profile's name.",
          "title": "Profile Name",
          "type": "string"
        },
        "type": {
          "description": "The profile type (user/group)",
          "title": "Profile Type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LibraryContentManagement.Models.ContentExperts": {
      "properties": {
        "id": {
          "description": "Content Expert Id",
          "title": "Content Expert Id",
          "type": "string"
        },
        "type": {
          "description": "User or group",
          "title": "Expert Type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LibraryContentManagement.Models.CustomProperties": {
      "properties": {
        "id": {
          "description": "Custom Property Id",
          "title": "Custom Property Id",
          "type": "string"
        },
        "name": {
          "description": "Custom Property Name",
          "title": "Custom Property Name",
          "type": "string"
        },
        "values": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "V2.LibraryContentManagement.Models.FileResponse": {
      "properties": {
        "assignedToProfiles": {
          "items": {
            "$ref": "#/definitions/V2.LibraryContentManagement.Models.AssignedToProfile"
          },
          "type": "array",
          "uniqueItems": false
        },
        "createdAt": {
          "format": "date-time",
          "title": "Library Content Created At",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/V2.Common.CreatedUser"
        },
        "description": {
          "description": "The description for the item.",
          "title": "Library Content Description",
          "type": "string"
        },
        "experts": {
          "description": "A list of experts for this item. A user expert would be in the form `{\"type\":\"user\", \"id\":\"the users id\"}`. A group expert would be in the form `{\"type\":\"group\", \"id\":\"the group id\"}`.",
          "items": {
            "$ref": "#/definitions/V2.LibraryContentManagement.Models.ContentExperts"
          },
          "type": "array",
          "uniqueItems": false
        },
        "expiresAt": {
          "description": "The date the item expires which can only be set to the future. This date does not accept the time component, so should be specified as a UTC YYYY-MM-DD.",
          "format": "date-time",
          "title": "Library Content Expires At",
          "type": "string"
        },
        "externalConnectionId": {
          "description": "The external system linked to this document, if applicable",
          "title": "Library Content External Connection Id",
          "type": "string"
        },
        "externalId": {
          "description": "The id of the document in the external system, if applicable",
          "title": "Library Content External Id",
          "type": "string"
        },
        "format": {
          "description": "The file format of the library content",
          "title": "Library Content Format",
          "type": "string"
        },
        "id": {
          "description": "The id of the library content",
          "title": "Library Content id",
          "type": "string"
        },
        "modifiedAt": {
          "format": "date-time",
          "title": "Library Content Modified At",
          "type": "string"
        },
        "modifiedBy": {
          "$ref": "#/definitions/V2.Common.ModifiedUser"
        },
        "name": {
          "description": "The name of the item.",
          "title": "Library Content Name",
          "type": "string"
        },
        "ownerId": {
          "description": "The userId of the owner of the item.",
          "title": "Library Content Owner Id",
          "type": "string"
        },
        "parentFolderId": {
          "description": "The GUID of the item's parent folder. Changing this value will move the item from one folder to another. Use \"root\" to place items in the root folder of the teamsite.",
          "title": "Library Content Parent Folder Id",
          "type": "string"
        },
        "properties": {
          "description": "An array of properties and their values where each property is identified by its id such as `{\"id\": \"the property id\",\"values\": [\"Value A\", \"Value B\"]}`. The property name can be included, but will be ignored.",
          "items": {
            "$ref": "#/definitions/V2.LibraryContentManagement.Models.CustomProperties"
          },
          "type": "array",
          "uniqueItems": false
        },
        "repository": {
          "readOnly": true,
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "size": {
          "format": "int64",
          "title": "Library Content File Size",
          "type": "integer"
        },
        "type": {
          "description": "The type of content (file, folder, url, livedoc, etc)",
          "enum": [
            "unknown",
            "file",
            "folder",
            "url",
            "youtube",
            "vimeo",
            "datasource",
            "livedoc",
            "article",
            "livecomponent"
          ],
          "title": "Content Type",
          "type": "string"
        },
        "version": {
          "title": "Library Content Version",
          "type": "string"
        },
        "versionId": {
          "description": "The id of the current version of the library content",
          "title": "Library Content Version id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LibraryContentManagement.Models.ItemResponse": {
      "properties": {
        "assignedToProfiles": {
          "items": {
            "$ref": "#/definitions/V2.LibraryContentManagement.Models.AssignedToProfile"
          },
          "type": "array",
          "uniqueItems": false
        },
        "createdAt": {
          "format": "date-time",
          "title": "Library Content Created At",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/V2.Common.CreatedUser"
        },
        "description": {
          "description": "The description for the item.",
          "title": "Library Content Description",
          "type": "string"
        },
        "experts": {
          "description": "A list of experts for this item. A user expert would be in the form `{\"type\":\"user\", \"id\":\"the users id\"}`. A group expert would be in the form `{\"type\":\"group\", \"id\":\"the group id\"}`.",
          "items": {
            "$ref": "#/definitions/V2.LibraryContentManagement.Models.ContentExperts"
          },
          "type": "array",
          "uniqueItems": false
        },
        "expiresAt": {
          "description": "The date the item expires which can only be set to the future. This date does not accept the time component, so should be specified as a UTC YYYY-MM-DD.",
          "format": "date-time",
          "title": "Library Content Expires At",
          "type": "string"
        },
        "externalConnectionId": {
          "title": "Library Content External Connection Id",
          "type": "string"
        },
        "externalId": {
          "title": "Library Content External Id",
          "type": "string"
        },
        "format": {
          "title": "Library Content Format",
          "type": "string"
        },
        "id": {
          "title": "Library Content Id",
          "type": "string"
        },
        "modifiedAt": {
          "format": "date-time",
          "title": "Library Content Modified At",
          "type": "string"
        },
        "modifiedBy": {
          "$ref": "#/definitions/V2.Common.ModifiedUser"
        },
        "name": {
          "description": "The name of the item.",
          "title": "Library Content Name",
          "type": "string"
        },
        "ownerId": {
          "description": "The userId of the owner of the item.",
          "title": "Library Content Owner Id",
          "type": "string"
        },
        "parentFolderId": {
          "description": "The GUID of the item's parent folder. Changing this value will move the item from one folder to another. Use \"root\" to place items in the root folder of the teamsite.",
          "title": "Library Content Parent Folder Id",
          "type": "string"
        },
        "properties": {
          "description": "An array of properties and their values where each property is identified by its id such as `{\"id\": \"the property id\",\"values\": [\"Value A\", \"Value B\"]}`. The property name can be included, but will be ignored.",
          "items": {
            "$ref": "#/definitions/V2.LibraryContentManagement.Models.CustomProperties"
          },
          "type": "array",
          "uniqueItems": false
        },
        "repository": {
          "readOnly": true,
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "size": {
          "format": "int64",
          "title": "Library Content File Size",
          "type": "integer"
        },
        "type": {
          "enum": [
            "unknown",
            "file",
            "folder",
            "url",
            "youtube",
            "vimeo",
            "datasource",
            "livedoc",
            "article",
            "livecomponent"
          ],
          "type": "string"
        },
        "url": {
          "$ref": "#/definitions/V2.LibraryContentManagement.Models.UrlInfo"
        },
        "version": {
          "title": "Library Content Version",
          "type": "string"
        },
        "versionId": {
          "title": "Library Content Version Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LibraryContentManagement.Models.UrlInfo": {
      "properties": {
        "openInNewWindow": {
          "title": "Url Open in New Window",
          "type": "boolean",
          "x-ms-visibility": "internal"
        },
        "url": {
          "title": "Library Content External Url",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LibraryPublishing.ErrorPublishResponseStatus": {
      "properties": {
        "id": {
          "description": "The id of the content that errored",
          "title": "Error Id",
          "type": "string"
        },
        "message": {
          "description": "The error message",
          "title": "Error Message",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LibraryPublishing.PublishContentItem": {
      "properties": {
        "id": {
          "description": "The id of the content to publish.",
          "title": "Publish Content Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LibraryPublishing.PublishRequest": {
      "properties": {
        "comment": {
          "description": "A note about the publish action",
          "title": "Comment",
          "type": "string"
        },
        "content": {
          "items": {
            "$ref": "#/definitions/V2.LibraryPublishing.PublishContentItem"
          },
          "type": "array",
          "uniqueItems": false
        },
        "publishAt": {
          "description": "The date and time to publish the content.  This is required if publishing 10 or more documents.",
          "title": "Publish At",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LibraryPublishing.PublishResponse": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "#/definitions/V2.LibraryPublishing.ErrorPublishResponseStatus"
          },
          "type": "array",
          "uniqueItems": false
        },
        "totalErrors": {
          "description": "The number of errors",
          "format": "int32",
          "title": "Total Errors",
          "type": "integer"
        },
        "totalRequests": {
          "description": "The total requests recieved",
          "format": "int32",
          "title": "Total Requests",
          "type": "integer"
        },
        "totalSucceeded": {
          "description": "The number successful",
          "format": "int32",
          "title": "Total Succeeded",
          "type": "integer"
        },
        "totalWarnings": {
          "description": "The total number of warnings",
          "format": "int32",
          "title": "Total Warnings",
          "type": "integer"
        },
        "warnings": {
          "items": {
            "$ref": "#/definitions/V2.LibraryPublishing.WarningPublishResponseStatus"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "V2.LibraryPublishing.WarningPublishResponseStatus": {
      "properties": {
        "id": {
          "description": "The id of the content with a warning",
          "title": "Warning Id",
          "type": "string"
        },
        "message": {
          "description": "The warning message",
          "title": "Warning Message",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LibraryWorkflow.LibraryContent": {
      "properties": {
        "id": {
          "title": "Library Content Id",
          "type": "string"
        },
        "versionId": {
          "title": "Library Content Version id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LiveDocs.Models.ResponseModels.AdhocInputResp": {
      "properties": {
        "columns": {
          "items": {
            "$ref": "#/definitions/V2.LiveDocs.Models.ResponseModels.AdhocInputRespItems"
          },
          "type": "array",
          "uniqueItems": false
        },
        "name": {
          "description": "The name of the ad hoc input field",
          "title": "Adhoc Input Name",
          "type": "string"
        },
        "type": {
          "description": "The type of the adhoc input field (date, string, integer, table, etc)",
          "title": "Adhoc Input Type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LiveDocs.Models.ResponseModels.AdhocInputRespItems": {
      "properties": {
        "name": {
          "description": "The name of the ad hoc input field",
          "title": "Adhoc Input Name",
          "type": "string"
        },
        "type": {
          "description": "The type of the adhoc input field (date, string, integer, etc)",
          "title": "Adhoc Input Type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LiveDocs.Models.ResponseModels.LiveDocGenOutputResultResp": {
      "properties": {
        "format": {
          "description": "The file format of the output document (pdf, pptx, docx, etc)",
          "title": "LiveDoc Output Format",
          "type": "string"
        },
        "id": {
          "description": "The id of the LiveDoc output.",
          "title": "LiveDoc Output Id",
          "type": "string"
        },
        "name": {
          "description": "The name of the output file.",
          "title": "LiveDoc Output Name",
          "type": "string"
        },
        "status": {
          "description": "The completion status of the LiveDoc (Queued, Generating, Completed, Failed)",
          "enum": [
            "Queued",
            "Generating",
            "Completed",
            "Failed"
          ],
          "title": "LiveDoc Generation Status",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LiveDocs.Models.ResponseModels.LiveDocGenResultResp": {
      "properties": {
        "id": {
          "description": "The id of the generated LiveDoc",
          "title": "Generated LiveDoc Id",
          "type": "string"
        },
        "outputs": {
          "items": {
            "$ref": "#/definitions/V2.LiveDocs.Models.ResponseModels.LiveDocGenOutputResultResp"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "V2.LiveDocs.Models.ResponseModels.LiveDocGenSuccinctResultResp": {
      "properties": {
        "generatedLivedocId": {
          "description": "The id of the generated LiveDoc",
          "title": "Generated LiveDoc Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.LiveDocs.Models.ResponseModels.LiveDocVersionResp": {
      "properties": {
        "adhocInputs": {
          "items": {
            "$ref": "#/definitions/V2.LiveDocs.Models.ResponseModels.AdhocInputResp"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "type": "object"
    },
    "V2.PredictiveContent.Models.PredictiveContentHierarchy": {
      "properties": {
        "label": {
          "description": "",
          "title": "Predictive Content Hierarchy Label",
          "type": "string"
        },
        "type": {
          "description": "\"group\" or \"folder\"",
          "title": "Predictive Content Hierarchy Type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.PredictiveContent.Models.PredictiveContentResponse": {
      "properties": {
        "applicationUrls": {
          "items": {
            "$ref": "#/definitions/V2.Workspace.ApplicationUrl"
          },
          "type": "array",
          "uniqueItems": false
        },
        "contentProfileId": {
          "title": "DocCenter Content Profile id",
          "type": "string"
        },
        "deliveryOptions": {
          "items": {
            "$ref": "#/definitions/V2.Workspace.DeliveryOption"
          },
          "type": "array",
          "uniqueItems": false
        },
        "format": {
          "description": "The format of the document (pptx, docx, etc)",
          "title": "Library Content File Format",
          "type": "string"
        },
        "hierarchy": {
          "items": {
            "$ref": "#/definitions/V2.PredictiveContent.Models.PredictiveContentHierarchy"
          },
          "type": "array",
          "uniqueItems": false
        },
        "id": {
          "description": "The DocCenter id of the predictive content.",
          "title": "DocCenter Id",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "libraryContent": {
          "$ref": "#/definitions/V2.LibraryWorkflow.LibraryContent"
        },
        "name": {
          "description": "The name of the predictive content.",
          "title": "Library Content Name",
          "type": "string"
        },
        "properties": {
          "items": {
            "$ref": "#/definitions/Seismic.PublicIntegrationApi.OriginApiClient.Models.ContentManager.ContentCustomProperties"
          },
          "type": "array",
          "uniqueItems": false
        },
        "repository": {
          "description": "The repository (always DocCenter).",
          "title": "DocCenter Repository",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "score": {
          "$ref": "#/definitions/V2.PredictiveContent.Models.PredictiveContentScore"
        },
        "type": {
          "description": "The content type",
          "title": "Library Content Type",
          "type": "string"
        },
        "url": {
          "$ref": "#/definitions/V2.LibraryContentManagement.Models.UrlInfo"
        }
      },
      "type": "object"
    },
    "V2.PredictiveContent.Models.PredictiveContentScore": {
      "properties": {
        "points": {
          "format": "double",
          "title": "Predictive Content Score Points",
          "type": "number"
        },
        "rank": {
          "format": "double",
          "title": "Predictive Content Score Rank",
          "type": "number"
        }
      },
      "type": "object"
    },
    "V2.Teamsites.TeamsiteResponse": {
      "properties": {
        "id": {
          "description": "The id of the teamsite.",
          "title": "Teamsite Id",
          "type": "string"
        },
        "name": {
          "description": "The name of the teamsite.",
          "title": "Teamsite Name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.Users.UserResponse": {
      "properties": {
        "address": {
          "description": "The address of the user.",
          "title": "User Address",
          "type": "string"
        },
        "biography": {
          "description": "The biography of the user",
          "title": "User Bio",
          "type": "string"
        },
        "createdAt": {
          "description": "The timestamp that the user was created.",
          "format": "date-time",
          "title": "User Created At",
          "type": "string"
        },
        "defaultContentProfileId": {
          "description": "The content profile id of the user",
          "title": "User Default Content Profile Id",
          "type": "string"
        },
        "email": {
          "description": "The email of the user",
          "title": "User Email",
          "type": "string"
        },
        "firstName": {
          "description": "The first name of the user",
          "title": "User First Name",
          "type": "string"
        },
        "fullName": {
          "description": "The full name of the user",
          "title": "User Full Name",
          "type": "string"
        },
        "id": {
          "description": "The id of the user.",
          "title": "User Id",
          "type": "string"
        },
        "isDeleted": {
          "description": "Is this user deleted?",
          "title": "Is User Deleted",
          "type": "boolean"
        },
        "lastName": {
          "description": "The last name of the user",
          "title": "User Last Name",
          "type": "string"
        },
        "licenseType": {
          "description": "The license type of the user (business, premium, partner)",
          "enum": [
            "business",
            "premium",
            "partner"
          ],
          "title": "User Licence Type",
          "type": "string"
        },
        "organization": {
          "description": "The organization of the user",
          "title": "User Organization",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number of the user",
          "title": "User Phone Number",
          "type": "string"
        },
        "ssoId": {
          "description": "The external SSO id of the user",
          "title": "User SSO Id",
          "type": "string"
        },
        "thumbnailId": {
          "description": "The id of the user's thumbnail.",
          "title": "User Thumbnail Id",
          "type": "string"
        },
        "title": {
          "description": "The title of the user",
          "title": "User Title",
          "type": "string"
        },
        "username": {
          "description": "The username of the user",
          "title": "Username ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.WorkSpaceContentManager.Models.ContextualFolderRequest": {
      "properties": {
        "contextId": {
          "description": "The ID of the record in the external system.  For Salesforce we use 18 character record IDs such as 00646000009eMGLAA2.  For Dynamics we use the record GUID such as 2DDE7B3B-2CAA-E811-A96A-000D3A1C5096.  For Oracle we use the record number such as 3002 . For Sugar we use the record ID such as ecba9f86-4a4a-def6-359c-505a5b33f014.",
          "title": "Context Id",
          "type": "string"
        },
        "contextType": {
          "description": "This is the singular form of the context such as \"Opportunity\" or \"Account\"",
          "title": "Context Type",
          "type": "string"
        },
        "contextTypePlural": {
          "description": "This is the plural form of the context such as \"Opportunities\" or \"Accounts\"",
          "title": "Context Type Plural",
          "type": "string"
        },
        "name": {
          "description": "The name of the folder you would like to create.  Often the name of the record in the external system.  This name can be updated at any time as the folder is identified by the systemType+contextType+contextId.",
          "title": "Context Name",
          "type": "string"
        },
        "systemType": {
          "description": "This is typically one of the following: Salesforce, MicrosoftDynamicCRM, Sugar, Oracle.   But there are no restrictions and any string can be used to specify a new system type for custom applications.",
          "title": "System Type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.WorkSpaceContentManager.Models.Items.Of.V2.WorkSpaceContentManager.Models.WsItemResp": {
      "properties": {
        "itemCount": {
          "description": "The count of items in the folder",
          "format": "int64",
          "title": "Item Count",
          "type": "integer"
        },
        "items": {
          "items": {
            "$ref": "#/definitions/V2.WorkSpaceContentManager.Models.WsItemResp"
          },
          "type": "array",
          "uniqueItems": false
        }
      },
      "required": [
        "itemCount",
        "items"
      ],
      "type": "object"
    },
    "V2.WorkSpaceContentManager.Models.WsFileResp": {
      "properties": {
        "applicationUrls": {
          "items": {
            "$ref": "#/definitions/V2.Workspace.ApplicationUrl"
          },
          "type": "array",
          "uniqueItems": false
        },
        "createdAt": {
          "description": "The timestamp that the content was created",
          "format": "date-time",
          "title": "Workspace Content Created At",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/V2.Workspace.CreatedUser"
        },
        "deliveryOptions": {
          "items": {
            "$ref": "#/definitions/V2.Workspace.DeliveryOption"
          },
          "type": "array",
          "uniqueItems": false
        },
        "format": {
          "description": "The file format of the workspace content (docx, pdf, pptx, etc)",
          "title": "Workspace Content Format",
          "type": "string"
        },
        "iconUrl": {
          "description": "Url of the icon of the workspace content",
          "title": "Workspace Content Icon Url",
          "type": "string"
        },
        "id": {
          "title": "Workspace Content Id",
          "type": "string"
        },
        "isContextualContent": {
          "description": "Is this contextual content",
          "title": "Workspace Content Is Contextual Content",
          "type": "boolean"
        },
        "modifiedAt": {
          "description": "The timestamp that the content was modified",
          "format": "date-time",
          "title": "Workspace Content Modified At",
          "type": "string"
        },
        "modifiedBy": {
          "$ref": "#/definitions/V2.Workspace.ModifiedUser"
        },
        "name": {
          "description": "Name of the workspace content",
          "title": "Workspace Content Name",
          "type": "string"
        },
        "parentFolderId": {
          "description": "The parent folder of the workspace content",
          "title": "Workspace Content Parent Folder Id",
          "type": "string"
        },
        "repository": {
          "readOnly": true,
          "title": "Workspace Content Repository",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "resourceUrl": {
          "description": "The url of the content",
          "title": "Workspace Content Resource Url",
          "type": "string"
        },
        "size": {
          "description": "The size of the file",
          "format": "int64",
          "title": "Workspace File Size",
          "type": "integer"
        },
        "type": {
          "description": "The content type (folder, url, file)",
          "enum": [
            "folder",
            "url",
            "file"
          ],
          "title": "Workspace Content Type",
          "type": "string"
        },
        "versionId": {
          "description": "The current version id",
          "title": "Workspace Content Version Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.WorkSpaceContentManager.Models.WsFolderReq": {
      "example": {
        "name": "Case Studies",
        "parentFolderId": "1b29ca55-464f-492e-a972-a2a0f72b1ebb"
      },
      "properties": {
        "format": {
          "title": "Workspace Folder Format",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "name": {
          "description": "The name of the workspace folder",
          "title": "Workspace Folder Name",
          "type": "string"
        },
        "parentFolderId": {
          "description": "The id of the parent folder.",
          "title": "Workspace Parent Folder Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.WorkSpaceContentManager.Models.WsFolderResp": {
      "properties": {
        "applicationUrls": {
          "items": {
            "$ref": "#/definitions/V2.Workspace.ApplicationUrl"
          },
          "type": "array",
          "uniqueItems": false
        },
        "createdAt": {
          "format": "date-time",
          "title": "Workspace Folder Created At",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/V2.Workspace.CreatedUser"
        },
        "deliveryOptions": {
          "items": {
            "$ref": "#/definitions/V2.Workspace.DeliveryOption"
          },
          "type": "array",
          "uniqueItems": false
        },
        "format": {
          "title": "Workspace Folder Format",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "iconUrl": {
          "description": "The icon url of the workspace folder",
          "title": "Workspace Folder Icon Url",
          "type": "string"
        },
        "id": {
          "title": "Workspace Folder Id",
          "type": "string"
        },
        "isContextualContent": {
          "title": "Is Contextual Content",
          "type": "boolean"
        },
        "modifiedAt": {
          "format": "date-time",
          "title": "Workspace Folder Modified At",
          "type": "string"
        },
        "modifiedBy": {
          "$ref": "#/definitions/V2.Workspace.ModifiedUser"
        },
        "name": {
          "title": "Workspace Folder Name",
          "type": "string"
        },
        "parentFolderId": {
          "title": "Workspace Folder Parent Id",
          "type": "string"
        },
        "repository": {
          "readOnly": true,
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "resourceUrl": {
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "integer",
          "x-ms-visibility": "internal"
        },
        "type": {
          "enum": [
            "folder",
            "url",
            "file"
          ],
          "title": "Workspace Folder Type",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "versionId": {
          "type": "string",
          "x-ms-visibility": "internal"
        }
      },
      "type": "object"
    },
    "V2.WorkSpaceContentManager.Models.WsItemResp": {
      "properties": {
        "applicationUrls": {
          "description": "The url of the workspace content",
          "items": {
            "$ref": "#/definitions/V2.Workspace.ApplicationUrl"
          },
          "title": "Workspace Content Application Urls",
          "type": "array",
          "uniqueItems": false
        },
        "createdAt": {
          "description": "The time the content was created.",
          "format": "date-time",
          "title": "Workspace Content Created At",
          "type": "string"
        },
        "createdBy": {
          "$ref": "#/definitions/V2.Workspace.CreatedUser"
        },
        "deliveryOptions": {
          "items": {
            "$ref": "#/definitions/V2.Workspace.DeliveryOption"
          },
          "type": "array",
          "uniqueItems": false
        },
        "format": {
          "description": "The file format of the item (docx, pptx, etc).",
          "title": "Workspace Content Format",
          "type": "string"
        },
        "iconUrl": {
          "description": "The url of the workspace content's icon.",
          "title": "Workspace Content Icon Url",
          "type": "string"
        },
        "id": {
          "description": "The id of the content in the requested folder",
          "title": "Workspace Content Id",
          "type": "string"
        },
        "isContextualContent": {
          "description": "Is this contextual content.",
          "title": "Workspace Content Is Contextual Content",
          "type": "boolean"
        },
        "modifiedAt": {
          "description": "The time the content was modified.",
          "format": "date-time",
          "title": "Workspace Content Modified At",
          "type": "string"
        },
        "modifiedBy": {
          "$ref": "#/definitions/V2.Workspace.ModifiedUser"
        },
        "name": {
          "description": "The name of the item.",
          "title": "Workspace Content Name",
          "type": "string"
        },
        "parentFolderId": {
          "description": "The parent folder of the workspace content.",
          "title": "Workspace Content Parent Folder Id",
          "type": "string"
        },
        "repository": {
          "description": "The repository the item is in (Library, Workspace, DocCenter, ContentManager)",
          "readOnly": true,
          "title": "Workspace Item Repository",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "resourceUrl": {
          "description": "The Url to access the workspace content via API.",
          "title": "Workspace Content API URL",
          "type": "string"
        },
        "size": {
          "description": "The file's size.",
          "format": "int64",
          "title": "Workspace Content Size",
          "type": "integer"
        },
        "type": {
          "description": "The content type (folder, url, file)",
          "enum": [
            "folder",
            "url",
            "file"
          ],
          "title": "Workspace Content Type",
          "type": "string"
        },
        "url": {
          "$ref": "#/definitions/V2.WorkSpaceContentManager.Models.WsUrlInfoResp"
        },
        "versionId": {
          "description": "The current version id of the workspace content",
          "title": "Workspace Content Version Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.WorkSpaceContentManager.Models.WsUrlInfoResp": {
      "properties": {
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.Workspace.ApplicationUrl": {
      "properties": {
        "name": {
          "title": "Application Url Name",
          "type": "string"
        },
        "url": {
          "title": "Application Url",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.Workspace.CreatedUser": {
      "properties": {
        "id": {
          "description": "The id of the user who created the item",
          "title": "Creator User Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.Workspace.DeliveryOption": {
      "properties": {
        "id": {
          "description": "Delivery Option Id",
          "title": "Delivery Option Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.Workspace.ModifiedUser": {
      "properties": {
        "id": {
          "description": "The id of the user who modified the item",
          "title": "Modifier User Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "V2.Workspace.User": {
      "properties": {
        "id": {
          "description": "",
          "title": "User Id",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "host": "europe-002.azure-apim.net",
  "info": {
    "contact": {
      "email": "api@seismic.com",
      "name": "Seismic",
      "url": "https://seismic.com/contact"
    },
    "description": "Seismic is the leading sales enablement platform.  By leveraging Seismic in your flows and power apps you can create rich workflow processes and business applications to increase business productivity and effectiveness.",
    "termsOfService": "https://seismic.com/terms-of-use/",
    "title": "Seismic",
    "version": "v2",
    "x-ms-deployment-version": "1.0.0",
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "parameters": {},
  "paths": {
    "/{connectionId}/generatedLivedocs/{generatedLivedocId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "This is where you get the status for a generation process, it will give you the overall status for all underlying steps, but will also provide\r\n            a breakdown for the readiness of the underlying assets. For example if you just want the PPTX, you may be able to download that before the PDF is done rendering.",
        "operationId": "GetGenerationResultAsync",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The id of the Generated Live Doc",
            "in": "path",
            "name": "generatedLivedocId",
            "required": true,
            "type": "string",
            "x-ms-summary": "GeneratedLiveDocId"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "id": "da96821e-f7cf-4bd4-a225-06d17c7e7480",
                "outputs": [
                  {
                    "format": "PPTX",
                    "id": "0d370324-fedf-4a56-9997-44a275e2d9f6",
                    "name": "TestPPTX1",
                    "status": "Generating"
                  },
                  {
                    "format": "PDF",
                    "id": "e70b617e-66af-4d45-bbbd-60939f62f153",
                    "name": "TestPDF1",
                    "status": "Generating"
                  }
                ]
              }
            },
            "schema": {
              "$ref": "#/definitions/V2.LiveDocs.Models.ResponseModels.LiveDocGenResultResp"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Get status of LiveDoc generation",
        "tags": [
          "LiveDoc"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#get-status-of-livedoc-generation"
        }
      }
    },
    "/{connectionId}/generatedLivedocs/{generatedLivedocId}/outputs/{outputId}/content": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "This is where you can download a particular generated output such as a PPTX, DOCX, PDF, or XLSX. This endpoint also supports the\r\n  special keywords of \"pptx\", \"docx\", \"pdf\" as special aliases of the generatedOutputId such that you do not need to first get the generatedOutputId\r\n            in order to use this endpoint.",
        "operationId": "GetGeneratedLiveDocContent",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The id of the generated Live Doc",
            "in": "path",
            "name": "generatedLivedocId",
            "required": true,
            "type": "string",
            "x-ms-summary": "generatedLiveDocId"
          },
          {
            "description": "The id of the specfic output file you wish to download.",
            "in": "path",
            "name": "outputId",
            "required": true,
            "type": "string",
            "x-ms-summary": "outputId"
          },
          {
            "default": false,
            "description": "This needs to be set to false in order to get the download url in response body.",
            "in": "query",
            "name": "redirect",
            "required": true,
            "type": "boolean",
            "x-ms-summary": "redirect",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V2.Common.Models.DownloadLocationResp"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Download LiveDoc output",
        "tags": [
          "LiveDoc"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#download-livedoc-output"
        }
      }
    },
    "/{connectionId}/predictiveContent/{predictiveContentId}/{contextId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets the list of predictive content for a given predictive content setting for the currently authenticated user. In the case of predictive content which is dynamically grouped or inherits its hierarchy from the parent DocCenter folder, the hierarchy is provided in the hierarchy object with levels represented sequentially in the array. It is up to the UI to render the hierarchy.",
        "operationId": "GetPredictiveContentResultSet",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Predictive Content Setting Id or Title",
            "in": "path",
            "name": "predictiveContentId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Predictive Content Id or Title"
          },
          {
            "description": "ContextId of content from SalesForce, Sugar, Dynamics, Etc.",
            "in": "path",
            "name": "contextId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Context Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/V2.PredictiveContent.Models.PredictiveContentResponse"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Get predictive content",
        "tags": [
          "Predictive Content"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#get-predictive-content"
        }
      }
    },
    "/{connectionId}/teamsites": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Provides the full list of teamsites in a tenant, regardless of user access.",
        "operationId": "GetTeamsitesAsync",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "items": {
                "$ref": "#/definitions/V2.Teamsites.TeamsiteResponse"
              },
              "type": "array",
              "uniqueItems": false
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Get teamsites",
        "tags": [
          "Teamsites"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#get-teamsites"
        }
      }
    },
    "/{connectionId}/teamsites/{teamsiteId}/files": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Adds a new file using a `multipart/form-data` POST containing the file's metadata and the file contents. The metadata part includes required properties such as the name, format, and parentFolderId, but can also include any properties documented in the `PATCH` /files/:libraryContentId operation. Use the special keyword \"root\" to add files to the root folder of a teamsite. The content part includes the file's binary content to be uploaded.",
        "operationId": "CreateLibraryFile",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Teamsite Id",
            "in": "path",
            "name": "teamsiteId",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTeamsitesAsync",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Teamsite Id"
          },
          {
            "description": "Json Object with 'name', 'parentFolderId' and 'format' like 'ppt' or 'doc'. Example: {\"name\" : \"Big Presentation\", \"parentFolderId\" : \"root\", \"format\": \"ppt\"}",
            "in": "formData",
            "name": "metadata",
            "required": true,
            "type": "string",
            "x-ms-summary": "Metadata"
          },
          {
            "description": "File content bytes. Use a Content-Disposition that includes a 'filename' parameter to indicate this is file data. The specific filename value is ignored in favor of metadata.name.",
            "in": "formData",
            "name": "content",
            "required": true,
            "type": "file",
            "x-ms-summary": "Content"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V2.LibraryContentManagement.Models.FileResponse"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Add a File [Library]",
        "tags": [
          "Library Content Management"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#add-a-file-%5blibrary%5d"
        }
      }
    },
    "/{connectionId}/teamsites/{teamsiteId}/items/{libraryContentId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get details for any item type in Library",
        "operationId": "GetItemInformation",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The teamsite id the item belongs to",
            "in": "path",
            "name": "teamsiteId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Teamsite Id"
          },
          {
            "description": "The id of the item",
            "in": "path",
            "name": "libraryContentId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Library Content Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V2.LibraryContentManagement.Models.ItemResponse"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Get item details [Library]",
        "tags": [
          "Item"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#get-item-details-%5blibrary%5d"
        }
      }
    },
    "/{connectionId}/teamsites/{teamsiteId}/items/{libraryContentId}/submit": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Submit a document into workflow",
        "operationId": "SubmitLibraryItemToWorkflow",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The id of the teamsite",
            "in": "path",
            "name": "teamsiteId",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTeamsitesAsync",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Teamsite Id"
          },
          {
            "description": "Library Content Id",
            "in": "path",
            "name": "libraryContentId",
            "required": true,
            "type": "string",
            "x-ms-summary": "The id of library content"
          },
          {
            "description": "",
            "in": "body",
            "name": "comment",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OriginApiClient.Models.LibraryWorkflow.SubmitFileToWorkFlowRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Submit a document into workflow [Library]",
        "tags": [
          "Library Workflow"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#submit-a-document-into-workflow-%5blibrary%5d"
        }
      }
    },
    "/{connectionId}/teamsites/{teamsiteId}/livedocVersions/{libraryContentVersionId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets the list of adHoc inputs required to generate a LiveDoc. Each input has a name and type in the following format: `{\"name\": \"variable_name_here\", \"type\": \"string\"}`",
        "operationId": "GetLiveDocInputParams",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The id of the teamsite",
            "in": "path",
            "name": "teamsiteId",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTeamsitesAsync",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Teamsite Id"
          },
          {
            "description": "The library content version id",
            "in": "path",
            "name": "libraryContentVersionId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Library Content Version Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "adhocInputs": [
                  {
                    "name": "Full Name",
                    "type": "string"
                  },
                  {
                    "name": "Age",
                    "type": "integer"
                  },
                  {
                    "name": "Birthday",
                    "type": "date"
                  },
                  {
                    "columns": [
                      {
                        "name": "Graduation Date",
                        "type": "date"
                      },
                      {
                        "name": "School Name",
                        "type": "string"
                      }
                    ],
                    "name": "Education",
                    "type": "table"
                  }
                ]
              }
            },
            "schema": {
              "$ref": "#/definitions/V2.LiveDocs.Models.ResponseModels.LiveDocVersionResp"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Get list of inputs for LiveDoc",
        "tags": [
          "LiveDoc"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#get-list-of-inputs-for-livedoc"
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This is where you start a generation, with all the necessary options. Each of the desired outputs must be specified in the \"outputs\" array. If you do not specify any outputs, this endpoint will return a 4xx error. *Note: Generated outputs are only available for download for 24 hours from time of generation*\n\n### BODY PARAMETER DEFINITIONS\n#### ADHOCINPUTS\n\nSingle variables are represented as an object such as:\n>{\"name\" : \"field name here\", \"value\" : \"the value to pass in\"}\n\nAdhoc tables are represented as an object with columns and a set of rows such as:\n>{ \"name\": \"adhoc_4\", \"value\": { \"columns\": [\"StrCol\", \"IntCol\"], \"rows\": [[\"hello\", 1], [\"goodbye\", 2]] }\n#### OUTPUTS\n* imageDpi for PPT and DOC can be set to 0, 96, 120, 144, 200, 300, 400. When set to 0, we will use placeholders rather than rasterized images in place of dynamic images.\n* layout for PDF can be set to Full Page Slides or Notes Pages to produce slides or note pages\n* openPassword specifies the password required to open the PDF, if not provided, it will default to no password\n* ownerPassword specifies the password required to open the PDF as an edit mode owner, if not provided, it will default to no password",
        "operationId": "GenerateAsync",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The id of the teamsite",
            "in": "path",
            "name": "teamsiteId",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTeamsitesAsync",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Teamsite Id"
          },
          {
            "description": "The library content version id",
            "in": "path",
            "name": "libraryContentVersionId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Library Content Version Id"
          },
          {
            "description": "",
            "in": "body",
            "name": "genInputReq",
            "required": false,
            "schema": {
              "example": {
                "adhocInputs": [
                  {
                    "name": "Full Name",
                    "value": "John Smith"
                  },
                  {
                    "name": "Age",
                    "value": 35
                  },
                  {
                    "name": "Birthday",
                    "value": "1983-01-15"
                  },
                  {
                    "name": "Education",
                    "value": {
                      "columns": [
                        "Graduation Day",
                        "School"
                      ],
                      "rows": [
                        [
                          "2001-07-10",
                          "Horace Greeley High School"
                        ],
                        [
                          "2005-07-25",
                          "Adams State College"
                        ]
                      ]
                    }
                  }
                ],
                "outputs": [
                  {
                    "docxOptions": null,
                    "format": "PPTX",
                    "name": "TestPPTX1",
                    "pdfOptions": null,
                    "pptxOptions": {
                      "clearNotes": false,
                      "imageDpi": 200
                    },
                    "xlsxOptions": null
                  },
                  {
                    "docxOptions": null,
                    "format": "PDF",
                    "name": "TestPDF1",
                    "pdfOptions": {
                      "compatibility": "Acrobat 9.0",
                      "layout": "Full Page Slides",
                      "openPassword": "1234",
                      "ownerOptions": null,
                      "ownerPassword": "0000"
                    },
                    "pptxOptions": null,
                    "xlsxOptions": null
                  }
                ]
              },
              "properties": {
                "adHocInputs": {
                  "items": {
                    "$ref": "#/definitions/V2.AdHocInputs"
                  },
                  "type": "array"
                },
                "outputs": {
                  "items": {
                    "properties": {
                      "docxOptions": {
                        "properties": {
                          "imageDpi": {
                            "default": 200,
                            "enum": [
                              0,
                              96,
                              120,
                              144,
                              200,
                              300,
                              400
                            ],
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "format": {
                        "enum": [
                          "PPTX",
                          "DOCX",
                          "PDF",
                          "XLSX"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "pdfOptions": {
                        "properties": {
                          "compatibility": {
                            "default": "Acrobat 9.0",
                            "enum": [
                              "Acrobat 5.0",
                              "Acrobat 7.0",
                              "Acrobat 9.0"
                            ],
                            "type": "string"
                          },
                          "layout": {
                            "default": "Full Page Slides",
                            "enum": [
                              "Full Page Slides",
                              "Note Pages"
                            ],
                            "type": "string"
                          },
                          "openPassword": {
                            "type": "string"
                          },
                          "ownerOptions": {
                            "type": "string"
                          },
                          "ownerPassword": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "pptxOptions": {
                        "properties": {
                          "clearNotes": {
                            "default": false,
                            "type": "boolean"
                          },
                          "imageDpi": {
                            "default": 200,
                            "enum": [
                              0,
                              96,
                              120,
                              144,
                              200,
                              300,
                              400
                            ],
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "xlsxOptions": {
                        "properties": {
                          "datasource": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "datasource"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "format"
                    ],
                    "type": "object"
                  },
                  "minItems": 1,
                  "type": "array"
                }
              },
              "required": [
                "outputs"
              ],
              "type": "object"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "examples": {
              "application/json": {
                "generatedLivedocId": "da96821e-f7cf-4bd4-a225-06d17c7e7480"
              }
            },
            "schema": {
              "$ref": "#/definitions/V2.LiveDocs.Models.ResponseModels.LiveDocGenSuccinctResultResp"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Generate a LiveDoc",
        "tags": [
          "LiveDoc"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#generate-a-livedoc"
        }
      }
    },
    "/{connectionId}/teamsites/{teamsiteId}/publish": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "This endpoint can be used to immediately promote and publish content, or schedule publish of content for a future date for any number of unpublished documents.\r\n            The content list is a list of library content. The publish endpoint will always publish the latest version of the document, taking it from a draft to a published document.",
        "operationId": "PublishLibraryItems",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The id of the teamsite",
            "in": "path",
            "name": "teamsiteId",
            "required": true,
            "type": "string",
            "x-ms-dynamic-values": {
              "operationId": "GetTeamsitesAsync",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-summary": "Teamsite Id"
          },
          {
            "description": "new folder",
            "in": "body",
            "name": "publishRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V2.LibraryPublishing.PublishRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V2.LibraryPublishing.PublishResponse"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Publish one or more documents [Library]",
        "tags": [
          "Library Publishing"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#publish-one-or-more-documents-%5blibrary%5d"
        }
      }
    },
    "/{connectionId}/users/{userId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get the user details for the specified id",
        "operationId": "GetUserDetails",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The id of the user",
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string",
            "x-ms-summary": "User Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V2.Users.UserResponse"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Get user details",
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#get-user-details"
        }
      }
    },
    "/{connectionId}/workspace/files": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Adds a new file using a multi-part POST containing the file's metadata and the file contents. Using a `multipart/form-data` body, send body parts named 'metadata' and 'content'. The metadata should be a JSON object. The content part should contain the bytes of the file.",
        "operationId": "CreateFile",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Json Object with 'name', 'parentFolderId' and 'format' like 'ppt' or 'doc'. Example: {\"name\" : \"Big Presentation\", \"parentFolderId\" : \"root\", \"format\": \"ppt\"}",
            "in": "formData",
            "name": "metadata",
            "required": true,
            "type": "string",
            "x-ms-summary": "Form Data"
          },
          {
            "description": "File content bytes. Use a Content-Disposition that includes a 'filename' parameter to indicate this is file data. The specific filename value is ignored in favor of metadata.name.",
            "in": "formData",
            "name": "content",
            "required": true,
            "type": "file",
            "x-ms-summary": "File Contents"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V2.WorkSpaceContentManager.Models.WsFileResp"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Add a File [Workspace]",
        "tags": [
          "Workspace Content Management"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#add-a-file-%5bworkspace%5d"
        }
      }
    },
    "/{connectionId}/workspace/folders": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Adds a new workspace folder inside a given folder. Use the special keywork \"root\" as the parentFolderId to create a new folder in the user's root.",
        "operationId": "CreateWorkspaceFolder",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Details for the new folder",
            "in": "body",
            "name": "folder",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V2.WorkSpaceContentManager.Models.WsFolderReq"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V2.WorkSpaceContentManager.Models.WsFolderResp"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Add a folder [Workspace]",
        "tags": [
          "Workspace Content Management"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#add-a-folder-%5bworkspace%5d"
        }
      }
    },
    "/{connectionId}/workspace/folders/createContextualFolder": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a contextual folder or gets the workspaceContentId for a contextual folder if it already exists. These contextual folders are identified by the combination of systemType, contextType, contextTypePlural, and contextId.\n>Caution: Folders Cannot be Deleted!\n>\n>Any folders created with this API cannot be deleted including the folder for the systemType, contextTypePlural, and contextId, so take extreme caution when using this endpoint.  Any typo in any of these fields will yield invalid non-removable folders.  Each of the values is case sensitive.",
        "operationId": "CreateWorkspaceContextualFolder",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "",
            "in": "body",
            "name": "folder",
            "required": false,
            "schema": {
              "$ref": "#/definitions/V2.WorkSpaceContentManager.Models.ContextualFolderRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V2.WorkSpaceContentManager.Models.WsFolderResp"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Add or get a contextual folder [Workspace]",
        "tags": [
          "Workspace Content Management"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#add-or-get-a-contextual-folder-%5bworkspace%5d"
        }
      }
    },
    "/{connectionId}/workspace/folders/{workspaceFolderId}/items": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Gets a list of items (file, folder, url, etc) in a parent folder.",
        "operationId": "GetWorkspaceFolderItems",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "Id of the folder. Use \"root\" for the root folder.",
            "in": "path",
            "name": "workspaceFolderId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Workspace Folder Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V2.WorkSpaceContentManager.Models.Items.Of.V2.WorkSpaceContentManager.Models.WsItemResp"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Get items in a folder [Workspace]",
        "tags": [
          "Workspace Content Management"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#get-items-in-a-folder-%5bworkspace%5d"
        }
      }
    },
    "/{connectionId}/workspace/items/{workspaceContentId}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "description": "Get details for any item type in Workspace",
        "operationId": "GetItem",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "description": "The id of the workspace content",
            "in": "path",
            "name": "workspaceContentId",
            "required": true,
            "type": "string",
            "x-ms-summary": "Workspace Content Id"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/V2.WorkSpaceContentManager.Models.WsItemResp"
            }
          }
        },
        "security": [
          {
            "oauth2_auth": [
              "openid id download library offline_access"
            ]
          }
        ],
        "summary": "Get item details [Workspace]",
        "tags": [
          "Workspace Content Management"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/seismic/#get-item-details-%5bworkspace%5d"
        }
      }
    }
  },
  "produces": [],
  "responses": {},
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "oauth2_auth": {
      "authorizationUrl": "https://auth.seismic.com/central/connect/authorize",
      "flow": "accessCode",
      "scopes": {
        "openid id download library offline_access": "openid id download library offline_access"
      },
      "tokenUrl": "https://auth.seismic.com/api/public/v1/central/connect/token",
      "type": "oauth2"
    }
  },
  "swagger": "2.0",
  "tags": [],
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://seismic.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://seismic.com/privacy-policy"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/seismic"
  }
}
