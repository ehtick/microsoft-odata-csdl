{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Dynamic Signal",
    "description": "Dynamic Signal is an Employee Communication and Engagement Platform, trusted by organizations to connect, align and engage employees. Connect to Dynamic Signal to create and manage your posts and users.",
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/dynamicsignal",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/{connectionId}/user/email": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/userRequestResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Get a user by email",
        "description": "Retrieves a user by their email address",
        "operationId": "GetUserByEmail",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The user's email",
                  "x-ms-summary": "Email"
                },
                "include": {
                  "description": "Specifies optional data to return with the user.",
                  "x-ms-summary": "Include",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Specifies optional data to return with the user.",
                    "x-ms-summary": "Include"
                  }
                }
              },
              "required": [
                "email"
              ]
            }
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#get-a-user-by-email"
        }
      }
    },
    "/{connectionId}/manage/usertags": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/manageUserTagsResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Get user tags",
        "description": "Gets a list of user tags defined in the system",
        "operationId": "GetUserTags",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#get-user-tags"
        }
      }
    },
    "/{connectionId}/divisions": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/divisionsResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Get divisions",
        "description": "Gets the list of divisions",
        "operationId": "GetDivisions",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#get-divisions"
        }
      }
    },
    "/{connectionId}/post/{id}/documents": {
      "put": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/documentInfoResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Upload a document to a post",
        "description": "Uploads a document to a post via binary upload",
        "operationId": "PutDocument",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "type": "string",
            "description": "The document's preferred filename (with extension)",
            "x-ms-summary": "File Name",
            "required": true,
            "in": "query",
            "name": "fileName"
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "The post ID",
            "x-ms-summary": "ID",
            "required": true,
            "in": "path",
            "name": "id"
          },
          {
            "name": "File",
            "in": "body",
            "description": "File to upload",
            "required": true,
            "x-ms-summary": "File",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of uploaded file",
            "x-ms-summary": "Content-Type such as image/jpg, image/pjpeg, image/png, image/x-png, image/gif",
            "required": true,
            "type": "string",
            "default": "image/jpeg"
          }
        ],
        "consumes": [
          "image/jpeg"
        ],
        "produces": [
          "application/json"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#upload-a-document-to-a-post"
        }
      }
    },
    "/{connectionId}/manage/preregister": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/userRequestResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Preregister a user",
        "description": "Creates a new user in the preregistered state",
        "operationId": "PreregisterUser",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The user's email address",
                  "x-ms-summary": "Email"
                },
                "externalSsoUserId": {
                  "type": "string",
                  "description": "The user's ID on the external system managed by the SSO Identity Provider",
                  "x-ms-summary": "External Sso User ID"
                },
                "handle": {
                  "type": "string",
                  "description": "The user's handle",
                  "x-ms-summary": "Handle"
                },
                "firstName": {
                  "type": "string",
                  "description": "The user's first name.",
                  "x-ms-summary": "First Name"
                },
                "lastName": {
                  "type": "string",
                  "description": "The user's last name.",
                  "x-ms-summary": "Last Name"
                },
                "divisionIds": {
                  "description": "A list of divisions to which the user will be assigned.",
                  "x-ms-summary": "Division IDs",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "x-ms-visibility": "advanced",
                    "format": "int64",
                    "description": "A list of divisions to which the user will be assigned.",
                    "x-ms-summary": "Division IDs"
                  },
                  "x-ms-visibility": "advanced"
                },
                "targetIds": {
                  "description": "A list of targets to assign to the user.",
                  "x-ms-summary": "Target IDs",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "x-ms-visibility": "advanced",
                    "format": "int64",
                    "description": "A list of targets to assign to the user.",
                    "x-ms-summary": "Target IDs"
                  },
                  "x-ms-visibility": "advanced"
                },
                "tags": {
                  "description": "A list of tags to assign to the user.",
                  "x-ms-summary": "Tags",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/userTagRequestResponse"
                  },
                  "x-ms-visibility": "advanced"
                },
                "sendInvitationEmail": {
                  "type": "boolean",
                  "description": "Determines whether to send an invitation email to the user.",
                  "x-ms-summary": "Send Invitation Email",
                  "x-ms-visibility": "advanced"
                },
                "invitationMessage": {
                  "type": "string",
                  "description": "An optional plain text message to include in the invitation email.",
                  "x-ms-summary": "Invitation Message",
                  "x-ms-visibility": "advanced"
                },
                "notificationsDefault": {
                  "description": "Setting that controls when the users will start receiving email notifications. ",
                  "x-ms-summary": "Notifications Default",
                  "type": "string",
                  "enum": [
                    "Immediately",
                    "AfterFirstLogin"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "privileges": {
                  "$ref": "#/definitions/userPrivilegesRequestResponse"
                }
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#preregister-a-user"
        }
      }
    },
    "/{connectionId}/manage/images": {
      "put": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/uploadImageResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Upload image",
        "description": "Uploads an image via binary upload",
        "operationId": "ManageImage",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "File",
            "in": "body",
            "description": "File to upload",
            "required": true,
            "x-ms-summary": "File",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of uploaded file",
            "x-ms-summary": "Content-Type such as image/jpg, image/pjpeg, image/png, image/x-png, image/gif",
            "required": true,
            "type": "string",
            "default": "image/jpeg"
          }
        ],
        "consumes": [
          "image/jpeg"
        ],
        "produces": [
          "application/json"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#upload-image"
        }
      }
    },
    "/{connectionId}/post/{id}": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/postResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Get a post",
        "description": "Gets a specific post by ID",
        "operationId": "GetPost",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "The post ID.; This is the unique identifier for the post.",
            "x-ms-summary": "ID",
            "required": true,
            "in": "path",
            "name": "id"
          },
          {
            "type": "integer",
            "format": "int64",
            "description": "The user who is viewing the post. The logged in user will be used if no ID is specified",
            "x-ms-summary": "User ID",
            "in": "query",
            "name": "userId"
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#get-a-post"
        }
      }
    },
    "/{connectionId}/post": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/postResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Create a post",
        "description": "Creates a post.",
        "operationId": "CreatePost",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string",
                  "description": "The short description of the post",
                  "x-ms-summary": "Description"
                },
                "tagLine": {
                  "type": "string",
                  "description": "The tag line of the post",
                  "x-ms-summary": "Tag Line",
                  "x-ms-visibility": "advanced"
                },
                "content": {
                  "type": "string",
                  "description": "The body of the post",
                  "x-ms-summary": "Content"
                },
                "creatorComments": {
                  "type": "string",
                  "description": "A message associated with the post",
                  "x-ms-summary": "Creator Comments",
                  "x-ms-visibility": "advanced"
                },
                "permaLink": {
                  "type": "string",
                  "description": "The external URL referenced by the post",
                  "x-ms-summary": "Perma Link",
                  "x-ms-visibility": "advanced"
                },
                "internalDiscussionsEnabled": {
                  "type": "boolean",
                  "description": "Whether members are allowed to perform like action and add comments on posts internally",
                  "x-ms-summary": "Internal Discussions Enabled",
                  "x-ms-visibility": "advanced"
                },
                "title": {
                  "type": "string",
                  "description": "The title of the post",
                  "x-ms-summary": "Title"
                },
                "memberVideoUrl": {
                  "type": "string",
                  "description": "The video URL referenced by the post",
                  "x-ms-summary": "Member Video Url",
                  "x-ms-visibility": "advanced"
                },
                "postType": {
                  "description": "The basic type of the post",
                  "x-ms-summary": "Post Type",
                  "type": "string",
                  "enum": [
                    "Text",
                    "Video"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "approvalState": {
                  "description": "The approval state of the post.  Defaults to the author's Review Status setting.",
                  "x-ms-summary": "Approval State",
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Published",
                    "Excluded"
                  ]
                },
                "displayMode": {
                  "description": "Indicates redirection of a post to an internal or external location",
                  "x-ms-summary": "Display Mode",
                  "type": "string",
                  "enum": [
                    "DisplayInApp",
                    "OpenExternally"
                  ],
                  "x-ms-visibility": "advanced"
                },
                "sharable": {
                  "type": "boolean",
                  "description": "Whether the VoiceStorm platform and widgets will allow for the post to be shared",
                  "x-ms-summary": "Sharable",
                  "x-ms-visibility": "advanced"
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date after which the post is available for viewing",
                  "x-ms-summary": "Start Date",
                  "x-ms-visibility": "advanced"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date the after which the post will no longer be available for viewing",
                  "x-ms-summary": "End Date",
                  "x-ms-visibility": "advanced"
                },
                "suggestedShareText": {
                  "type": "string",
                  "description": "The suggested share text for the post",
                  "x-ms-summary": "Suggested Share Text",
                  "x-ms-visibility": "advanced"
                },
                "shortSuggestedShareText": {
                  "type": "string",
                  "description": "The suggested share text for the post for short message providers",
                  "x-ms-summary": "Short Suggested Share Text",
                  "x-ms-visibility": "advanced"
                },
                "sharePoints": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of points awarded when a user shares the post",
                  "x-ms-summary": "Share Points",
                  "x-ms-visibility": "advanced"
                },
                "clickPoints": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of points awarded when someone clicks on a shared link to the post",
                  "x-ms-summary": "Click Points",
                  "x-ms-visibility": "advanced"
                },
                "shareWithImages": {
                  "type": "boolean",
                  "description": "Controls if posts shared to short message services (like Twitter) have images shared",
                  "x-ms-summary": "Share With Images",
                  "x-ms-visibility": "advanced"
                },
                "shareImagesOnly": {
                  "type": "boolean",
                  "description": "Controls if posts shared to certain services are treated as image/photo only updates",
                  "x-ms-summary": "Share Images Only",
                  "x-ms-visibility": "advanced"
                },
                "tags": {
                  "description": "A list of tags that have been set on the post",
                  "x-ms-summary": "Tags",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/postTagRequestResponse"
                  },
                  "x-ms-visibility": "advanced"
                },
                "language": {
                  "type": "string",
                  "description": "The language of the post content",
                  "x-ms-summary": "Language",
                  "x-ms-visibility": "advanced"
                },
                "documents": {
                  "description": "A list of documents IDs to attach to this post",
                  "x-ms-summary": "Documents",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-ms-visibility": "advanced",
                    "format": "uuid",
                    "description": "A list of documents IDs to attach to this post",
                    "x-ms-summary": "Documents"
                  },
                  "x-ms-visibility": "advanced"
                },
                "creatorId": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The user that is creating the post; This property is only available for server-authenticated requests at this time. All other posts are automatically set to the authenticated user.",
                  "x-ms-summary": "Creator ID"
                },
                "displayCreator": {
                  "type": "boolean",
                  "description": "Controls whether the creator information is to be displayed with the post or not; This property is only available for server-authenticated requests at this time.",
                  "x-ms-summary": "Display Creator",
                  "x-ms-visibility": "advanced"
                },
                "categoryIds": {
                  "description": "A list of category IDs that have been assigned to the post",
                  "x-ms-summary": "Category IDs",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "description": "A list of category IDs that have been assigned to the post",
                    "x-ms-summary": "Category IDs"
                  }
                },
                "targetIds": {
                  "description": "A list of target Ids that have been assigned to the post",
                  "x-ms-summary": "Target IDs",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "x-ms-visibility": "advanced",
                    "format": "int64",
                    "description": "A list of target Ids that have been assigned to the post",
                    "x-ms-summary": "Target IDs"
                  },
                  "x-ms-visibility": "advanced"
                }
              },
              "required": [
                "title"
              ]
            }
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#create-a-post"
        }
      }
    },
    "/{connectionId}/post/{id}/image": {
      "put": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/successResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Add an image to a post via upload",
        "description": "Sets the post image via binary upload.",
        "operationId": "PutImageToPost",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "The post ID",
            "x-ms-summary": "ID",
            "required": true,
            "in": "path",
            "name": "id"
          },
          {
            "name": "File",
            "in": "body",
            "description": "File to upload",
            "required": true,
            "x-ms-summary": "File",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Content-Type of uploaded file",
            "x-ms-summary": "Content-Type such as image/jpg, image/pjpeg, image/png, image/x-png, image/gif",
            "required": true,
            "type": "string",
            "default": "image/jpeg"
          }
        ],
        "consumes": [
          "image/jpeg"
        ],
        "produces": [
          "application/json"
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#add-an-image-to-a-post-via-upload"
        }
      }
    },
    "/{connectionId}/post/{id}/imageurl": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/successResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Add an image to a post via URL",
        "description": "Sets the post image via a URL.",
        "operationId": "AddImageToPost",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "The post ID, required: true",
            "x-ms-summary": "ID",
            "required": true,
            "in": "path",
            "name": "id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "The HTTP or HTTPS URL",
                  "x-ms-summary": "Url"
                }
              },
              "required": [
                "url"
              ]
            }
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#add-an-image-to-a-post-via-url"
        }
      }
    },
    "/{connectionId}/manage/post/{id}": {
      "post": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/postResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Update a post",
        "description": "Edits an existing post.",
        "operationId": "UpdatePost",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "type": "string",
            "format": "uuid",
            "description": "The post ID",
            "x-ms-summary": "ID",
            "required": true,
            "in": "path",
            "name": "id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the post",
                  "x-ms-summary": "Title"
                },
                "description": {
                  "type": "string",
                  "description": "The short description of the post",
                  "x-ms-summary": "Description"
                },
                "tagLine": {
                  "type": "string",
                  "description": "The tag line of the post",
                  "x-ms-summary": "Tag Line",
                  "x-ms-visibility": "advanced"
                },
                "content": {
                  "type": "string",
                  "description": "The body of the post",
                  "x-ms-summary": "Content"
                },
                "creatorComments": {
                  "type": "string",
                  "description": "A message associated with the post",
                  "x-ms-summary": "Creator Comments",
                  "x-ms-visibility": "advanced"
                },
                "permaLink": {
                  "type": "string",
                  "description": "The external URL referenced by the post",
                  "x-ms-summary": "Perma Link",
                  "x-ms-visibility": "advanced"
                },
                "internalDiscussionsEnabled": {
                  "type": "boolean",
                  "description": "Whether members are allowed to perform like action and add comments on posts internally",
                  "x-ms-summary": "Internal Discussions Enabled",
                  "x-ms-visibility": "advanced"
                }
              }
            }
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#update-a-post"
        }
      }
    },
    "/{connectionId}/manage/posttags": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/managePostTagsResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Get post tags",
        "description": "Gets the post tags defined in the system",
        "operationId": "GetPostTags",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#get-post-tags"
        }
      }
    },
    "/{connectionId}/categories": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/categoriesResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Get categories",
        "description": "Gets a list of categories that are visible to the authenticated user",
        "operationId": "GetCategories",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#get-categories"
        }
      }
    },
    "/{connectionId}/targets": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/targetDefinitionsInfoResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Get targets",
        "description": "Gets a list of the community's targets and target definitions",
        "operationId": "GetTargets",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#get-targets"
        }
      }
    },
    "/{connectionId}/manage/posts": {
      "put": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "$ref": "#/definitions/successResponse"
            },
            "headers": {
              "Content-type:": {
                "description": "Content-type:",
                "type": "string"
              }
            }
          }
        },
        "summary": "Manage posts",
        "description": "Allows server-authenticated calls to update properties for multiple posts in a single request",
        "operationId": "ManagePosts",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "postIds": {
                  "description": "The posts being modified",
                  "x-ms-summary": "Post IDs",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The posts being modified",
                    "x-ms-summary": "Post IDs"
                  }
                },
                "tags": {
                  "description": "A collection of tag names that can be applied to posts",
                  "x-ms-summary": "Tags",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "A collection of tag names that can be applied to posts",
                    "x-ms-summary": "Tags"
                  }
                },
                "divisionIds": {
                  "description": "The division IDs to which the posts belong",
                  "x-ms-summary": "Division IDs",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The division IDs to which the posts belong",
                    "x-ms-summary": "Division IDs"
                  }
                },
                "categoryIds": {
                  "description": "The category ID's to which the posts belong",
                  "x-ms-summary": "Category IDs",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The category IDs to which the posts belong",
                    "x-ms-summary": "Category IDs"
                  }
                },
                "targetIds": {
                  "description": "The target ID's to which the posts belong",
                  "x-ms-summary": "Target IDs",
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "description": "The target IDs to which the posts belong",
                    "x-ms-summary": "Target IDs"
                  }
                },
                "approvalState": {
                  "description": "The Approval state for the posts (This is not affected by the DELETE requests)",
                  "x-ms-summary": "Approval State",
                  "type": "string",
                  "enum": [
                    "Pending",
                    "Published",
                    "Excluded"
                  ]
                }
              },
              "required": [
                "postIds"
              ]
            }
          }
        ],
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/dynamicsignal/#manage-posts"
        }
      }
    }
  },
  "definitions": {
    "successResponse": {
      "type": "object",
      "description": "A simple response indicating the action was carried out successfully",
      "x-ms-summary": "",
      "properties": {
        "code": {
          "type": "string",
          "description": "A value of \"success\" indicates a successful operation",
          "x-ms-summary": "Code"
        }
      }
    },
    "targetDefinitionsInfoResponse": {
      "type": "object",
      "description": "A list of target definitions and associated targets for the community.",
      "x-ms-summary": "",
      "properties": {
        "definitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/targetDefinitionInfoResponse"
          }
        }
      }
    },
    "targetDefinitionInfoResponse": {
      "type": "object",
      "description": "Detailed information for a specific target definition and its associated targets",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The Id of the target definition",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the target definition",
          "x-ms-summary": "Name"
        },
        "getUserConfirmation": {
          "type": "boolean",
          "description": "Determines whether a user is asked to confirm/select their preference",
          "x-ms-summary": "Get User Confirmation"
        },
        "allowMultipleSelections": {
          "type": "boolean",
          "description": "Determines whether multiple targets can be selected",
          "x-ms-summary": "Allow Multiple Selections"
        },
        "selectionRequired": {
          "type": "boolean",
          "description": "Determines whether a selection in this definition is required",
          "x-ms-summary": "Selection Required"
        },
        "targetSelectionPrompt": {
          "type": "string",
          "description": "A customized label to prompt users to select their preference",
          "x-ms-summary": "Target Selection Prompt"
        },
        "childTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/targetInfoResponse"
          }
        }
      }
    },
    "targetInfoResponse": {
      "type": "object",
      "description": "Detailed information for a specific target.",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The target ID",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the target",
          "x-ms-summary": "Name"
        },
        "description": {
          "type": "string",
          "description": "The targets descritption",
          "x-ms-summary": "Description"
        },
        "definitionId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the target definition the target belongs to",
          "x-ms-summary": "Definition ID"
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the targets parent, if it has one",
          "x-ms-summary": "Parent ID"
        },
        "isSubscribed": {
          "type": "boolean",
          "description": "Whether the user is subscribed to a specific target",
          "x-ms-summary": "Is Subscribed"
        },
        "childTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/targetInfoResponse1"
          }
        }
      }
    },
    "managePostTagsResponse": {
      "type": "object",
      "description": "A list of post tags defined in the system",
      "x-ms-summary": "",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/managePostTagResponse"
          }
        }
      }
    },
    "managePostTagResponse": {
      "type": "object",
      "description": "Detailed information for a specific post tag",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The tag ID",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The tag name",
          "x-ms-summary": "Name"
        },
        "isAvailableToMembers": {
          "type": "boolean",
          "description": "Determines if the tag is avilable to be used on member-facing post submission pages (if enabled)",
          "x-ms-summary": "Is Available To Members"
        }
      }
    },
    "manageUserTagsResponse": {
      "type": "object",
      "description": "A list of user tags defined in the system",
      "x-ms-summary": "",
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/manageUserTagResponse"
          }
        }
      }
    },
    "manageUserTagResponse": {
      "type": "object",
      "description": "Detailed information for a specific user tag",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The tag ID",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The tag name",
          "x-ms-summary": "Name"
        },
        "type": {
          "type": "string",
          "enum": [
            "Tag",
            "Attribute"
          ]
        },
        "acceptedValues": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A list of accepted values for an user attribute. This does not apply to user tags",
            "x-ms-summary": "Accepted Values"
          }
        }
      }
    },
    "categoriesResponse": {
      "type": "object",
      "description": "Detailed information related to categories",
      "x-ms-summary": "",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/categoryResponse"
          }
        },
        "subscriptionPrompt": {
          "type": "string",
          "description": "The label to prompt members to select category subscriptions",
          "x-ms-summary": "Subscription Prompt"
        },
        "enableCategorySubscription": {
          "type": "boolean",
          "description": "Whether members are allowed to modify their category subscriptions",
          "x-ms-summary": "Enable Category Subscription"
        },
        "requireSubscriptionSelection": {
          "type": "boolean",
          "description": "Whether members are required to select category subscriptions during onboarding",
          "x-ms-summary": "Require Subscription Selection"
        },
        "landingPageDefaultCategory": {
          "type": "integer",
          "format": "int64",
          "description": "The default content to show when loading news feed information",
          "x-ms-summary": "Landing Page Default Category"
        }
      }
    },
    "categoryResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The category ID",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The category name",
          "x-ms-summary": "Name"
        },
        "description": {
          "type": "string",
          "description": "The category description",
          "x-ms-summary": "Description"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32",
          "description": "The order in which to display the category",
          "x-ms-summary": "Display Order"
        },
        "isPinned": {
          "type": "boolean",
          "description": "Whether the category has been pinned by an administrator",
          "x-ms-summary": "Is Pinned"
        },
        "isForced": {
          "type": "boolean",
          "description": "Whether the authenticated user is force-subscribed to the given category",
          "x-ms-summary": "Is Forced"
        },
        "isSubscribed": {
          "type": "boolean",
          "description": "Wther the authenticated user is subscribed to the given category",
          "x-ms-summary": "Is Subscribed"
        },
        "isHidden": {
          "type": "boolean",
          "description": "Whether the category is hidden by an administrator",
          "x-ms-summary": "Is Hidden"
        },
        "isUserSelectable": {
          "type": "boolean",
          "description": "Whether users are allowed to select categories for submitted posts",
          "x-ms-summary": "Is User Selectable"
        },
        "parentCategoryId": {
          "type": "integer",
          "format": "int64",
          "description": "The parent category ID",
          "x-ms-summary": "Parent Category ID"
        },
        "childCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/categoryResponse1"
          }
        }
      }
    },
    "postResponse": {
      "type": "object",
      "description": "A post",
      "x-ms-summary": "",
      "properties": {
        "postId": {
          "type": "string",
          "format": "uuid",
          "description": "The post ID",
          "x-ms-summary": "Post ID"
        },
        "postSourceId": {
          "type": "integer",
          "format": "int64",
          "description": "The source ID",
          "x-ms-summary": "Post Source ID"
        },
        "title": {
          "type": "string",
          "description": "The title of the post",
          "x-ms-summary": "Title"
        },
        "description": {
          "type": "string",
          "description": "The short description of the post",
          "x-ms-summary": "Description"
        },
        "tagLine": {
          "type": "string",
          "description": "The tag line of the post",
          "x-ms-summary": "Tag Line"
        },
        "content": {
          "type": "string",
          "description": "The body of the post",
          "x-ms-summary": "Content"
        },
        "rawContent": {
          "type": "string",
          "description": "The body of the post including all HTML (when both Content and RawContent are included)",
          "x-ms-summary": "Raw Content"
        },
        "creatorComments": {
          "type": "string",
          "description": "A message associated with the post",
          "x-ms-summary": "Creator Comments"
        },
        "creatorInfo": {
          "$ref": "#/definitions/userOverviewResponse"
        },
        "location": {
          "type": "string",
          "description": "Geographic location related to the post",
          "x-ms-summary": "Location"
        },
        "properties": {
          "type": "object",
          "description": "Miscellaneous properties of the post.  Not available with all post types",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-summary": "Properties"
        },
        "permaLink": {
          "type": "string",
          "description": "The external URL referenced by the post",
          "x-ms-summary": "Perma Link"
        },
        "cleanPermaLink": {
          "type": "string",
          "description": "The permalink (excluding problematic spaces and newlines)",
          "x-ms-summary": "Clean Perma Link"
        },
        "postType": {
          "type": "string",
          "enum": [
            "Text",
            "Video"
          ]
        },
        "postSourceType": {
          "type": "string",
          "enum": [
            "Member",
            "Manager",
            "Brand"
          ]
        },
        "postBylineType": {
          "type": "string",
          "enum": [
            "Author",
            "Source",
            "Hidden"
          ]
        },
        "provider": {
          "type": "string",
          "description": "The social provider from which the post originated (e.g., Facebook, Twitter).",
          "x-ms-summary": "Provider"
        },
        "approvalState": {
          "type": "string",
          "enum": [
            "Pending",
            "Published",
            "Excluded"
          ]
        },
        "displayMode": {
          "type": "string",
          "enum": [
            "DisplayInApp",
            "OpenExternally"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Archived"
          ]
        },
        "userEditable": {
          "type": "boolean",
          "description": "",
          "x-ms-summary": "User Editable"
        },
        "userShareable": {
          "type": "boolean",
          "description": "Indicates whether the current user is able to share the post.  If no current user, defaults to true.",
          "x-ms-summary": "User Shareable"
        },
        "userCommentable": {
          "type": "boolean",
          "description": "Indicates whether the current user is able to participate in dicussions on the post.  If no current user, defaults to false.",
          "x-ms-summary": "User Commentable"
        },
        "sharable": {
          "type": "boolean",
          "description": "Whether the platform and widgets will allow for the post to be shared",
          "x-ms-summary": "Sharable"
        },
        "broadcasted": {
          "type": "boolean",
          "description": "Whether the post has been broadcast to users for sharing",
          "x-ms-summary": "Broadcasted"
        },
        "pinned": {
          "type": "boolean",
          "description": "Whether the post has been set for priority display in streams",
          "x-ms-summary": "Pinned"
        },
        "publishDate": {
          "type": "string",
          "format": "date-time",
          "description": "For user-submitted content, the date of post submission; for content imported from an external source, the publication date according to the source",
          "x-ms-summary": "Publish Date"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date after which the post is available for viewing",
          "x-ms-summary": "Start Date"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date the after which the post will no longer be available for viewing",
          "x-ms-summary": "End Date"
        },
        "eventStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date the event begins (for event-type posts)",
          "x-ms-summary": "Event Start Date"
        },
        "eventEndDate": {
          "type": "string",
          "format": "date-time",
          "description": "The date the event ends (for event-type posts)",
          "x-ms-summary": "Event End Date"
        },
        "providerTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "The date of the post from the providers perspective, i.e., when it was originally posted on the social provider",
          "x-ms-summary": "Provider Time Stamp"
        },
        "receivedPublishPoints": {
          "type": "boolean",
          "description": "Whether the user who submitted the post received points when the post was published",
          "x-ms-summary": "Received Publish Points"
        },
        "suggestedShareText": {
          "type": "string",
          "description": "The suggested share text for the post",
          "x-ms-summary": "Suggested Share Text"
        },
        "shortSuggestedShareText": {
          "type": "string",
          "description": "The suggested share text for the post for short message providers",
          "x-ms-summary": "Short Suggested Share Text"
        },
        "suggestedShareTextList": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The possible suggested share texts for the post",
            "x-ms-summary": "Suggested Share Text List"
          }
        },
        "shortSuggestedShareTextList": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The possible suggested share texts for the post for short message providers",
            "x-ms-summary": "Short Suggested Share Text List"
          }
        },
        "sharePoints": {
          "type": "integer",
          "format": "int32",
          "description": "The number of points awarded when a user shares the post",
          "x-ms-summary": "Share Points"
        },
        "clickPoints": {
          "type": "integer",
          "format": "int32",
          "description": "The number of points awarded when someone clicks on a shared link to the post",
          "x-ms-summary": "Click Points"
        },
        "providerPostId": {
          "type": "string",
          "description": "The original ID of the post on the providers network",
          "x-ms-summary": "Provider Post ID"
        },
        "urlSlug": {
          "type": "string",
          "description": "The SEO text to put in public links to the post",
          "x-ms-summary": "Url Slug"
        },
        "classification": {
          "type": "string",
          "description": "The type of post on the providers network.",
          "x-ms-summary": "Classification"
        },
        "shareWithImages": {
          "type": "boolean",
          "description": "Controls if posts shared to short message services (like Twitter) have images shared",
          "x-ms-summary": "Share With Images"
        },
        "shareImagesOnly": {
          "type": "boolean",
          "description": "Controls if posts shared to certain services are treated as image/photo only updates",
          "x-ms-summary": "Share Images Only"
        },
        "actions": {
          "type": "string",
          "description": "A JSON blob containing a list of action items for the post and URLs",
          "x-ms-summary": "Actions"
        },
        "mentions": {
          "type": "string",
          "description": "The mentions (users, hash tags, etc.) stored as a JSON blob.",
          "x-ms-summary": "Mentions"
        },
        "statistics": {
          "$ref": "#/definitions/postStatisticsResponse"
        },
        "userShareInfo": {
          "$ref": "#/definitions/postUserShareInfoResponse"
        },
        "author": {
          "$ref": "#/definitions/postAuthorRequestResponse"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/postLinkRequestResponse"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/postTagRequestResponse"
          }
        },
        "media": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/postMediaRequestResponse"
          }
        },
        "images": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/imageInfoResponse"
          }
        },
        "candidateImages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/postCandidateImageResponse"
          }
        },
        "visible": {
          "type": "boolean",
          "description": "Whether the post is currently visible",
          "x-ms-summary": "Visible"
        },
        "shareDisclosures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/postShareDisclosureResponse"
          }
        },
        "shareCommentRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/postShareCommentRulesResponse"
          }
        },
        "language": {
          "type": "string",
          "description": "The language of the post content",
          "x-ms-summary": "Language"
        },
        "userHidden": {
          "type": "boolean",
          "description": "Whether the user has hidden the post from one or more streams",
          "x-ms-summary": "User Hidden"
        },
        "isViewedByUser": {
          "type": "boolean",
          "description": "Whether the post has been viewed by the current user.",
          "x-ms-summary": "Is Viewed By User"
        },
        "isDiscussionViewedByUser": {
          "type": "boolean",
          "description": "Whether the posts discussion thread has been viewed by the current user",
          "x-ms-summary": "Is Discussion Viewed By User"
        },
        "isLikedByUser": {
          "type": "boolean",
          "description": "Whether the post has been internally liked by the current user.",
          "x-ms-summary": "Is Liked By User"
        },
        "isCommentedByUser": {
          "type": "boolean",
          "description": "Whether the post has been commented on by the current user.",
          "x-ms-summary": "Is Commented By User"
        },
        "isSharedByUser": {
          "type": "boolean",
          "description": "Whether the post has been previously shared by the current user",
          "x-ms-summary": "Is Shared By User"
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/targetOverviewResponse"
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/categoryOverviewResponse"
          }
        },
        "currentTime": {
          "type": "string",
          "format": "date-time",
          "description": "The current time on the server.",
          "x-ms-summary": "Current Time"
        }
      }
    },
    "categoryOverviewResponse": {
      "type": "object",
      "description": "Basic category information",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The category ID",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The category name",
          "x-ms-summary": "Name"
        },
        "parentCategoryId": {
          "type": "integer",
          "format": "int64",
          "description": "The parent category ID",
          "x-ms-summary": "Parent Category ID"
        }
      }
    },
    "targetOverviewResponse": {
      "type": "object",
      "description": "A lightweight target response consisting of the targets name, ID, and the ID of the target definition it belongs to",
      "x-ms-summary": "",
      "properties": {
        "name": {
          "type": "string",
          "description": "The targets name",
          "x-ms-summary": "Name"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The targets ID",
          "x-ms-summary": "ID"
        },
        "definitionId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the target definition to which the target belongs",
          "x-ms-summary": "Definition ID"
        }
      }
    },
    "postShareCommentRulesResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "provider": {
          "type": "string",
          "enum": [
            "None",
            "Twitter",
            "Blog",
            "Facebook",
            "Yelp",
            "Flickr",
            "Foursquare",
            "SMS",
            "WordPress",
            "TypePad",
            "LiveJournal",
            "Blogger",
            "FacebookPage",
            "GenericUrl",
            "YouTube",
            "SyndicatedUrl",
            "Email",
            "Tumblr",
            "GooglePlus",
            "SquareSpace",
            "LinkedIn",
            "Posterous",
            "Joomla",
            "Drupal",
            "MovableType",
            "Reddit",
            "VK",
            "Picasa",
            "Vimeo",
            "Instagram",
            "Sonico",
            "Odnoklassniki",
            "GetGlue",
            "LastFM",
            "BazaarVoice",
            "LinkedInGroup",
            "Chatter",
            "Weibo",
            "Tencent",
            "Pinterest",
            "LinkedInPage",
            "CutAndPaste",
            "Bitly",
            "Jive",
            "GoogleContact",
            "Office365",
            "JivePlace",
            "Xing",
            "SapJam",
            "SalesforceSocialStudio",
            "Slack",
            "Yammer",
            "SmartContent",
            "CiscoSpark",
            "FacebookWorkplace",
            "InstagramBusiness",
            "FacebookNative"
          ]
        },
        "shareMaxCharacterLimit": {
          "type": "integer",
          "format": "int32",
          "description": "The maximum length of a users comment in a share on this provider.",
          "x-ms-summary": "Share Max Character Limit"
        }
      }
    },
    "postShareDisclosureResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "provider": {
          "type": "string",
          "enum": [
            "None",
            "Twitter",
            "Blog",
            "Facebook",
            "Yelp",
            "Flickr",
            "Foursquare",
            "SMS",
            "WordPress",
            "TypePad",
            "LiveJournal",
            "Blogger",
            "FacebookPage",
            "GenericUrl",
            "YouTube",
            "SyndicatedUrl",
            "Email",
            "Tumblr",
            "GooglePlus",
            "SquareSpace",
            "LinkedIn",
            "Posterous",
            "Joomla",
            "Drupal",
            "MovableType",
            "Reddit",
            "VK",
            "Picasa",
            "Vimeo",
            "Instagram",
            "Sonico",
            "Odnoklassniki",
            "GetGlue",
            "LastFM",
            "BazaarVoice",
            "LinkedInGroup",
            "Chatter",
            "Weibo",
            "Tencent",
            "Pinterest",
            "LinkedInPage",
            "CutAndPaste",
            "Bitly",
            "Jive",
            "GoogleContact",
            "Office365",
            "JivePlace",
            "Xing",
            "SapJam",
            "SalesforceSocialStudio",
            "Slack",
            "Yammer",
            "SmartContent",
            "CiscoSpark",
            "FacebookWorkplace",
            "InstagramBusiness",
            "FacebookNative"
          ]
        },
        "providerDisplayName": {
          "type": "string",
          "description": "The providers display name",
          "x-ms-summary": "Provider Display Name"
        },
        "shareDisclosureText": {
          "type": "string",
          "description": "The disclosure text appended to each share",
          "x-ms-summary": "Share Disclosure Text"
        }
      }
    },
    "postCandidateImageResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "url": {
          "type": "string",
          "description": "The images URL",
          "x-ms-summary": "Url"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "The images width",
          "x-ms-summary": "Width"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "The images height",
          "x-ms-summary": "Height"
        },
        "mimeType": {
          "type": "string",
          "description": "The images MIME type",
          "x-ms-summary": "Mime Type"
        },
        "sslUrl": {
          "type": "string",
          "description": "The images secure URL",
          "x-ms-summary": "Ssl Url"
        }
      }
    },
    "imageInfoResponse": {
      "type": "object",
      "description": "Detailed image information",
      "x-ms-summary": "",
      "properties": {
        "size": {
          "type": "string",
          "description": "Size of the image",
          "x-ms-summary": "Size"
        },
        "url": {
          "type": "string",
          "description": "URL of the image",
          "x-ms-summary": "Url"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Width of the image",
          "x-ms-summary": "Width"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "Height of the image",
          "x-ms-summary": "Height"
        },
        "mimeType": {
          "type": "string",
          "description": "MIME Type of the image",
          "x-ms-summary": "Mime Type"
        }
      }
    },
    "postMediaRequestResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the media object",
          "x-ms-summary": "Name"
        },
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "The width of the media object in pixels",
          "x-ms-summary": "Width"
        },
        "height": {
          "type": "integer",
          "format": "int32",
          "description": "The height of the media object in pixels",
          "x-ms-summary": "Height"
        },
        "mimeType": {
          "type": "string",
          "description": "The MIME type of the media object",
          "x-ms-summary": "Mime Type"
        },
        "html": {
          "type": "string",
          "description": "HTML that can be used to render the media object",
          "x-ms-summary": "Html"
        },
        "url": {
          "type": "string",
          "description": "The URL to the media object",
          "x-ms-summary": "Url"
        },
        "origin": {
          "type": "string",
          "description": "If available, specifies the original location of the media object",
          "x-ms-summary": "Origin"
        },
        "provider": {
          "type": "string",
          "description": "The social provider name",
          "x-ms-summary": "Provider"
        },
        "role": {
          "type": "string",
          "description": "The type of media (if determined)",
          "x-ms-summary": "Role"
        },
        "duration": {
          "type": "integer",
          "format": "int64",
          "description": "The video duration in milliseconds",
          "x-ms-summary": "Duration"
        },
        "description": {
          "type": "string",
          "description": "The video format description",
          "x-ms-summary": "Description"
        },
        "hasVideoUrl": {
          "type": "boolean",
          "description": "Indicates that this media has a video URL that must be signed by using the \"WatchVideo\" include",
          "x-ms-summary": "Has Video Url"
        }
      }
    },
    "postTagRequestResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "name": {
          "type": "string",
          "description": "The tag name",
          "x-ms-summary": "Name",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "postLinkRequestResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "url": {
          "type": "string",
          "description": "The posts URL",
          "x-ms-summary": "Url"
        },
        "expandedUrl": {
          "type": "string",
          "description": "The expanded URL (if it exists)",
          "x-ms-summary": "Expanded Url"
        },
        "title": {
          "type": "string",
          "description": "The posts title",
          "x-ms-summary": "Title"
        },
        "domain": {
          "type": "string",
          "description": "The links domain",
          "x-ms-summary": "Domain"
        },
        "faviconUrl": {
          "type": "string",
          "description": "The favicon URL of the link",
          "x-ms-summary": "Favicon Url"
        },
        "name": {
          "type": "string",
          "description": "The name of the link assigned by the social provider",
          "x-ms-summary": "Name"
        },
        "caption": {
          "type": "string",
          "description": "The short caption of the link (i.e., the text under the link)",
          "x-ms-summary": "Caption"
        },
        "description": {
          "type": "string",
          "description": "The description of the link (i.e., the longer text under the caption)",
          "x-ms-summary": "Description"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time",
          "description": "",
          "x-ms-summary": "Modified Date"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "",
          "x-ms-summary": "Created Date"
        }
      }
    },
    "postAuthorRequestResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "author": {
          "type": "string",
          "description": "The stored text to display as the author.",
          "x-ms-summary": "Author"
        },
        "profileImageUrl": {
          "type": "string",
          "description": "The authors profile picture on the social network",
          "x-ms-summary": "Profile Image Url"
        },
        "providerUserId": {
          "type": "string",
          "description": "The authors ID on the social network",
          "x-ms-summary": "Provider User ID"
        },
        "providerUserName": {
          "type": "string",
          "description": "The authors name on the social network",
          "x-ms-summary": "Provider User Name"
        },
        "profileUrl": {
          "type": "string",
          "description": "The authors profile URL on the social network",
          "x-ms-summary": "Profile Url"
        },
        "postSourceName": {
          "type": "string",
          "description": "The name of the source of the post.",
          "x-ms-summary": "Post Source Name"
        },
        "postSourceSite": {
          "type": "string",
          "description": "The website in which the post originated",
          "x-ms-summary": "Post Source Site"
        }
      }
    },
    "postUserShareInfoResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "pointsEarned": {
          "type": "integer",
          "format": "int32",
          "description": "The number of points earned by the user for sharing",
          "x-ms-summary": "Points Earned"
        },
        "shareCount": {
          "type": "integer",
          "format": "int32",
          "description": "The number of times the user shared",
          "x-ms-summary": "Share Count"
        },
        "mostRecentShareDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the users most recent share of this post",
          "x-ms-summary": "Most Recent Share Date"
        }
      }
    },
    "postStatisticsResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "totalInAppShareCount": {
          "type": "integer",
          "format": "int32",
          "description": "Synonym for ShareCount",
          "x-ms-summary": "Total In App Share Count"
        },
        "trackingId": {
          "type": "string",
          "description": "",
          "x-ms-summary": "Tracking ID"
        },
        "shareCount": {
          "type": "integer",
          "format": "int64",
          "description": "The count of shares initiated in the app that have been verified as successfully shared",
          "x-ms-summary": "Share Count"
        },
        "reactionCount": {
          "type": "integer",
          "format": "int64",
          "description": "The count of reactions (likes, retweets, etc.) to shares",
          "x-ms-summary": "Reaction Count"
        },
        "impressionCount": {
          "type": "integer",
          "format": "int64",
          "description": "The potential views of a post by sharers friends and followers",
          "x-ms-summary": "Impression Count"
        },
        "viewedCount": {
          "type": "integer",
          "format": "int64",
          "description": "The number of times the post has been visited by logged-in users",
          "x-ms-summary": "Viewed Count"
        },
        "clickCount": {
          "type": "integer",
          "format": "int64",
          "description": "The count of clicks to the posts link from shares",
          "x-ms-summary": "Click Count"
        },
        "likeCount": {
          "type": "integer",
          "format": "int64",
          "description": "The count of internal likes on the post",
          "x-ms-summary": "Like Count"
        },
        "commentCount": {
          "type": "integer",
          "format": "int64",
          "description": "The count of internal comments on the post",
          "x-ms-summary": "Comment Count"
        },
        "commentLikeCount": {
          "type": "integer",
          "format": "int64",
          "description": "The sum of all likes across all internal comments on the post",
          "x-ms-summary": "Comment Like Count"
        }
      }
    },
    "userOverviewResponse": {
      "type": "object",
      "description": "Summary information about a user",
      "x-ms-summary": "",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the user",
          "x-ms-summary": "User ID"
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the user",
          "x-ms-summary": "Display Name"
        },
        "profilePictureImages": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/imageInfoResponse"
          }
        },
        "isActive": {
          "type": "boolean",
          "description": "Whether the user is still an active member of the community",
          "x-ms-summary": "Is Active"
        }
      }
    },
    "uploadImageResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "imageIdentifier": {
          "type": "string",
          "description": "The identifier to the uploaded image",
          "x-ms-summary": "Image Identifier"
        }
      }
    },
    "userPrivilegesRequestResponse": {
      "type": "object",
      "description": "Privileges that can be assigned to a user during registration via integrations",
      "x-ms-summary": "",
      "properties": {
        "canSharePosts": {
          "type": "boolean",
          "description": "Indicates if the user has the ability to share posts",
          "x-ms-summary": "Can Share Posts",
          "x-ms-visibility": "advanced"
        },
        "canCommentPosts": {
          "type": "boolean",
          "description": "Indicates if the user has the ability to comment and like posts",
          "x-ms-summary": "Can Comment Posts",
          "x-ms-visibility": "advanced"
        },
        "canSubmitPosts": {
          "type": "boolean",
          "description": "Indicates if the user has the ability to submit posts",
          "x-ms-summary": "Can Submit Posts",
          "x-ms-visibility": "advanced"
        },
        "canManageOrganization": {
          "type": "boolean",
          "description": "Indicates if the user has the ability to communicate with direct and indirect reports within the community",
          "x-ms-summary": "Can Manage Organization",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "userTagRequestResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "name": {
          "type": "string",
          "description": "The tag or attribute name",
          "x-ms-summary": "Name",
          "x-ms-visibility": "advanced"
        },
        "value": {
          "type": "string",
          "description": "The optional value",
          "x-ms-summary": "Value",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "userRequestResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The users internal ID",
          "x-ms-summary": "ID"
        },
        "email": {
          "type": "string",
          "description": "The users email address",
          "x-ms-summary": "Email"
        },
        "handle": {
          "type": "string",
          "description": "The users handle (the \"user name\")",
          "x-ms-summary": "Handle"
        },
        "displayName": {
          "type": "string",
          "description": "The users preferred display name",
          "x-ms-summary": "Display Name"
        },
        "fullName": {
          "type": "string",
          "description": "The first and last name of the user",
          "x-ms-summary": "Full Name"
        },
        "firstName": {
          "type": "string",
          "description": "The users first name",
          "x-ms-summary": "First Name"
        },
        "lastName": {
          "type": "string",
          "description": "The users last name",
          "x-ms-summary": "Last Name"
        },
        "displayNameFormat": {
          "type": "string",
          "enum": [
            "Full",
            "Short"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "New",
            "Active",
            "Archived",
            "Suspended",
            "Preregistered",
            "PendingApproval",
            "Rejected"
          ]
        },
        "profileCompleted": {
          "type": "boolean",
          "description": "Whether the users profile was completed during onboarding",
          "x-ms-summary": "Profile Completed"
        },
        "lastActivityDate": {
          "type": "string",
          "format": "date-time",
          "description": "The last time the user interacted with the system.",
          "x-ms-summary": "Last Activity Date"
        },
        "title": {
          "type": "string",
          "description": "The users title",
          "x-ms-summary": "Title"
        },
        "location": {
          "type": "string",
          "description": "The users self-described location (may not be an actual geographic location)",
          "x-ms-summary": "Location"
        },
        "externalApiUserId": {
          "type": "string",
          "description": "The users ID on the external system managed by the caller of this API",
          "x-ms-summary": "External Api User ID"
        },
        "managerUserId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the users manager (for organizational hierarchy features)",
          "x-ms-summary": "Manager User ID"
        },
        "timeZone": {
          "type": "string",
          "description": "User time zone represented as a tz database time zone name as set by IANA. Example: \"America/Los_Angeles\".",
          "x-ms-summary": "Time Zone"
        },
        "selectedTimeZone": {
          "type": "string",
          "description": "The users selected time zone represented as a tz database time zone name as set by IANA. Example: \"America/Los_Angeles\".",
          "x-ms-summary": "Selected Time Zone"
        },
        "pointBalance": {
          "type": "integer",
          "format": "int64",
          "description": "The total points earned to date",
          "x-ms-summary": "Point Balance"
        },
        "unredeemedPoints": {
          "type": "integer",
          "format": "int64",
          "description": "The points currently available for redemption",
          "x-ms-summary": "Unredeemed Points"
        },
        "redeemedPoints": {
          "type": "integer",
          "format": "int64",
          "description": "The number of points redeemed over the users lifetime",
          "x-ms-summary": "Redeemed Points"
        },
        "apiInfo": {
          "type": "string",
          "description": "API-specific property bag",
          "x-ms-summary": "Api Info"
        },
        "hasPassword": {
          "type": "boolean",
          "description": "Whether the user has a password associated with the account.",
          "x-ms-summary": "Has Password"
        },
        "mustChangePassword": {
          "type": "boolean",
          "description": "Whether the user must change their password based on community settings",
          "x-ms-summary": "Must Change Password"
        },
        "isAccountVerified": {
          "type": "boolean",
          "description": "Indicates if the user has verified their email address",
          "x-ms-summary": "Is Account Verified"
        },
        "statistics": {
          "$ref": "#/definitions/postStatisticsResponse"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/userTagRequestResponse"
          }
        },
        "badges": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/userBadgeRequestResponse"
          }
        },
        "affiliations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userAffiliationResponse"
          }
        },
        "divisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/divisionResponse"
          }
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/userChannelResponse"
          }
        },
        "profilePictureImages": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/imageInfoResponse"
          }
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The users languages",
            "x-ms-summary": "Languages"
          }
        },
        "primaryLanguage": {
          "type": "string",
          "description": "The users primary interface language",
          "x-ms-summary": "Primary Language"
        },
        "scheduleSettings": {
          "$ref": "#/definitions/userScheduleSettingsResponse"
        },
        "isSso": {
          "type": "boolean",
          "description": "Whether the user is setup to authenticate using SSO",
          "x-ms-summary": "Is Sso"
        },
        "permissions": {
          "$ref": "#/definitions/userPermissionsResponse"
        },
        "privileges": {
          "$ref": "#/definitions/userPrivilegesResponse"
        },
        "identifiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/allowlistIdentifiersResponse"
          }
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/targetOverviewResponse"
          }
        },
        "defaults": {
          "$ref": "#/definitions/userDefaultsRequestResponse"
        },
        "welcomeBannerDismissed": {
          "type": "boolean",
          "description": "Whether the user has dismissed the welcome banner",
          "x-ms-summary": "Welcome Banner Dismissed"
        }
      }
    },
    "userDefaultsRequestResponse": {
      "type": "object",
      "description": "A collection of a users defaults",
      "x-ms-summary": "",
      "properties": {
        "defaultPostState": {
          "type": "string",
          "enum": [
            "Shareable",
            "NonShareable"
          ]
        },
        "defaultPostApprovalState": {
          "type": "string",
          "enum": [
            "Pending",
            "Published",
            "Excluded"
          ]
        },
        "defaultPostShowInternalDiscussions": {
          "type": "boolean",
          "description": "The users default post internal discussions state when creating a post",
          "x-ms-summary": "Default Post Show Internal Discussions"
        },
        "defaultPostShowCreatorInfo": {
          "type": "boolean",
          "description": "The users default state when creating a post regarding showing creator name and photo",
          "x-ms-summary": "Default Post Show Creator Info"
        }
      }
    },
    "allowlistIdentifiersResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The allow list definition ID",
          "x-ms-summary": "ID"
        },
        "value": {
          "type": "string",
          "description": "The users response for the given allow list definition",
          "x-ms-summary": "Value"
        }
      }
    },
    "userPrivilegesResponse": {
      "type": "object",
      "description": "A users privileges",
      "x-ms-summary": "",
      "properties": {
        "canSubmitPosts": {
          "type": "boolean",
          "description": "Indicates if the user has the ability to submit posts, based on their privileges and the community settings",
          "x-ms-summary": "Can Submit Posts"
        },
        "canSharePosts": {
          "type": "boolean",
          "description": "Indicates if the user has the ability to share posts, based on their privileges and the community settings",
          "x-ms-summary": "Can Share Posts"
        },
        "canCommentPosts": {
          "type": "boolean",
          "description": "Indicates if the user has the ability to comment and like posts, based on their privileges and the community settings",
          "x-ms-summary": "Can Comment Posts"
        },
        "canManageCommunity": {
          "type": "boolean",
          "description": "Indicates if the user is a manager within community, based on their privileges and the community settings",
          "x-ms-summary": "Can Manage Community"
        },
        "canManageOrganization": {
          "type": "boolean",
          "description": "Indicates if the user has the ability to communicate with direct and indirect reports within the community, based on their privileges and the community settings",
          "x-ms-summary": "Can Manage Organization"
        },
        "canSetPostShareable": {
          "type": "boolean",
          "description": "Whether the user can set the Shareable status when submitting a post",
          "x-ms-summary": "Can Set Post Shareable"
        }
      }
    },
    "userPermissionsResponse": {
      "type": "object",
      "description": "A managers permissions",
      "x-ms-summary": "",
      "properties": {
        "viewBroadcast": {
          "type": "boolean",
          "description": "Allows the manager to view broadcasts",
          "x-ms-summary": "View Broadcast"
        },
        "listBroadcast": {
          "type": "boolean",
          "description": "Allows the manager to view lists of broadcasts",
          "x-ms-summary": "List Broadcast"
        },
        "editBroadcast": {
          "type": "boolean",
          "description": "Allows the manager to create and edit broadcasts",
          "x-ms-summary": "Edit Broadcast"
        },
        "viewBroadcastStats": {
          "type": "boolean",
          "description": "Allows the manager to view broadcast stats",
          "x-ms-summary": "View Broadcast Stats"
        },
        "viewPost": {
          "type": "boolean",
          "description": "Allows the manager to view posts",
          "x-ms-summary": "View Post"
        },
        "listPost": {
          "type": "boolean",
          "description": "Allows the manager to view lists of posts",
          "x-ms-summary": "List Post"
        },
        "editPost": {
          "type": "boolean",
          "description": "Allows the manager to create and edit posts",
          "x-ms-summary": "Edit Post"
        },
        "viewPostStats": {
          "type": "boolean",
          "description": "Allows the manager to view post stats",
          "x-ms-summary": "View Post Stats"
        },
        "viewSurvey": {
          "type": "boolean",
          "description": "Allows the manager to view surveys",
          "x-ms-summary": "View Survey"
        },
        "listSurvey": {
          "type": "boolean",
          "description": "Allows the manager to view lists of surveys",
          "x-ms-summary": "List Survey"
        },
        "editSurvey": {
          "type": "boolean",
          "description": "Allows the manager to create and edit surveys",
          "x-ms-summary": "Edit Survey"
        },
        "communitySettings": {
          "type": "boolean",
          "description": "Allows the manager to view and edit community settings",
          "x-ms-summary": "Community Settings"
        }
      }
    },
    "userScheduleSettingsResponse": {
      "type": "object",
      "description": "A users scheduled sharing preferences",
      "x-ms-summary": "",
      "properties": {
        "days": {
          "type": "string",
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "times": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "The preferred times to share on",
            "x-ms-summary": "Times"
          }
        }
      }
    },
    "userChannelResponse": {
      "type": "object",
      "description": "A user channel.",
      "x-ms-summary": "",
      "properties": {
        "userChannelId": {
          "type": "integer",
          "format": "int64",
          "description": "The internal user channel ID",
          "x-ms-summary": "User Channel ID"
        },
        "userId": {
          "type": "integer",
          "format": "int64",
          "description": "The internal user ID",
          "x-ms-summary": "User ID"
        },
        "provider": {
          "type": "string",
          "enum": [
            "None",
            "Twitter",
            "Blog",
            "Facebook",
            "Yelp",
            "Flickr",
            "Foursquare",
            "SMS",
            "WordPress",
            "TypePad",
            "LiveJournal",
            "Blogger",
            "FacebookPage",
            "GenericUrl",
            "YouTube",
            "SyndicatedUrl",
            "Email",
            "Tumblr",
            "GooglePlus",
            "SquareSpace",
            "LinkedIn",
            "Posterous",
            "Joomla",
            "Drupal",
            "MovableType",
            "Reddit",
            "VK",
            "Picasa",
            "Vimeo",
            "Instagram",
            "Sonico",
            "Odnoklassniki",
            "GetGlue",
            "LastFM",
            "BazaarVoice",
            "LinkedInGroup",
            "Chatter",
            "Weibo",
            "Tencent",
            "Pinterest",
            "LinkedInPage",
            "CutAndPaste",
            "Bitly",
            "Jive",
            "GoogleContact",
            "Office365",
            "JivePlace",
            "Xing",
            "SapJam",
            "SalesforceSocialStudio",
            "Slack",
            "Yammer",
            "SmartContent",
            "CiscoSpark",
            "FacebookWorkplace",
            "InstagramBusiness",
            "FacebookNative"
          ]
        },
        "name": {
          "type": "string",
          "description": "The users name on the social provider",
          "x-ms-summary": "Name"
        },
        "displayName": {
          "type": "string",
          "description": "The users display name on the social provider",
          "x-ms-summary": "Display Name"
        },
        "providerUserId": {
          "type": "string",
          "description": "The providers user ID",
          "x-ms-summary": "Provider User ID"
        },
        "status": {
          "type": "string",
          "enum": [
            "Active",
            "Archived",
            "AuthRequired"
          ]
        },
        "url": {
          "type": "string",
          "description": "The URL for the channel",
          "x-ms-summary": "Url"
        },
        "friends": {
          "type": "integer",
          "format": "int32",
          "description": "The number of friends the user has on the channel",
          "x-ms-summary": "Friends"
        },
        "followers": {
          "type": "integer",
          "format": "int32",
          "description": "The number of followers the user has on the channel",
          "x-ms-summary": "Followers"
        },
        "following": {
          "type": "integer",
          "format": "int32",
          "description": "The number of people the user is following on the channel",
          "x-ms-summary": "Following"
        },
        "posts": {
          "type": "integer",
          "format": "int32",
          "description": "The number of posts the user has made on the channel.",
          "x-ms-summary": "Posts"
        },
        "views": {
          "type": "integer",
          "format": "int32",
          "description": "The number of views the user has on the channel",
          "x-ms-summary": "Views"
        },
        "pointBalance": {
          "type": "integer",
          "format": "int64",
          "description": "The point balance of the user on the channel",
          "x-ms-summary": "Point Balance"
        },
        "sourceDisplayName": {
          "type": "string",
          "description": "The display name of the user channel when used as a content source",
          "x-ms-summary": "Source Display Name"
        },
        "reach": {
          "type": "integer",
          "format": "int32",
          "description": "The users reach on the channel",
          "x-ms-summary": "Reach"
        },
        "sharable": {
          "type": "boolean",
          "description": "Whether the channel supports sharing",
          "x-ms-summary": "Sharable"
        },
        "sharingDefault": {
          "type": "boolean",
          "description": "Whether the channel is preselected for sharing",
          "x-ms-summary": "Sharing Default"
        },
        "authRequired": {
          "type": "boolean",
          "description": "Whether the channels credentials need to be renewed",
          "x-ms-summary": "Auth Required"
        },
        "statistics": {
          "$ref": "#/definitions/postStatisticsResponse"
        },
        "profilePictureImages": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/imageInfoResponse"
          }
        }
      }
    },
    "divisionResponse": {
      "type": "object",
      "description": "A division definition",
      "x-ms-summary": "",
      "properties": {
        "divisionId": {
          "type": "integer",
          "format": "int64",
          "description": "The division ID",
          "x-ms-summary": "Division ID"
        },
        "name": {
          "type": "string",
          "description": "The division name",
          "x-ms-summary": "Name"
        },
        "parentDivisionId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of this divisions parent",
          "x-ms-summary": "Parent Division ID"
        }
      }
    },
    "userAffiliationResponse": {
      "type": "object",
      "description": "A user affiliation",
      "x-ms-summary": "",
      "properties": {
        "question": {
          "$ref": "#/definitions/affiliationQuestionResponse"
        },
        "answer": {
          "$ref": "#/definitions/affiliationAnswerResponse"
        }
      }
    },
    "affiliationAnswerResponse": {
      "type": "object",
      "description": "An affiliation answer",
      "x-ms-summary": "",
      "properties": {
        "answerId": {
          "type": "integer",
          "format": "int64",
          "description": "The answer ID",
          "x-ms-summary": "Answer ID"
        },
        "answer": {
          "type": "string",
          "description": "The answer",
          "x-ms-summary": "Answer"
        },
        "score": {
          "type": "number",
          "format": "double",
          "description": "The score, if provided",
          "x-ms-summary": "Score"
        },
        "freeText": {
          "type": "string",
          "description": "Text for questions with FreeText question type",
          "x-ms-summary": "Free Text"
        },
        "declineToAnswer": {
          "type": "boolean",
          "description": "If set, this is the answer signifying that a user declined to answer the question.",
          "x-ms-summary": "Decline To Answer"
        },
        "position": {
          "type": "integer",
          "format": "int64",
          "description": "The answers sorting position",
          "x-ms-summary": "Position"
        }
      }
    },
    "affiliationQuestionResponse": {
      "type": "object",
      "description": "An affiliation question",
      "x-ms-summary": "",
      "properties": {
        "questionId": {
          "type": "integer",
          "format": "int64",
          "description": "The question ID",
          "x-ms-summary": "Question ID"
        },
        "name": {
          "type": "string",
          "description": "The question",
          "x-ms-summary": "Name"
        },
        "scorePosition": {
          "type": "integer",
          "format": "int32",
          "description": "The questions sorting position",
          "x-ms-summary": "Score Position"
        },
        "description": {
          "type": "string",
          "description": "The questions description",
          "x-ms-summary": "Description"
        },
        "questionType": {
          "type": "string",
          "enum": [
            "SingleAnswer",
            "MultipleAnswer",
            "FreeText"
          ]
        },
        "required": {
          "type": "boolean",
          "description": "Whether the question has to be answered to register",
          "x-ms-summary": "Required"
        },
        "isPubliclyVisible": {
          "type": "boolean",
          "description": "",
          "x-ms-summary": "Is Publicly Visible"
        }
      }
    },
    "userBadgeRequestResponse": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "name": {
          "type": "string",
          "description": "",
          "x-ms-summary": "Name"
        },
        "description": {
          "type": "string",
          "description": "",
          "x-ms-summary": "Description"
        },
        "value": {
          "type": "string",
          "description": "",
          "x-ms-summary": "Value"
        },
        "url": {
          "type": "string",
          "description": "The associated image URL of the users badge",
          "x-ms-summary": "Url"
        }
      }
    },
    "documentInfoResponse": {
      "type": "object",
      "description": "Information relevant to an attached document",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "The documents ID",
          "x-ms-summary": "ID"
        },
        "fileName": {
          "type": "string",
          "description": "The documents filename (with extension)",
          "x-ms-summary": "File Name"
        },
        "extension": {
          "type": "string",
          "description": "The documents file extension",
          "x-ms-summary": "Extension"
        },
        "mimeType": {
          "type": "string",
          "description": "The documents MIME type",
          "x-ms-summary": "Mime Type"
        }
      }
    },
    "divisionsResponse": {
      "type": "object",
      "description": "The divisions defined in the system",
      "x-ms-summary": "",
      "properties": {
        "divisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/divisionResponse"
          }
        },
        "prompt": {
          "type": "string",
          "description": "The label to prompt members to select a division",
          "x-ms-summary": "Prompt"
        },
        "showUserDivisionSelection": {
          "type": "boolean",
          "description": "Whether registered members can change their own division",
          "x-ms-summary": "Show User Division Selection"
        },
        "showUserDivisionSelectionDuringOnboarding": {
          "type": "boolean",
          "description": "Whether new members should select their own division during registration",
          "x-ms-summary": "Show User Division Selection During Onboarding"
        },
        "requireUserDivisionSelection": {
          "type": "boolean",
          "description": "Whether members must select their own division.",
          "x-ms-summary": "Require User Division Selection"
        },
        "allowMultipleDivisions": {
          "type": "boolean",
          "description": "Whether members are allowed to select multiple or only one division",
          "x-ms-summary": "Allow Multiple Divisions"
        }
      }
    },
    "categoryResponse1": {
      "type": "object",
      "description": "",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The category ID",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The category name",
          "x-ms-summary": "Name"
        },
        "description": {
          "type": "string",
          "description": "The category description",
          "x-ms-summary": "Description"
        },
        "displayOrder": {
          "type": "integer",
          "format": "int32",
          "description": "The order in which to display the category",
          "x-ms-summary": "Display Order"
        },
        "isPinned": {
          "type": "boolean",
          "description": "Whether the category has been pinned by an administrator",
          "x-ms-summary": "Is Pinned"
        },
        "isForced": {
          "type": "boolean",
          "description": "Whether the authenticated user is force-subscribed to the given category",
          "x-ms-summary": "Is Forced"
        },
        "isSubscribed": {
          "type": "boolean",
          "description": "Wther the authenticated user is subscribed to the given category",
          "x-ms-summary": "Is Subscribed"
        },
        "isHidden": {
          "type": "boolean",
          "description": "Whether the category is hidden by an administrator",
          "x-ms-summary": "Is Hidden"
        },
        "isUserSelectable": {
          "type": "boolean",
          "description": "Whether users are allowed to select categories for submitted posts",
          "x-ms-summary": "Is User Selectable"
        },
        "parentCategoryId": {
          "type": "integer",
          "format": "int64",
          "description": "The parent category ID",
          "x-ms-summary": "Parent Category ID"
        }
      }
    },
    "targetInfoResponse1": {
      "type": "object",
      "description": "Detailed information for a specific target.",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The target ID",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the target",
          "x-ms-summary": "Name"
        },
        "description": {
          "type": "string",
          "description": "The targets descritption",
          "x-ms-summary": "Description"
        },
        "definitionId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the target definition the target belongs to",
          "x-ms-summary": "Definition ID"
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the targets parent, if it has one",
          "x-ms-summary": "Parent ID"
        },
        "isSubscribed": {
          "type": "boolean",
          "description": "Whether the user is subscribed to a specific target",
          "x-ms-summary": "Is Subscribed"
        },
        "childTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/targetInfoResponse2"
          }
        }
      }
    },
    "targetInfoResponse2": {
      "type": "object",
      "description": "Detailed information for a specific target.",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The target ID",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the target",
          "x-ms-summary": "Name"
        },
        "description": {
          "type": "string",
          "description": "The targets descritption",
          "x-ms-summary": "Description"
        },
        "definitionId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the target definition the target belongs to",
          "x-ms-summary": "Definition ID"
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the targets parent, if it has one",
          "x-ms-summary": "Parent ID"
        },
        "isSubscribed": {
          "type": "boolean",
          "description": "Whether the user is subscribed to a specific target",
          "x-ms-summary": "Is Subscribed"
        },
        "childTargets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/targetInfoResponse3"
          }
        }
      }
    },
    "targetInfoResponse3": {
      "type": "object",
      "description": "Detailed information for a specific target.",
      "x-ms-summary": "",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The target ID",
          "x-ms-summary": "ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the target",
          "x-ms-summary": "Name"
        },
        "description": {
          "type": "string",
          "description": "The targets descritption",
          "x-ms-summary": "Description"
        },
        "definitionId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the target definition the target belongs to",
          "x-ms-summary": "Definition ID"
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "description": "The ID of the targets parent, if it has one",
          "x-ms-summary": "Parent ID"
        },
        "isSubscribed": {
          "type": "boolean",
          "description": "Whether the user is subscribed to a specific target",
          "x-ms-summary": "Is Subscribed"
        }
      }
    }
  },
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [],
  "tags": [],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/dynamicsignal"
  }
}
