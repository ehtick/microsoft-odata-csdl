{
  "swagger": "2.0",
  "info": {
    "version": "2019-12-01",
    "title": "Azure Container Instance",
    "description": "Easily run containers on Azure with a single command. Create container groups, get the logs of a container and more.",
    "x-ms-api-annotation": {
      "status": "Production"
    },
    "contact": {
      "name": "Microsoft"
    }
  },
  "host": "europe-002.azure-apim.net",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectionId}/subscriptions": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "List subscriptions",
        "description": "Gets a list of all the subscriptions to which the principal has access.",
        "operationId": "Subscriptions_List",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "x-ms-api-version",
            "in": "query",
            "x-ms-summary": "API Version",
            "x-ms-test-value": "2017-06-01",
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "2017-06-01"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubscriptionListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#list-subscriptions"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/resourcegroups": {
      "get": {
        "tags": [
          "ResourceGroups"
        ],
        "summary": "List resource groups",
        "description": "Lists all the resource groups within the subscription. Paginates at 1,000 records.",
        "operationId": "ResourceGroups_List",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroupListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#list-resource-groups"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/operationResults/{operationId}": {
      "get": {
        "tags": [
          "AsyncOperations"
        ],
        "summary": "Get async operation result",
        "description": "Reads an async operation result (internal).",
        "operationId": "AsyncOperations_GetResult",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The operation Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Client API version",
            "required": true,
            "x-ms-test-value": "2019-12-01",
            "x-ms-visibility": "internal",
            "x-ms-summary": "API Version",
            "type": "string",
            "default": "2019-12-01"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#get-async-operation-result"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/operationResults/{operationId}": {
      "get": {
        "tags": [
          "AsyncOperations"
        ],
        "summary": "Get async operation result in a location",
        "description": "Reads an async operation result (internal).",
        "operationId": "AsyncOperations_GetLocationResult",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The operation Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Client API version",
            "required": true,
            "x-ms-test-value": "2019-12-01",
            "x-ms-visibility": "internal",
            "x-ms-summary": "API Version",
            "type": "string",
            "default": "2019-12-01"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#get-async-operation-result-in-a-location"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/operations/{operationId}": {
      "get": {
        "tags": [
          "AsyncOperations"
        ],
        "summary": "Get async operation status",
        "description": "Reads an async operation status (internal).",
        "operationId": "AsyncOperations_GetStatus",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "name": "operationId",
            "in": "path",
            "description": "The operation Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Client API version",
            "required": true,
            "x-ms-test-value": "2019-12-01",
            "x-ms-visibility": "internal",
            "x-ms-summary": "API Version",
            "type": "string",
            "default": "2019-12-01"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Async operations response.",
              "type": "object"
            }
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "x-ms-visibility": "internal",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#get-async-operation-status"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/containerGroups": {
      "get": {
        "summary": "Get a list of container groups in a subscription",
        "description": "Get a list of container groups in the specified subscription. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.",
        "operationId": "ContainerGroups_List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroupListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#get-a-list-of-container-groups-in-a-subscription"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups": {
      "get": {
        "summary": "Get a list of container groups in a resource group",
        "description": "Get a list of container groups in a specified subscription and resource group. This operation returns properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.",
        "operationId": "ContainerGroups_ListByResourceGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroupListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#get-a-list-of-container-groups-in-a-resource-group"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}": {
      "get": {
        "summary": "Get properties of a container group",
        "description": "Gets the properties of the specified container group in the specified subscription and resource group. The operation returns the properties of each container group including containers, image registry credentials, restart policy, IP address type, OS type, state, and volumes.",
        "operationId": "ContainerGroups_Get",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#get-properties-of-a-container-group"
        }
      },
      "put": {
        "summary": "Create or update a container group",
        "description": "Create or update a container group with specified configurations.",
        "operationId": "ContainerGroups_CreateOrUpdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          },
          {
            "name": "containerGroup",
            "in": "body",
            "description": "The properties of the container group to be created or updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          },
          "201": {
            "description": "Created - the container group is created.",
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#create-or-update-a-container-group"
        }
      },
      "patch": {
        "summary": "Update a container group location or tags",
        "description": "Update a container group with the specified tags and/or location.",
        "operationId": "ContainerGroups_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          },
          {
            "name": "Resource",
            "in": "body",
            "description": "The container group resource with just the tags to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#update-a-container-group-location-or-tags"
        }
      },
      "delete": {
        "summary": "Delete a container group",
        "description": "Delete the specified container group in the specified subscription and resource group. The operation does not delete other resources provided by the user, such as volumes.",
        "operationId": "ContainerGroups_Delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContainerGroup"
            }
          },
          "202": {
            "description": "Delete started."
          },
          "204": {
            "description": "No Content - the specified container group was not found."
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#delete-a-container-group"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/restart": {
      "post": {
        "summary": "Restart containers in a container group",
        "description": "Restarts all containers in a container group in place. If container image has updates, new image will be downloaded.",
        "operationId": "ContainerGroups_Restart",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#restart-containers-in-a-container-group"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/stop": {
      "post": {
        "summary": "Stop containers in a container group",
        "description": "Stops all containers in a container group. Compute resources will be deallocated and billing will stop.",
        "operationId": "ContainerGroups_Stop",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#stop-containers-in-a-container-group"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/start": {
      "post": {
        "summary": "Start containers in a container group",
        "description": "Starts all containers in a container group. Compute resources will be allocated and billing will start.",
        "operationId": "ContainerGroups_Start",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          }
        ],
        "responses": {
          "204": {
            "description": "NoContent"
          }
        },
        "deprecated": false,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#start-containers-in-a-container-group"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/usages": {
      "get": {
        "summary": "Get current usage",
        "description": "Get the usage for a subscription",
        "operationId": "Location_ListUsage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UsageListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#get-current-usage"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}/containers/{containerName}/logs": {
      "get": {
        "summary": "Get logs from a container instance",
        "description": "Get the logs for a specified container instance in a specified resource group and container group.",
        "operationId": "ContainerLogs_List",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ContainerGroupNameParameter"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "The name of the container instance.",
            "required": true,
            "x-ms-summary": "Container Name",
            "type": "string"
          },
          {
            "name": "tail",
            "in": "query",
            "description": "The number of lines to show from the tail of the container instance log. If not provided, all available logs are shown up to 4mb.",
            "x-ms-summary": "Tail Lines",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Logs"
            }
          }
        },
        "deprecated": false,
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#get-logs-from-a-container-instance"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/cachedImages": {
      "get": {
        "summary": "Get cached images",
        "description": "Get the list of cached images on specific OS type for a subscription in a region.",
        "operationId": "Location_ListCachedImages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CachedImagesListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#get-cached-images"
        }
      }
    },
    "/{connectionId}/subscriptions/{subscriptionId}/providers/Microsoft.ContainerInstance/locations/{location}/capabilities": {
      "get": {
        "summary": "Get capabilities",
        "description": "Get the list of CPU/memory/GPU capabilities for a subscription in a region.",
        "operationId": "Location_ListCapabilities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/LocationParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CapabilitiesListResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-no-generic-test": true,
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/aci/#get-capabilities"
        }
      }
    }
  },
  "definitions": {
    "SubscriptionListResult": {
      "description": "Subscription list operation response.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The subscriptions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subscription"
          }
        },
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Next Link"
        }
      }
    },
    "Subscription": {
      "description": "Subscription information.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The fully qualified Id. For example, /subscriptions/00000000-0000-0000-0000-000000000000.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Id"
        },
        "subscriptionId": {
          "description": "The subscription Id.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Subscription Id"
        },
        "tenantId": {
          "description": "The tenant Id.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Tenant Id"
        },
        "displayName": {
          "description": "The subscription display name.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Display Name"
        },
        "state": {
          "description": "The subscription state.",
          "enum": [
            "Enabled",
            "Warned",
            "PastDue",
            "Disabled",
            "Deleted"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "State",
          "x-ms-enum": {
            "name": "SubscriptionState",
            "modelAsString": false
          }
        },
        "authorizationSource": {
          "description": "The authorization source of the request. Valid values are one or more combinations of Legacy, RoleBased, Bypassed, Direct and Management. For example, 'Legacy, RoleBased'.",
          "type": "string",
          "x-ms-summary": "Authorization Source",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ResourceGroupListResult": {
      "description": "List of resource groups.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of resource groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceGroup"
          }
        },
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Next Link"
        }
      }
    },
    "ResourceGroup": {
      "description": "Resource group information.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of the resource group (e.g. /subscriptions/XXX/resourceGroups/YYY).",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Id"
        },
        "name": {
          "description": "The Name of the resource group.",
          "type": "string",
          "readOnly": true,
          "x-ms-summary": "Name"
        },
        "managedBy": {
          "description": "Id of the resource that manages this resource group.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Managed By"
        }
      }
    },
    "Container": {
      "title": "Container",
      "description": "A container instance.",
      "required": [
        "properties",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the container.",
          "type": "string",
          "x-ms-test-value": "containerjob"
        },
        "properties": {
          "$ref": "#/definitions/ContainerProperties"
        }
      }
    },
    "ContainerProperties": {
      "description": "The container properties.",
      "required": [
        "image",
        "resources"
      ],
      "type": "object",
      "properties": {
        "image": {
          "title": "Image",
          "description": "The name of the image used to create the container. E.g. nginx:latest",
          "type": "string",
          "x-ms-test-value": "hello-world"
        },
        "command": {
          "title": "Command",
          "description": "The commands to execute within the container. E.g. [ \"echo\", \"hello aci\" ]",
          "type": "array",
          "items": {
            "title": "Command Segment",
            "description": "The command to execute. Split by space and one segment per line.",
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        },
        "ports": {
          "title": "Ports",
          "description": "The exposed ports on the container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerPort"
          }
        },
        "environmentVariables": {
          "title": "Environment Variables",
          "description": "The environment variables to set in the container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariable"
          }
        },
        "instanceView": {
          "description": "The instance view of the container instance. Only valid in response.",
          "type": "object",
          "properties": {
            "restartCount": {
              "description": "The number of times that the container instance has been restarted.",
              "type": "integer",
              "readOnly": true
            },
            "currentState": {
              "$ref": "#/definitions/ContainerState"
            },
            "previousState": {
              "$ref": "#/definitions/ContainerState"
            },
            "events": {
              "description": "The events of the container instance.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              },
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "volumeMounts": {
          "title": "Volume Mounts",
          "description": "The volume mounts available to the container instance.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          }
        },
        "livenessProbe": {
          "$ref": "#/definitions/ContainerProbeLiveness"
        },
        "readinessProbe": {
          "$ref": "#/definitions/ContainerProbeReadiness"
        }
      }
    },
    "ContainerState": {
      "description": "The container instance state.",
      "type": "object",
      "properties": {
        "state": {
          "description": "The state of the container instance.",
          "type": "string",
          "readOnly": true
        },
        "startTime": {
          "format": "date-time",
          "description": "The date-time when the container instance state started.",
          "type": "string",
          "readOnly": true
        },
        "exitCode": {
          "description": "The container instance exit codes correspond to those from the `docker run` command.",
          "type": "integer",
          "readOnly": true
        },
        "finishTime": {
          "format": "date-time",
          "description": "The date-time when the container instance state finished.",
          "type": "string",
          "readOnly": true
        },
        "detailStatus": {
          "description": "The human-readable status of the container instance state.",
          "type": "string",
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "Event": {
      "description": "A container group or container instance event.",
      "type": "object",
      "properties": {
        "count": {
          "description": "The count of the event.",
          "type": "integer",
          "readOnly": true
        },
        "firstTimestamp": {
          "format": "date-time",
          "description": "The date-time of the earliest logged event.",
          "type": "string",
          "readOnly": true
        },
        "lastTimestamp": {
          "format": "date-time",
          "description": "The date-time of the latest logged event.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The event name.",
          "type": "string",
          "readOnly": true
        },
        "message": {
          "description": "The event message.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The event type.",
          "type": "string",
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "ResourceRequirements": {
      "description": "The resource requirements.",
      "required": [
        "requests"
      ],
      "type": "object",
      "properties": {
        "requests": {
          "$ref": "#/definitions/ResourceRequests"
        },
        "limits": {
          "$ref": "#/definitions/ResourceLimits"
        }
      }
    },
    "ResourceRequests": {
      "title": "Resource Requests",
      "description": "The resource requests.",
      "required": [
        "memoryInGB",
        "cpu"
      ],
      "type": "object",
      "properties": {
        "memoryInGB": {
          "title": "Memory",
          "description": "The memory request in GB of this container. E.g. 3.5",
          "type": "number",
          "x-ms-test-value": 1.5
        },
        "cpu": {
          "title": "CPU",
          "description": "The CPU request of this container. E.g. 2.0",
          "type": "number",
          "x-ms-test-value": 0.8
        },
        "gpu": {
          "$ref": "#/definitions/GpuResource"
        }
      }
    },
    "ResourceLimits": {
      "title": "Resource Limits",
      "description": "The resource limits.",
      "type": "object",
      "properties": {
        "memoryInGB": {
          "format": "double",
          "title": "Memory",
          "description": "The memory limit in GB of this container.",
          "type": "number",
          "x-ms-visibility": "advanced"
        },
        "cpu": {
          "format": "double",
          "title": "CPU",
          "description": "The CPU limit of this container.",
          "type": "number",
          "x-ms-visibility": "advanced"
        },
        "gpu": {
          "$ref": "#/definitions/GpuResource"
        }
      }
    },
    "GpuResource": {
      "title": "GPU",
      "description": "The GPU resource.",
      "required": [
        "count",
        "sku"
      ],
      "type": "object",
      "properties": {
        "count": {
          "format": "int32",
          "title": "Count",
          "description": "The count of the GPU resource.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "sku": {
          "title": "SKU",
          "description": "The SKU of the GPU resource.",
          "enum": [
            "K80",
            "P100",
            "V100"
          ],
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "AzureFileVolume": {
      "title": "Azure File Volume",
      "description": "The properties of the Azure File volume. Azure File shares are mounted as volumes.",
      "required": [
        "shareName",
        "storageAccountName"
      ],
      "type": "object",
      "properties": {
        "shareName": {
          "title": "Share Name",
          "description": "The name of the Azure File share to be mounted as a volume.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "readOnly": {
          "title": "ReadOnly",
          "description": "The flag indicating whether the Azure File shared mounted as a volume is read-only.",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "storageAccountName": {
          "title": "Storage Account Name",
          "description": "The name of the storage account that contains the Azure File share.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "storageAccountKey": {
          "title": "Storage Account Key",
          "description": "The storage account access key used to access the Azure File share.",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "EmptyDirVolume": {
      "title": "Empty Directory Volume",
      "description": "The empty directory volume.",
      "type": "object",
      "properties": {},
      "x-ms-visibility": "advanced"
    },
    "SecretVolume": {
      "title": "Secret Volume",
      "description": "The secret volume.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "x-ms-visibility": "advanced"
    },
    "GitRepoVolume": {
      "title": "Git Repo Volume",
      "description": "Represents a volume that is populated with the contents of a git repository",
      "required": [
        "repository"
      ],
      "type": "object",
      "properties": {
        "directory": {
          "title": "Directory",
          "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "repository": {
          "title": "Repository",
          "description": "Repository URL",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "revision": {
          "title": "Revision",
          "description": "Commit hash for the specified revision.",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Volume": {
      "title": "Volume",
      "description": "The properties of the volume.",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the volume.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "azureFile": {
          "$ref": "#/definitions/AzureFileVolume"
        },
        "emptyDir": {
          "$ref": "#/definitions/EmptyDirVolume"
        },
        "secret": {
          "$ref": "#/definitions/SecretVolume"
        },
        "gitRepo": {
          "$ref": "#/definitions/GitRepoVolume"
        }
      }
    },
    "VolumeMount": {
      "title": "Volume Mount",
      "description": "The properties of the volume mount.",
      "required": [
        "name",
        "mountPath"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the volume.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "mountPath": {
          "title": "Path",
          "description": "The path within the container where the volume should be mounted. Must not contain colon (:).",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "readOnly": {
          "title": "Readonly",
          "description": "The flag indicating whether the volume mount is read-only.",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ContainerExec": {
      "title": "Exec",
      "description": "The container execution command, for liveness or readiness probe",
      "required": [
        "command"
      ],
      "type": "object",
      "properties": {
        "command": {
          "title": "Command",
          "description": "The commands to execute within the container.",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        }
      }
    },
    "ContainerHttpGet": {
      "title": "HTTP GET",
      "description": "The container Http Get settings, for liveness or readiness probe",
      "required": [
        "port"
      ],
      "type": "object",
      "properties": {
        "path": {
          "title": "Path",
          "description": "The path to probe.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "port": {
          "format": "int32",
          "title": "Port",
          "description": "The port number to probe.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "scheme": {
          "title": "Scheme",
          "description": "The scheme.",
          "enum": [
            "http",
            "https"
          ],
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ContainerProbeLiveness": {
      "title": "Liveness Probe",
      "description": "The container probe, for liveness",
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/ContainerExec"
        },
        "httpGet": {
          "$ref": "#/definitions/ContainerHttpGet"
        },
        "initialDelaySeconds": {
          "format": "int32",
          "title": "Initial Delay",
          "description": "The initial delay seconds.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "periodSeconds": {
          "format": "int32",
          "title": "Period",
          "description": "The period seconds.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "failureThreshold": {
          "format": "int32",
          "title": "Failure Threshold",
          "description": "The failure threshold.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "successThreshold": {
          "format": "int32",
          "title": "Success Threshold",
          "description": "The success threshold.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "timeoutSeconds": {
          "format": "int32",
          "title": "Timeout",
          "description": "The timeout seconds.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ContainerProbeReadiness": {
      "title": "Readiness Probe",
      "description": "The container probe, for readiness",
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/ContainerExec"
        },
        "httpGet": {
          "$ref": "#/definitions/ContainerHttpGet"
        },
        "initialDelaySeconds": {
          "format": "int32",
          "title": "Initial Delay",
          "description": "The initial delay seconds.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "periodSeconds": {
          "format": "int32",
          "title": "Period",
          "description": "The period seconds.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "failureThreshold": {
          "format": "int32",
          "title": "Failure Threshold",
          "description": "The failure threshold.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "successThreshold": {
          "format": "int32",
          "title": "Success Threshold",
          "description": "The success threshold.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        },
        "timeoutSeconds": {
          "format": "int32",
          "title": "Timeout",
          "description": "The timeout seconds.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ContainerGroup": {
      "title": "ContainerGroup",
      "description": "A container group.",
      "required": [
        "properties",
        "location"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The resource name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource type.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "title": "Location",
          "description": "The location to deploy container group.",
          "type": "string"
        },
        "tags": {
          "title": "Tags",
          "description": "The resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-visibility": "advanced"
        },
        "identity": {
          "$ref": "#/definitions/ContainerGroupIdentity"
        },
        "properties": {
          "required": [
            "containers",
            "osType"
          ],
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The provisioning state of the container group. This only appears in the response.",
              "type": "string",
              "readOnly": true
            },
            "containers": {
              "title": "Containers",
              "description": "The containers within the container group.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Container"
              }
            },
            "imageRegistryCredentials": {
              "title": "Image Registries",
              "description": "The image registry credentials by which the container group is created from.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImageRegistryCredential"
              }
            },
            "restartPolicy": {
              "title": "Restart Policy",
              "description": "Restart policy for all containers within the container group.",
              "default": "OnFailure",
              "enum": [
                "Always",
                "OnFailure",
                "Never"
              ],
              "type": "string",
              "x-ms-visibility": "advanced"
            },
            "ipAddress": {
              "$ref": "#/definitions/IpAddress"
            },
            "osType": {
              "title": "OS Type",
              "description": "The operating system type required by the container.",
              "default": "Linux",
              "enum": [
                "Windows",
                "Linux"
              ],
              "type": "string",
              "x-ms-test-value": "Linux"
            },
            "volumes": {
              "title": "Volumes",
              "description": "The list of volumes that can be mounted by containers in this container group.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Volume"
              }
            },
            "instanceView": {
              "description": "The instance view of the container group. Only valid in response.",
              "type": "object",
              "properties": {
                "events": {
                  "description": "The events of this container group.",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Event"
                  },
                  "readOnly": true
                },
                "state": {
                  "description": "The state of the container group. Only valid in response.",
                  "type": "string",
                  "readOnly": true
                }
              },
              "readOnly": true
            },
            "diagnostics": {
              "$ref": "#/definitions/ContainerGroupDiagnostics"
            },
            "networkProfile": {
              "$ref": "#/definitions/ContainerGroupNetworkProfile"
            },
            "dnsConfig": {
              "$ref": "#/definitions/DnsConfiguration"
            },
            "sku": {
              "$ref": "#/definitions/ContainerGroupSku"
            },
            "encryptionProperties": {
              "$ref": "#/definitions/EncryptionProperties"
            },
            "initContainers": {
              "title": "Init Containers",
              "description": "The init containers for a container group.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/InitContainerDefinition"
              }
            }
          }
        }
      }
    },
    "ContainerGroupIdentity": {
      "title": "Managed Identity",
      "description": "Identity for the container group.",
      "type": "object",
      "properties": {
        "principalId": {
          "description": "The principal id of the container group identity. This property will only be provided for a system assigned identity.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced"
        },
        "tenantId": {
          "description": "The tenant id associated with the container group. This property will only be provided for a system assigned identity.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced"
        },
        "type": {
          "title": "Type",
          "description": "The type of identity used for the container group. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the container group.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned, UserAssigned",
            "None"
          ],
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "userAssignedIdentities": {
          "title": "User Assigned Identities",
          "description": "The list of user identities associated with the container group. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ImageRegistryCredential": {
      "title": "Image Registry",
      "description": "Image registry credential.",
      "required": [
        "server",
        "username"
      ],
      "type": "object",
      "properties": {
        "server": {
          "title": "Server",
          "description": "The Docker image registry server without a protocol such as \"myacr.azurecr.io\".",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "username": {
          "title": "User Name",
          "description": "The username for the private registry.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "password": {
          "title": "Password",
          "description": "The password for the private registry.",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ContainerGroupDiagnostics": {
      "description": "Container group diagnostic information.",
      "type": "object",
      "properties": {
        "logAnalytics": {
          "$ref": "#/definitions/LogAnalytics"
        }
      }
    },
    "LogAnalytics": {
      "title": "Log Analytics",
      "description": "Container group log analytics information.",
      "required": [
        "workspaceId",
        "workspaceKey"
      ],
      "type": "object",
      "properties": {
        "workspaceId": {
          "title": "Workspace Id",
          "description": "The workspace id for log analytics",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "workspaceKey": {
          "title": "Workspace Key",
          "description": "The workspace key for log analytics",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "logType": {
          "title": "Log Type",
          "description": "The log type to be used.",
          "enum": [
            "ContainerInsights",
            "ContainerInstanceLogs"
          ],
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "metadata": {
          "title": "Metadata",
          "description": "Metadata for log analytics.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ContainerGroupNetworkProfile": {
      "description": "Container group network profile information.",
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Network Profile Id",
          "description": "The identifier for a network profile.",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "IpAddress": {
      "title": "IP Address",
      "description": "IP address for the container group.",
      "required": [
        "ports",
        "type"
      ],
      "type": "object",
      "properties": {
        "ports": {
          "title": "Ports",
          "description": "The list of ports exposed on the container group.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Port"
          }
        },
        "type": {
          "title": "Type",
          "description": "Specifies if the IP is exposed to the public internet.",
          "enum": [
            "Public",
            "Private"
          ],
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "ip": {
          "description": "The IP exposed to the public internet.",
          "type": "string",
          "readOnly": true,
          "x-ms-visibility": "advanced"
        },
        "dnsNameLabel": {
          "title": "Dns Name",
          "description": "The Dns name label for the IP.",
          "type": "string"
        },
        "fqdn": {
          "description": "The FQDN for the IP.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Port": {
      "title": "Port",
      "description": "The port exposed on the container group.",
      "required": [
        "port"
      ],
      "type": "object",
      "properties": {
        "protocol": {
          "title": "Protocol",
          "description": "The protocol associated with the port.",
          "enum": [
            "TCP",
            "UDP"
          ],
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "port": {
          "format": "int32",
          "title": "Number",
          "description": "The port number.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "ContainerPort": {
      "title": "Port",
      "description": "The port exposed on the container instance.",
      "required": [
        "port"
      ],
      "type": "object",
      "properties": {
        "protocol": {
          "title": "Protocol",
          "description": "The protocol associated with the port.",
          "enum": [
            "TCP",
            "UDP"
          ],
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "port": {
          "format": "int32",
          "title": "Number",
          "description": "The port number exposed within the container group.",
          "type": "integer",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "EnvironmentVariable": {
      "title": "Environment Variable",
      "description": "The environment variable to set within the container instance.",
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name of the environment variable.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "value": {
          "title": "Value",
          "description": "The value of the environment variable.",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "UsageListResult": {
      "description": "The response containing the usage data",
      "type": "object",
      "properties": {
        "value": {
          "description": "The usage data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Usage"
          },
          "readOnly": true
        }
      }
    },
    "Usage": {
      "description": "A single usage result",
      "type": "object",
      "properties": {
        "unit": {
          "description": "Unit of the usage result",
          "type": "string",
          "readOnly": true
        },
        "currentValue": {
          "description": "The current usage of the resource",
          "type": "integer",
          "readOnly": true
        },
        "limit": {
          "description": "The maximum permitted usage of the resource.",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "description": "The name object of the resource",
          "type": "object",
          "properties": {
            "value": {
              "description": "The name of the resource",
              "type": "string",
              "readOnly": true
            },
            "localizedValue": {
              "description": "The localized name of the resource",
              "type": "string",
              "readOnly": true
            }
          },
          "readOnly": true
        }
      }
    },
    "ContainerGroupListResult": {
      "description": "The container group list response that contains the container group properties.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of container groups.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerGroup"
          }
        },
        "nextLink": {
          "description": "The URI to fetch the next page of container groups.",
          "type": "string"
        }
      }
    },
    "Logs": {
      "description": "The logs.",
      "type": "object",
      "properties": {
        "content": {
          "description": "The content of the log.",
          "type": "string"
        }
      }
    },
    "DnsConfiguration": {
      "title": "DNS Configuration",
      "description": "DNS configuration for the container group.",
      "required": [
        "nameServers"
      ],
      "type": "object",
      "properties": {
        "nameServers": {
          "title": "Name Servers",
          "description": "The DNS servers for the container group.",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        },
        "searchDomains": {
          "title": "Search Domains",
          "description": "The DNS search domains for hostname lookup in the container group.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "options": {
          "title": "Options",
          "description": "The DNS options for the container group.",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "Resource": {
      "description": "The Resource model definition.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The resource id.",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "The resource name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "The resource type.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "title": "Location",
          "description": "The resource location.",
          "type": "string"
        },
        "tags": {
          "title": "Tags",
          "description": "The resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        }
      }
    },
    "CachedImagesListResult": {
      "description": "The response containing cached images.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of cached images.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/cachedImages"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "The URI to fetch the next page of cached images.",
          "type": "string",
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "cachedImages": {
      "description": "The cached image and OS type.",
      "required": [
        "osType",
        "image"
      ],
      "type": "object",
      "properties": {
        "osType": {
          "description": "The OS type of the cached image.",
          "type": "string",
          "readOnly": true
        },
        "image": {
          "description": "The cached image name.",
          "type": "string",
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "CapabilitiesListResult": {
      "description": "The response containing list of capabilities.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The list of capabilities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Capabilities"
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "The URI to fetch the next page of capabilities.",
          "type": "string",
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "Capabilities": {
      "description": "The regional capabilities.",
      "type": "object",
      "properties": {
        "resourceType": {
          "description": "The resource type that this capability describes.",
          "type": "string",
          "readOnly": true
        },
        "osType": {
          "description": "The OS type that this capability describes.",
          "type": "string",
          "readOnly": true
        },
        "location": {
          "description": "The resource location.",
          "type": "string",
          "readOnly": true
        },
        "ipAddressType": {
          "description": "The ip address type that this capability describes.",
          "type": "string",
          "readOnly": true
        },
        "gpu": {
          "description": "The GPU sku that this capability describes.",
          "type": "string",
          "readOnly": true
        },
        "capabilities": {
          "description": "The supported capabilities.",
          "type": "object",
          "properties": {
            "maxMemoryInGB": {
              "description": "The maximum allowed memory request in GB.",
              "type": "number",
              "readOnly": true
            },
            "maxCpu": {
              "description": "The maximum allowed CPU request in cores.",
              "type": "number",
              "readOnly": true
            },
            "maxGpuCount": {
              "description": "The maximum allowed GPU count.",
              "type": "number",
              "readOnly": true
            }
          },
          "readOnly": true
        }
      },
      "readOnly": true
    },
    "ContainerGroupSku": {
      "title": "SKU",
      "description": "The container group SKU.",
      "default": "Standard",
      "enum": [
        "Standard",
        "Dedicated"
      ],
      "type": "string",
      "x-ms-visibility": "advanced"
    },
    "EncryptionProperties": {
      "title": "Encryption",
      "description": "The container group encryption properties.",
      "required": [
        "vaultBaseUrl",
        "keyName",
        "keyVersion"
      ],
      "type": "object",
      "properties": {
        "vaultBaseUrl": {
          "title": "Vault Url",
          "description": "The keyvault base url.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "keyName": {
          "title": "Key Name",
          "description": "The encryption key name.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "keyVersion": {
          "title": "Key Version",
          "description": "The encryption key version.",
          "type": "string",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "InitContainerDefinition": {
      "title": "Init Container",
      "description": "The init container definition.",
      "required": [
        "name",
        "properties"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "description": "The name for the init container.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "properties": {
          "$ref": "#/definitions/InitContainerPropertiesDefinition"
        }
      }
    },
    "InitContainerPropertiesDefinition": {
      "description": "The init container definition properties.",
      "type": "object",
      "properties": {
        "image": {
          "title": "Image",
          "description": "The image of the init container.",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "command": {
          "title": "Command",
          "description": "The command to execute within the init container in exec form.",
          "type": "array",
          "items": {
            "type": "string",
            "x-ms-visibility": "advanced"
          }
        },
        "environmentVariables": {
          "title": "Environment Variables",
          "description": "The environment variables to set in the init container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariable"
          }
        },
        "instanceView": {
          "description": "The instance view of the init container. Only valid in response.",
          "type": "object",
          "properties": {
            "restartCount": {
              "description": "The number of times that the init container has been restarted.",
              "type": "integer",
              "readOnly": true
            },
            "currentState": {
              "$ref": "#/definitions/ContainerState"
            },
            "previousState": {
              "$ref": "#/definitions/ContainerState"
            },
            "events": {
              "description": "The events of the init container.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              },
              "readOnly": true
            }
          },
          "readOnly": true
        },
        "volumeMounts": {
          "title": "Volume Mounts",
          "description": "The volume mounts available to the init container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          }
        }
      }
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "description": "Microsoft Azure subscription.",
      "required": true,
      "x-ms-summary": "Subscription Id",
      "x-ms-test-value": "ae43b1e3-c35d-4c8c-bc0d-f148b4c52b78",
      "x-ms-dynamic-values": {
        "operationId": "Subscriptions_List",
        "value-collection": "value",
        "value-path": "subscriptionId",
        "value-title": "displayName",
        "parameters": {
          "x-ms-api-version": "2017-06-01"
        }
      },
      "type": "string"
    },
    "LocationParameter": {
      "name": "location",
      "in": "path",
      "description": "The identifier for the physical azure location.",
      "required": true,
      "x-ms-test-value": "westus",
      "x-ms-summary": "Location",
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "ApiVersionParameter": {
      "name": "x-ms-api-version",
      "in": "query",
      "description": "Client API version",
      "required": true,
      "x-ms-test-value": "2019-12-01",
      "x-ms-visibility": "internal",
      "x-ms-summary": "API Version",
      "type": "string",
      "default": "2019-12-01"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "description": "The name of the resource group.",
      "required": true,
      "x-ms-test-value": "connector-aci",
      "x-ms-dynamic-values": {
        "operationId": "ResourceGroups_List",
        "value-collection": "value",
        "value-path": "name",
        "value-title": "name",
        "parameters": {
          "x-ms-api-version": "2017-06-01",
          "subscriptionId": {
            "parameter": "subscriptionId"
          }
        }
      },
      "x-ms-summary": "Resource Group",
      "type": "string",
      "maxLength": 90,
      "minLength": 1,
      "pattern": "^[-\\w\\._\\(\\)]+$"
    },
    "ContainerGroupNameParameter": {
      "name": "containerGroupName",
      "in": "path",
      "description": "The name of the container group.",
      "required": true,
      "x-ms-test-value": "acijobs",
      "x-ms-summary": "Container Group Name",
      "x-ms-parameter-location": "method",
      "type": "string"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://azure.microsoft.com/services/container-instances/"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/aci"
  },
  "basePath": "/apim/aci"
}
