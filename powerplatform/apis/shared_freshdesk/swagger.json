{
  "swagger": "2.0",
  "info": {
    "x-ms-deployment-version": "1.0.0",
    "version": "1.0.0",
    "title": "Freshdesk",
    "description": "Freshdesk is a cloud-based customer support solution that will help you streamline your customer service and make sure your customers receive the support they deserve! The Freshdesk connector is intended for Freshdesk agents to manage tickets and contacts.",
    "x-ms-api-annotation": {
      "status": "Production"
    },
    "contact": {
      "name": "Microsoft"
    },
    "x-ms-keywords": [
      "freshdesk",
      "ticket",
      "tickets",
      "user",
      "users",
      "product",
      "products",
      "contact",
      "contacts",
      "agent",
      "agents"
    ]
  },
  "host": "europe-002.azure-apim.net",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/{connectionId}/api/v2/tickets": {
      "get": {
        "summary": "Get tickets",
        "description": "Get all tickets.",
        "operationId": "GetTickets",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "updated_since",
            "in": "query",
            "description": "Updated since",
            "required": false,
            "x-ms-summary": "Updated Since",
            "x-ms-visibility": "internal",
            "x-ms-test-value": "2016-08-19T02:00:00Z",
            "type": "string",
            "default": "2016-08-19T02:00:00Z"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetTickets200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-visibility": "internal",
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#get-tickets"
        }
      },
      "post": {
        "summary": "Create a ticket",
        "description": "Create a ticket.",
        "operationId": "CreateTicket",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTicketBodySchema"
            },
            "x-ms-summary": "body"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateTicket200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-visibility": "important",
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "CreateTicket",
              "x-ms-require-user-confirmation": true
            }
          ]
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#create-a-ticket"
        }
      }
    },
    "/{connectionId}/api/v2/products": {
      "get": {
        "summary": "Get products",
        "description": "Get a list of all products.",
        "operationId": "GetProducts",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProducts200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-visibility": "internal",
        "x-ms-no-generic-test": true,
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#get-products"
        }
      }
    },
    "/{connectionId}/api/v2/tickets/{ticketId}": {
      "get": {
        "summary": "Get ticket",
        "description": "Get a ticket by Id.",
        "operationId": "GetTicket",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "The ticket Id.",
            "required": true,
            "x-ms-summary": "Ticket Id",
            "x-ms-test-value": "2",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateTicket200Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-visibility": "advanced",
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#get-ticket"
        }
      },
      "put": {
        "summary": "Update a ticket",
        "description": "Update a ticket (only specified values will be updated).",
        "operationId": "UpdateTicket",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "The ticket Id to update.",
            "required": true,
            "x-ms-summary": "Ticket Id",
            "x-ms-test-value": "2",
            "x-ms-dynamic-values": {
              "operationId": "GetTickets",
              "value-path": "id",
              "value-title": "subject"
            },
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTicketBodySchema"
            },
            "x-ms-summary": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateTicket200Response"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-visibility": "advanced",
        "x-ms-openai-data": {
          "openai-enabled": true,
          "operations": [
            {
              "operationId": "UpdateTicket",
              "x-ms-require-user-confirmation": true
            }
          ]
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#update-a-ticket"
        }
      }
    },
    "/{connectionId}/api/v2/contacts": {
      "get": {
        "summary": "Get Contacts",
        "description": "Get a list of contacts.",
        "operationId": "GetContacts",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetContacts200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-visibility": "internal",
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#get-contacts"
        }
      }
    },
    "/{connectionId}/api/v2/tickets/{ticketId}/notes": {
      "post": {
        "summary": "Add a note to a ticket",
        "description": "Add a private or public note to a ticket.",
        "operationId": "AddNote",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "path",
            "description": "The ticket Id to add a note to.",
            "required": true,
            "x-ms-summary": "Ticket Id",
            "x-ms-test-value": "2",
            "x-ms-dynamic-values": {
              "operationId": "GetTickets",
              "value-path": "id",
              "value-title": "subject"
            },
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddNoteBodySchema"
            },
            "x-ms-summary": "body"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AddNote200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#add-a-note-to-a-ticket"
        }
      }
    },
    "/{connectionId}/api/v2/agents": {
      "get": {
        "summary": "Get Agents",
        "description": "Get a list of all agents.",
        "operationId": "GetAgents",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAgents200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-visibility": "internal",
        "x-ms-openai-data": {
          "openai-enabled": true
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#get-agents"
        }
      }
    },
    "/{connectionId}/trigger/ticketcreated/api/v2/tickets": {
      "get": {
        "summary": "When a ticket is created",
        "description": "When any ticket is created.",
        "operationId": "TriggerTicketCreated",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "updated_since",
            "in": "query",
            "x-ms-summary": "Updated Since",
            "x-ms-test-value": "2016-08-19T02:00:00Z",
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "2016-08-19T02:00:00Z"
          },
          {
            "name": "includeDescription",
            "in": "query",
            "description": "Should the response of the trigger include the description.",
            "x-ms-summary": "Include description",
            "required": false,
            "x-ms-visibility": "advanced",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetTickets200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, create a ticket.",
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#when-a-ticket-is-created"
        }
      }
    },
    "/{connectionId}/trigger/ticketassignedtoagent/api/v2/tickets": {
      "get": {
        "summary": "When a ticket assigned to an agent is updated",
        "description": "When any ticket assigned to the selected agent is updated.",
        "operationId": "TriggerTicketAssignedToAgent",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "agentId",
            "in": "query",
            "description": "The agent id.",
            "required": true,
            "x-ms-summary": "Agent Id",
            "x-ms-test-value": "22001014480",
            "x-ms-dynamic-values": {
              "operationId": "GetAgents",
              "value-path": "id",
              "value-title": "contact/name"
            },
            "type": "integer"
          },
          {
            "name": "updated_since",
            "in": "query",
            "x-ms-summary": "Updated since",
            "x-ms-test-value": "2016-08-19T02:00:00Z",
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "2016-08-19T02:00:00Z"
          },
          {
            "name": "includeDescription",
            "in": "query",
            "description": "Should the response of the trigger include the description.",
            "x-ms-summary": "Include description",
            "required": false,
            "x-ms-visibility": "advanced",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetTickets200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, assign a ticket to the agent.",
        "x-ms-visibility": "advanced",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#when-a-ticket-assigned-to-an-agent-is-updated"
        }
      }
    },
    "/{connectionId}/trigger/ticketupdated/api/v2/tickets": {
      "get": {
        "summary": "When a ticket is updated",
        "description": "When a ticket is updated.",
        "operationId": "TriggerTicketUpdated",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ticketId",
            "in": "query",
            "description": "The ticket Id.",
            "required": false,
            "x-ms-summary": "Ticket Id",
            "x-ms-test-value": "90",
            "x-ms-dynamic-values": {
              "operationId": "GetTickets",
              "value-path": "id",
              "value-title": "subject"
            },
            "type": "integer"
          },
          {
            "name": "updated_since",
            "in": "query",
            "x-ms-summary": "Updated Since",
            "x-ms-test-value": "2016-08-19T02:00:00Z",
            "x-ms-visibility": "internal",
            "type": "string",
            "default": "2016-08-19T02:00:00Z"
          },
          {
            "name": "includeDescription",
            "in": "query",
            "description": "Should the response of the trigger include the description.",
            "x-ms-summary": "Include description",
            "required": false,
            "x-ms-visibility": "advanced",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetTickets200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, update a ticket.",
        "x-ms-visibility": "advanced",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#when-a-ticket-is-updated"
        }
      }
    },
    "/{connectionId}/trigger/ticketstatuschanged/api/v2/tickets/{ticketId}": {
      "get": {
        "summary": "When a ticket status changes",
        "description": "When the status of the ticket changes.",
        "operationId": "TriggerTicketStatusChanged",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "$ref": "#/parameters/ticketId__in_path"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The new status of the ticket.",
            "x-ms-summary": "New Status",
            "x-ms-test-value": "Open",
            "type": "string",
            "enum": [
              "Open",
              "Pending",
              "Resolved",
              "Closed",
              "Waiting on Customer",
              "Waiting on Third Party"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateTicket200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-trigger": "single",
        "x-ms-trigger-hint": "To see it work now, update the status of the ticket.",
        "x-ms-visibility": "advanced",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#when-a-ticket-status-changes"
        }
      }
    },
    "/{connectionId}/trigger/agentadded/api/v2/agents": {
      "get": {
        "summary": "When an agent is added",
        "description": "When an agent is added (for admin use only). This trigger works only if the Freshdesk account has less than 100 agents.",
        "operationId": "TriggerAgentAdded",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAgents200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, add an agent.",
        "x-ms-visibility": "advanced",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#when-an-agent-is-added"
        }
      }
    },
    "/{connectionId}/trigger/contactadded/api/v2/contacts": {
      "get": {
        "summary": "When a contact is added",
        "description": "When a contact is added. This trigger works only if the Freshdesk account has less than 100 contacts.",
        "operationId": "TriggerContactAdded",
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetContacts200Response"
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Authorization": []
          }
        ],
        "x-ms-trigger": "batch",
        "x-ms-trigger-hint": "To see it work now, add a contact.",
        "x-ms-visibility": "advanced",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/freshdesk/#when-a-contact-is-added"
        }
      }
    }
  },
  "definitions": {
    "GetTickets200Response": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CreateTicket200Response"
      }
    },
    "CreateTicket200Response": {
      "type": "object",
      "properties": {
        "spam": {
          "description": "Set to true if the ticket has been marked as spam.",
          "type": "boolean",
          "x-ms-summary": "Spam",
          "x-ms-visibility": "advanced"
        },
        "priority": {
          "description": "Priority of the ticket.",
          "type": "string",
          "x-ms-summary": "Priority",
          "enum": [
            "Urgent",
            "High",
            "Medium",
            "Low"
          ]
        },
        "requester_id": {
          "format": "int32",
          "description": "User Id of the requester.",
          "type": "integer",
          "x-ms-summary": "Requester Id",
          "x-ms-visibility": "advanced"
        },
        "responder_id": {
          "format": "int32",
          "description": "Id of the agent to whom the ticket has been assigned.",
          "type": "integer",
          "x-ms-summary": "Agent Id",
          "x-ms-visibility": "advanced"
        },
        "source": {
          "description": "The channel through which the ticket was created.",
          "type": "string",
          "x-ms-summary": "Source",
          "x-ms-visibility": "advanced"
        },
        "status": {
          "description": "Status of the ticket.",
          "type": "string",
          "x-ms-summary": "Status"
        },
        "subject": {
          "description": "Subject of the ticket.",
          "type": "string",
          "x-ms-summary": "Subject"
        },
        "id": {
          "format": "int32",
          "description": "The unique Id of the ticket.",
          "type": "integer",
          "x-ms-summary": "Ticket Id"
        },
        "type": {
          "description": "Helps categorize the ticket according to the different kinds of issues your support team deals with.",
          "type": "string",
          "x-ms-summary": "Type",
          "x-ms-visibility": "advanced",
          "x-ms-test-nullable": true
        },
        "due_by": {
          "format": "date-time",
          "description": "Timestamp that denotes when the ticket is due to be resolved (in format yyyy-MM-ddTHH:mm:ssZ).",
          "type": "string",
          "x-ms-summary": "Due By",
          "x-ms-visibility": "advanced"
        },
        "is_escalated": {
          "description": "Set to true if the ticket has been escalated for any reason.",
          "type": "boolean",
          "x-ms-summary": "Is Escalated",
          "x-ms-visibility": "advanced"
        },
        "description": {
          "description": "HTML content of the ticket.",
          "type": "string",
          "x-ms-summary": "Description"
        },
        "description_text": {
          "description": "Content of the ticket in plain text.",
          "type": "string",
          "x-ms-summary": "Description Text",
          "x-ms-visibility": "advanced"
        },
        "created_at": {
          "format": "date-time",
          "description": "Ticket creation timestamp (in format yyyy-MM-ddTHH:mm:ssZ).",
          "type": "string",
          "x-ms-summary": "Created At"
        },
        "updated_at": {
          "format": "date-time",
          "description": "Ticket updated timestamp (in format yyyy-MM-ddTHH:mm:ssZ).",
          "type": "string",
          "x-ms-summary": "Updated At"
        },
        "deleted": {
          "description": "Set to true if the ticket has been deleted.",
          "type": "boolean",
          "x-ms-summary": "Deleted",
          "x-ms-visibility": "advanced"
        }
      }
    },
    "GetProducts200Response": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "description": "Id.",
            "type": "integer",
            "x-ms-summary": "id"
          },
          "name": {
            "description": "Name.",
            "type": "string",
            "x-ms-summary": "name"
          }
        }
      }
    },
    "GetContacts200Response": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "active": {
            "description": "Set to true if the contact has been verified.",
            "type": "boolean",
            "x-ms-summary": "Active",
            "x-ms-visibility": "advanced"
          },
          "address": {
            "description": "Address of the contact.",
            "type": "string",
            "x-ms-test-nullable": true,
            "x-ms-summary": "Address",
            "x-ms-visibility": "advanced"
          },
          "company_id": {
            "description": "Id of the company to which this contact belongs.",
            "type": "integer",
            "format": "int64",
            "x-ms-summary": "Company Id",
            "x-ms-test-nullable": true,
            "x-ms-visibility": "advanced"
          },
          "description": {
            "description": "A short description of the contact.",
            "type": "string",
            "x-ms-summary": "Description",
            "x-ms-test-nullable": true
          },
          "email": {
            "description": "Primary email address of the contact.",
            "type": "string",
            "x-ms-summary": "Email"
          },
          "id": {
            "format": "int32",
            "description": "Id of the contact.",
            "type": "integer",
            "x-ms-summary": "Id"
          },
          "job_title": {
            "description": "Job title of the contact.",
            "type": "string",
            "x-ms-summary": "Job Title",
            "x-ms-test-nullable": true,
            "x-ms-visibility": "advanced"
          },
          "language": {
            "description": "Language of the contact.",
            "type": "string",
            "x-ms-summary": "Language",
            "x-ms-test-nullable": true,
            "x-ms-visibility": "advanced"
          },
          "mobile": {
            "description": "Mobile number of the contact.",
            "type": "string",
            "x-ms-summary": "Mobile",
            "x-ms-test-nullable": true,
            "x-ms-visibility": "advanced"
          },
          "name": {
            "description": "Name of the contact.",
            "type": "string",
            "x-ms-summary": "Name"
          },
          "phone": {
            "description": "Telephone number of the contact.",
            "type": "string",
            "x-ms-summary": "Phone",
            "x-ms-test-nullable": true,
            "x-ms-visibility": "advanced"
          },
          "time_zone": {
            "description": "Time zone in which the contact resides.",
            "type": "string",
            "x-ms-summary": "Time Zone",
            "x-ms-test-nullable": true
          },
          "twitter_id": {
            "description": "Twitter handle of the contact.",
            "type": "string",
            "x-ms-summary": "Twitter Id",
            "x-ms-test-nullable": true,
            "x-ms-visibility": "advanced"
          },
          "created_at": {
            "format": "date-time",
            "description": "Contact creation timestamp (in format yyyy-MM-ddTHH:mm:ssZ).",
            "type": "string",
            "x-ms-summary": "Created At",
            "x-ms-visibility": "advanced"
          },
          "updated_at": {
            "format": "date-time",
            "description": "Contact updated timestamp (in format yyyy-MM-ddTHH:mm:ssZ).",
            "type": "string",
            "x-ms-summary": "Updated At",
            "x-ms-visibility": "advanced"
          }
        }
      }
    },
    "AddNote200Response": {
      "type": "object",
      "properties": {
        "private": {
          "description": "Set to true if the note is private.",
          "type": "boolean",
          "x-ms-summary": "Private"
        },
        "body": {
          "description": "Content of the note in HTML.",
          "type": "string",
          "x-ms-summary": "Content"
        },
        "body_text": {
          "description": "Content of the note in plain text.",
          "type": "string",
          "x-ms-summary": "Content Text"
        },
        "ticket_id": {
          "format": "int32",
          "description": "Id of the ticket to which this note is being added.",
          "type": "integer",
          "x-ms-summary": "Ticket Id"
        },
        "created_at": {
          "format": "date-time",
          "description": "Note creation timestamp (in format yyyy-MM-ddTHH:mm:ssZ).",
          "type": "string",
          "x-ms-summary": "Created At"
        },
        "updated_at": {
          "format": "date-time",
          "description": "Note updated timestamp (in format yyyy-MM-ddTHH:mm:ssZ).",
          "type": "string",
          "x-ms-summary": "Update At"
        }
      }
    },
    "GetAgents200Response": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "format": "int64",
            "description": "id",
            "type": "integer",
            "x-ms-summary": "id",
            "x-ms-visibility": "advanced"
          },
          "ticket_scope": {
            "format": "int32",
            "description": "Ticket permission of the agent.",
            "type": "integer",
            "x-ms-summary": "Ticket Scope",
            "x-ms-visibility": "advanced"
          },
          "created_at": {
            "format": "date-time",
            "description": "Agent creation timestamp (in format yyyy-MM-ddTHH:mm:ssZ).",
            "type": "string",
            "x-ms-summary": "Created At"
          },
          "updated_at": {
            "format": "date-time",
            "description": "Agent updated timestamp (in format yyyy-MM-ddTHH:mm:ssZ).",
            "type": "string",
            "x-ms-summary": "Updated At"
          },
          "contact": {
            "description": "Contact",
            "type": "object",
            "properties": {
              "active": {
                "description": "Set to true if the agent is verified.",
                "type": "boolean",
                "x-ms-summary": "Active",
                "x-ms-visibility": "advanced"
              },
              "email": {
                "description": "Email address of the agent.",
                "type": "string",
                "x-ms-summary": "Email"
              },
              "job_title": {
                "description": "Job title of the agent.",
                "type": "string",
                "x-ms-summary": "Job Title"
              },
              "language": {
                "description": "Language of the agent.",
                "type": "string",
                "x-ms-summary": "Language",
                "x-ms-visibility": "advanced"
              },
              "last_login_at": {
                "format": "date-time",
                "description": "Timestamp of the agent's last successful login (in format yyyy-MM-ddTHH:mm:ssZ).",
                "type": "string",
                "x-ms-summary": "Last Login At",
                "x-ms-visibility": "advanced"
              },
              "mobile": {
                "description": "Mobile number of the agent.",
                "type": "string",
                "x-ms-summary": "Mobile",
                "x-ms-visibility": "advanced"
              },
              "name": {
                "description": "Name of the agent.",
                "type": "string",
                "x-ms-summary": "Name"
              },
              "phone": {
                "description": "Telephone number of the agent.",
                "type": "string",
                "x-ms-summary": "Phone"
              },
              "time_zone": {
                "description": "Time zone of the agent.",
                "type": "string",
                "x-ms-summary": "Time Zone",
                "x-ms-visibility": "advanced"
              },
              "created_at": {
                "format": "date-time",
                "description": "Agent Creation timestamp (in format yyyy-MM-ddTHH:mm:ssZ).",
                "type": "string",
                "x-ms-summary": "Created At"
              },
              "updated_at": {
                "format": "date-time",
                "description": "Timestamp of the last update to the agent (in format yyyy-MM-ddTHH:mm:ssZ).",
                "type": "string",
                "x-ms-summary": "Updated At"
              }
            },
            "x-ms-summary": "Contact"
          }
        }
      }
    },
    "CreateTicketBodySchema": {
      "required": [
        "email",
        "description",
        "subject",
        "priority",
        "status"
      ],
      "type": "object",
      "properties": {
        "subject": {
          "description": "The subject for the ticket.",
          "type": "string",
          "x-ms-summary": "Subject"
        },
        "description": {
          "description": "The description for the ticket.",
          "type": "string",
          "x-ms-summary": "Description"
        },
        "email": {
          "description": "The email of the requester.",
          "type": "string",
          "x-ms-summary": "Email",
          "x-ms-dynamic-values": {
            "operationId": "GetContacts",
            "value-path": "email",
            "value-title": "name"
          }
        },
        "priority": {
          "description": "The priority for the ticket.",
          "default": "Low",
          "enum": [
            "Low",
            "Medium",
            "High",
            "Urgent"
          ],
          "type": "string",
          "x-ms-summary": "Priority"
        },
        "status": {
          "description": "The status of the ticket.",
          "default": "Open",
          "enum": [
            "Open",
            "Pending",
            "Resolved",
            "Closed",
            "Waiting on Customer",
            "Waiting on Third Party"
          ],
          "type": "string",
          "x-ms-summary": "Status"
        },
        "type": {
          "description": "Helps categorize the ticket according to the different kinds of issues your support team deals with.",
          "type": "string",
          "x-ms-summary": "Type",
          "x-ms-visibility": "advanced"
        },
        "due_by": {
          "format": "date-time",
          "description": "Timestamp that denotes when the ticket is due to be resolved (in format yyyy-MM-ddTHH:mm:ssZ).",
          "type": "string",
          "x-ms-summary": "Due By",
          "x-ms-visibility": "advanced"
        },
        "fr_due_by": {
          "format": "date-time",
          "description": "Timestamp that denotes when the first response is due (in format yyyy-MM-ddTHH:mm:ssZ).",
          "type": "string",
          "x-ms-summary": "First Response Due By",
          "x-ms-visibility": "advanced"
        },
        "responder_id": {
          "format": "int64",
          "description": "The agent of the ticket.",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "GetAgents",
            "value-path": "id",
            "value-title": "contact/name"
          },
          "x-ms-summary": "Agent"
        },
        "product_id": {
          "format": "int64",
          "description": "The product the ticket should be part of (for admin use only).",
          "type": "integer",
          "x-ms-visibility": "advanced",
          "x-ms-dynamic-values": {
            "operationId": "GetProducts",
            "value-path": "id",
            "value-title": "name"
          },
          "x-ms-summary": "Product"
        }
      },
      "x-ms-test-value": {
        "name": "Shubha Jain",
        "description": "New Details about the issue...",
        "subject": "Support Needed...",
        "email": "tom@outerspace.com",
        "priority": "Low",
        "status": "Open"
      }
    },
    "UpdateTicketBodySchema": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The ticket description.",
          "type": "string",
          "x-ms-summary": "Description",
          "x-ms-visibility": "advanced"
        },
        "subject": {
          "description": "The subject of the ticket.",
          "type": "string",
          "x-ms-summary": "Subject"
        },
        "priority": {
          "description": "The priority of the ticket.",
          "enum": [
            "Low",
            "Medium",
            "High",
            "Urgent"
          ],
          "type": "string",
          "x-ms-summary": "Priority"
        },
        "status": {
          "description": "The status of the ticket.",
          "enum": [
            "Open",
            "Pending",
            "Resolved",
            "Closed",
            "Waiting on Customer",
            "Waiting on Third Party"
          ],
          "type": "string",
          "x-ms-summary": "Status"
        },
        "type": {
          "description": "Helps categorize the ticket according to the different kinds of issues your support team deals with.",
          "type": "string",
          "x-ms-summary": "Type",
          "x-ms-visibility": "advanced"
        },
        "due_by": {
          "format": "date-time",
          "description": "Timestamp that denotes when the ticket is due to be resolved (in format yyyy-MM-ddTHH:mm:ssZ).",
          "type": "string",
          "x-ms-summary": "Due By",
          "x-ms-visibility": "advanced"
        },
        "responder_id": {
          "format": "int64",
          "description": "The agent of the ticket.",
          "type": "integer",
          "x-ms-dynamic-values": {
            "operationId": "GetAgents",
            "value-path": "id",
            "value-title": "contact/name"
          },
          "x-ms-summary": "Agent",
          "x-ms-visibility": "advanced"
        }
      },
      "x-ms-test-value": {
        "description": "New Details about the issue...",
        "subject": "Support Needed right now...",
        "priority": "Low",
        "status": "Open"
      }
    },
    "AddNoteBodySchema": {
      "required": [
        "body"
      ],
      "type": "object",
      "properties": {
        "body": {
          "description": "The content of the note.",
          "type": "string",
          "x-ms-summary": "Content"
        },
        "private": {
          "description": "Indicates if this is a private note (default is true).",
          "type": "boolean",
          "x-ms-summary": "Private"
        }
      },
      "x-ms-test-value": {
        "body": "Hi tom, Still Angry",
        "private": false
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "x-ms-summary": "Error code"
        },
        "message": {
          "type": "string",
          "x-ms-summary": "Error Message"
        }
      }
    }
  },
  "parameters": {
    "ticketId__in_path": {
      "name": "ticketId",
      "in": "path",
      "description": "The ticket Id.",
      "required": true,
      "x-ms-summary": "Ticket Id",
      "x-ms-test-value": "2",
      "x-ms-dynamic-values": {
        "operationId": "GetTickets",
        "value-path": "id",
        "value-title": "subject"
      },
      "type": "integer"
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "type": "basic"
    }
  },
  "x-ms-capabilities": {
    "testConnection": {
      "operationId": "GetAgents"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://freshdesk.com/"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://www.freshworks.com/privacy/"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/freshdesk"
  },
  "basePath": "/apim/freshdesk"
}
