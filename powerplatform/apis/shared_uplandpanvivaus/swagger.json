{
  "swagger": "2.0",
  "info": {
    "title": "Upland Panviva US",
    "description": "Upland Panviva enhances knowledge management for complex, regulated industries by providing AI-powered, real-time guidance for agents and customers. Our expert solutions ensure compliance and competitiveness, tailored for healthcare, banking, utilities, and BPO organizations with large contact centers. From compliance-focused manual management to fully integrated AI guidance, Panviva adapts to your needs. Boost productivity and maintain compliance standards backed by industry expertise.",
    "version": "1.0",
    "contact": {
      "name": "Upland Panviva Support",
      "url": "https://uplandsoftware.com/panviva/support/",
      "email": "support@uplandsoftware.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/uplandpanvivaus",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "x-ms-connector-metadata": {
    "apiDefinitionSource": "swagger",
    "additionalProperties": {
      "service": {
        "name": "Upland Panviva US"
      },
      "publisher": {
        "name": "Upland Software"
      }
    }
  },
  "paths": {
    "/{connectionId}/{instance}/operations/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "Search",
        "description": "Searches documents, folders, and files (external documents) for a term and returns paginated results.",
        "operationId": "OperationsSearch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "query",
            "name": "term",
            "description": "The word or phrase to be searched for. Supports simple keywords, Lucene syntax, and regex patterns.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Search Term"
          },
          {
            "in": "query",
            "name": "pageOffset",
            "description": "The pagination offset to denote the number of initial search results to skip.",
            "type": "integer",
            "default": 0,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Page Offset"
          },
          {
            "in": "query",
            "name": "pageLimit",
            "description": "The number of records to return. Must be an integer between 0 and 1000.",
            "type": "integer",
            "default": 20,
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Page Limit"
          },
          {
            "in": "query",
            "name": "changedWhen",
            "description": "Helper keywords for applying filters for documents updated in range.",
            "type": "string",
            "default": "NotProvided",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Changed When",
            "enum": [
              "NotProvided",
              "today",
              "yesterday",
              "thisWeek",
              "lastWeek",
              "thisMonth",
              "lastMonth",
              "thisYear",
              "lastYear"
            ]
          },
          {
            "in": "query",
            "name": "directParentFolderId",
            "description": "Search only within given Folder. Any documents in the sub folders are not searched. If not provided, resources are searched across all folders.",
            "type": "integer",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Direct Parent Folder ID"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns a collection of search results matching the requested search term, along with pagination information.",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The type of resource returned (e.g., 'document', 'folder', or 'file')."
                      },
                      "id": {
                        "type": "string",
                        "description": "The unique identifier for the resource that can be used to retrieve its details."
                      },
                      "name": {
                        "type": "string",
                        "description": "The title or display name of the resource."
                      },
                      "layout": {
                        "type": "string",
                        "description": "The page layout template used for the resource (e.g., 'topTabsMedium', 'leftTabsMedium')."
                      },
                      "description": {
                        "type": "string",
                        "description": "A brief summary or description of the resource's contents."
                      },
                      "classification": {
                        "type": "string",
                        "description": "The category or classification of the resource (e.g., 'films', 'books')."
                      },
                      "updatedDate": {
                        "type": "string",
                        "description": "The date when the resource was last updated, in ISO 8601 format (YYYY-MM-DD)."
                      },
                      "matchedFields": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "The list of fields in which the search term was found (e.g., 'name', 'content')."
                      },
                      "snippet": {
                        "type": "string",
                        "description": "A short excerpt from the content showing the search term in context, often with highlighting."
                      },
                      "language": {
                        "type": "string",
                        "description": "The language code of the resource (e.g., 'en-AU' for Australian English)."
                      },
                      "links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string",
                              "description": "The URL to access the related resource or perform an operation."
                            },
                            "rel": {
                              "type": "string",
                              "description": "The relationship type of the link to the current resource (e.g., 'document', 'file')."
                            },
                            "type": {
                              "type": "string",
                              "description": "The HTTP method to use when accessing this link (typically 'GET')."
                            }
                          }
                        },
                        "description": "Hypermedia links related to this search result that can be used for further operations."
                      }
                    }
                  },
                  "description": "The list of resources matching the search criteria."
                },
                "total": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The total number of results matching the search criteria across all pages."
                },
                "links": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string",
                        "description": "The URL to access a specific page of search results."
                      },
                      "rel": {
                        "type": "string",
                        "description": "The relationship of this link to the current page (e.g., 'first', 'last', 'next', 'prev')."
                      },
                      "type": {
                        "type": "string",
                        "description": "The HTTP method to use when accessing this link (typically 'GET')."
                      }
                    }
                  },
                  "description": "Pagination links that allow navigation between pages of search results."
                }
              }
            },
            "examples": {
              "application/json": {
                "results": [
                  {
                    "type": "document",
                    "id": "123",
                    "name": "Spiderman",
                    "layout": "topTabsMedium",
                    "description": "The chronicles of Spiderman",
                    "classification": "films",
                    "updatedDate": "2018-05-04",
                    "matchedFields": [
                      "name"
                    ],
                    "snippet": "Spiderman is a super<em>hero</em>",
                    "language": "en-AU",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/documents/123",
                        "rel": "document",
                        "type": "GET"
                      }
                    ]
                  },
                  {
                    "type": "folder",
                    "id": "32",
                    "name": "Marvel Trivia",
                    "description": "All things Marvel",
                    "matchedFields": [
                      "name"
                    ],
                    "snippet": "<em>Marvel</em> Trivia",
                    "language": "en-AU",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/folder/32",
                        "rel": "file",
                        "type": "GET"
                      }
                    ]
                  },
                  {
                    "type": "file",
                    "id": "124",
                    "name": "Spiderman Book",
                    "fileName": "spiderman-1.pdf",
                    "description": "A book detailing the history of Spiderman",
                    "classification": "books",
                    "updatedDate": "2018-05-04",
                    "matchedFields": [
                      "content",
                      "name",
                      "fileName"
                    ],
                    "snippet": "Spiderman is a <em>hero</em> born in New York",
                    "language": "en-AU",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/files/124",
                        "rel": "file",
                        "type": "GET"
                      }
                    ]
                  }
                ],
                "total": 57,
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=0&pageLimit=2",
                    "rel": "first",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=56&pageLimit=2",
                    "rel": "last",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=2&pageLimit=2",
                    "rel": "prev",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/operations/search?term=hero&pageOffset=6&pageLimit=2",
                    "rel": "next",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood due to malformed syntax. Common issues include invalid search terms, missing required parameters, or improperly formatted query parameters. Review your request parameters and try again with the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the document ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#search"
        }
      }
    },
    "/{connectionId}/{instance}/operations/artefact/nls": {
      "get": {
        "tags": [
          "Search",
          "Artefacts"
        ],
        "summary": "Search Artefacts",
        "description": "Returns Digital Orchestrator search results for a given natural language or advanced query. This endpoint allows searching through artefacts using various query methods and filtering options.",
        "operationId": "OperationsArtefactNls",
        "x-ms-summary": "Search Artefacts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "query",
            "name": "simplequery",
            "description": "Natural language query string. For example: 'What action movie stars Peter Parker?'. (Note: Use simplequery OR advancedquery, not both.)",
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Simple Query"
          },
          {
            "in": "query",
            "name": "advancedquery",
            "description": "Query string written in Lucene query syntax. For example: 'films AND \"a story\"'. (Note: Use simplequery OR advancedquery, not both.)",
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Advanced Query"
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Accepts a filter string written in OData expression syntax. Examples: ```category/name eq 'Mortgages'```, ```panvivaDocumentVersion gt '8'```. (Filterable fields include dateCreated, dateModified, dateDeleted, category/name, category/dateCreated, category/dateModified, metaData/keyword/values, metaData/keyword/dataType, title, primaryQuery, isDeleted, timestamp, panvivaDocumentId, panvivaDocumentVersion, id)",
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Filter"
          },
          {
            "in": "query",
            "name": "channel",
            "description": "Return response for a specific channel, instead of the default.",
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Channel"
          },
          {
            "in": "query",
            "name": "pageOffset",
            "description": "The pagination offset to denote the number of initial search results to skip.",
            "type": "integer",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Page Offset"
          },
          {
            "in": "query",
            "name": "pageLimit",
            "description": "The number of records to return. Must be an integer between 0 and 1000.",
            "type": "integer",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Page Limit"
          },
          {
            "in": "query",
            "name": "facet",
            "description": "Accepts a string denoting the field to facet by. Examples: ```facet=metaData/keyword/values```, ```facet=category/name```. (Facetable fields include metaData/keyword/values, category/id, category/name and panvivaDocumentId)",
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Facet String"
          },
          {
            "in": "query",
            "name": "highlightTags",
            "description": "Accepts highlight pre and post tags in [start-tag,end-tag] template. Example : ```<em>,</em>```. (Note : Default highlight tag is ``` *,* ```)",
            "type": "string",
            "x-ms-visibility": "advanced",
            "x-ms-summary": "Highlight Tags"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns a collection of responses matching the requested search term.",
            "schema": {
              "$ref": "#/definitions/GetEnrichedSearchArtefactResponse"
            },
            "examples": {
              "application/json": {
                "facets": [
                  {
                    "field": "metaData/Superheroes/values",
                    "groups": [
                      {
                        "key": "Captain America",
                        "value": 1
                      },
                      {
                        "key": "Captain Marvel",
                        "value": 1
                      }
                    ]
                  },
                  {
                    "field": "metaData/Villains/values",
                    "groups": [
                      {
                        "key": "Thanos",
                        "value": 1
                      }
                    ]
                  }
                ],
                "results": [
                  {
                    "id": "ae18c1ae-dd63-445b-b69a-46d89f8c315c",
                    "content": [
                      {
                        "mediaType": "text/plain",
                        "text": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films. Many of these superheroes you have come to love.",
                        "href": null,
                        "resourceLocation": null
                      }
                    ],
                    "simpleContent": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films. Many of these superheroes you have come to love.",
                    "category": {
                      "name": "Marvel Cinematic Universe",
                      "id": 1,
                      "dateCreated": "2018-09-05T04:12:52.83+00:00",
                      "dateModified": "2018-09-05T04:12:52.83+00:00"
                    },
                    "metaData": {
                      "Superheroes": {
                        "values": [
                          "Captain America",
                          "Captain Marvel"
                        ],
                        "dataType": "string"
                      },
                      "Villains": {
                        "values": [
                          "Thanos"
                        ],
                        "dataType": "string"
                      }
                    },
                    "searchScore": 0.99844,
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/artefacts/12",
                        "rel": "artefact",
                        "type": "GET"
                      }
                    ],
                    "queryVariations": [
                      {
                        "id": 1,
                        "query": "What fictional universe does Captain America belong to?"
                      }
                    ],
                    "primaryQuery": "What is the Marvel Cinematic Universe?",
                    "panvivaDocumentId": 235,
                    "panvivaDocumentVersion": 5,
                    "title": "About Marvel Cinematic Universe",
                    "highlights": {
                      "primaryQuery": "What is the *Marvel* Cinematic Universe?",
                      "title": "About *Marvel* Cinematic Universe"
                    }
                  }
                ],
                "total": 1
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood due to malformed syntax. Common issues include invalid search terms, missing required parameters, or improperly formatted query parameters. Review your request parameters and try again with the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the document ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#search-artefacts"
        }
      }
    },
    "/{connectionId}/{instance}/operations/live/csh": {
      "post": {
        "tags": [
          "Live Activities",
          "Context-Sensitive Help",
          "Search"
        ],
        "summary": "Live CSH",
        "description": "Presents a context-sensitive help (CSH) search result page to a specified user in their Panviva client. This operation allows you to push search results directly to a user's screen.",
        "operationId": "OperationsLiveCsh",
        "x-ms-summary": "Push Context-Sensitive Help Results",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON object containing information required to perform live CSH activity, including target user and query details.",
            "schema": {
              "$ref": "#/definitions/PostLiveCshRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request accepted. The CSH search has been queued for display on the specified user's Panviva client. Note that there is no mechanism to confirm when or if the user actually sees the content.",
            "schema": {
              "$ref": "#/definitions/PostLiveCshResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Check that the username/userId is valid and that the query is properly formatted.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to perform this operation.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the document ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#live-csh"
        }
      }
    },
    "/{connectionId}/{instance}/operations/live/document": {
      "post": {
        "tags": [
          "Live Activities",
          "Documents"
        ],
        "summary": "Live Document",
        "description": "Pushes a specific document or document section directly to a specified user's Panviva client. This allows you to display relevant documentation to users in real-time as they work.",
        "operationId": "OperationsLiveDocument",
        "x-ms-summary": "Push Document to User",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON object containing the user information, document ID, and optional parameters such as section location and client display settings.",
            "schema": {
              "$ref": "#/definitions/PostLiveDocumentRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request accepted. The document has been queued for display on the specified user's Panviva client. There is no mechanism to confirm when or if the user actually views the document.",
            "schema": {
              "$ref": "#/definitions/PostLiveDocumentResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood due to malformed syntax. Common issues include invalid search terms, missing required parameters, or improperly formatted query parameters. Review your request parameters and try again with the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the document ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Container not found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "409": {
            "description": "Conflict - The request specified both location and containerId parameters, which are mutually exclusive, or the containerId doesn't match the document ID.",
            "examples": {
              "application/json": {
                "errorCode": "409",
                "message": "Conflicting parameters provided"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#live-document"
        }
      }
    },
    "/{connectionId}/{instance}/operations/live/search": {
      "post": {
        "tags": [
          "Live Activities",
          "Search"
        ],
        "summary": "Live Search",
        "description": "Present a search result page of the passing query on Panviva client to specified user on Panviva client in real time.",
        "operationId": "OperationsLiveSearch",
        "x-ms-summary": "Push Search Results to User",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON object containing the user information, search query and information required to perform a live activity.",
            "schema": {
              "$ref": "#/definitions/PostLiveSearchRequest"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Request accepted. The search results request has been queued for display on the specified user's Panviva client. There is no mechanism to confirm when or if the user actually views the results.",
            "schema": {
              "$ref": "#/definitions/PostLiveSearchResponse"
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood due to malformed syntax. Common issues include invalid search terms, missing required parameters, or improperly formatted query parameters. Review your request parameters and try again with the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the document ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#live-search"
        }
      }
    },
    "/{connectionId}/{instance}/operations/echo": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Echo",
        "description": "Echo a request to verify connectivity with the Panviva API. This endpoint is useful for testing and debugging purposes.",
        "operationId": "Echo",
        "x-ms-summary": "Echo Request",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested resource."
          },
          "400": {
            "description": "Bad Request. The request could not be understood due to malformed syntax. Review your request parameters and try again with the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#echo"
        }
      }
    },
    "/{connectionId}/{instance}/resources/container/{id}": {
      "get": {
        "tags": [
          "Containers"
        ],
        "summary": "Container",
        "description": "Return a document container using the container ID provided.",
        "operationId": "ResourcesContainerById",
        "x-ms-summary": "Container by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of a document container.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Container ID",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested document container.",
            "schema": {
              "$ref": "#/definitions/GetContainerResponse"
            },
            "examples": {
              "application/json": {
                "id": "343-229-1-2",
                "name": "Captain America: Civil War",
                "body": "<div data-link-id='2' data-db-id='208155'><div class='pv-task-header'>Captain America: Civil War</div><div class='pv-task-details' style='width:100%;'><p class='pv-who' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-menupath' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-shortcut' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-trans' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-screen' style='display:none;' hidden='true'>&nbsp;</p></div></div><p class='pv-paragraph' data-db-id='208156' data-link-id='3'><span><img class='pv-image' data-image-id='738' alt='SupportPoint Image 738' data-width='128' data-height='128' style='width:128px;height:128px;' /></span></p>"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood due to malformed syntax. Review your request parameters and try again with the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the container ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#container"
        }
      }
    },
    "/{connectionId}/{instance}/resources/document/{id}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Document",
        "description": "Return a document using the document ID provided.",
        "operationId": "ResourcesDocumentById",
        "x-ms-summary": "Document by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "A document unique identifier, Document ID. If a document is a translated document, this value represents Internal ID or IID in Panviva API v1.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Document ID",
            "x-ms-visibility": "important"
          },
          {
            "in": "query",
            "name": "version",
            "description": "Request the API to return a particular version of the specified document.",
            "type": "integer",
            "x-ms-summary": "Document Version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested document.",
            "schema": {
              "$ref": "#/definitions/GetDocumentResponse"
            },
            "examples": {
              "application/json": {
                "id": "343",
                "name": "Marvel Cinematic Universe (Films)",
                "description": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films.",
                "version": 229,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "Rank",
                    "value": "1"
                  },
                  {
                    "name": "Effective date",
                    "value": "2018-05-04"
                  }
                ],
                "hidden": false,
                "type": "document",
                "release": 33,
                "released": true,
                "copyright": "Marvel Studios, LLC",
                "classification": "films",
                "status": "Phase Three",
                "percentage": 100,
                "releaseDate": "2017-09-09T04:12:52.83+00:00",
                "layout": "leftTabsMedium",
                "training": {
                  "failureFeedback": "Please review the Marvel documentation in document 343",
                  "forcePageSequence": true,
                  "forceQuestionSequence": true,
                  "passingScore": 10,
                  "successFeedback": "With great power comes great responsibility."
                },
                "keywords": [
                  "Iron Man",
                  "Hulk",
                  "Thor",
                  "Captain America",
                  "Avenger",
                  "Guardians of the Galaxy",
                  "Ant-Man",
                  "Doctor Strange",
                  "Spider-Man",
                  "Black Panter",
                  "Captain Marvel"
                ],
                "cshKeywords": [
                  "Chrome",
                  "MCU"
                ],
                "updatedDate": "2017-09-09T04:12:52.83+00:00",
                "createdDate": "2017-08-09T04:02:46.907+00:00",
                "reusableContent": false,
                "changeNote": "Added in Captain Marvel",
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/document/343/translations",
                    "rel": "translations",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/document/343/containers",
                    "rel": "containers",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood due to malformed syntax. Common issues include invalid id, missing required parameters, or improperly formatted query parameters. Review your request parameters and try again with the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the document ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#document"
        }
      }
    },
    "/{connectionId}/{instance}/resources/artefact/{id}": {
      "get": {
        "tags": [
          "Artefacts"
        ],
        "summary": "Artefact",
        "description": "Return a Digital Orchestrator artefact using the ID provided.",
        "operationId": "ResourcesArtefactById",
        "x-ms-summary": "Artefact by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Format - uuid. The id (ID) of the Digital Orchestrator artefact.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Artefact ID",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation is successful and returns with the requested artefact.",
            "schema": {
              "$ref": "#/definitions/GetEnrichedResponseResponse"
            },
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/document/343?version=229",
                    "rel": "document",
                    "type": "GET"
                  }
                ],
                "title": "About Marvel Cinematic Universe",
                "content": [
                  {
                    "mediaType": "text/plain",
                    "text": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films.",
                    "href": null,
                    "resourceLocation": null
                  },
                  {
                    "mediaType": "image/jpeg",
                    "text": null,
                    "href": "https://terrigen-cdn-dev.marvel.com/content/prod/1x/mi-promo-featured-half-dsk-1140x680.jpg",
                    "resourceLocation": "external"
                  },
                  {
                    "mediaType": "text/plain",
                    "text": "The franchise has been commercially successful and has generally received a positive critical response",
                    "href": null,
                    "resourceLocation": null
                  }
                ],
                "simpleContent": "The Marvel Cinematic Universe (MCU) is an American media franchise and shared universe that is centered on a series of superhero films.\nThe franchise has been commercially successful and has generally received a positive critical response",
                "variations": [
                  {
                    "content": [
                      {
                        "mediaType": "text/plain",
                        "text": "The Marvel Cinematic Universe is a shared universe that is centered on a series of superhero films.",
                        "href": null,
                        "resourceLocation": null
                      }
                    ],
                    "simpleContent": "The Marvel Cinematic Universe is a shared universe that is centered on a series of superhero films.",
                    "channels": [
                      {
                        "id": 0,
                        "name": "Amazon Alexa"
                      }
                    ],
                    "id": 2,
                    "dateCreated": "2018-09-10T04:12:52.83+00:00",
                    "dateModified": "2018-09-10T04:12:52.83+00:00"
                  }
                ],
                "category": {
                  "name": "Marvel Cinematic Universe",
                  "id": 1,
                  "dateCreated": "2018-09-05T04:12:52.83+00:00",
                  "dateModified": "2018-09-05T04:12:52.83+00:00"
                },
                "primaryQuery": "What is the Marvel Cinematic Universe?",
                "queryVariations": [
                  {
                    "id": 12,
                    "query": "What fictional universe does Captain America belong to?"
                  }
                ],
                "panvivaDocumentId": 235,
                "panvivaDocumentVersion": 5,
                "metaData": {
                  "Superheroes": {
                    "values": [
                      "Captain America",
                      "Captain Marvel"
                    ],
                    "dataType": "string"
                  },
                  "Villains": {
                    "values": [
                      "Thanos"
                    ],
                    "dataType": "string"
                  }
                },
                "id": "ae18c1ae-dd63-445b-b69a-46d89f8c315c",
                "dateCreated": "2018-09-09T04:12:52.83+00:00",
                "dateModified": "2018-09-10T04:12:52.83+00:00"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood due to malformed syntax. Common issues include invalid id, missing required parameters, or improperly formatted query parameters. Review your request parameters and try again with the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the document ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#artefact"
        }
      },
      "put": {
        "tags": [
          "Artefacts"
        ],
        "summary": "Publish Artefact",
        "description": "Updates an existing Digital Orchestrator artefact with new content, metadata, or category information. This operation is used to modify artefacts that have already been published.",
        "operationId": "PublishArtefact",
        "x-ms-summary": "Update Published Artefact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The unique identifier (UUID format) of the artefact to update.",
            "required": true,
            "type": "string",
            "x-ms-summary": "Artefact ID",
            "x-ms-visibility": "important"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The updated artefact details including content, metadata, query variations, and category information. You can modify any aspect of the artefact through this request.",
            "schema": {
              "$ref": "#/definitions/PutArtefactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. The artefact was successfully updated with the provided changes. The response includes a status and information about any errors that may have occurred during partial updates.",
            "schema": {
              "$ref": "#/definitions/PutArtefactResponse"
            },
            "examples": {
              "application/json": {
                "hasErrors": true,
                "errors": [
                  "string"
                ],
                "status": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be understood due to malformed syntax. Review your request parameters and try again with the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the artefact ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#publish-artefact"
        }
      }
    },
    "/{connectionId}/{instance}/resources/document/{id}/containers": {
      "get": {
        "tags": [
          "Documents",
          "Containers"
        ],
        "summary": "Document Containers",
        "description": "Retrieves all containers (sections and subsections) within a specified document. Containers represent the hierarchical structure of content within a document.",
        "operationId": "ResourcesDocumentByIdContainers",
        "x-ms-summary": "Document Containers by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal ID (IID) of the Panviva document whose containers you want to retrieve.",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Document ID",
            "x-ms-visibility": "important"
          },
          {
            "in": "query",
            "name": "version",
            "description": "The specific version of the document whose containers you want to retrieve. If omitted, the latest version's containers will be returned.",
            "type": "integer",
            "x-ms-summary": "Document Version",
            "x-ms-visibility": "advanced"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of containers for the specified document. Each container includes its ID, name, and HTML body content if available.",
            "schema": {
              "$ref": "#/definitions/GetDocumentContainersResponse"
            },
            "examples": {
              "application/json": {
                "containers": [
                  {
                    "id": "343-229-0-0",
                    "name": "Phase Three",
                    "body": null
                  },
                  {
                    "id": "343-229-1-2",
                    "name": "Captain America: Civil War",
                    "body": "<div data-link-id='2' data-db-id='208155'><div class='pv-task-header'>Captain America: Civil War</div><div class='pv-task-details' style='width:100%;'><p class='pv-who' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-menupath' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-shortcut' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-trans' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-screen' style='display:none;' hidden='true'>&nbsp;</p></div></div><p class='pv-paragraph' data-db-id='208156' data-link-id='3'><span><img class='pv-image' data-image-id='738' alt='SupportPoint Image 738' data-width='128' data-height='128' style='width:128px;height:128px;' /></span></p>"
                  },
                  {
                    "id": "343-229-3-4",
                    "name": "Doctor Strange",
                    "body": "<div data-link-id='4' data-db-id='208157'><div class='pv-task-header'>Doctor Strange</div><div class='pv-task-details' style='width:100%;'><p class='pv-who' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-menupath' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-shortcut' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-trans' style='display:none;' hidden='true'>&nbsp;</p><p class='pv-screen' style='display:none;' hidden='true'>&nbsp;</p></div></div><p class='pv-paragraph' data-db-id='208158' data-link-id='5'>Mr. Doctor?</p>"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Verify that the document ID is in the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The specified document ID does not exist or you don't have permission to access it.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#document-containers"
        }
      }
    },
    "/{connectionId}/{instance}/resources/document/{id}/containers/relationships": {
      "get": {
        "tags": [
          "Documents",
          "Containers"
        ],
        "summary": "Document Container Relationships",
        "description": "Retrieves the hierarchical structure of a document by returning the parent-child relationships between all containers (sections and subsections) within the document. This helps understand how content is organized.",
        "operationId": "ResourcesDocumentContainersByIdRelationships",
        "x-ms-summary": "Document Container Relationships by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal ID (IID) of the Panviva document whose structure you want to retrieve.",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Document ID",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the hierarchical structure of the document, showing parent-child relationships between all containers. This structure shows which sections contain which subsections.",
            "schema": {
              "$ref": "#/definitions/GetDocumentContainerRelationshipsResponse"
            },
            "examples": {
              "application/json": {
                "relationships": [
                  {
                    "id": "343-229-0-0",
                    "parent": null,
                    "children": [
                      "343-229-1-2",
                      "343-229-3-4"
                    ],
                    "taskFlow": null
                  },
                  {
                    "id": "343-229-1-2",
                    "parent": "343-229-0-0",
                    "children": null,
                    "taskFlow": null
                  },
                  {
                    "id": "343-229-3-4",
                    "parent": "343-229-0-0",
                    "children": null,
                    "taskFlow": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Verify that the document ID is in the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the document ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#document-container-relationships"
        }
      }
    },
    "/{connectionId}/{instance}/resources/document/{id}/translations": {
      "get": {
        "tags": [
          "Documents",
          "Translations"
        ],
        "summary": "Document Translations",
        "description": "Retrieves all available translations of a Panviva document across different languages and locales. This helps access multilingual versions of the same content.",
        "operationId": "ResourcesDocumentByIdTranslations",
        "x-ms-summary": "Document Translations by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal ID (IID) of the original Panviva document for which you want to retrieve translations.",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Document ID",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all available translations of the specified document. The response includes detailed information about each translated version including its ID, language code, metadata, and links to related resources.",
            "schema": {
              "$ref": "#/definitions/GetDocumentTranslationsResponse"
            },
            "examples": {
              "application/json": {
                "translations": [
                  {
                    "id": "568",
                    "name": "Univers cinÃ©matographique Marvel. (Films)",
                    "description": "Marvel Cinematic Universe (MCU) est une franchise de médias américains et un univers partagé centré sur une série de films de super héros.",
                    "version": 52,
                    "language": "fr-FR",
                    "tags": [
                      {
                        "name": "Rang",
                        "value": "2"
                      },
                      {
                        "name": "Date effective",
                        "value": "2018-05-04"
                      }
                    ],
                    "hidden": false,
                    "type": "document",
                    "release": 23,
                    "released": true,
                    "copyright": "Marvel Studios, LLC",
                    "classification": "films",
                    "status": "Phase Trois",
                    "percentage": 100,
                    "releaseDate": "2017-09-09T04:12:52.83+00:00",
                    "layout": "leftTabsMedium",
                    "training": {
                      "failureFeedback": "Veuillez consulter la documentation Marvel dans le document 343",
                      "forcePageSequence": true,
                      "forceQuestionSequence": true,
                      "passingScore": 10,
                      "successFeedback": "Un grand pouvoir implique de grandes responsabilités"
                    },
                    "keywords": [
                      "Iron Man",
                      "Hulk",
                      "Thor",
                      "Captain America",
                      "Avenger",
                      "Guardians of the Galaxy",
                      "Ant-Man",
                      "Doctor Strange",
                      "Spider-Man",
                      "Black Panter",
                      "Captain Marvel"
                    ],
                    "cshKeywords": [
                      "Chrome",
                      "MCU"
                    ],
                    "updatedDate": "2017-09-09T04:12:52.83+00:00",
                    "createdDate": "2017-08-09T04:02:46.907+00:00",
                    "reusableContent": false,
                    "changeNote": "Added in Captain Marvel",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/document/568/translations",
                        "rel": "translations",
                        "type": "GET"
                      }
                    ]
                  }
                ],
                "origin": "343"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Verify that the document ID is in the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The specified document ID does not exist, has no translations, or you don't have permission to access it.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#document-translations"
        }
      }
    },
    "/{connectionId}/{instance}/resources/file/{id}": {
      "get": {
        "tags": [
          "Files",
          "External Documents"
        ],
        "summary": "File",
        "description": "Retrieves an external document (such as a PDF, Word document, or other file type) that has been uploaded to Panviva. The file content is returned as a base64-encoded string.",
        "operationId": "ResourcesFileById",
        "x-ms-summary": "External Document by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal ID (IID) of the Panviva file (external document) to retrieve.",
            "required": true,
            "type": "integer",
            "x-ms-summary": "File ID",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the external document. The response includes metadata about the file (name, description, version, etc.) and the base64-encoded content of the file itself.",
            "schema": {
              "$ref": "#/definitions/GetFileResponse"
            },
            "examples": {
              "application/json": {
                "id": "file",
                "name": "A to Z in Marvel Comic Series",
                "description": "Contains details of all featured series.",
                "version": 2,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "custom-category",
                    "value": "MVU-10"
                  }
                ],
                "hidden": false,
                "type": "file",
                "content": "JVBERi0xLjQKJdPr6eEKMSAwIG9iago8PC9DcmVhdG9yIChNb3ppbGxhLzUuMCBcKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NFwpIEFwcGxlV2ViS2l0LzUzNy4zNiBcKEtIVE1MLCBsaWtlIEdlY2tvXCkgQ2hyb21lLzcxLjAuMzU3OC45OCBTYWZhcmkvNTM3LjM2KQovUHJvZHVjZXIgKFNraWEvUERGIG03MSkKL0NyZWF0aW9uRGF0ZSAoRDoyMDE5MDEzMDA1NTM0NyswMCcwMCcpCi9Nb2REYXRlIChEOjIwMTkwMTMwMDU1MzQ3KzAwJzAw  ...................................... CBuIAowMDAwMzgwMzI0IDAwMDAwIG4gCjAwMDAzODA1NDQgMDAwMDAgbiAKMDAwMDM4MDc2NyAwMDAwMCBuIAowMDAwMzgwOTg2IDAwMDAwIG4gCjAwMDAzODEyMDYgMDAwMDAgbiAKdHJhaWxlcgo8PC9TaXplIDEwNwovUm9vdCAxOSAwIFIKL0luZm8gMSAwIFI+PgpzdGFydHhyZWYKMzgxNDIzCiUlRU9G",
                "fileName": "A to Z in Marvel Comic Series.pdf",
                "release": 2,
                "released": true,
                "copyright": "public domain",
                "classification": "general",
                "status": "released",
                "percentage": 100,
                "releaseDate": "2019-01-30T17:00:53.563+00:00",
                "keywords": [
                  "general info",
                  "series"
                ],
                "cshKeywords": [
                  "series"
                ],
                "changeNote": "Uploaded linked document.",
                "updatedDate": "2019-01-30T17:00:53.563+00:00",
                "createdDate": "2019-01-30T16:54:51.637+00:00"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Verify that the file ID is in the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The specified file ID does not exist or you don't have permission to access it.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#file"
        }
      }
    },
    "/{connectionId}/{instance}/resources/folder/{id}": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Folder",
        "description": "Retrieves information about a specific Panviva folder, including its metadata and links to its direct children. Folders are used to organize documents and files in a hierarchical structure.",
        "operationId": "ResourcesFolderById",
        "x-ms-summary": "Folder Information by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal ID (IID) of the Panviva folder to retrieve.",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Folder ID",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the folder information. The response includes metadata about the folder and links to access its children and translations.",
            "schema": {
              "$ref": "#/definitions/GetFolderResponse"
            },
            "examples": {
              "application/json": {
                "id": "342",
                "name": "the films",
                "description": "Films that make a grown man squeal by the memories of his childhood.",
                "version": 10,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "Rank",
                    "value": "1"
                  },
                  {
                    "name": "Effective Date",
                    "value": "2015-02-15"
                  }
                ],
                "hidden": false,
                "type": "folder",
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/342/children",
                    "rel": "children",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/342/translations",
                    "rel": "translations",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Verify that the folder ID is in the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The specified folder ID does not exist or you don't have permission to access it.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#folder"
        }
      }
    },
    "/{connectionId}/{instance}/resources/folder/{id}/children": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Folder Children",
        "description": "Retrieves all immediate children (direct contents) of a specific Panviva folder. This includes subfolders, documents, and files (external documents) that are directly contained within the specified folder, but does not include items in nested subfolders.",
        "operationId": "ResourcesFolderByIdChildren",
        "x-ms-summary": "Get Folder Contents by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal ID (IID) of the Panviva folder whose contents you want to retrieve.",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Folder ID",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the direct contents of the specified folder. The response includes a list of child items, each with its own metadata such as ID, name, description, and type (folder, document, or file).",
            "schema": {
              "$ref": "#/definitions/GetFolderChildrenResponse"
            },
            "examples": {
              "application/json": {
                "children": [
                  {
                    "id": "84374",
                    "name": "Infinity stones",
                    "description": "All information relating to Marvel's infinity stones.",
                    "version": 1,
                    "language": "en-AU",
                    "tags": [
                      {
                        "name": "Rank",
                        "value": "1"
                      },
                      {
                        "name": "Effective Date",
                        "value": "2015-02-15"
                      }
                    ],
                    "hidden": true,
                    "type": "folder",
                    "links": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Verify that the folder ID is in the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The specified folder ID does not exist, the folder is empty, or you don't have permission to access it.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#folder-children"
        }
      }
    },
    "/{connectionId}/{instance}/resources/folder/{id}/translations": {
      "get": {
        "tags": [
          "Folders",
          "Translations"
        ],
        "summary": "Folder Translations",
        "description": "Retrieves all available translations of a specific Panviva folder across different languages and locales. This includes metadata for each translated version of the folder and links to access their respective children.",
        "operationId": "ResourcesFolderByIdTranslations",
        "x-ms-summary": "Get Folder Translations by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The internal ID (IID) of the original Panviva folder for which you want to retrieve translations.",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Folder ID",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all available translations of the specified folder. The response includes a list of translated folders, each with its own metadata and links to access its children and additional translations.",
            "schema": {
              "$ref": "#/definitions/GetFolderTranslationsResponse"
            },
            "examples": {
              "application/json": {
                "translations": [
                  {
                    "id": "84374",
                    "name": "die Filme",
                    "description": "Filme, die einen erwachsenen Mann durch die Erinnerungen an seine Kindheit zum Quietschen bringen.",
                    "version": 1,
                    "language": "de-DE",
                    "tags": [
                      {
                        "name": "Rank",
                        "value": "1"
                      },
                      {
                        "name": "Effective Date",
                        "value": "2015-02-15"
                      }
                    ],
                    "hidden": false,
                    "type": "folder",
                    "links": [
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/translations",
                        "rel": "translations",
                        "type": "GET"
                      },
                      {
                        "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/children",
                        "rel": "children",
                        "type": "GET"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Verify that the folder ID is in the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The specified folder ID does not exist, has no translations, or you don't have permission to access it.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#folder-translations"
        }
      }
    },
    "/{connectionId}/{instance}/resources/folder/root": {
      "get": {
        "tags": [
          "Folders"
        ],
        "summary": "Folder Root",
        "description": "Retrieves the top-level home folder in Panviva, which serves as the starting point for navigating the entire content hierarchy. This root folder contains links to its direct children, which can be accessed using the Get Folder Children endpoint to traverse the folder structure.",
        "operationId": "ResourcesFolderRoot",
        "x-ms-summary": "Get Root Folder",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the root folder information. The response includes metadata about the root folder and links to access its direct children and translations. This serves as the entry point for browsing the entire content structure.",
            "schema": {
              "$ref": "#/definitions/GetFolderRootResponse"
            },
            "examples": {
              "application/json": {
                "id": "1",
                "name": "Home",
                "description": "The Home folder of Panviva",
                "version": 8,
                "language": "en-AU",
                "tags": [
                  {
                    "name": "Rank",
                    "value": "1"
                  },
                  {
                    "name": "Effective Date",
                    "value": "2015-02-15"
                  }
                ],
                "hidden": false,
                "type": "folder",
                "links": [
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/translations",
                    "rel": "translations",
                    "type": "GET"
                  },
                  {
                    "href": "https://dev.panviva.com/v3/marvel/resources/folder/84374/children",
                    "rel": "children",
                    "type": "GET"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Verify that the instance name is correct.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#folder-root"
        }
      }
    },
    "/{connectionId}/{instance}/resources/image/{id}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Image",
        "description": "Retrieves a specific image stored in Panviva. The image data is returned as a base64-encoded string which can be decoded and displayed in applications or saved as an image file.",
        "operationId": "ResourcesImageById",
        "x-ms-summary": "Get Image by ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The unique identifier of the Panviva image to retrieve.",
            "required": true,
            "type": "integer",
            "x-ms-summary": "Image ID",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the image. The response includes metadata about the image (name, dimensions, content type) and the image content as a base64-encoded string that can be converted to binary data for display or storage.",
            "schema": {
              "$ref": "#/definitions/GetImageResponse"
            },
            "examples": {
              "application/json": {
                "id": "627",
                "name": "avengers-marvel-marvel-comics",
                "width": 128,
                "height": 128,
                "size": 12311,
                "contentType": "image/png",
                "content": "iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAIAAABMXPacAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAC+sSURBVHhe7Xz3nxRl1u/90+7n3sh/tkrt4vFHyBAXgASfwuuzLg0LCJTeB7wp3ccA/yRs8O8I82DPvwjswME71psv ...................................... Y/zniEzcr3ZXrg2s9fxSz495H+/l9MgF9ZMtUoAbnc5Pev+qvCDq+EQ1OTAJik5xC+bXoE+LOH9tEc+QQwvIVhyxqce6crjvCNWPVz2zkCmmN8VnAEp+KNgEtRpuAFqNNQIvRJqDFaBPQYrQJaDHaBLQYbQJajDYBLUabgBajTUCL0SagxWgT0GK0CWgx2gS0GG0CWow2AS1Gm4AWo01Ai9EmoMVoE9BitAloMdoEtBhtAlqMNgEtRpuAFqNNQIvRJqDFaBPQYrQJaCkk6f8DK/JmX1NVAtQAAAAASUVORK5CYII="
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Verify that the image ID is in the correct format.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The specified image ID does not exist or you don't have permission to access it.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#image"
        }
      }
    },
    "/{connectionId}/{instance}/resources/artefactcategory": {
      "get": {
        "tags": [
          "Artefacts"
        ],
        "summary": "Get Artefact Category",
        "description": "Retrieves a list of all available categories for classifying Digital Orchestrator artefacts. These categories help organize artefacts and can be used for filtering and navigation.",
        "operationId": "ResourcesArtefactCategoriesGet",
        "x-ms-summary": "Get Artefact Categories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of artefact categories. The response includes the ID and name of each available category that can be used when creating or updating artefacts.",
            "schema": {
              "$ref": "#/definitions/GetArtefactCategoriesResponse"
            },
            "examples": {
              "application/json": {
                "categories": [
                  {
                    "id": 1,
                    "categoryName": "Marvel Cinematic Universe"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters. Verify that the instance name is correct.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. No artefact categories exist in the specified instance, or you don't have permission to access them.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#get-artefact-category"
        }
      },
      "post": {
        "tags": [
          "Artefacts"
        ],
        "summary": "Create Artefact Category",
        "description": "Creates a new category for classifying Digital Orchestrator artefacts. Categories help organize artefacts by topic, department, or any other classification system relevant to your organization.",
        "operationId": "ResourcesArtefactCategoryPost",
        "x-ms-summary": "Create Artefact Category",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "body",
            "name": "body",
            "description": "JSON object containing the new category name. The name should be unique and descriptive of the content that will be classified under this category.",
            "schema": {
              "$ref": "#/definitions/PostArtefactCategoryRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully created a new artefact category. The response includes the system-assigned ID and the name of the newly created category. This ID can be used when creating or updating artefacts to assign them to this category.",
            "schema": {
              "$ref": "#/definitions/PostArtefactCategoryResponse"
            },
            "examples": {
              "application/json": {
                "categoryId": 1,
                "categoryName": "Marvel Cinematic Universe"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters or request format. Common issues include missing category name, invalid format, or attempting to create a duplicate category name.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#create-artefact-category"
        }
      }
    },
    "/{connectionId}/{instance}/resources/artefact": {
      "post": {
        "tags": [
          "Artefacts"
        ],
        "summary": "Create Artefact",
        "description": "Creates a new Digital Orchestrator artefact with content, metadata, and category information. Artefacts are reusable content pieces that can be delivered through various channels within Panviva.",
        "operationId": "ResourcesCreateArtefact",
        "x-ms-summary": "Create Artefact",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "in": "path",
            "name": "instance",
            "description": "The instance name as shown on the Panviva Developer Portal.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "x-ms-summary": "Instance Name"
          },
          {
            "in": "query",
            "name": "isDraft",
            "description": "Indicates whether to save the artefact as a draft (true) or publish it immediately (false). Draft artefacts are not visible to end users until published.",
            "type": "boolean",
            "default": false,
            "x-ms-summary": "Save as Draft",
            "x-ms-visibility": "important"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The artefact content and metadata, including title, content sections, category assignment, query variations, and additional metadata fields.",
            "schema": {
              "$ref": "#/definitions/PostArtefactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created the artefact. The response includes a unique identifier for the new artefact and status information.",
            "schema": {
              "$ref": "#/definitions/PostArtefactResponse"
            },
            "examples": {
              "application/json": {
                "hasErrors": true,
                "errors": [
                  "string"
                ],
                "responseId": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request. The request could not be processed due to invalid parameters or malformed request body. Check that all required fields are provided and formatted correctly.",
            "examples": {
              "application/json": {
                "errorCode": "400",
                "message": "Bad Request"
              }
            }
          },
          "403": {
            "description": "Forbidden. You have exceeded your API call volume quota or lack permission to access this resource. Wait until your quota resets or contact Panviva Support to increase your quota limits.",
            "examples": {
              "application/json": {
                "errorCode": "403",
                "message": "Out of call volume quota"
              }
            }
          },
          "404": {
            "description": "Not Found. The requested resource does not exist or you don't have permission to access it. Verify that the document ID, instance name, or other resource identifiers are correct.",
            "examples": {
              "application/json": {
                "errorCode": "404",
                "message": "Not Found"
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. The HTTP method used in your request (GET, POST, etc.) is not supported for this endpoint. Verify that you're using the correct HTTP method as specified in the API documentation.",
            "examples": {
              "application/json": {
                "errorCode": "405",
                "message": "Method Not Allowed"
              }
            }
          },
          "406": {
            "description": "Not Acceptable. The server cannot produce a response matching the content types specified in your Accept header. Ensure your request includes either 'Accept: application/json' or no Accept header at all.",
            "examples": {
              "application/json": {
                "errorCode": "406",
                "message": "Not Acceptable"
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. The request body format is not supported by this endpoint. Check your Content-Type header and ensure it's set to 'application/json'.",
            "examples": {
              "application/json": {
                "errorCode": "415",
                "message": "Unsupported Media Type"
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. Your request was syntactically correct but contained semantic errors that prevented processing. Check the error message for specific details about what needs to be corrected.",
            "examples": {
              "application/json": {
                "errorCode": "422",
                "message": "Unprocessable Entity"
              }
            }
          },
          "429": {
            "description": "Too Many Requests. You have exceeded the rate limit for API calls. Please reduce your request frequency and try again later. If you consistently hit rate limits, try optimizing your integration or contacting Panviva Support about increased limits.",
            "examples": {
              "application/json": {
                "errorCode": "429",
                "message": "Too Many Requests"
              }
            }
          },
          "503": {
            "description": "Service Unavailable. The Panviva API is temporarily unavailable, typically due to maintenance or system issues. Wait a few minutes and retry your request. If the problem persists, check the Upland Panviva status page or contact Panviva Support.",
            "examples": {
              "application/json": {
                "errorCode": "503",
                "message": "Service Unavailable"
              }
            }
          }
        },
        "x-ms-visibility": "important",
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/uplandpanvivaus/#create-artefact"
        }
      }
    }
  },
  "definitions": {
    "ArtefactCategory": {
      "type": "object",
      "description": "A category in the Panviva system, used for classifying artefacts.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier for the artefact category assigned by the system."
        },
        "categoryName": {
          "type": "string",
          "description": "The display name of the category used for classifying artefacts."
        }
      },
      "additionalProperties": false
    },
    "ArtefactSection": {
      "type": "object",
      "description": "An array of content sections that make up the artefact.",
      "properties": {
        "mediaType": {
          "type": "string",
          "description": "The MIME type of the content in this section (e.g., text/plain, image/jpeg)."
        },
        "text": {
          "type": "string",
          "description": "The text content for this section, if applicable."
        },
        "source": {
          "type": "string",
          "description": "The source reference for this content if it comes from external material."
        },
        "resourceLocation": {
          "type": "string",
          "description": "Indicates whether the resource is stored internally or externally (values: internal, external, null)."
        }
      },
      "additionalProperties": false
    },
    "Category": {
      "type": "object",
      "description": "A category in the Panviva system, used for classifying artefacts.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier for the category."
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the category was created."
        },
        "dateModified": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the category was last modified."
        },
        "name": {
          "type": "string",
          "description": "The display name of the category."
        }
      },
      "additionalProperties": false
    },
    "CategoryModel": {
      "type": "object",
      "description": "The category to which this artefact belongs.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier of the category to associate with the artefact."
        }
      },
      "additionalProperties": false
    },
    "Channel": {
      "type": "object",
      "description": "A list of channels through which this variation can be delivered.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier for the channel."
        },
        "name": {
          "type": "string",
          "description": "The name of the channel for content delivery."
        }
      },
      "additionalProperties": false
    },
    "ChannelViewModel": {
      "type": "object",
      "description": "A list of channels through which this variation can be delivered.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier for the channel."
        },
        "name": {
          "type": "string",
          "description": "The name of the channel for content delivery."
        }
      },
      "additionalProperties": false
    },
    "Container": {
      "type": "object",
      "description": "A container in the Panviva system, which can hold content, metadata, and links to other resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the container, typically in the format 'document-version-section-subsection'."
        },
        "name": {
          "type": "string",
          "description": "The display name or title of the container."
        },
        "body": {
          "type": "string",
          "description": "The HTML content of the container, representing the actual content to be displayed."
        }
      },
      "additionalProperties": false
    },
    "ContainerRelationship": {
      "type": "object",
      "description": "A relationship between containers, indicating the hierarchy and structure of content within Panviva.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the container in this relationship."
        },
        "parent": {
          "type": "string",
          "description": "The identifier of the parent container, or null if this is a top-level container."
        },
        "children": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A list of container identifiers that are direct children of this container."
          }
        },
        "taskFlow": {
          "type": "string",
          "description": "The task flow identifier associated with this container relationship, if applicable."
        }
      },
      "additionalProperties": false
    },
    "Document": {
      "type": "object",
      "description": "A document in the Panviva system, which can contain content, metadata, and links to other resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the document."
        },
        "name": {
          "type": "string",
          "description": "The title or name of the document."
        },
        "description": {
          "type": "string",
          "description": "A brief summary describing the document's contents."
        },
        "version": {
          "type": "integer",
          "description": "The version number of the document."
        },
        "language": {
          "type": "string",
          "description": "The language code for the document (e.g., en-AU for Australian English)."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean",
          "description": "Indicates whether the document is hidden from standard views."
        },
        "source": {
          "type": "string",
          "description": "The source or origin of the document."
        },
        "type": {
          "type": "string",
          "description": "The type of resource (always 'document' for Document objects)."
        },
        "release": {
          "type": "integer",
          "description": "The release number of the document."
        },
        "released": {
          "type": "boolean",
          "description": "Indicates whether the document has been released/published."
        },
        "copyright": {
          "type": "string",
          "description": "Copyright information for the document."
        },
        "classification": {
          "type": "string",
          "description": "The document's classification category (e.g., 'films')."
        },
        "status": {
          "type": "string",
          "description": "The current status of the document (e.g., 'Phase Three')."
        },
        "percentage": {
          "type": "integer",
          "description": "The completion percentage of the document, typically 100 for fully completed documents."
        },
        "releaseDate": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the document was released."
        },
        "layout": {
          "type": "string",
          "description": "The page layout template used for the document (e.g., 'leftTabsMedium')."
        },
        "training": {
          "$ref": "#/definitions/Training"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Keywords associated with the document for standard search."
        },
        "cshKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Keywords associated with the document for context-sensitive help (CSH)."
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the document was last updated."
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the document was created."
        },
        "reusableContent": {
          "type": "boolean",
          "description": "Indicates whether the document contains reusable content blocks."
        },
        "changeNote": {
          "type": "string",
          "description": "Notes describing the changes made in the latest version."
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "EnrichedResponseVariation": {
      "type": "object",
      "description": "A variation of the artefact that can be delivered through different channels.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier for the variation."
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the variation was created."
        },
        "dateModified": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the variation was last modified."
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "simpleContent": {
          "type": "string",
          "description": "A simplified version of the content, typically plain text."
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Channel"
          }
        }
      },
      "additionalProperties": false
    },
    "EnrichedSearchResult": {
      "type": "object",
      "description": "An enriched search result returned from the Panviva API, containing detailed information about the artefact.",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string",
          "description": "The unique identifier for the enriched search result."
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "simpleContent": {
          "type": "string",
          "description": "A simplified version of the content, typically plain text."
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetaDataValueDetails"
          }
        },
        "searchScore": {
          "type": "number",
          "description": "The relevance score of the search result, indicating how well it matches the search query."
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "queryVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryVariation"
          }
        },
        "primaryQuery": {
          "type": "string",
          "description": "The primary search query that was used to retrieve this result."
        },
        "panvivaDocumentId": {
          "type": "integer",
          "description": "The unique identifier of the Panviva document associated with this result."
        },
        "panvivaDocumentVersion": {
          "type": "integer",
          "description": "The version number of the Panviva document associated with this result."
        },
        "title": {
          "type": "string",
          "description": "The title of the enriched search result."
        },
        "highlights": {
          "$ref": "#/definitions/Highlights"
        }
      },
      "additionalProperties": false
    },
    "Facet": {
      "type": "object",
      "description": "A facet used for filtering search results based on specific criteria.",
      "properties": {
        "field": {
          "type": "string",
          "description": "The name of the field used for faceting."
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StringInt64NullableKeyValuePair"
          }
        }
      },
      "additionalProperties": false
    },
    "Folder": {
      "type": "object",
      "description": "A folder in the Panviva system, used for organizing documents and artefacts.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the folder."
        },
        "name": {
          "type": "string",
          "description": "The display name of the folder."
        },
        "description": {
          "type": "string",
          "description": "A brief summary describing the folder's contents."
        },
        "version": {
          "type": "integer",
          "description": "The version number of the folder."
        },
        "language": {
          "type": "string",
          "description": "The language code for the folder (e.g., en-AU for Australian English)."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean",
          "description": "Indicates whether the folder is hidden from search views."
        },
        "source": {
          "type": "string",
          "description": "The source or origin of the folder."
        },
        "type": {
          "type": "string",
          "description": "The type of resource (always 'folder' for Folder objects)."
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      }
    },
    "GetArtefactCategoriesResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing artefact category data.",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtefactCategory"
          }
        }
      },
      "additionalProperties": false
    },
    "GetContainerResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing container data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the container."
        },
        "name": {
          "type": "string",
          "description": "The display name of the container."
        },
        "body": {
          "type": "string",
          "description": "The HTML content of the container."
        }
      },
      "additionalProperties": false
    },
    "GetDocumentContainerRelationshipsResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing document container relationships.",
      "properties": {
        "relationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerRelationship"
          }
        }
      },
      "additionalProperties": false
    },
    "GetDocumentContainersResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing document container data.",
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          }
        }
      },
      "additionalProperties": false
    },
    "GetDocumentResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing document data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the document."
        },
        "name": {
          "type": "string",
          "description": "The title or name of the document."
        },
        "description": {
          "type": "string",
          "description": "A brief summary describing the document's contents."
        },
        "version": {
          "type": "integer",
          "description": "The version number of the document."
        },
        "language": {
          "type": "string",
          "description": "The language code for the document (e.g., en-AU for Australian English)."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean",
          "description": "Indicates whether the document is hidden from search."
        },
        "source": {
          "type": "string",
          "description": "The source or origin of the document."
        },
        "type": {
          "type": "string",
          "description": "The type of resource (always 'document' for Document objects)."
        },
        "release": {
          "type": "integer",
          "description": "The release number of the document."
        },
        "released": {
          "type": "boolean",
          "description": "Indicates whether the document has been released/published."
        },
        "copyright": {
          "type": "string",
          "description": "Copyright information for the document."
        },
        "classification": {
          "type": "string",
          "description": "The document's classification category (e.g., 'films')."
        },
        "status": {
          "type": "string",
          "description": "The current status of the document (e.g., 'Phase Three')."
        },
        "percentage": {
          "type": "integer"
        },
        "releaseDate": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the document was released."
        },
        "layout": {
          "type": "string",
          "description": "The page layout template used for the document (e.g., 'leftTabsMedium')."
        },
        "training": {
          "$ref": "#/definitions/Training"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Keywords associated with the document for standard search."
          }
        },
        "cshKeywords": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Keywords associated with the document for context-sensitive help (CSH)."
          }
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the document was last updated."
        },
        "createdDate": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the document was created."
        },
        "reusableContent": {
          "type": "boolean",
          "description": "Indicates whether the document contains reusable content blocks."
        },
        "changeNote": {
          "type": "string",
          "description": "Notes describing the changes made in the latest version."
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "GetDocumentTranslationsResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing document translation data.",
      "properties": {
        "translations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Document"
          }
        },
        "origin": {
          "type": "string",
          "description": "The origin of the translation, typically the ID of the original document."
        }
      },
      "additionalProperties": false
    },
    "GetEnrichedResponseResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing enriched response data.",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        },
        "title": {
          "type": "string",
          "description": "The title of the enriched response."
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "simpleContent": {
          "type": "string",
          "description": "A simplified version of the content, typically plain text."
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnrichedResponseVariation"
          }
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "primaryQuery": {
          "type": "string",
          "description": "The primary search query that was used to retrieve this response."
        },
        "queryVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryVariation"
          }
        },
        "panvivaDocumentId": {
          "type": "integer",
          "description": "The unique identifier of the Panviva document associated with this response."
        },
        "panvivaDocumentVersion": {
          "type": "integer",
          "description": "The version number of the Panviva document associated with this response."
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetaDataValueDetails"
          }
        },
        "id": {
          "format": "uuid",
          "type": "string",
          "description": "The unique identifier for the enriched response."
        },
        "dateCreated": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the enriched response was created."
        },
        "dateModified": {
          "format": "date-time",
          "type": "string",
          "description": "The date and time when the enriched response was last modified."
        }
      },
      "additionalProperties": false
    },
    "GetEnrichedSearchArtefactResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing enriched search artefact data.",
      "properties": {
        "facets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Facet"
          }
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnrichedSearchResult"
          }
        },
        "total": {
          "type": "integer",
          "description": "The total number of search results found."
        }
      },
      "additionalProperties": false
    },
    "GetFileResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing file data.",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean"
        },
        "source": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "release": {
          "type": "integer"
        },
        "released": {
          "type": "boolean"
        },
        "copyright": {
          "type": "string"
        },
        "classification": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "percentage": {
          "type": "integer"
        },
        "releaseDate": {
          "format": "date-time",
          "type": "string"
        },
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cshKeywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "changeNote": {
          "type": "string"
        },
        "updatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "createdDate": {
          "format": "date-time",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GetFolderChildrenResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing folder children data.",
      "properties": {
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Resource"
          }
        }
      },
      "additionalProperties": false
    },
    "GetFolderResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing folder data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the folder."
        },
        "name": {
          "type": "string",
          "description": "The display name of the folder."
        },
        "description": {
          "type": "string",
          "description": "A brief summary describing the folder's contents."
        },
        "version": {
          "type": "integer",
          "description": "The version number of the folder."
        },
        "language": {
          "type": "string",
          "description": "The language code for the folder (e.g., en-AU for Australian English)."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean",
          "description": "Indicates whether the folder is hidden from search views."
        },
        "source": {
          "type": "string",
          "description": "The source or origin of the folder."
        },
        "type": {
          "type": "string",
          "description": "The type of resource (always 'folder' for Folder objects)."
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "GetFolderRootResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing root folder data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the root folder."
        },
        "name": {
          "type": "string",
          "description": "The display name of the root folder."
        },
        "description": {
          "type": "string",
          "description": "A brief summary describing the root folder's contents."
        },
        "version": {
          "type": "integer",
          "description": "The version number of the root folder."
        },
        "language": {
          "type": "string",
          "description": "The language code for the root folder (e.g., en-AU for Australian English)."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean",
          "description": "Indicates whether the root folder is hidden from search views."
        },
        "source": {
          "type": "string",
          "description": "The source or origin of the root folder."
        },
        "type": {
          "type": "string",
          "description": "The type of resource (always 'folder' for Folder objects)."
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "GetFolderTranslationsResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing folder translation data.",
      "properties": {
        "translations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Folder"
          }
        }
      },
      "additionalProperties": false
    },
    "GetImageResponse": {
      "type": "object",
      "description": "The response from the Panviva API containing image data.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the image."
        },
        "name": {
          "type": "string",
          "description": "The title or name of the image."
        },
        "width": {
          "type": "integer",
          "description": "The width of the image in pixels."
        },
        "height": {
          "type": "integer",
          "description": "The height of the image in pixels."
        },
        "size": {
          "type": "integer",
          "description": "The size of the image file in bytes."
        },
        "contentType": {
          "type": "string",
          "description": "The MIME type of the image (e.g., image/jpeg, image/png)."
        },
        "content": {
          "type": "string",
          "description": "The base64-encoded content of the image."
        }
      },
      "additionalProperties": false
    },
    "GetSearchResponse": {
      "type": "object",
      "description": "The response from the Panviva API after performing a search.",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceSearchResult"
          }
        },
        "total": {
          "type": "integer",
          "description": "The total number of search results found."
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "Highlights": {
      "type": "object",
      "description": "Highlights of the search result, typically used to indicate matched terms or phrases.",
      "properties": {
        "primaryQuery": {
          "type": "string",
          "description": "The primary search query that was used to retrieve this result."
        },
        "title": {
          "type": "string",
          "description": "The title of the enriched search result."
        }
      },
      "additionalProperties": false
    },
    "Link": {
      "type": "object",
      "description": "Hypermedia links related to this resource.",
      "properties": {
        "href": {
          "type": "string",
          "description": "The URL to access the related resource or perform an operation."
        },
        "rel": {
          "type": "string",
          "description": "The relationship type of the link to the current resource (e.g., 'document', 'file')."
        },
        "type": {
          "type": "string",
          "description": "The HTTP method to use when accessing this link (typically 'GET')."
        }
      },
      "additionalProperties": false
    },
    "MetaDataValueDetails": {
      "type": "object",
      "description": "Custom metadata fields and values for this artefact.",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of values associated with this metadata field."
        },
        "dataType": {
          "type": "string",
          "description": "The data type of the metadata values (e.g., 'string', 'number', 'date')."
        }
      },
      "additionalProperties": false
    },
    "PostArtefactCategoryRequest": {
      "type": "object",
      "x-ms-visibility": "important",
      "x-ms-summary": "Artefact Category Name",
      "description": "The request body for creating a new artefact category.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the artefact category to be created."
        }
      },
      "additionalProperties": false,
      "example": {
        "name": "string"
      }
    },
    "PostArtefactCategoryResponse": {
      "type": "object",
      "description": "The response from the Panviva API after creating a new artefact category.",
      "properties": {
        "categoryId": {
          "type": "integer",
          "description": "The unique identifier of the newly created artefact category."
        },
        "categoryName": {
          "type": "string",
          "description": "The display name of the newly created artefact category."
        }
      },
      "additionalProperties": false
    },
    "PostArtefactRequest": {
      "type": "object",
      "x-ms-summary": "Artefact Content and Metadata",
      "x-ms-visibility": "important",
      "description": "The request body for creating a new artefact.",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title of the artefact to be created."
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtefactSection"
          }
        },
        "variations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseVariationModel"
          }
        },
        "category": {
          "$ref": "#/definitions/CategoryModel"
        },
        "primaryQuery": {
          "type": "string",
          "description": "The main query text that this artefact is designed to answer."
        },
        "queryVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryVariationModel"
          }
        },
        "panvivaDocumentId": {
          "type": "integer",
          "description": "The ID of a related Panviva document, if this artefact is linked to one."
        },
        "panvivaDocumentVersion": {
          "type": "integer",
          "description": "The version of the related Panviva document."
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetaDataValueDetails"
          }
        }
      },
      "additionalProperties": false,
      "example": {
        "title": "string",
        "content": [
          {
            "mediaType": "string",
            "text": "string",
            "source": "string",
            "resourceLocation": "string"
          }
        ],
        "variations": [
          {
            "content": [
              {
                "mediaType": "string",
                "text": "string",
                "href": "string",
                "resourceLocation": "string"
              }
            ],
            "channels": [
              {
                "id": 0,
                "name": "string"
              }
            ]
          }
        ],
        "category": {
          "id": 0
        },
        "primaryQuery": "string",
        "queryVariations": [
          {
            "query": "string"
          }
        ],
        "panvivaDocumentId": 0,
        "panvivaDocumentVersion": 0,
        "metaData": {}
      }
    },
    "PostArtefactResponse": {
      "type": "object",
      "description": "The response from the Panviva API after creating a new artefact.",
      "properties": {
        "hasErrors": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates whether any errors occurred during the artefact creation."
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A list of error messages if any errors occurred."
          }
        },
        "responseId": {
          "format": "uuid",
          "type": "string",
          "description": "The unique identifier of the newly created artefact."
        }
      },
      "additionalProperties": false
    },
    "PostLiveCshRequest": {
      "type": "object",
      "x-ms-summary": "Live CSH Request Details",
      "x-ms-visibility": "important",
      "description": "The request body for sending a live CSH request.",
      "properties": {
        "username": {
          "description": "The Panviva user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "userId": {
          "description": "The numeric ID of the user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "query": {
          "description": "The CSH term to search for.",
          "type": "string"
        },
        "showFirstResult": {
          "description": "True to immediately open the first document found, or false to show the list of results.",
          "type": "boolean"
        },
        "maximizeClient": {
          "description": "True/False depending on whether you want the Panviva client to maximize on the user's desktop, when the document is delivered.",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "example": {
        "username": "string",
        "userId": "string",
        "query": "string",
        "showFirstResult": true,
        "maximizeClient": true
      }
    },
    "PostLiveCshResponse": {
      "type": "object",
      "description": "The response from the Panviva API after sending a live CSH request.",
      "additionalProperties": false
    },
    "PostLiveDocumentRequest": {
      "type": "object",
      "x-ms-summary": "Document Request Details",
      "x-ms-visibility": "important",
      "description": "The request body for sending a live document request.",
      "properties": {
        "username": {
          "description": "The Panviva user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "userId": {
          "description": "The numeric ID of the user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "id": {
          "description": "The Document ID of the Panviva Document you wish to send.",
          "type": "string"
        },
        "location": {
          "description": "The Section ID you would like the user to see. Note: Use location OR containerId, not both.)",
          "type": "string"
        },
        "maximizeClient": {
          "description": "True/False depending on whether you want the Panviva client to maximize on the user's desktop, when the document is delivered.",
          "type": "boolean"
        },
        "containerId": {
          "description": "The Id of the Container you'd like the user to see when the specified document is opened. (Note: Use location OR containerId, not both.)",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "example": {
        "username": "string",
        "userId": "string",
        "id": "string",
        "location": "string",
        "maximizeClient": true,
        "containerId": "string"
      }
    },
    "PostLiveDocumentResponse": {
      "type": "object",
      "description": "The response from the Panviva API after sending a live document request.",
      "additionalProperties": false
    },
    "PostLiveSearchRequest": {
      "type": "object",
      "x-ms-summary": "Live Search Request Details",
      "x-ms-visibility": "important",
      "description": "The request body for sending a live search request.",
      "properties": {
        "username": {
          "description": "The Panviva user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "userId": {
          "description": "The numeric ID of the user to whom you wish to send the result. (Note: Use username OR userId, not both.)",
          "type": "string"
        },
        "query": {
          "description": "The term to search for.",
          "type": "string"
        },
        "maximizeClient": {
          "description": "True/False depending on whether you want the Panviva client to maximize on the user's desktop, when the document is delivered.",
          "type": "boolean"
        },
        "showFirstResult": {
          "description": "True to immediately open the first document found, or false to show the list of results.",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "example": {
        "username": "string",
        "userId": "string",
        "query": "string",
        "maximizeClient": true,
        "showFirstResult": true
      }
    },
    "PostLiveSearchResponse": {
      "type": "object",
      "description": "The response from the Panviva API after sending a live search request.",
      "additionalProperties": false
    },
    "PutArtefactRequest": {
      "type": "object",
      "x-ms-summary": "Artefact Update Request",
      "x-ms-visibility": "important",
      "description": "The request body for updating an existing artefact.",
      "properties": {
        "id": {
          "format": "uuid",
          "type": "string",
          "description": "The unique identifier of the artefact to be updated."
        },
        "primaryResponse": {
          "type": "string",
          "description": "The primary response content for the artefact."
        },
        "panvivaDocumentVersion": {
          "type": "integer",
          "description": "The version number of the Panviva document associated with this artefact."
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ArtefactSection"
          }
        },
        "taggedSections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaggedSectionWithContentViewModel"
          }
        },
        "category": {
          "$ref": "#/definitions/CategoryModel"
        },
        "panvivaDocumentId": {
          "type": "string",
          "description": "The ID of the Panviva document associated with this artefact."
        },
        "title": {
          "type": "string",
          "description": "The title of the artefact."
        },
        "primaryQuery": {
          "type": "string",
          "description": "The main query text that this artefact is designed to answer."
        },
        "queryVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueryVariationViewModel"
          }
        },
        "metaData": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetaDataValueDetails"
          }
        },
        "responseVariations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseVariationViewModel"
          }
        }
      },
      "additionalProperties": false,
      "example": {
        "id": "string",
        "primaryResponse": "string",
        "panvivaDocumentVersion": 0,
        "content": [
          {
            "mediaType": "string",
            "text": "string",
            "source": "string",
            "resourceLocation": "string"
          }
        ],
        "taggedSections": [
          {
            "sectionId": "string",
            "hash": "string"
          }
        ],
        "category": {
          "id": 0
        },
        "panvivaDocumentId": "string",
        "title": "string",
        "primaryQuery": "string",
        "queryVariations": [
          {
            "id": 0,
            "query": "string"
          }
        ],
        "metaData": {},
        "responseVariations": [
          {
            "id": 0,
            "channels": [
              {
                "id": 0,
                "name": "string"
              }
            ],
            "content": "string"
          }
        ]
      }
    },
    "PutArtefactResponse": {
      "type": "object",
      "description": "The response from the Panviva API after updating an artefact.",
      "properties": {
        "hasErrors": {
          "type": "boolean",
          "description": "Indicates whether any errors occurred during the artefact update.",
          "readOnly": true
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A list of error messages if any errors occurred."
          }
        },
        "status": {
          "type": "string",
          "description": "The status of the artefact update operation."
        }
      },
      "additionalProperties": false
    },
    "QueryVariation": {
      "type": "object",
      "description": "Alternative phrasings of queries that should match this artefact.",
      "properties": {
        "id": {
          "type": "integer"
        },
        "query": {
          "type": "string",
          "description": "The search query text."
        }
      },
      "additionalProperties": false
    },
    "QueryVariationModel": {
      "type": "object",
      "description": "Alternative phrasings of queries that should match this artefact.",
      "properties": {
        "query": {
          "type": "string",
          "description": "The search query text."
        }
      },
      "additionalProperties": false
    },
    "QueryVariationViewModel": {
      "type": "object",
      "description": "Alternative phrasings of queries that should match this artefact.",
      "properties": {
        "id": {
          "type": "integer"
        },
        "query": {
          "type": "string",
          "description": "The search query text."
        }
      },
      "additionalProperties": false
    },
    "Resource": {
      "type": "object",
      "description": "A resource that can be a document, folder, or other types of content.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the resource."
        },
        "name": {
          "type": "string",
          "description": "The display name of the resource."
        },
        "description": {
          "type": "string",
          "description": "A brief summary describing the resource's contents."
        },
        "version": {
          "type": "integer",
          "description": "The version number of the resource."
        },
        "language": {
          "type": "string",
          "description": "The language code for the resource (e.g., en-AU for Australian English)."
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Tag"
          }
        },
        "hidden": {
          "type": "boolean",
          "description": "Indicates whether the resource is hidden from standard views."
        },
        "source": {
          "type": "string",
          "description": "The source or origin of the resource."
        },
        "type": {
          "type": "string",
          "description": "The type of resource (e.g., 'document', 'folder')."
        }
      },
      "additionalProperties": false
    },
    "ResourceSearchResult": {
      "type": "object",
      "description": "A list of search results matching the query.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of resource (e.g., 'document', 'folder')."
        },
        "id": {
          "type": "string",
          "description": "The unique identifier of the resource."
        },
        "name": {
          "type": "string",
          "description": "The display name of the resource."
        },
        "description": {
          "type": "string",
          "description": "A brief summary describing the resource's contents."
        },
        "matchedFields": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "A list of fields that matched the search query."
          }
        },
        "snippet": {
          "type": "string",
          "description": "A snippet of text from the resource that matches the search query."
        },
        "language": {
          "type": "string",
          "description": "The language code for the resource (e.g., en-AU for Australian English)."
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Link"
          }
        }
      },
      "additionalProperties": false
    },
    "ResponseSection": {
      "type": "object",
      "description": "The content sections of the response.",
      "properties": {
        "mediaType": {
          "type": "string",
          "description": "The media type of the content (e.g., 'text/html', 'text/plain')."
        },
        "text": {
          "type": "string",
          "description": "The text content of the section."
        },
        "href": {
          "type": "string",
          "description": "A hyperlink to additional content or resources."
        },
        "resourceLocation": {
          "type": "string",
          "description": "The location of the resource, typically a URL or file path."
        }
      },
      "additionalProperties": false
    },
    "ResponseVariationModel": {
      "type": "object",
      "description": "Channel-specific variations of the artefact content.",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseSection"
          }
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Channel"
          }
        }
      },
      "additionalProperties": false
    },
    "ResponseVariationViewModel": {
      "type": "object",
      "description": "Channel-specific variations of the artefact content.",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier for the variation."
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChannelViewModel"
          }
        },
        "content": {
          "type": "string",
          "description": "The content of the variation, typically in HTML format."
        }
      },
      "additionalProperties": false
    },
    "StringInt64NullableKeyValuePair": {
      "type": "object",
      "description": "A key-value pair where the key is a string and the value is an integer.",
      "properties": {
        "key": {
          "type": "string",
          "description": "The name of the facet group."
        },
        "value": {
          "format": "int64",
          "type": "integer",
          "description": "The count of items in this facet group."
        }
      },
      "additionalProperties": false
    },
    "Tag": {
      "type": "object",
      "description": "A metadata tag associated with the resource.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name or key of the tag."
        },
        "value": {
          "type": "string",
          "description": "The value associated with the tag."
        }
      },
      "additionalProperties": false
    },
    "TaggedSectionWithContentViewModel": {
      "type": "object",
      "description": "A list of tagged sections within the artefact, each with its own content.",
      "properties": {
        "sectionId": {
          "type": "string",
          "description": "The unique identifier of the tagged section."
        },
        "hash": {
          "type": "string",
          "description": "A hash value representing the content of the tagged section."
        }
      },
      "additionalProperties": false
    },
    "Training": {
      "type": "object",
      "description": "Training-related settings and information for this document.",
      "properties": {
        "failureFeedback": {
          "type": "string",
          "description": "The feedback message displayed when a user fails training for this document."
        },
        "forcePageSequence": {
          "type": "boolean",
          "description": "If true, users must view pages in sequence during training."
        },
        "forceQuestionSequence": {
          "type": "boolean",
          "description": "If true, users must answer questions in sequence during training."
        },
        "passingScore": {
          "type": "integer",
          "description": "The minimum score required to pass."
        },
        "successFeedback": {
          "type": "string",
          "description": "The feedback message displayed when a user passes training for this document."
        }
      },
      "additionalProperties": false
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "tags": [
    {
      "name": "Search",
      "description": "Operations for searching content across documents, folders, files, and artefacts"
    },
    {
      "name": "Documents",
      "description": "Operations for retrieving and managing Panviva documents"
    },
    {
      "name": "Containers",
      "description": "Operations for working with document containers and sections"
    },
    {
      "name": "Folders",
      "description": "Operations for navigating and managing folders"
    },
    {
      "name": "Artefacts",
      "description": "Operations for managing Digital Orchestrator artefacts"
    },
    {
      "name": "Files",
      "description": "Operations for accessing external documents and files"
    },
    {
      "name": "Live Activities",
      "description": "Operations for pushing content to users' Panviva clients in real-time"
    },
    {
      "name": "Images",
      "description": "Operations for retrieving images"
    },
    {
      "name": "System",
      "description": "Utility operations like Echo for testing connectivity"
    },
    {
      "name": "Translations",
      "description": "Operations for managing translations of documents and folders"
    },
    {
      "name": "Context-Sensitive Help",
      "description": "Operations for managing context-sensitive help (CSH) content"
    }
  ],
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/uplandpanvivaus"
  }
}
