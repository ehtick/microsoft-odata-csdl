{
  "swagger": "2.0",
  "info": {
    "title": "XSS QR Code Solutions",
    "description": "Provides a comprehensive QR Code solution for generating codes for email, notes, PayPal, WiFi, WhatsApp, and moreâ€”enhancing accessibility, seamless sharing, and workflow efficiency.",
    "version": "1.0",
    "contact": {
      "name": "XSS QR Code Solutions",
      "url": "https://login.cross-service-solutions.com",
      "email": "contact@cross-service-solutions.com"
    },
    "x-ms-api-annotation": {
      "status": "Preview"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://login.cross-service-solutions.com"
    },
    {
      "propertyName": "Privacy policy",
      "propertyValue": "https://cross-service-solutions.com/terms-and-conditions"
    },
    {
      "propertyName": "Categories",
      "propertyValue": "Content and Files;Productivity"
    }
  ],
  "host": "europe-002.azure-apim.net",
  "basePath": "/apim/xssqrcodesolutions",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{connectionId}/43/": {
      "post": {
        "summary": "Weblink QR Code Generator",
        "description": "Generates a QR Code containing a web link (URL).",
        "operationId": "43",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "link",
            "x-ms-summary": "Web Link",
            "in": "formData",
            "description": "The web link (URL) to be encoded in the QR Code.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "file",
            "x-ms-summary": "Logo (optional)",
            "in": "formData",
            "description": "An optional logo image to be included in the QR Code.",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the Weblink QR Code response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The QR Code response based on the provided content.",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The response contains the QR Code image with a download message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the response.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A URL image of QR Code content."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file (if available)."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file (if available)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xssqrcodesolutions/#weblink-qr-code-generator"
        }
      }
    },
    "/{connectionId}/44/": {
      "post": {
        "summary": "VCard QR Code Generator",
        "description": "Share your contact information easily with a VCard QR code.",
        "operationId": "44",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "name",
            "x-ms-summary": "Full Name",
            "in": "formData",
            "description": "The full name of the contact.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "organisation",
            "x-ms-summary": "Organization",
            "in": "formData",
            "description": "The organization or company of the contact (optional).",
            "required": false,
            "type": "string"
          },
          {
            "name": "position",
            "x-ms-summary": "Position",
            "in": "formData",
            "description": "The job title or position of the contact (optional).",
            "required": false,
            "type": "string"
          },
          {
            "name": "telephone",
            "x-ms-summary": "Telephone",
            "in": "formData",
            "description": "The contact's phone number (optional).",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "x-ms-summary": "Email Address",
            "in": "formData",
            "description": "The contact's email address (optional).",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "website",
            "x-ms-summary": "Website",
            "in": "formData",
            "description": "The contact's website URL (optional).",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "file",
            "x-ms-summary": "Logo (optional)",
            "in": "formData",
            "description": "A logo image to be included in the QR Code (optional).",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the VCard QR Code response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The QR Code response based on the provided content.",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The response contains the QR Code image with a download message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the response.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A URL image of QR Code content."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file (if available)."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file (if available)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xssqrcodesolutions/#vcard-qr-code-generator"
        }
      }
    },
    "/{connectionId}/45/": {
      "post": {
        "summary": "WiFi QR Code Generator",
        "description": "Generates a QR Code containing WiFi network details, including network name (SSID), password (optional), encryption type, and optionally, a logo image.",
        "operationId": "45",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "ssid",
            "x-ms-summary": "Network Name",
            "in": "formData",
            "description": "The display name (SSID) of the WiFi network.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "password",
            "x-ms-summary": "WiFi Password",
            "in": "formData",
            "description": "The WiFi password (optional).",
            "required": false,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "encryptionType",
            "x-ms-summary": "Encryption Type",
            "in": "formData",
            "description": "The encryption type of the WiFi network.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important",
            "enum": [
              "WAP",
              "WEP",
              "nopass"
            ]
          },
          {
            "name": "file",
            "x-ms-summary": "Logo (optional)",
            "in": "formData",
            "description": "An optional logo image to be included in the QR Code.",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the WiFi QR Code response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The QR Code response based on the provided content.",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The response contains the QR Code image with a download message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the response.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A URL image of QR Code content."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file (if available)."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file (if available)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xssqrcodesolutions/#wifi-qr-code-generator"
        }
      }
    },
    "/{connectionId}/46/": {
      "post": {
        "summary": "SMS QR Code Generator",
        "description": "Generates a QR Code that encodes an SMS message with a recipient phone number.",
        "operationId": "46",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "phone_number",
            "x-ms-summary": "Phone Number",
            "in": "formData",
            "description": "The recipient's phone number for the SMS.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "message",
            "x-ms-summary": "SMS Message",
            "in": "formData",
            "description": "The message content for the SMS.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "file",
            "x-ms-summary": "Logo (optional)",
            "in": "formData",
            "description": "A logo image to be included in the QR Code (optional).",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the SMS QR Code response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The QR Code response based on the provided content.",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The response contains the QR Code image with a download message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the response.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A URL image of QR Code content."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file (if available)."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file (if available)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xssqrcodesolutions/#sms-qr-code-generator"
        }
      }
    },
    "/{connectionId}/47/": {
      "post": {
        "summary": "Notes QR Code Generator",
        "description": "Generates a QR Code that encodes a simple text note.",
        "operationId": "47",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "noteText",
            "x-ms-summary": "Note Text",
            "in": "formData",
            "description": "The content of the note to be encoded in the QR Code.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "file",
            "x-ms-summary": "Logo (optional)",
            "in": "formData",
            "description": "Optional logo to be embedded in the QR Code.",
            "required": false,
            "type": "file",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the QR Code response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The QR Code response based on the provided content.",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The response contains the QR Code image with a download message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the response.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A URL image of QR Code content."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file (if available)."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file (if available)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xssqrcodesolutions/#notes-qr-code-generator"
        }
      }
    },
    "/{connectionId}/48/": {
      "post": {
        "summary": "Email QR Code Generator",
        "description": "Generates a QR Code that encodes an email message with a recipient, subject, and body.",
        "operationId": "48",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "email",
            "x-ms-summary": "Recipient Email",
            "in": "formData",
            "description": "The recipient's email address.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "subject",
            "x-ms-summary": "Email Subject",
            "in": "formData",
            "description": "The subject of the email.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "message",
            "x-ms-summary": "Email Message",
            "in": "formData",
            "description": "The body content of the email.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "file",
            "x-ms-summary": "Logo (optional)",
            "in": "formData",
            "description": "Optional logo to be embedded in the QR Code.",
            "required": false,
            "type": "file",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the QR Code response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The QR Code response based on the provided content.",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The response contains the QR Code image with a download message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the response.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A URL image of QR Code content."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file (if available)."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file (if available)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xssqrcodesolutions/#email-qr-code-generator"
        }
      }
    },
    "/{connectionId}/50/": {
      "post": {
        "summary": "WhatsApp QR Code Generator",
        "description": "Generates a QR Code containing a WhatsApp message with the recipient's phone number and the message content.",
        "operationId": "50",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "phone_number",
            "x-ms-summary": "Phone Number",
            "in": "formData",
            "description": "The recipient's phone number for the WhatsApp message.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "message",
            "x-ms-summary": "Message Content",
            "in": "formData",
            "description": "The message content to be sent via WhatsApp.",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "x-ms-summary": "Logo (optional)",
            "in": "formData",
            "description": "An optional logo image to be included in the QR Code.",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the WhatsApp QR Code response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The QR Code response based on the provided content.",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The response contains the QR Code image with a download message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the response.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A URL image of QR Code content."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file (if available)."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file (if available)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xssqrcodesolutions/#whatsapp-qr-code-generator"
        }
      }
    },
    "/{connectionId}/51/": {
      "post": {
        "summary": "PayPal QR Code Generator",
        "description": "Generates a QR Code for PayPal transactions, allowing users to make payments via scanning.",
        "operationId": "51",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "paymenttype",
            "x-ms-summary": "Payment Type",
            "in": "formData",
            "description": "The type of PayPal transaction.",
            "required": true,
            "type": "string",
            "enum": [
              "buy now",
              "donations",
              "add to cart"
            ],
            "x-ms-visibility": "important"
          },
          {
            "name": "email",
            "x-ms-summary": "PayPal Email",
            "in": "formData",
            "description": "The PayPal email address of the recipient.",
            "required": true,
            "type": "string",
            "format": "email",
            "x-ms-visibility": "important"
          },
          {
            "name": "price",
            "x-ms-summary": "Price",
            "in": "formData",
            "description": "The transaction amount.",
            "required": true,
            "type": "number",
            "x-ms-visibility": "important"
          },
          {
            "name": "currency",
            "x-ms-summary": "Currency",
            "in": "formData",
            "description": "The currency of the transaction.",
            "required": true,
            "type": "string",
            "enum": [
              "USD",
              "EUR",
              "GBP"
            ],
            "x-ms-visibility": "important"
          },
          {
            "name": "itemname",
            "x-ms-summary": "Item Name",
            "in": "formData",
            "description": "The name of the item being purchased (optional).",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "x-ms-summary": "Logo (optional)",
            "in": "formData",
            "description": "A logo image to be included in the QR Code (optional).",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the PayPal QR Code response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The QR Code response based on the provided content.",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The response contains the QR Code image with a download message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to the response.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A URL image of QR Code content."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file (if available)."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file (if available)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xssqrcodesolutions/#paypal-qr-code-generator"
        }
      }
    },
    "/{connectionId}/59/": {
      "post": {
        "summary": "Calendar QR Code Generator",
        "description": "Generates a QR Code for a calendar event based on the provided details.",
        "operationId": "59",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-visibility": "internal"
          },
          {
            "name": "event_name",
            "x-ms-summary": "Event Name",
            "in": "formData",
            "description": "The name of the event.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "location",
            "x-ms-summary": "Location",
            "in": "formData",
            "description": "The location of the event.",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "start_date_time",
            "x-ms-summary": "Start Date & Time",
            "in": "formData",
            "description": "The start date and time of the event (EX. 2025-03-26T15:30).",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "end_date_time",
            "x-ms-summary": "End Date & Time",
            "in": "formData",
            "description": "The end date and time of the event (EX. 2025-03-26T16:00).",
            "required": true,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "description",
            "x-ms-summary": "Description (optional)",
            "in": "formData",
            "description": "Additional details about the event.",
            "required": false,
            "type": "string",
            "x-ms-visibility": "important"
          },
          {
            "name": "file",
            "x-ms-summary": "Logo (optional)",
            "in": "formData",
            "description": "Optional logo to be embedded in the QR Code.",
            "required": false,
            "type": "file",
            "x-ms-visibility": "important"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object containing the QR Code response.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the request."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the operation."
                },
                "status": {
                  "type": "string",
                  "description": "The current status of the process.",
                  "enum": [
                    "pending",
                    "done",
                    "error"
                  ]
                },
                "steps": {
                  "type": "array",
                  "description": "List of steps in the process.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the processing step."
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the processing step.",
                        "enum": [
                          "pending",
                          "done",
                          "error"
                        ]
                      }
                    }
                  }
                },
                "output": {
                  "type": "object",
                  "description": "The QR Code response based on the provided content.",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "The response contains the QR Code image with a download message."
                    },
                    "data": {
                      "type": "object",
                      "description": "Data related to response.",
                      "properties": {
                        "result": {
                          "type": "string",
                          "description": "A URL image of QR Code content."
                        }
                      }
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the file (if available)."
                          },
                          "path": {
                            "type": "string",
                            "description": "The URL to access the file (if available)."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Unauthorized"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 401
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - No API key provided.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Forbidden resource"
                },
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 403
                }
              }
            }
          },
          "404": {
            "description": "Not Found - The specified ID does not exist.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Entity not found"
                },
                "error": {
                  "type": "string",
                  "example": "Not Found"
                },
                "statusCode": {
                  "type": "integer",
                  "example": 404
                }
              }
            }
          }
        },
        "externalDocs": {
          "url": "https://docs.microsoft.com/connectors/xssqrcodesolutions/#calendar-qr-code-generator"
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ],
  "x-ms-openai-manifest": {
    "humanName": "XSS QR Code Solutions",
    "modelDescription": "Provides a comprehensive QR Code solution for generating codes for email, notes, PayPal, WiFi, WhatsApp, and moreâ€”enhancing accessibility, seamless sharing, and workflow efficiency.",
    "contactEmail": "contact@cross-service-solutions.com",
    "legalUrl": "https://cross-service-solutions.com/terms-and-conditions"
  },
  "externalDocs": {
    "url": "https://docs.microsoft.com/connectors/xssqrcodesolutions"
  }
}
